<Type Name="JsonElement+ObjectEnumerator" FullName="System.Text.Json.JsonElement+ObjectEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39ceec7968b13be10593a0a9e7e62f6430f4618b" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75055259" /></Metadata><TypeSignature Language="C#" Value="public struct JsonElement.ObjectEnumerator : System.Collections.Generic.IEnumerable&lt;System.Text.Json.JsonProperty&gt;, System.Collections.Generic.IEnumerator&lt;System.Text.Json.JsonProperty&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit JsonElement/ObjectEnumerator extends System.ValueType implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Text.Json.JsonProperty&gt;, class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Text.Json.JsonProperty&gt;, class System.Collections.IEnumerable, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonElement.ObjectEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonElement.ObjectEnumerator&#xA;Implements IEnumerable(Of JsonProperty), IEnumerator(Of JsonProperty)" />
  <TypeSignature Language="C++ CLI" Value="public: value class JsonElement::ObjectEnumerator : System::Collections::Generic::IEnumerable&lt;System::Text::Json::JsonProperty&gt;, System::Collections::Generic::IEnumerator&lt;System::Text::Json::JsonProperty&gt;" />
  <TypeSignature Language="F#" Value="type JsonElement.ObjectEnumerator = struct&#xA;    interface seq&lt;JsonProperty&gt;&#xA;    interface IEnumerable&#xA;    interface IEnumerator&lt;JsonProperty&gt;&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Text.Json.JsonProperty&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;System.Text.Json.JsonProperty&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="291ac-101">JSON オブジェクトのプロパティの列挙子を表します。</span><span class="sxs-lookup"><span data-stu-id="291ac-101">Represents an enumerator for the properties of a JSON object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonProperty Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonProperty Current" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonElement.ObjectEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As JsonProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonProperty Current { System::Text::Json::JsonProperty get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Text.Json.JsonProperty" Usage="System.Text.Json.JsonElement.ObjectEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="291ac-102">列挙子の現在位置にあるコレクション内の要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="291ac-102">Gets the element in the collection at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="291ac-103">コレクション内の、列挙子の現在位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="291ac-103">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ObjectEnumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="objectEnumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="291ac-104">この <see cref="T:System.Text.Json.JsonElement.ObjectEnumerator" /> インスタンスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="291ac-104">Releases the resources used by this <see cref="T:System.Text.Json.JsonElement.ObjectEnumerator" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement.ObjectEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement/ObjectEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ObjectEnumerator.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As JsonElement.ObjectEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement::ObjectEnumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Text.Json.JsonElement.ObjectEnumerator" Usage="objectEnumerator.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement+ObjectEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="291ac-105">オブジェクトのプロパティを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="291ac-105">Returns an enumerator that iterates the properties of an object.</span></span></summary>
        <returns><span data-ttu-id="291ac-106">オブジェクトの反復処理に使用できる列挙子。</span><span class="sxs-lookup"><span data-stu-id="291ac-106">An enumerator that can be used to iterate through the object.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="291ac-107">列挙子は、宣言されている順序でプロパティを列挙します。また、オブジェクトが1つのプロパティの複数の定義を持っている場合、それらはすべて個別に返されます (それぞれがコンテンツに出現する順序で返されます)。</span><span class="sxs-lookup"><span data-stu-id="291ac-107">The enumerator will enumerate the properties in the order they are declared, and when an object has multiple definitions of a single property, they will all individually be returned (each in the order they appear in the content).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ObjectEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="objectEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="291ac-108">列挙子をコレクションの次の要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="291ac-108">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="291ac-109">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="291ac-109"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ObjectEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="objectEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="291ac-110">列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</span><span class="sxs-lookup"><span data-stu-id="291ac-110">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Text.Json.JsonProperty&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Text.Json.JsonProperty&gt; IEnumerable&lt;JsonProperty&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Text.Json.JsonProperty&gt; System.Collections.Generic.IEnumerable&lt;System.Text.Json.JsonProperty&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ObjectEnumerator.System#Collections#Generic#IEnumerable&lt;System#Text#Json#JsonProperty&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of JsonProperty) Implements IEnumerable(Of JsonProperty).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Text::Json::JsonProperty&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Text.Json.JsonProperty&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Text::Json::JsonProperty&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Text.Json.JsonProperty&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="291ac-111">コレクションを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="291ac-111">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="291ac-112">このコレクションの反復処理に使用できる <see cref="T:System.Text.Json.JsonProperty" /> オブジェクトの列挙子。</span><span class="sxs-lookup"><span data-stu-id="291ac-112">An enumerator for <see cref="T:System.Text.Json.JsonProperty" /> objects that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="291ac-113">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="291ac-113">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="291ac-114"><xref:System.Text.Json.JsonElement.ObjectEnumerator> インスタンスが[IEnumerator<JsonProperty>](xref:System.Collections.Generic.IEnumerator%601)インターフェイスにキャストされている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="291ac-114">It can be used only when the <xref:System.Text.Json.JsonElement.ObjectEnumerator> instance is cast to an [IEnumerator<JsonProperty>](xref:System.Collections.Generic.IEnumerator%601) interface.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ObjectEnumerator.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="291ac-115">コレクションを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="291ac-115">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="291ac-116">コレクションの反復処理に使用できる列挙子。</span><span class="sxs-lookup"><span data-stu-id="291ac-116">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="291ac-117">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="291ac-117">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="291ac-118">これは、<xref:System.Text.Json.JsonElement.ObjectEnumerator> のインスタンスが <xref:System.Collections.IEnumerable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="291ac-118">It can be used only when the <xref:System.Text.Json.JsonElement.ObjectEnumerator> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonElement.ObjectEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="291ac-119">列挙子の現在位置にあるコレクション内の要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="291ac-119">Gets the element in the collection at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="291ac-120">コレクション内の、列挙子の現在位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="291ac-120">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
