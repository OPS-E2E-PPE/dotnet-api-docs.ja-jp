<Type Name="JsonEncodedText" FullName="System.Text.Json.JsonEncodedText">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0bf5fa3f1e119d2f653ef25de7bd86f086d357a3" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76956237" /></Metadata><TypeSignature Language="C#" Value="public struct JsonEncodedText : IEquatable&lt;System.Text.Json.JsonEncodedText&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonEncodedText extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Text.Json.JsonEncodedText&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonEncodedText" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonEncodedText&#xA;Implements IEquatable(Of JsonEncodedText)" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonEncodedText : IEquatable&lt;System::Text::Json::JsonEncodedText&gt;" />
  <TypeSignature Language="F#" Value="type JsonEncodedText = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Text.Json.JsonEncodedText&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="408e0-101">UTF-8 または UTF-16 でエンコードされたテキストを JSON に最適なフォームに変換するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="408e0-101">Provides methods to transform UTF-8 or UTF-16 encoded text into a form that is suitable for JSON.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="408e0-102">この型を使用すると、事前に事前にエンコードすることで、JSON の書き込みに使用される既知の文字列をキャッシュおよび格納できます。</span><span class="sxs-lookup"><span data-stu-id="408e0-102">This type can be used to cache and store known strings used for writing JSON ahead of time by pre-encoding them up front.</span></span>

            ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (ReadOnlySpan&lt;byte&gt; utf8Value, System.Text.Encodings.Web.JavaScriptEncoder encoder = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonEncodedText Encode(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value, class System.Text.Encodings.Web.JavaScriptEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Encode(System.ReadOnlySpan{System.Byte},System.Text.Encodings.Web.JavaScriptEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (utf8Value As ReadOnlySpan(Of Byte), Optional encoder As JavaScriptEncoder = null) As JsonEncodedText" />
      <MemberSignature Language="F#" Value="static member Encode : ReadOnlySpan&lt;byte&gt; * System.Text.Encodings.Web.JavaScriptEncoder -&gt; System.Text.Json.JsonEncodedText" Usage="System.Text.Json.JsonEncodedText.Encode (utf8Value, encoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonEncodedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.JavaScriptEncoder" />
      </Parameters>
      <Docs>
        <param name="utf8Value"><span data-ttu-id="408e0-103">JSON でエンコードされたテキストに変換するための UTF-8 でエンコードされたテキスト。</span><span class="sxs-lookup"><span data-stu-id="408e0-103">The UTF-8 encoded text to convert to JSON encoded text.</span></span></param>
        <param name="encoder"><span data-ttu-id="408e0-104">文字列をエスケープするときに使用するエンコーダー、または既定のエンコーダーを使用する場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="408e0-104">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</span></span></param>
        <summary><span data-ttu-id="408e0-105">UTF-8 テキスト値を JSON 文字列としてエンコードします。</span><span class="sxs-lookup"><span data-stu-id="408e0-105">Encodes a UTF-8 text value as a JSON string.</span></span></summary>
        <returns><span data-ttu-id="408e0-106">エンコードされた JSON テキスト。</span><span class="sxs-lookup"><span data-stu-id="408e0-106">The encoded JSON text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="408e0-107"><paramref name="utf8Value" /> が大きすぎます。</span><span class="sxs-lookup"><span data-stu-id="408e0-107"><paramref name="utf8Value" /> is too large.</span></span>

<span data-ttu-id="408e0-108">または</span><span class="sxs-lookup"><span data-stu-id="408e0-108">-or-</span></span>

<span data-ttu-id="408e0-109"><paramref name="utf8Value" /> に無効な UTF-8 バイトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="408e0-109"><paramref name="utf8Value" /> contains invalid UTF-8 bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (ReadOnlySpan&lt;char&gt; value, System.Text.Encodings.Web.JavaScriptEncoder encoder = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonEncodedText Encode(valuetype System.ReadOnlySpan`1&lt;char&gt; value, class System.Text.Encodings.Web.JavaScriptEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Encode(System.ReadOnlySpan{System.Char},System.Text.Encodings.Web.JavaScriptEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (value As ReadOnlySpan(Of Char), Optional encoder As JavaScriptEncoder = null) As JsonEncodedText" />
      <MemberSignature Language="F#" Value="static member Encode : ReadOnlySpan&lt;char&gt; * System.Text.Encodings.Web.JavaScriptEncoder -&gt; System.Text.Json.JsonEncodedText" Usage="System.Text.Json.JsonEncodedText.Encode (value, encoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonEncodedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.JavaScriptEncoder" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="408e0-110">JSON でエンコードされたテキストに変換する値。</span><span class="sxs-lookup"><span data-stu-id="408e0-110">The value to convert to JSON encoded text.</span></span></param>
        <param name="encoder"><span data-ttu-id="408e0-111">文字列をエスケープするときに使用するエンコーダー、または既定のエンコーダーを使用する場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="408e0-111">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</span></span></param>
        <summary><span data-ttu-id="408e0-112">指定されたテキスト値を JSON 文字列としてエンコードします。</span><span class="sxs-lookup"><span data-stu-id="408e0-112">Encodes a specified text value as a JSON string.</span></span></summary>
        <returns><span data-ttu-id="408e0-113">エンコードされた JSON テキスト。</span><span class="sxs-lookup"><span data-stu-id="408e0-113">The encoded JSON text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="408e0-114"><paramref name="value" /> が大きすぎます。</span><span class="sxs-lookup"><span data-stu-id="408e0-114"><paramref name="value" /> is too large.</span></span>

<span data-ttu-id="408e0-115">または</span><span class="sxs-lookup"><span data-stu-id="408e0-115">-or-</span></span>

<span data-ttu-id="408e0-116"><paramref name="value" /> に無効な UTF-16 文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="408e0-116"><paramref name="value" /> contains invalid UTF-16 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (string value, System.Text.Encodings.Web.JavaScriptEncoder encoder = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonEncodedText Encode(string value, class System.Text.Encodings.Web.JavaScriptEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Encode(System.String,System.Text.Encodings.Web.JavaScriptEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (value As String, Optional encoder As JavaScriptEncoder = null) As JsonEncodedText" />
      <MemberSignature Language="F#" Value="static member Encode : string * System.Text.Encodings.Web.JavaScriptEncoder -&gt; System.Text.Json.JsonEncodedText" Usage="System.Text.Json.JsonEncodedText.Encode (value, encoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonEncodedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.JavaScriptEncoder" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="408e0-117">JSON でエンコードされたテキストに変換する値。</span><span class="sxs-lookup"><span data-stu-id="408e0-117">The value to convert to JSON encoded text.</span></span></param>
        <param name="encoder"><span data-ttu-id="408e0-118">文字列をエスケープするときに使用するエンコーダー、または既定のエンコーダーを使用する場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="408e0-118">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</span></span></param>
        <summary><span data-ttu-id="408e0-119">JSON 文字列として文字列テキスト値をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="408e0-119">Encodes the string text value as a JSON string.</span></span></summary>
        <returns><span data-ttu-id="408e0-120">エンコードされた JSON テキスト。</span><span class="sxs-lookup"><span data-stu-id="408e0-120">The encoded JSON text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="408e0-121"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="408e0-121"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="408e0-122"><paramref name="value" /> が大きすぎます。</span><span class="sxs-lookup"><span data-stu-id="408e0-122"><paramref name="value" /> is too large.</span></span>

<span data-ttu-id="408e0-123">または</span><span class="sxs-lookup"><span data-stu-id="408e0-123">-or-</span></span>

<span data-ttu-id="408e0-124"><paramref name="value" /> に無効な UTF-16 文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="408e0-124"><paramref name="value" /> contains invalid UTF-16 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedUtf8Bytes">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;byte&gt; EncodedUtf8Bytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; EncodedUtf8Bytes" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonEncodedText.EncodedUtf8Bytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncodedUtf8Bytes As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;System::Byte&gt; EncodedUtf8Bytes { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.EncodedUtf8Bytes : ReadOnlySpan&lt;byte&gt;" Usage="System.Text.Json.JsonEncodedText.EncodedUtf8Bytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="408e0-125">事前にエンコードされた JSON テキストを UTF-8 でエンコードした表現を取得します。</span><span class="sxs-lookup"><span data-stu-id="408e0-125">Gets the UTF-8 encoded representation of the pre-encoded JSON text.</span></span></summary>
        <value><span data-ttu-id="408e0-126">事前にエンコードされた JSON テキストの UTF-8 でエンコードされた表現。</span><span class="sxs-lookup"><span data-stu-id="408e0-126">The UTF-8 encoded representation of the pre-encoded JSON text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="jsonEncodedText.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="408e0-127">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="408e0-127">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="408e0-128">このインスタンスと、指定したオブジェクトの値が同一かどうかを判断します。<see cref="T:System.Text.Json.JsonEncodedText" /> インスタンスを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="408e0-128">Determines whether this instance and a specified object, which must also be a <see cref="T:System.Text.Json.JsonEncodedText" /> instance, have the same value.</span></span></summary>
        <returns><span data-ttu-id="408e0-129">現在のインスタンスと <see langword="true" /> が等しい場合は <paramref name="obj" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="408e0-129"><see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="408e0-130">`obj` が `null` の場合、メソッドは `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="408e0-130">If `obj` is `null`, the method returns `false`.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.Json.JsonEncodedText other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Text.Json.JsonEncodedText other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Equals(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As JsonEncodedText) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Text::Json::JsonEncodedText other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.Json.JsonEncodedText -&gt; bool" Usage="jsonEncodedText.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="408e0-131">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="408e0-131">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="408e0-132">このインスタンスと、指定した別の <see cref="T:System.Text.Json.JsonEncodedText" /> インスタンスの値が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="408e0-132">Determines whether this instance and another specified <see cref="T:System.Text.Json.JsonEncodedText" /> instance have the same value.</span></span></summary>
        <returns><span data-ttu-id="408e0-133">このインスタンスの値と <see langword="true" /> の値が等しい場合は <paramref name="other" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="408e0-133"><see langword="true" /> if this instance and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="408e0-134"><xref:System.Text.Json.JsonEncodedText> の既定のインスタンスは等しいものとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="408e0-134">Default instances of <xref:System.Text.Json.JsonEncodedText> are treated as equal.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="jsonEncodedText.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="408e0-135">この <see cref="T:System.Text.Json.JsonEncodedText" /> のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="408e0-135">Returns the hash code for this <see cref="T:System.Text.Json.JsonEncodedText" />.</span></span></summary>
        <returns><span data-ttu-id="408e0-136">このインスタンスのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="408e0-136">The hash code for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="408e0-137">このメソッドは、<xref:System.Text.Json.JsonEncodedText>の既定のインスタンスに対して0を返します。</span><span class="sxs-lookup"><span data-stu-id="408e0-137">This method returns 0 on a default instance of <xref:System.Text.Json.JsonEncodedText>.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="jsonEncodedText.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="408e0-138">このインスタンスの値を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="408e0-138">Converts the value of this instance to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="408e0-139">基になる UTF-16 でエンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="408e0-139">The underlying UTF-16 encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="408e0-140">このメソッドは、<xref:System.Text.Json.JsonEncodedText>の既定のインスタンスで空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="408e0-140">This method returns an empty string on a default instance of <xref:System.Text.Json.JsonEncodedText>.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
