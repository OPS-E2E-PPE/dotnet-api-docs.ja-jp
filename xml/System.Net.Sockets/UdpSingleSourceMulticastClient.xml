<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95a64699833345bb0098bf2d79582d318f8c0786" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73339090" /></Metadata><TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpSingleSourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>単一の送信元からのマルチキャスト トラフィックのクライアント受信元。このマルチキャストは、SSM (Source Specific Multicast) とも呼ばれます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マルチキャストグループアドレスと送信元アドレスは既知である必要があります。  
  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> クライアントは、特定の送信元からのマルチキャストデータを受信するだけでなく、ユニキャストデータを送信元に送信することもできます。  
  
 複数のソースからマルチキャストを受信する場合、またはソースが事前に認識されていない場合は、代わりに <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> クラスを使用します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpSingleSourceMulticastClient : System.Net.IPAddress * System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpSingleSourceMulticastClient" Usage="new System.Net.Sockets.UdpSingleSourceMulticastClient (sourceAddress, groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">この受信者にとってサブスクライブ先となる送信者の発信元アドレス。</param>
        <param name="groupAddress">この受信者にとってサブスクライブ先となるマルチキャスト グループのアドレス。</param>
        <param name="localPort">この受信者がバインドするローカルのポート。</param>
        <summary>グループ アドレスにサブスクライブし、1 つのソースからデータグラムを受信することが可能な、新しい <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP クライアントを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> コンストラクターは、UDP マルチキャストソケットをグループのアドレスとポートに関連付けますが、そのソケットをバインドしたり、使用したりしません。  
  
 `groupAddress` パラメーターには、IPv6 または IPv4 マルチキャストアドレスを指定できます。 ただし、`sourceAddress` パラメーターと `groupAddress` パラメーターのアドレスファミリは同じである必要があります。  
  
 `localPort` パラメーターでは、1024未満のポートを指定することはできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceAddress" /> および <paramref name="groupAddress" /> は同じアドレス ファミリである必要があります。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceAddress" /> が null 参照 (Visual Basic では Nothing) です。  
  
- または - 
 <paramref name="groupAddress" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="localPort" /> が 0 未満です。 
- または - 
 <paramref name="localPort" /> が 65,535 より大きい値です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="localPort" /> が 1024 より小さい値です。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</param>
        <summary>ソケットをバインドし、マルチキャスト グループへの結合操作を開始して、単一の始点アドレスからデータグラムを受信できるようにします。</summary>
        <returns>この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> メソッドは、UDP マルチキャストソケットをローカルポートにバインドし、マルチキャストグループに参加して、1つのソースアドレスからデータグラムを受信できるようにします。 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> コンストラクターでは、マルチキャストグループアドレス、単一ソースアドレス、およびバインド先のローカルポートが指定されています。  
  
 `callback` パラメーターで指定されたメソッドは、マルチキャストグループに参加する操作が完了したときに呼び出されます。  
  
 ランタイムによって要求された場合、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> メソッドは、クライアントがマルチキャストグループへのアクセスを許可されているかどうかを確認するポリシーチェックも実行します。 クライアントがアクセスを許可されていない場合は、<xref:System.Net.Sockets.SocketError.AccessDenied>と共に <xref:System.Net.Sockets.SocketException> がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループは、既に結合されているか、または結合操作が現在進行中です。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromSource : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginReceiveFromSource (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">受信したデータを格納するバッファー。</param>
        <param name="offset">データの保存先になる、<paramref name="buffer" /> の先頭からのバイト単位のオフセット。</param>
        <param name="count"><paramref name="buffer" /> で受信および格納するバイトの最大数。</param>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</param>
        <summary>参加したマルチキャスト グループからのパケットを受信する操作を開始し、指定された送信元からグループにパケットが届いたときに、指定されたコールバックを呼び出します。</summary>
        <returns>この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> メソッドは、1つの送信元から、参加しているマルチキャストグループから UDP パケットを受信する操作を開始します。 ローカルポート、マルチキャストグループ、および送信元アドレスは、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> コンストラクターで指定されます。 マルチキャストクライアントでは、マルチキャストグループへの参加も完了している必要があります。  
  
 `callback` パラメーターで指定されたメソッドは、パケットの受信時に呼び出されます。  
  
 受信操作が同期的に失敗した場合、ソケットに障害が発生する可能性があります。ただし、これは UDP では一般的ではありません。 ソケット障害が発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="count" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> にカウントを加算した値が <paramref name="buffer" /> の長さを超えています。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">受信のためにソケットにアクセスしようとして、エラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToSource : byte[] * int * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginSendToSource (buffer, offset, count, remotePort, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">送信するデータが格納されているバッファー。</param>
        <param name="offset">送信するデータを読み取る <paramref name="buffer" /> の先頭からのバイト単位のオフセット。</param>
        <param name="count"><paramref name="buffer" /> から送信するバイト数。</param>
        <param name="remotePort">パケットを送信するリモート ポート。 リモート アドレスは <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> コンストラクターによって指定されます。</param>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</param>
        <summary>前に指定された送信元にユニキャスト パケットを送信する操作を開始します。</summary>
        <returns>この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> メソッドは、以前に指定したソースへの UDP パケットの送信操作を開始します。  
  
 一部のプロトコルでは、この情報を使用してフロー制御、サービス品質統計、または回復メッセージを渡すことができます。  
  
 `callback` パラメーターで指定されたメソッドは、パケットが送信されたときに呼び出されます。  
  
 クライアントは、マルチキャストグループへの参加を完了している必要があります。  
  
 `remotePort` パラメーターで指定された宛先ポートが1024未満の場合、<xref:System.Net.Sockets.SocketException> が <xref:System.Net.Sockets.SocketError.AccessDenied>と共にスローされます。  
  
 送信操作が同期的に失敗した場合、ソケットに障害が発生する可能性があります。ただし、これは UDP では一般的ではありません。 ソケット障害が発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="count" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> にカウントを加算した値が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="remotePort" /> が 0 より小さいか、65,535 を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpSingleSourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マルチキャスト グループへの参加を終了し、<see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> クラスの現在のインスタンスによって使用されたリソースと、基になる <see cref="T:System.Net.Sockets.Socket" /> によって使用されたリソースをすべて解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> を使い終わったら、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>を呼び出します。 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>メソッドによって、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient> は使用不可の状態になります。 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>呼び出し後は、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient> へのすべての参照を解放する必要があります。  
  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>への最後の参照を解放する前に、必ず<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">非同期の参加操作の結果。</param>
        <summary>マルチキャスト グループに対する非同期のグループ参加操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> メソッドは、ソケットへの非同期バインドとマルチキャストグループへの参加操作を完了します。  
  
 ランタイムによって要求された場合、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> メソッドは、クライアントがマルチキャストグループへのアクセスを許可されているかどうかを確認するポリシーチェックも実行します。 クライアントがアクセスを許可されていない場合は、<xref:System.Net.Sockets.SocketError.AccessDenied>と共に <xref:System.Net.Sockets.SocketException> がスローされます。  
  
 グループの結合操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromSource : IAsyncResult * int -&gt; int" Usage="udpSingleSourceMulticastClient.EndReceiveFromSource (result, sourcePort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">非同期の受信操作の結果。</param>
        <param name="sourcePort">パケットの受信元のソース エンドポイント。</param>
        <summary>参加しているマルチキャスト グループからパケットを受信する非同期の操作を完了し、受信した情報を提供します。</summary>
        <returns><see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドに渡される <paramref name="buffer" /> パラメーターに格納されたメッセージの長さ (バイト単位)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> メソッドは、マルチキャストグループ内の1つのソースからパケットを受信する非同期操作を完了します。  
  
 受信操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToSource : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndSendToSource result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">非同期の送信操作の結果。</param>
        <summary>単一のソースにユニキャスト パケットを送信する操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> メソッドは、前に指定した単一のソースにパケットを送信する非同期操作を完了します。  
  
 受信操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> インスタンスのマルチキャストの受信操作に使用される <see cref="T:System.Net.Sockets.Socket" /> の受信バッファーのバイト単位のサイズを取得または設定します。</summary>
        <value><see cref="T:System.Int32" /> を返します。  
  
受信バッファー サイズ (バイト単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReceiveBufferSize` プロパティは、この <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> インスタンスでのマルチキャストの受信操作に使用される、基になる <xref:System.Net.Sockets.Socket> の受信バッファーのサイズ (バイト単位) を取得または設定します。 具体的には、`ReceiveBufferSize` プロパティは、パケットが到着したときにスタックによって使用されるバッファーのサイズを制御しますが、アプリケーションはまだ <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> メソッドを呼び出していません。 このバッファーがいっぱいになり、アプリケーションが <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> および <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> メソッドを呼び出す前にパケットが保持される場合、古いパケットは破棄されます。 アプリケーションは、古いパケットを受信できなくなり、代わりに <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> メソッドを呼び出すときに新しいパケットを受信します。  
  
 Windows での受信バッファーの既定のサイズは8192です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたバッファー サイズは 0 より小さいです。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> インスタンスのマルチキャストの送信操作に使用される <see cref="T:System.Net.Sockets.Socket" /> の送信バッファーのバイト単位のサイズを取得または設定します。</summary>
        <value><see cref="T:System.Int32" /> を返します。  
  
送信バッファーのバイト単位のサイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SendBufferSize プロパティは、この <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> インスタンスでのマルチキャストの送信操作に使用される、基になる <xref:System.Net.Sockets.Socket> の送信バッファーのサイズ (バイト単位) を取得または設定します。  
  
 Mac OS X では、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> プロパティは、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> メソッドへの追加の呼び出しが失敗する前に、ネットワークスタックの待機中のバッファーに格納できるバイト数を制御します。 短時間の間に多数の UDP パケットを送信する場合、Mac OS X のアプリケーションはこのプロパティを考慮する必要があります。  
  
 Windows では、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> メソッドを呼び出すと、送信バッファーがいっぱいになった場合の <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> プロパティの値に応じて、コールバックの呼び出しに時間がかかります。 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> プロパティは、送信が完了するまで、ユーザーのバッファーが物理メモリ内でロックされたままになるかどうかのみを制御します。  
  
 Windows での送信バッファーの既定のサイズは8192です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたバッファー サイズは 0 より小さいです。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
