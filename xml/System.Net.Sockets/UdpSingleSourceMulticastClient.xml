<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95a64699833345bb0098bf2d79582d318f8c0786" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73339090" /></Metadata><TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpSingleSourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0b3ee-101">単一の送信元からのマルチキャスト トラフィックのクライアント受信元。このマルチキャストは、SSM (Source Specific Multicast) とも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-101">A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-102">マルチキャストグループアドレスと送信元アドレスは既知である必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-102">The multicast group address and sender source address must be known.</span></span>  
  
 <span data-ttu-id="0b3ee-103"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient> クライアントは、特定の送信元からのマルチキャストデータを受信するだけでなく、ユニキャストデータを送信元に送信することもできます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-103">In addition to receiving multicast data from a specific sender, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client can also send unicast data back to the sender.</span></span>  
  
 <span data-ttu-id="0b3ee-104">複数のソースからマルチキャストを受信する場合、またはソースが事前に認識されていない場合は、代わりに <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-104">To receive multicast from multiple sources, or when the sources aren't known in advance, use the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> class instead.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpSingleSourceMulticastClient : System.Net.IPAddress * System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpSingleSourceMulticastClient" Usage="new System.Net.Sockets.UdpSingleSourceMulticastClient (sourceAddress, groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress"><span data-ttu-id="0b3ee-105">この受信者にとってサブスクライブ先となる送信者の発信元アドレス。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-105">The sender source address for this receiver to subscribe to.</span></span></param>
        <param name="groupAddress"><span data-ttu-id="0b3ee-106">この受信者にとってサブスクライブ先となるマルチキャスト グループのアドレス。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-106">The multicast group address for this receiver to subscribe to.</span></span></param>
        <param name="localPort"><span data-ttu-id="0b3ee-107">この受信者がバインドするローカルのポート。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-107">The local port for this receiver to bind to.</span></span></param>
        <summary><span data-ttu-id="0b3ee-108">グループ アドレスにサブスクライブし、1 つのソースからデータグラムを受信することが可能な、新しい <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP クライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-108">Creates a new <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from a single source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-109"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> コンストラクターは、UDP マルチキャストソケットをグループのアドレスとポートに関連付けますが、そのソケットをバインドしたり、使用したりしません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-109">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</span></span>  
  
 <span data-ttu-id="0b3ee-110">`groupAddress` パラメーターには、IPv6 または IPv4 マルチキャストアドレスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-110">The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.</span></span> <span data-ttu-id="0b3ee-111">ただし、`sourceAddress` パラメーターと `groupAddress` パラメーターのアドレスファミリは同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-111">However, the address family of the `sourceAddress` and `groupAddress` parameters must the same.</span></span>  
  
 <span data-ttu-id="0b3ee-112">`localPort` パラメーターでは、1024未満のポートを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-112">The `localPort` parameter must not specify a port less than 1,024.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b3ee-113"><paramref name="sourceAddress" /> および <paramref name="groupAddress" /> は同じアドレス ファミリである必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-113"><paramref name="sourceAddress" /> and <paramref name="groupAddress" /> must be the same address family.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b3ee-114"><paramref name="sourceAddress" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-114"><paramref name="sourceAddress" /> is a null reference (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="0b3ee-115">- または -</span><span class="sxs-lookup"><span data-stu-id="0b3ee-115">-or-</span></span> 
 <span data-ttu-id="0b3ee-116"><paramref name="groupAddress" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-116"><paramref name="groupAddress" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0b3ee-117"><paramref name="localPort" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-117"><paramref name="localPort" /> is less than 0</span></span> 
<span data-ttu-id="0b3ee-118">- または -</span><span class="sxs-lookup"><span data-stu-id="0b3ee-118">-or-</span></span> 
 <span data-ttu-id="0b3ee-119"><paramref name="localPort" /> が 65,535 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-119"><paramref name="localPort" /> is greater than 65,535.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="0b3ee-120"><paramref name="localPort" /> が 1024 より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-120"><paramref name="localPort" /> is less than 1024</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="0b3ee-121">操作の完了時に呼び出されるコールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-121">A callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="0b3ee-122">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-122">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="0b3ee-123">ソケットをバインドし、マルチキャスト グループへの結合操作を開始して、単一の始点アドレスからデータグラムを受信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-123">Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</span></span></summary>
        <returns><span data-ttu-id="0b3ee-124">この操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-124">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-125"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> メソッドは、UDP マルチキャストソケットをローカルポートにバインドし、マルチキャストグループに参加して、1つのソースアドレスからデータグラムを受信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-125">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address.</span></span> <span data-ttu-id="0b3ee-126"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> コンストラクターでは、マルチキャストグループアドレス、単一ソースアドレス、およびバインド先のローカルポートが指定されています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-126">The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="0b3ee-127">`callback` パラメーターで指定されたメソッドは、マルチキャストグループに参加する操作が完了したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-127">The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.</span></span>  
  
 <span data-ttu-id="0b3ee-128">ランタイムによって要求された場合、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> メソッドは、クライアントがマルチキャストグループへのアクセスを許可されているかどうかを確認するポリシーチェックも実行します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-128">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="0b3ee-129">クライアントがアクセスを許可されていない場合は、<xref:System.Net.Sockets.SocketError.AccessDenied>と共に <xref:System.Net.Sockets.SocketException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-129">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b3ee-130">マルチキャスト グループは、既に結合されているか、または結合操作が現在進行中です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-130">The multicast group has already been joined or a join operation is currently in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b3ee-131"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-131">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="0b3ee-132">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-132">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromSource : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginReceiveFromSource (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b3ee-133">受信したデータを格納するバッファー。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-133">The buffer to store the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="0b3ee-134">データの保存先になる、<paramref name="buffer" /> の先頭からのバイト単位のオフセット。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-134">The offset, in bytes, from the beginning of the <paramref name="buffer" /> where the data should be stored.</span></span></param>
        <param name="count"><span data-ttu-id="0b3ee-135"><paramref name="buffer" /> で受信および格納するバイトの最大数。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-135">The maximum number of bytes to receive and store in the <paramref name="buffer" />.</span></span></param>
        <param name="callback"><span data-ttu-id="0b3ee-136">操作の完了時に呼び出されるコールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-136">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="0b3ee-137">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-137">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="0b3ee-138">参加したマルチキャスト グループからのパケットを受信する操作を開始し、指定された送信元からグループにパケットが届いたときに、指定されたコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-138">Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</span></span></summary>
        <returns><span data-ttu-id="0b3ee-139">この操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-139">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-140"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> メソッドは、1つの送信元から、参加しているマルチキャストグループから UDP パケットを受信する操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-140">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender.</span></span> <span data-ttu-id="0b3ee-141">ローカルポート、マルチキャストグループ、および送信元アドレスは、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> コンストラクターで指定されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-141">The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span> <span data-ttu-id="0b3ee-142">マルチキャストクライアントでは、マルチキャストグループへの参加も完了している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-142">The multicast client must also have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="0b3ee-143">`callback` パラメーターで指定されたメソッドは、パケットの受信時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-143">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="0b3ee-144">受信操作が同期的に失敗した場合、ソケットに障害が発生する可能性があります。ただし、これは UDP では一般的ではありません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-144">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="0b3ee-145">ソケット障害が発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-145">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="0b3ee-146">受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-146">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b3ee-147"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-147"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0b3ee-148"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-148"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="0b3ee-149">- または -</span><span class="sxs-lookup"><span data-stu-id="0b3ee-149">-or-</span></span> 
 <span data-ttu-id="0b3ee-150"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-150"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="0b3ee-151">- または -</span><span class="sxs-lookup"><span data-stu-id="0b3ee-151">-or-</span></span> 
 <span data-ttu-id="0b3ee-152"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-152"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="0b3ee-153">- または -</span><span class="sxs-lookup"><span data-stu-id="0b3ee-153">-or-</span></span> 
 <span data-ttu-id="0b3ee-154"><paramref name="offset" /> にカウントを加算した値が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-154"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b3ee-155">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-155">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b3ee-156"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-156">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="0b3ee-157">受信のためにソケットにアクセスしようとして、エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-157">An error occurred when attempting to access the socket for receiving.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToSource : byte[] * int * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginSendToSource (buffer, offset, count, remotePort, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b3ee-158">送信するデータが格納されているバッファー。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-158">The buffer that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="0b3ee-159">送信するデータを読み取る <paramref name="buffer" /> の先頭からのバイト単位のオフセット。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-159">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to read the data to be sent.</span></span></param>
        <param name="count"><span data-ttu-id="0b3ee-160"><paramref name="buffer" /> から送信するバイト数。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-160">The number of bytes to send from the <paramref name="buffer" />.</span></span></param>
        <param name="remotePort"><span data-ttu-id="0b3ee-161">パケットを送信するリモート ポート。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-161">The remote port to which the packet is to be sent.</span></span> <span data-ttu-id="0b3ee-162">リモート アドレスは <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> コンストラクターによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-162">The remote address is specified by the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> constructor.</span></span></param>
        <param name="callback"><span data-ttu-id="0b3ee-163">操作の完了時に呼び出されるコールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-163">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="0b3ee-164">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-164">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="0b3ee-165">前に指定された送信元にユニキャスト パケットを送信する操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-165">Begins the operation of sending a unicast packet to the source previously specified.</span></span></summary>
        <returns><span data-ttu-id="0b3ee-166">この操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-166">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-167"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> メソッドは、以前に指定したソースへの UDP パケットの送信操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-167">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method begins an operation of sending a UDP packet to the source previously specified.</span></span>  
  
 <span data-ttu-id="0b3ee-168">一部のプロトコルでは、この情報を使用してフロー制御、サービス品質統計、または回復メッセージを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-168">Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</span></span>  
  
 <span data-ttu-id="0b3ee-169">`callback` パラメーターで指定されたメソッドは、パケットが送信されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-169">The method specified in the `callback` parameter is invoked when a packet has been sent.</span></span>  
  
 <span data-ttu-id="0b3ee-170">クライアントは、マルチキャストグループへの参加を完了している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-170">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="0b3ee-171">`remotePort` パラメーターで指定された宛先ポートが1024未満の場合、<xref:System.Net.Sockets.SocketException> が <xref:System.Net.Sockets.SocketError.AccessDenied>と共にスローされます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-171">If the destination port specified in the `remotePort` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="0b3ee-172">送信操作が同期的に失敗した場合、ソケットに障害が発生する可能性があります。ただし、これは UDP では一般的ではありません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-172">It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="0b3ee-173">ソケット障害が発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-173">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="0b3ee-174">受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-174">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b3ee-175"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-175"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0b3ee-176"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-176"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="0b3ee-177">- または -</span><span class="sxs-lookup"><span data-stu-id="0b3ee-177">-or-</span></span> 
 <span data-ttu-id="0b3ee-178"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-178"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="0b3ee-179">- または -</span><span class="sxs-lookup"><span data-stu-id="0b3ee-179">-or-</span></span> 
 <span data-ttu-id="0b3ee-180"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-180"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="0b3ee-181">- または -</span><span class="sxs-lookup"><span data-stu-id="0b3ee-181">-or-</span></span> 
 <span data-ttu-id="0b3ee-182"><paramref name="offset" /> にカウントを加算した値が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-182"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="0b3ee-183">- または -</span><span class="sxs-lookup"><span data-stu-id="0b3ee-183">-or-</span></span> 
 <span data-ttu-id="0b3ee-184"><paramref name="remotePort" /> が 0 より小さいか、65,535 を超えています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-184"><paramref name="remotePort" /> is less than 0 or greater than 65,535.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b3ee-185">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-185">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b3ee-186"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-186">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="0b3ee-187">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-187">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpSingleSourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b3ee-188">マルチキャスト グループへの参加を終了し、<see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> クラスの現在のインスタンスによって使用されたリソースと、基になる <see cref="T:System.Net.Sockets.Socket" /> によって使用されたリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-188">Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> class and the underlying the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-189"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient> を使い終わったら、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-189">Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="0b3ee-190"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>メソッドによって、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-190">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state.</span></span> <span data-ttu-id="0b3ee-191"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>呼び出し後は、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-191">After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.</span></span>  
  
 <span data-ttu-id="0b3ee-192"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient>への最後の参照を解放する前に、必ず<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-192">Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="0b3ee-193">そうしないと、ガベージ コレクターが <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-193">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0b3ee-194">非同期の参加操作の結果。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-194">The result of the asynchronous join operation.</span></span></param>
        <summary><span data-ttu-id="0b3ee-195">マルチキャスト グループに対する非同期のグループ参加操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-195">Completes the asynchronous join group operation to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-196"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> メソッドは、ソケットへの非同期バインドとマルチキャストグループへの参加操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-196">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.</span></span>  
  
 <span data-ttu-id="0b3ee-197">ランタイムによって要求された場合、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> メソッドは、クライアントがマルチキャストグループへのアクセスを許可されているかどうかを確認するポリシーチェックも実行します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-197">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="0b3ee-198">クライアントがアクセスを許可されていない場合は、<xref:System.Net.Sockets.SocketError.AccessDenied>と共に <xref:System.Net.Sockets.SocketException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-198">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="0b3ee-199">グループの結合操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-199">If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="0b3ee-200">受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-200">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b3ee-201"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-201"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b3ee-202"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-202">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="0b3ee-203">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-203">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromSource : IAsyncResult * int -&gt; int" Usage="udpSingleSourceMulticastClient.EndReceiveFromSource (result, sourcePort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0b3ee-204">非同期の受信操作の結果。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-204">The result of the asynchronous receive operation.</span></span></param>
        <param name="sourcePort"><span data-ttu-id="0b3ee-205">パケットの受信元のソース エンドポイント。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-205">The source endpoint where the packet was received from.</span></span></param>
        <summary><span data-ttu-id="0b3ee-206">参加しているマルチキャスト グループからパケットを受信する非同期の操作を完了し、受信した情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-206">Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</span></span></summary>
        <returns><span data-ttu-id="0b3ee-207"><see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドに渡される <paramref name="buffer" /> パラメーターに格納されたメッセージの長さ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-207">The length, in bytes, of the message stored in the <paramref name="buffer" /> parameter passed to the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-208"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> メソッドは、マルチキャストグループ内の1つのソースからパケットを受信する非同期操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-208">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group.</span></span>  
  
 <span data-ttu-id="0b3ee-209">受信操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-209">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="0b3ee-210">受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-210">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b3ee-211"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-211"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b3ee-212">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-212">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b3ee-213"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-213">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="0b3ee-214">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-214">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToSource : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndSendToSource result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0b3ee-215">非同期の送信操作の結果。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-215">The result of the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="0b3ee-216">単一のソースにユニキャスト パケットを送信する操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-216">Completes the operation of sending a unicast packet to a single source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-217"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> メソッドは、前に指定した単一のソースにパケットを送信する非同期操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-217">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified.</span></span>  
  
 <span data-ttu-id="0b3ee-218">受信操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-218">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="0b3ee-219">受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-219">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b3ee-220"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-220"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b3ee-221">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-221">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b3ee-222"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-222">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="0b3ee-223">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-223">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b3ee-224">この <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> インスタンスのマルチキャストの受信操作に使用される <see cref="T:System.Net.Sockets.Socket" /> の受信バッファーのバイト単位のサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-224">Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="0b3ee-225"><see cref="T:System.Int32" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-225">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="0b3ee-226">受信バッファー サイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-226">The size, in bytes, of the receive buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-227">`ReceiveBufferSize` プロパティは、この <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> インスタンスでのマルチキャストの受信操作に使用される、基になる <xref:System.Net.Sockets.Socket> の受信バッファーのサイズ (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-227">The `ReceiveBufferSize` property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span> <span data-ttu-id="0b3ee-228">具体的には、`ReceiveBufferSize` プロパティは、パケットが到着したときにスタックによって使用されるバッファーのサイズを制御しますが、アプリケーションはまだ <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> メソッドを呼び出していません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-228">Specifically, the `ReceiveBufferSize` property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span> <span data-ttu-id="0b3ee-229">このバッファーがいっぱいになり、アプリケーションが <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> および <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> メソッドを呼び出す前にパケットが保持される場合、古いパケットは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-229">If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> and <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> methods, old packets will get dropped.</span></span> <span data-ttu-id="0b3ee-230">アプリケーションは、古いパケットを受信できなくなり、代わりに <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> メソッドを呼び出すときに新しいパケットを受信します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-230">The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span>  
  
 <span data-ttu-id="0b3ee-231">Windows での受信バッファーの既定のサイズは8192です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-231">The default size of the receive buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0b3ee-232">指定されたバッファー サイズは 0 より小さいです。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-232">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b3ee-233">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-233">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b3ee-234"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-234">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b3ee-235">この <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> インスタンスのマルチキャストの送信操作に使用される <see cref="T:System.Net.Sockets.Socket" /> の送信バッファーのバイト単位のサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-235">Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="0b3ee-236"><see cref="T:System.Int32" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-236">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="0b3ee-237">送信バッファーのバイト単位のサイズ。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-237">The size, in bytes, of the send buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b3ee-238">SendBufferSize プロパティは、この <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> インスタンスでのマルチキャストの送信操作に使用される、基になる <xref:System.Net.Sockets.Socket> の送信バッファーのサイズ (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-238">The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast send operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span>  
  
 <span data-ttu-id="0b3ee-239">Mac OS X では、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> プロパティは、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> メソッドへの追加の呼び出しが失敗する前に、ネットワークスタックの待機中のバッファーに格納できるバイト数を制御します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-239">On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing.</span></span> <span data-ttu-id="0b3ee-240">短時間の間に多数の UDP パケットを送信する場合、Mac OS X のアプリケーションはこのプロパティを考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-240">Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.</span></span>  
  
 <span data-ttu-id="0b3ee-241">Windows では、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> メソッドを呼び出すと、送信バッファーがいっぱいになった場合の <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> プロパティの値に応じて、コールバックの呼び出しに時間がかかります。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-241">On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full.</span></span> <span data-ttu-id="0b3ee-242"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> プロパティは、送信が完了するまで、ユーザーのバッファーが物理メモリ内でロックされたままになるかどうかのみを制御します。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-242">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.</span></span>  
  
 <span data-ttu-id="0b3ee-243">Windows での送信バッファーの既定のサイズは8192です。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-243">The default size of the send buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0b3ee-244">指定されたバッファー サイズは 0 より小さいです。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-244">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b3ee-245">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-245">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b3ee-246"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="0b3ee-246">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
