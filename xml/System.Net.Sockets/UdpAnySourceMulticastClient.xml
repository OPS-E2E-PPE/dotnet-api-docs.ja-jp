<Type Name="UdpAnySourceMulticastClient" FullName="System.Net.Sockets.UdpAnySourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="504194d8f700293d2b7b54542388c2876b1425ec" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73339099" /></Metadata><TypeSignature Language="C#" Value="public class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpAnySourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpAnySourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpAnySourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpAnySourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>任意の送信元からのマルチキャスト トラフィックのクライアント受信元。このマルチキャストは、ASM (Any Source Multicast) または ISM (Internet Standard Multicast) とも呼ばれます。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpAnySourceMulticastClient(System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpAnySourceMulticastClient : System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpAnySourceMulticastClient" Usage="new System.Net.Sockets.UdpAnySourceMulticastClient (groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupAddress">この受信者にとってサブスクライブ先となるマルチキャスト グループのアドレス。</param>
        <param name="localPort">この受信者がバインドするローカルのポート。</param>
        <summary>グループ アドレスをサブスクライブして任意の送信元からデータグラムを受信できる新しい <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP クライアントを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> コンストラクターは、UDP マルチキャストソケットをグループのアドレスとポートに関連付けますが、そのソケットをバインドしたり、使用したりしません。  
  
 `groupAddress` パラメーターには、IPv6 または IPv4 マルチキャストアドレスを指定できます。  
  
 `localPort` パラメーターでは、1024未満のポートを指定することはできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupAddress" /> は <see langword="null" />です。 参照</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="localPort" /> が 0 より小さい値か、<paramref name="localPort" /> が 65,535 より大きい値です。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</param>
        <summary>ソケットをバインドし、マルチキャスト グループへの参加操作を開始して、任意のグループ参加要素からデータグラムを受信できるようにします。</summary>
        <returns>この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> メソッドは、UDP マルチキャストソケットをローカルポートにバインドし、マルチキャストグループに参加して、マルチキャストグループの参加要素からデータグラムを受信できるようにします。 ローカルポートとマルチキャストグループのアドレスは、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> コンストラクターで指定されます。  
  
 `callback` パラメーターで指定されたメソッドは、マルチキャストグループに参加する操作が完了したときに呼び出されます。  
  
 ランタイムによって要求された場合、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> メソッドは、クライアントがマルチキャストグループへのアクセスを許可されているかどうかを確認するポリシーチェックも実行します。 クライアントがアクセスを許可されていない場合は、<xref:System.Net.Sockets.SocketError.AccessDenied>と共に <xref:System.Net.Sockets.SocketException> がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループは、既に結合されているか、または結合操作が現在進行中です。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginReceiveFromGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">受信したデータを格納するバッファー。</param>
        <param name="offset">データの保存先になる、<paramref name="buffer" /> の先頭からのバイト単位のオフセット。</param>
        <param name="count"><paramref name="buffer" /> で受信および格納するバイトの最大数。</param>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</param>
        <summary>参加しているマルチキャスト グループからのパケットの受信操作を開始し、任意の送信元からのパケットがマルチキャスト グループに到着したら、指定されたコールバックを呼び出します。</summary>
        <returns>この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> メソッドは、参加しているマルチキャストグループからの UDP パケットの受信操作を、任意の送信元から開始します。 ローカルポートとマルチキャストグループのアドレスは、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> コンストラクターで指定されます。 マルチキャストクライアントでは、マルチキャストグループへの参加も完了している必要があります。  
  
 `callback` パラメーターで指定されたメソッドは、パケットの受信時に呼び出されます。  
  
 受信操作が同期的に失敗した場合、ソケットに障害が発生する可能性があります。ただし、これは UDP では一般的ではありません。 ソケット障害が発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="count" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> にカウントを加算した値が <paramref name="buffer" /> の長さを超えています。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 count, class System.Net.IPEndPoint remoteEndPoint, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, count As Integer, remoteEndPoint As IPEndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Net::IPEndPoint ^ remoteEndPoint, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendTo : byte[] * int * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendTo (buffer, offset, count, remoteEndPoint, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">送信するデータが格納されているバッファー。</param>
        <param name="offset">送信するデータを読み取る <paramref name="buffer" /> の先頭からのバイト単位のオフセット。</param>
        <param name="count"><paramref name="buffer" /> から送信するバイト数。</param>
        <param name="remoteEndPoint">パケットを送信するリモート エンドポイント。</param>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</param>
        <summary>指定した宛先にユニキャスト パケットを送信する操作を開始します。</summary>
        <returns>この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> メソッドは、参加しているマルチキャストグループに UDP パケットを送信する操作を開始します。  
  
 クライアントは、マルチキャストグループへの参加を完了している必要があります。 `remoteEndPoint` パラメーターで指定された宛先アドレスには、この受信側にマルチキャストパケットが既に送信されている必要があります。 一部のプロトコルでは、この情報を使用してフロー制御、サービス品質統計、または回復メッセージを渡すことができます。  
  
 `callback` パラメーターで指定されたメソッドは、パケットの受信時に呼び出されます。  
  
 転送が許可されるのは、`remoteEndPoint` パラメーターで指定されたアドレスが、この受信側にマルチキャストパケットを既に送信している場合のみです。 クライアントがアクセスを許可されていない場合は、<xref:System.Net.Sockets.SocketError.AccessDenied>と共に <xref:System.Net.Sockets.SocketException> がスローされます。  
  
 `remoteEndPoint` パラメーターで指定された宛先ポートが1024未満の場合、<xref:System.Net.Sockets.SocketException> が <xref:System.Net.Sockets.SocketError.AccessDenied>と共にスローされます。  
  
 受信操作が同期的に失敗した場合、ソケットに障害が発生する可能性があります。ただし、これは UDP では一般的ではありません。 ソケット障害が発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="count" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> にカウントを加算した値が <paramref name="buffer" /> の長さを超えています。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendToGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">送信するデータが格納されているバッファー。</param>
        <param name="offset">送信するデータを読み取る <paramref name="buffer" /> の先頭からのバイト単位のオフセット。</param>
        <param name="count"><paramref name="buffer" /> から送信するバイト数。</param>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <paramref name="callback" /> メソッドに渡す省略可能な状態情報。</param>
        <summary>参加しているマルチキャスト グループへのパケットの送信操作を開始し、パケットがマルチキャスト グループに送信されたら、指定されたコールバックを呼び出します。</summary>
        <returns>この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> メソッドは、参加しているマルチキャストグループに UDP パケットを送信する操作を開始します。  
  
 クライアントは、マルチキャストグループへの参加を完了している必要があります。  
  
 `callback` パラメーターで指定されたメソッドは、パケットの受信時に呼び出されます。  
  
 受信操作が同期的に失敗した場合、ソケットに障害が発生する可能性があります。ただし、これは UDP では一般的ではありません。 ソケット障害が発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="count" /> が 0 未満です。 
- または - 
 <paramref name="offset" /> にカウントを加算した値が <paramref name="buffer" /> の長さを超えています。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSource">
      <MemberSignature Language="C#" Value="public void BlockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BlockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BlockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BlockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.BlockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.BlockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">ブロックする送信元のアドレス。</param>
        <summary>送信元をブロックし、その送信元からのマルチキャスト パケットが受信されないようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> メソッドは、指定された送信元アドレスから送信されたマルチキャストパケットを受信からブロックします。 クライアントは、マルチキャストグループへの参加を完了している必要があります。  
  
 `sourceAddress` パラメーターには IPv6 または IPv4 アドレスを指定できますが、`sourceAddress` パラメーターは、クライアントが参加しているマルチキャストグループのアドレスファミリと一致している必要があります。  
  
 `callback` パラメーターで指定されたメソッドは、パケットの受信時に呼び出されます。  
  
 ソースのブロック操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpAnySourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マルチキャスト グループへの参加を終了し、<see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> クラスの現在のインスタンスによって使用されたリソースと、基になる <see cref="T:System.Net.Sockets.Socket" /> によって使用されたリソースをすべて解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient> を使い終わったら、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>を呼び出します。 Dispose メソッドは、<xref:System.Net.Sockets.UdpAnySourceMulticastClient> を使用できない状態のままにします。 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>呼び出し後は、<xref:System.Net.Sockets.UdpAnySourceMulticastClient>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Net.Sockets.UdpAnySourceMulticastClient> へのすべての参照を解放する必要があります。  
  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient>への最後の参照を解放する前に、必ず<xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.Net.Sockets.UdpAnySourceMulticastClient> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">非同期の参加操作の結果。</param>
        <summary>マルチキャスト グループに対する非同期のグループ参加操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> メソッドは、ソケットへの非同期バインドとマルチキャストグループへの参加操作を完了します。  
  
 ランタイムによって要求された場合、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> メソッドは、クライアントがマルチキャストグループへのアクセスを許可されているかどうかを確認するポリシーチェックも実行します。 クライアントがアクセスを許可されていない場合は、<xref:System.Net.Sockets.SocketError.AccessDenied>と共に <xref:System.Net.Sockets.SocketException> がスローされます。  
  
 グループの結合操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromGroup">
      <MemberSignature Language="C#" Value="public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromGroup(class System.IAsyncResult result, [out] class System.Net.IPEndPoint&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromGroup (result As IAsyncResult, ByRef source As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromGroup(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % source);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromGroup : IAsyncResult * IPEndPoint -&gt; int" Usage="udpAnySourceMulticastClient.EndReceiveFromGroup (result, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="source" Type="System.Net.IPEndPoint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">非同期の受信操作の結果。</param>
        <param name="source">パケットの受信元のソース エンドポイント。</param>
        <summary>参加しているマルチキャスト グループからパケットを受信する非同期の操作を完了し、受信した情報を提供します。</summary>
        <returns><see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドに渡されるバッファー パラメーターに格納されたメッセージの長さ (バイト数)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> メソッドは、マルチキャストグループからパケットを受信する非同期操作を完了します。  
  
 受信操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public void EndSendTo (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendTo(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendTo (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendTo(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendTo : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendTo result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">非同期の送信操作の結果。</param>
        <summary>指定した宛先にユニキャスト パケットを送信する操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> メソッドは、指定された宛先アドレスにパケットを送信する非同期操作を完了します。  
  
 受信操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToGroup">
      <MemberSignature Language="C#" Value="public void EndSendToGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendToGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">非同期の送信操作の結果。</param>
        <summary>マルチキャスト グループにパケットを送信する操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> メソッドは、マルチキャストグループにパケットを送信する非同期操作を完了します。  
  
 受信操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発信マルチキャスト パケットが送信元アプリケーションに配信されるかどうかを指定する値を取得または設定します。</summary>
        <value><see cref="T:System.Boolean" /> を返します。  
  
マルチキャスト グループへの送信パケットが送信元アプリケーションに配信されるかどうかを指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マルチキャストトラフィックは、インターネット上の多対多通信のためのスケーラブルな方法です。 プロセスは、マルチキャストグループアドレスをサブスクライブします。 次に、サブスクライブされたプロセスによってマルチキャストグループに送信されたすべてのパケットが、マルチキャストアドレスをサブスクライブしている他のすべてのプロセスによって受信されます。 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> プロパティは、ローカルコンピューター上のプロセスが、このクライアントからマルチキャストグループに送信されたマルチキャストパケットを受信するかどうかを制御します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> インスタンスのマルチキャストの受信操作に使用される <see cref="T:System.Net.Sockets.Socket" /> の受信バッファーのバイト単位のサイズを取得または設定します。</summary>
        <value><see cref="T:System.Int32" /> を返します。  
  
受信バッファー サイズ (バイト単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> プロパティは、この <xref:System.Net.Sockets.UdpAnySourceMulticastClient> インスタンスでのマルチキャストの受信操作に使用される、基になる <xref:System.Net.Sockets.Socket> の受信バッファーのサイズ (バイト単位) を取得または設定します。 具体的には、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> プロパティは、パケットが到着したときにスタックによって使用されるバッファーのサイズを制御しますが、アプリケーションはまだ <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> メソッドを呼び出していません。 このバッファーがいっぱいになり、アプリケーションが <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> および <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> メソッドを呼び出す前にパケットが保持される場合、古いパケットは破棄されます。 アプリケーションは、古いパケットを受信できなくなり、代わりに <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> メソッドを呼び出すときに新しいパケットを受信します。  
  
 Windows での受信バッファーの既定のサイズは8192バイトです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたバッファー サイズは 0 より小さいです。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> インスタンスのマルチキャストの送信操作に使用される <see cref="T:System.Net.Sockets.Socket" /> の送信バッファーのバイト単位のサイズを取得または設定します。</summary>
        <value><see cref="T:System.Int32" /> を返します。  
  
送信バッファーのバイト単位のサイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> プロパティは、この <xref:System.Net.Sockets.UdpAnySourceMulticastClient> インスタンスでのマルチキャストの送信操作に使用される、基になるソケットの送信バッファーのサイズ (バイト単位) を取得または設定します。  
  
 送信バッファーがいっぱいの場合、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> プロパティの値に応じて、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> メソッドまたは <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> メソッドを呼び出すと、コールバックの呼び出しに時間がかかります。 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> プロパティは、送信が完了するまで、ユーザーのバッファーが物理メモリ内でロックされたままになるかどうかのみを制御します。  
  
 Windows での送信バッファーの既定のサイズは8192バイトです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたバッファー サイズは 0 より小さいです。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockSource">
      <MemberSignature Language="C#" Value="public void UnblockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnblockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnblockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnblockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.UnblockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.UnblockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">ブロック解除する送信元のアドレス。</param>
        <summary><see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> メソッドの呼び出しによって以前にブロックされていた送信元のブロックを解除して、その送信元からのマルチキャスト パケットを受信できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> メソッドは、指定された送信元アドレスから送信されるマルチキャストパケットのブロックを解除して、受信できるようにします。 指定したソースアドレスは、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> メソッドの呼び出しによって既にブロックされている必要があります。  
  
 クライアントは、マルチキャストグループへの参加を完了している必要があります。  
  
 `sourceAddress` パラメーターには、IPv6 または IPv4 マルチキャストアドレスを指定できます。  
  
 `sourceAddress` パラメーターの指定された送信元アドレスが <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> メソッドの呼び出しによってブロックされていなかった場合は、<xref:System.Net.Sockets.SocketError.AddressNotAvailable>と共に <xref:System.Net.Sockets.SocketException> がスローされます。  
  
 ブロック解除ソース操作の実行中にソケットエラーが発生した場合は、<xref:System.Net.Sockets.SocketException> がスローされます。 受信したエラーは、<xref:System.Net.Sockets.SocketError> 列挙体のメンバーとして指定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
