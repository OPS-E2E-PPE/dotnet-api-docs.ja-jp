<Type Name="NetworkStream" FullName="System.Net.Sockets.NetworkStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6c5a6b23f5324fbfb9d8ca5824eef4dd061a71a" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74385439" /></Metadata><TypeSignature Language="C#" Value="public class NetworkStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.NetworkStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type NetworkStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d6e9c-101">ネットワーク アクセスの基になるデータ ストリームを提供します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-101">Provides the underlying stream of data for network access.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-102"><xref:System.Net.Sockets.NetworkStream> クラスには、ブロックモードで <xref:System.Net.Sockets.SocketType.Stream> ソケットを介してデータを送受信するためのメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-102">The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode.</span></span> <span data-ttu-id="d6e9c-103">ブロッキングと非ブロッキング <xref:System.Net.Sockets.Socket>の詳細については、「[非同期クライアントソケットの使用](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-103">For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md).</span></span> <span data-ttu-id="d6e9c-104"><xref:System.Net.Sockets.NetworkStream> クラスは、同期データ転送と非同期データ転送の両方に使用できます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-104">You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer.</span></span> <span data-ttu-id="d6e9c-105">同期通信と非同期通信の詳細については、「[ソケット](~/docs/framework/network-programming/sockets.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-105">For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).</span></span>  
  
 <span data-ttu-id="d6e9c-106"><xref:System.Net.Sockets.NetworkStream>を作成するには、接続された <xref:System.Net.Sockets.Socket>を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-106">To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="d6e9c-107">また、指定された <xref:System.Net.Sockets.Socket>に対して <xref:System.Net.Sockets.NetworkStream> が持つ <xref:System.IO.FileAccess> アクセス許可を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-107">You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="d6e9c-108">既定では、<xref:System.Net.Sockets.NetworkStream> を閉じると、指定された <xref:System.Net.Sockets.Socket>は閉じられません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-108">By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="d6e9c-109"><xref:System.Net.Sockets.NetworkStream> に、指定された <xref:System.Net.Sockets.Socket>を閉じる権限が必要な場合は、`ownsSocket` パラメーターの値に `true` を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-109">If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.</span></span>  
  
 <span data-ttu-id="d6e9c-110">単純な単一スレッドの同期ブロッキング i/o には、<xref:System.Net.Sockets.NetworkStream.Write%2A> および <xref:System.Net.Sockets.NetworkStream.Read%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-110">Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O.</span></span> <span data-ttu-id="d6e9c-111">個別のスレッドを使用して i/o を処理する場合は、<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> と <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> のメソッド、または通信に <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> および <xref:System.Net.Sockets.NetworkStream.EndRead%2A> メソッドを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-111">If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.</span></span>  
  
 <span data-ttu-id="d6e9c-112"><xref:System.Net.Sockets.NetworkStream> は、ネットワークデータストリームへのランダムアクセスをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-112">The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream.</span></span> <span data-ttu-id="d6e9c-113">ストリームでシークがサポートされているかどうかを示す <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> プロパティの値は常に `false`ます。<xref:System.Net.Sockets.NetworkStream.Position%2A> プロパティの読み取り、<xref:System.Net.Sockets.NetworkStream.Length%2A> プロパティの読み取り、または <xref:System.Net.Sockets.NetworkStream.Seek%2A> メソッドの呼び出しを行うと、<xref:System.NotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-113">The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="d6e9c-114">読み取りおよび書き込み操作は、同期を必要とせずに <xref:System.Net.Sockets.NetworkStream> クラスのインスタンスで同時に実行できます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-114">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="d6e9c-115">書き込み操作用の一意のスレッドが1つあり、読み取り操作用の一意のスレッドが1つであれば、読み取りと書き込みのスレッド間で相互干渉が発生することはなく、同期は必要ありません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-115">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-116">次のコード例は、接続されている <xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket> から <xref:System.Net.Sockets.NetworkStream> を作成し、基本的な同期ブロッキング i/o を実行する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-116">The following code example demonstrates how to create a <xref:System.Net.Sockets.NetworkStream> from a connected <xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket> and perform basic synchronous blocking I/O.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d6e9c-117"><see cref="T:System.Net.Sockets.NetworkStream" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-117">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream socket" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="d6e9c-118"><see cref="T:System.Net.Sockets.Socket" /> がデータの送受信に使用する <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-118">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <summary><span data-ttu-id="d6e9c-119">指定した <see cref="T:System.Net.Sockets.NetworkStream" /> の <see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-119">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-120"><xref:System.Net.Sockets.NetworkStream> は、指定された <xref:System.Net.Sockets.Socket>への読み取り/書き込みアクセスを使用して作成されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-120">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="d6e9c-121"><xref:System.Net.Sockets.NetworkStream> は、基になる <xref:System.Net.Sockets.Socket>を所有していないので、<xref:System.Net.Sockets.NetworkStream.Close%2A> メソッドを呼び出すと <xref:System.Net.Sockets.Socket>は閉じられません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-121">The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-122">次のコード例は、<xref:System.Net.Sockets.Socket>を使用して <xref:System.Net.Sockets.NetworkStream> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-122">The following code example illustrates how to create a <xref:System.Net.Sockets.NetworkStream> with a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-123"><paramref name="socket" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-123">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-124"><paramref name="socket" /> パラメーターが接続されていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-124">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="d6e9c-125">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-125">-or-</span></span> 
<span data-ttu-id="d6e9c-126"><paramref name="socket" /> パラメーターの <see cref="P:System.Net.Sockets.Socket.SocketType" /> プロパティが <see cref="F:System.Net.Sockets.SocketType.Stream" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-126">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="d6e9c-127">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-127">-or-</span></span> 
<span data-ttu-id="d6e9c-128"><paramref name="socket" /> パラメーターが非ブロック状態です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-128">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="d6e9c-129">ネットワーク上でストリームを使用する</span><span class="sxs-lookup"><span data-stu-id="d6e9c-129">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="d6e9c-130"><see cref="T:System.Net.Sockets.Socket" /> がデータの送受信に使用する <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-130">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="d6e9c-131"><see langword="true" /> に設定すると、<see cref="T:System.Net.Sockets.NetworkStream" /> が <see cref="T:System.Net.Sockets.Socket" /> の所有権を取得することを示します。それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-131">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d6e9c-132">指定した <see cref="T:System.Net.Sockets.NetworkStream" /> 所有権を使用して、指定した <see cref="T:System.Net.Sockets.Socket" /> の <see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-133"><xref:System.Net.Sockets.NetworkStream> は、指定された <xref:System.Net.Sockets.Socket>への読み取り/書き込みアクセスを使用して作成されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-133">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="d6e9c-134">`ownsSocket` パラメーターの値が `true`場合、<xref:System.Net.Sockets.NetworkStream> は基になる <xref:System.Net.Sockets.Socket>の所有権を取得します。また、<xref:System.Net.Sockets.NetworkStream.Close%2A> メソッドを呼び出すと、基になる <xref:System.Net.Sockets.Socket>も閉じられます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-134">If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-135">次のコード例では、<xref:System.Net.Sockets.Socket>の所有権を持つ <xref:System.Net.Sockets.NetworkStream> を作成します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-135">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with ownership of the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-136"><paramref name="socket" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-136">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-137"><paramref name="socket" /> パラメーターが接続されていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-137">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="d6e9c-138">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-138">-or-</span></span> 
<span data-ttu-id="d6e9c-139"><paramref name="socket" /> パラメーターの <see cref="P:System.Net.Sockets.Socket.SocketType" /> プロパティの値が <see cref="F:System.Net.Sockets.SocketType.Stream" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-139">the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="d6e9c-140">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-140">-or-</span></span> 
<span data-ttu-id="d6e9c-141"><paramref name="socket" /> パラメーターが非ブロック状態です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-141">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="d6e9c-142"><see cref="T:System.Net.Sockets.Socket" /> がデータの送受信に使用する <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-142">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="d6e9c-143"><see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせです。提供された <see cref="T:System.Net.Sockets.NetworkStream" /> に対する <see cref="T:System.Net.Sockets.Socket" /> に付与されているアクセス許可の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-143">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="d6e9c-144">指定したアクセス権を持つ、指定した <see cref="T:System.Net.Sockets.NetworkStream" /> の <see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-144">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-145">指定した <xref:System.Net.Sockets.Socket>への指定したアクセスで、<xref:System.Net.Sockets.NetworkStream> が作成されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-145">The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="d6e9c-146">このコンストラクターでは、<xref:System.Net.Sockets.NetworkStream> は基になる <xref:System.Net.Sockets.Socket>を所有していないので、<xref:System.Net.Sockets.NetworkStream.Close%2A> メソッドを呼び出すと、基になる <xref:System.Net.Sockets.Socket>は閉じられません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-146">With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="d6e9c-147">`access` パラメーターは、<xref:System.Net.Sockets.NetworkStream>の <xref:System.Net.Sockets.NetworkStream.CanRead%2A> および <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-147">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-148"><xref:System.IO.FileAccess.Write>を指定した場合、<xref:System.Net.Sockets.NetworkStream> は <xref:System.Net.Sockets.NetworkStream.Write%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-148">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="d6e9c-149"><xref:System.IO.FileAccess.Read>を指定した場合、<xref:System.Net.Sockets.NetworkStream> は <xref:System.Net.Sockets.NetworkStream.Read%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-149">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="d6e9c-150"><xref:System.IO.FileAccess.ReadWrite>を指定した場合、両方のメソッド呼び出しが許可されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-150">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-151">次のコード例では、<xref:System.Net.Sockets.Socket>の読み取りと書き込みを行う機能を持つ <xref:System.Net.Sockets.NetworkStream> を作成します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-151">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-152"><paramref name="socket" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-152">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-153"><paramref name="socket" /> パラメーターが接続されていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-153">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="d6e9c-154">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-154">-or-</span></span> 
<span data-ttu-id="d6e9c-155"><paramref name="socket" /> パラメーターの <see cref="P:System.Net.Sockets.Socket.SocketType" /> プロパティが <see cref="F:System.Net.Sockets.SocketType.Stream" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-155">the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="d6e9c-156">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-156">-or-</span></span> 
<span data-ttu-id="d6e9c-157"><paramref name="socket" /> パラメーターが非ブロック状態です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-157">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ownsSocket" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="d6e9c-158"><see cref="T:System.Net.Sockets.Socket" /> がデータの送受信に使用する <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-158">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="d6e9c-159"><see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせです。提供された <see cref="T:System.Net.Sockets.NetworkStream" /> に対する <see cref="T:System.Net.Sockets.Socket" /> に付与されているアクセス許可の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-159">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="d6e9c-160"><see langword="true" /> に設定すると、<see cref="T:System.Net.Sockets.NetworkStream" /> が <see cref="T:System.Net.Sockets.Socket" /> の所有権を取得することを示します。それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-160">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d6e9c-161">指定したアクセス権と指定した <see cref="T:System.Net.Sockets.NetworkStream" /> 所有権で、指定した <see cref="T:System.Net.Sockets.Socket" /> の <see cref="T:System.Net.Sockets.Socket" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-161">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-162"><xref:System.Net.Sockets.NetworkStream> は、指定された <xref:System.Net.Sockets.Socket>への読み取り/書き込みアクセスを使用して作成されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-162">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="d6e9c-163">`ownsSocket` パラメーターの値が `true`場合、<xref:System.Net.Sockets.NetworkStream> は基になる <xref:System.Net.Sockets.Socket>の所有権を取得します。また、<xref:System.Net.Sockets.NetworkStream.Close%2A> メソッドを呼び出すと、基になる <xref:System.Net.Sockets.Socket>も閉じられます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-163">If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="d6e9c-164">`access` パラメーターは、<xref:System.Net.Sockets.NetworkStream>の <xref:System.Net.Sockets.NetworkStream.CanRead%2A> および <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-164">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-165"><xref:System.IO.FileAccess.Write>を指定した場合、<xref:System.Net.Sockets.NetworkStream> は <xref:System.Net.Sockets.NetworkStream.Write%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-165">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="d6e9c-166"><xref:System.IO.FileAccess.Read>を指定した場合、<xref:System.Net.Sockets.NetworkStream> は <xref:System.Net.Sockets.NetworkStream.Read%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-166">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="d6e9c-167"><xref:System.IO.FileAccess.ReadWrite>を指定した場合、両方のメソッド呼び出しが許可されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-167">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-168">次のコード例では、<xref:System.Net.Sockets.Socket>の読み取りと書き込みを行う機能を持つ <xref:System.Net.Sockets.NetworkStream> を作成します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-168">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="d6e9c-169">この <xref:System.Net.Sockets.NetworkStream> には、`ownsSocket` パラメーターに `true` を指定することによって、<xref:System.Net.Sockets.Socket> の所有権が与えられます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-169">Ownership of the <xref:System.Net.Sockets.Socket> is given to this <xref:System.Net.Sockets.NetworkStream> by specifying `true` for the `ownsSocket` parameter.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-170"><paramref name="socket" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-170">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-171"><paramref name="socket" /> パラメーターが接続されていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-171">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="d6e9c-172">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-172">-or-</span></span> 
<span data-ttu-id="d6e9c-173"><paramref name="socket" /> パラメーターの <see cref="P:System.Net.Sockets.Socket.SocketType" /> プロパティが <see cref="F:System.Net.Sockets.SocketType.Stream" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-173">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="d6e9c-174">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-174">-or-</span></span> 
<span data-ttu-id="d6e9c-175"><paramref name="socket" /> パラメーターが非ブロック状態です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-175">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginRead (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-176"><see cref="T:System.Byte" /> 型の配列。<see cref="T:System.Net.Sockets.NetworkStream" /> から読み取られたデータを格納するメモリ内の場所です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-176">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="d6e9c-177">データの格納を開始する <paramref name="buffer" /> 内の場所。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-177">The location in <paramref name="buffer" /> to begin storing the data.</span></span></param>
        <param name="size"><span data-ttu-id="d6e9c-178"><see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-178">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="d6e9c-179"><see cref="T:System.AsyncCallback" /> の完了時に実行される <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-179">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="d6e9c-180">追加のユーザー定義のデータを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-180">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="d6e9c-181"><see cref="T:System.Net.Sockets.NetworkStream" /> からの非同期の読み取りを開始します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-181">Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-182">非同期呼び出しを表す <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-182">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-183"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドは、受信ネットワークバッファーからのデータの非同期読み取りを開始します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-183">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers.</span></span> <span data-ttu-id="d6e9c-184"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドを呼び出すと、別の実行スレッド内でデータを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-184">Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="d6e9c-185"><xref:System.AsyncCallback> デリゲートを実装するコールバックメソッドを作成し、その名前を <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-185">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="d6e9c-186">少なくとも、`state` パラメーターには <xref:System.Net.Sockets.NetworkStream>が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-186">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-187">コールバックメソッド内で受信したデータを取得する必要があるため、読み取りバッファーとその他の有用な情報を保持するために、小さなクラスまたは構造体を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-187">Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information.</span></span> <span data-ttu-id="d6e9c-188">`state` パラメーターを使用して、構造体またはクラスのインスタンスを <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-188">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="d6e9c-189">コールバックメソッドは、<xref:System.Net.Sockets.NetworkStream.EndRead%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-189">Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method.</span></span> <span data-ttu-id="d6e9c-190">アプリケーションが <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>を呼び出すと、データが受信されるかエラーが発生するまで、システムは別のスレッドを使用して、指定されたコールバックメソッドを実行し、指定された <xref:System.Net.Sockets.NetworkStream> がデータを読み取るか、またはをスローするまで、<xref:System.Net.Sockets.NetworkStream.EndRead%2A> をブロックします。例外的.</span><span class="sxs-lookup"><span data-stu-id="d6e9c-190">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception.</span></span> <span data-ttu-id="d6e9c-191"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドを呼び出した後に元のスレッドがブロックされるようにするには、<xref:System.Threading.WaitHandle.WaitOne%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-191">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="d6e9c-192">元のスレッドの実行を継続する場合は、コールバックメソッドで <xref:System.Threading.EventWaitHandle.Set%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-192">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="d6e9c-193">コールバックメソッドの記述の詳細については、「[コールバックメソッドとしてのデリゲートのマーシャリング](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-193">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="d6e9c-194"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドは、`size` パラメーターで指定されたバイト数まで、使用可能な限り多くのデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-194">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-195"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException%2A> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-195">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-196">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode%2A> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、 [Windows Sockets version 2 API エラーコード](/windows/desktop/winsock/windows-sockets-error-codes-2)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-196">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="d6e9c-197">読み取りおよび書き込み操作は、同期を必要とせずに <xref:System.Net.Sockets.NetworkStream> クラスのインスタンスで同時に実行できます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-197">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="d6e9c-198">書き込み操作用の一意のスレッドが1つあり、読み取り操作用の一意のスレッドが1つであれば、読み取りと書き込みのスレッド間で相互干渉が発生することはなく、同期は必要ありません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-198">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-199">次のコード例では、<xref:System.Net.Sockets.NetworkStream.BeginRead%2A> を使用して、ネットワークストリームからデータを非同期的に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-199">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> to read data asynchronously from the network stream.</span></span> <span data-ttu-id="d6e9c-200">`myReadCallBack` メソッドは、<xref:System.AsyncCallback> デリゲートを実装し、<xref:System.Net.Sockets.NetworkStream.BeginRead%2A> が返されたときにシステムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-200">The `myReadCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-201"><paramref name="buffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-201">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d6e9c-202"><paramref name="offset" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-202">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-203">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-203">-or-</span></span> 
<span data-ttu-id="d6e9c-204"><paramref name="offset" /> パラメーターが <paramref name="buffer" /> パラメーターの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-204">The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.</span></span>  
  
<span data-ttu-id="d6e9c-205">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-205">-or-</span></span> 
<span data-ttu-id="d6e9c-206"><paramref name="size" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-206">The <paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-207">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-207">-or-</span></span> 
<span data-ttu-id="d6e9c-208"><paramref name="size" /> が、<paramref name="buffer" /> パラメーターの値を引いた <paramref name="offset" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-208">The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-209">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-209">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="d6e9c-210">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-210">-or-</span></span> 
<span data-ttu-id="d6e9c-211">ネットワークからの読み取り中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-211">There was a failure while reading from the network.</span></span>  
  
<span data-ttu-id="d6e9c-212">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-212">-or-</span></span> 
<span data-ttu-id="d6e9c-213">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-213">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-214"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-214">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginWrite (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-215"><see cref="T:System.Byte" /> に書き込むデータを格納する <see cref="T:System.Net.Sockets.NetworkStream" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-215">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="d6e9c-216">データの送信を開始する <paramref name="buffer" /> 内の場所。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-216">The location in <paramref name="buffer" /> to begin sending the data.</span></span></param>
        <param name="size"><span data-ttu-id="d6e9c-217"><see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-217">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="d6e9c-218"><see cref="T:System.AsyncCallback" /> の完了時に実行される <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-218">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="d6e9c-219">追加のユーザー定義のデータを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-219">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="d6e9c-220">ストリームへの非同期の書き込みを開始します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-220">Begins an asynchronous write to a stream.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-221">非同期呼び出しを表す <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-221">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-222"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> メソッドは、リモートホストへの非同期の送信操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-222">The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host.</span></span> <span data-ttu-id="d6e9c-223"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> メソッドを呼び出すと、別の実行スレッド内でデータを送信できるようになります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-223">Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="d6e9c-224"><xref:System.AsyncCallback> デリゲートを実装するコールバックメソッドを作成し、その名前を <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-224">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span> <span data-ttu-id="d6e9c-225">少なくとも、`state` パラメーターには <xref:System.Net.Sockets.NetworkStream>が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-225">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-226">コールバックでより多くの情報が必要な場合は、<xref:System.Net.Sockets.NetworkStream> とその他の必要な情報を保持する小さなクラスまたは構造体を作成できます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-226">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information.</span></span> <span data-ttu-id="d6e9c-227">`state` パラメーターを使用して、構造体またはクラスのインスタンスを <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-227">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="d6e9c-228">コールバックメソッドは、<xref:System.Net.Sockets.NetworkStream.EndWrite%2A> メソッドを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-228">Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method.</span></span> <span data-ttu-id="d6e9c-229">アプリケーションが <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>を呼び出すと、システムは別のスレッドを使用して指定されたコールバックメソッドを実行し、<xref:System.Net.Sockets.NetworkStream> が要求したバイト数を送信するか例外をスローするまで、<xref:System.Net.Sockets.NetworkStream.EndWrite%2A> をブロックします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-229">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="d6e9c-230"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> メソッドを呼び出した後に元のスレッドがブロックされるようにするには、<xref:System.Threading.WaitHandle.WaitOne%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-230">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="d6e9c-231">元のスレッドの実行を継続する場合は、コールバックメソッドで <xref:System.Threading.EventWaitHandle.Set%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-231">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="d6e9c-232">コールバックメソッドの記述の詳細については、「[コールバックメソッドとしてのデリゲートのマーシャリング](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-232">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-233"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException%2A> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-233">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-234">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode%2A> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、 [Windows Sockets version 2 API エラーコード](/windows/desktop/winsock/windows-sockets-error-codes-2)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-234">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="d6e9c-235">読み取りおよび書き込み操作は、同期を必要とせずに <xref:System.Net.Sockets.NetworkStream> クラスのインスタンスで同時に実行できます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-235">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="d6e9c-236">書き込み操作用の一意のスレッドが1つあり、読み取り操作用の一意のスレッドが1つであれば、読み取りと書き込みのスレッド間で相互干渉が発生することはなく、同期は必要ありません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-236">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-237">次のコード例では、<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> を使用して、データをネットワークストリームに非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-237">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> to write data asynchronously to a network stream.</span></span> <span data-ttu-id="d6e9c-238">`myWriteCallBack` メソッドは、<xref:System.AsyncCallback> デリゲートを実装し、<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> が返されたときにシステムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-238">The `myWriteCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-239"><paramref name="buffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-239">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d6e9c-240"><paramref name="offset" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-240">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-241">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-241">-or-</span></span> 
<span data-ttu-id="d6e9c-242"><paramref name="offset" /> パラメーターが <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-242">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="d6e9c-243">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-243">-or-</span></span> 
<span data-ttu-id="d6e9c-244"><paramref name="size" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-244">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-245">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-245">-or-</span></span> 
<span data-ttu-id="d6e9c-246"><paramref name="size" /> パラメーターが、<paramref name="buffer" /> パラメーターの値を引いた <paramref name="offset" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-246">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-247">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-247">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="d6e9c-248">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-248">-or-</span></span> 
<span data-ttu-id="d6e9c-249">ネットワークへの書き込み中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-249">There was a failure while writing to the network.</span></span>  
  
<span data-ttu-id="d6e9c-250">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-250">-or-</span></span> 
<span data-ttu-id="d6e9c-251">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-251">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-252"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-252">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Sockets.NetworkStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-253"><see cref="T:System.Net.Sockets.NetworkStream" /> が読み取りをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-253">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</span></span></summary>
        <value><span data-ttu-id="d6e9c-254">ストリームからデータを読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-254"><see langword="true" /> if data can be read from the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d6e9c-255">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-255">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-256"><xref:System.Net.Sockets.NetworkStream.CanRead%2A> が `true`場合、<xref:System.Net.Sockets.NetworkStream> は <xref:System.Net.Sockets.NetworkStream.Read%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-256">If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="d6e9c-257">コンストラクターに適切な <xref:System.IO.FileAccess> 列挙値を指定して、<xref:System.Net.Sockets.NetworkStream>の読みやすさと書き込み機能を設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-257">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-258"><xref:System.Net.Sockets.NetworkStream.CanRead%2A> プロパティは、<xref:System.Net.Sockets.NetworkStream> が初期化されるときに設定されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-258">The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-259">次のコード例では、<xref:System.Net.Sockets.NetworkStream.CanRead%2A> を確認し、<xref:System.Net.Sockets.NetworkStream> が読み取り可能であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-259">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanRead%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span> <span data-ttu-id="d6e9c-260">次に、<xref:System.Net.Sockets.NetworkStream>に対して読み取り操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-260">It then performs a read operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-261">ストリームがシークをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-261">Gets a value that indicates whether the stream supports seeking.</span></span> <span data-ttu-id="d6e9c-262">このプロパティは現在サポートされていません。このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-262">This property is not currently supported.This property always returns <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="d6e9c-263">常に、<see cref="T:System.Net.Sockets.NetworkStream" /> がストリームの特定の場所をシークできないことを示す <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-263"><see langword="false" /> in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream" /> cannot seek a specific location in the stream.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-264">タイムアウトのプロパティが <see cref="T:System.Net.Sockets.NetworkStream" /> で使用可能かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-264">Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <value><span data-ttu-id="d6e9c-265">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-265"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-266">このプロパティは、<xref:System.IO.Stream>から継承されているため、存在します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-266">This property is present because it is inherited from <xref:System.IO.Stream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-267"><see cref="T:System.Net.Sockets.NetworkStream" /> が書き込みをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-267">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</span></span></summary>
        <value><span data-ttu-id="d6e9c-268"><see cref="T:System.Net.Sockets.NetworkStream" /> にデータを書き込むことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-268"><see langword="true" /> if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d6e9c-269">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-269">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-270"><xref:System.Net.Sockets.NetworkStream.CanWrite%2A> が `true`場合、<xref:System.Net.Sockets.NetworkStream> は <xref:System.Net.Sockets.NetworkStream.Write%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-270">If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="d6e9c-271">コンストラクターに適切な <xref:System.IO.FileAccess> 列挙値を指定して、<xref:System.Net.Sockets.NetworkStream>の読みやすさと書き込み機能を設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-271">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-272"><xref:System.Net.Sockets.NetworkStream.CanWrite%2A> プロパティは、<xref:System.Net.Sockets.NetworkStream> が初期化されるときに設定されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-272">The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-273">次のコード例では <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> を確認し、<xref:System.Net.Sockets.NetworkStream> が書き込み可能であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-273">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="d6e9c-274">次に、<xref:System.Net.Sockets.NetworkStream>に対して書き込み操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-274">It then performs a write operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="networkStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6e9c-275"><see cref="T:System.Net.Sockets.NetworkStream" /> を閉じます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-275">Closes the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="d6e9c-276">`Close` メソッドは、<xref:System.Net.Sockets.NetworkStream>に関連付けられているアンマネージリソースとマネージリソースの両方を解放します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-276">The `Close` method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-277"><xref:System.Net.Sockets.NetworkStream> が基になる <xref:System.Net.Sockets.Socket>を所有している場合は、それも閉じられます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-277">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>

<span data-ttu-id="d6e9c-278"><xref:System.Net.Sockets.NetworkStream> が <xref:System.Net.Sockets.TcpClient>に関連付けられている場合、`Close` メソッドは TCP 接続を終了しますが、関連付けられている <xref:System.Net.Sockets.TcpClient>は破棄されません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-278">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the `Close` method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>

## Examples  
<span data-ttu-id="d6e9c-279">次のコード例では、<xref:System.Net.Sockets.NetworkStream>を閉じます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-279">The following code example closes the <xref:System.Net.Sockets.NetworkStream>.</span></span>

```vb
' Example for closing the NetworkStream.
' Close the NetworkStream
myNetworkStream.Close()
```

```csharp
// Example for closing the NetworkStream.

// Close the NetworkStream
myNetworkStream.Close();
```

```cpp
// Example for closing the NetworkStream.
// Close the NetworkStream
myNetworkStream->Close();
```

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="override this.Close : int -&gt; unit" Usage="networkStream.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d6e9c-280">閉じる前に、残りのデータを送信するために待機するミリ秒数を指定する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-280">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</span></span></param>
        <summary><span data-ttu-id="d6e9c-281">指定した時間待機した後、<see cref="T:System.Net.Sockets.NetworkStream" /> を閉じて、データを送信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-281">Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-282"><xref:System.Net.Sockets.NetworkStream.Close%2A> メソッドは、<xref:System.Net.Sockets.NetworkStream>に関連付けられているアンマネージリソースとマネージリソースの両方を解放します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-282">The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-283"><xref:System.Net.Sockets.NetworkStream> が基になる <xref:System.Net.Sockets.Socket>を所有している場合は、それも閉じられます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-283">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>  
  
 <span data-ttu-id="d6e9c-284"><xref:System.Net.Sockets.NetworkStream> が <xref:System.Net.Sockets.TcpClient>に関連付けられている場合、<xref:System.Net.Sockets.NetworkStream.Close%2A> メソッドは TCP 接続を終了しますが、関連付けられている <xref:System.Net.Sockets.TcpClient>は破棄されません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-284">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d6e9c-285"><paramref name="timeout" /> パラメーターが -1 未満。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-285">The <paramref name="timeout" /> parameter is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DataAvailable">
      <MemberSignature Language="C#" Value="public virtual bool DataAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DataAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataAvailable : bool" Usage="System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-286"><see cref="T:System.Net.Sockets.NetworkStream" /> に読み取り対象のデータがあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-286">Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</span></span></summary>
        <value><span data-ttu-id="d6e9c-287">ストリームからデータを読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-287"><see langword="true" /> if data is available on the stream to be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-288">データを読み取る準備ができているかどうかを判断するには、<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-288">Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read.</span></span> <span data-ttu-id="d6e9c-289"><xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> が `true`場合、<xref:System.Net.Sockets.NetworkStream.Read%2A> への呼び出しは直ちに返されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-289">If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately.</span></span> <span data-ttu-id="d6e9c-290">リモートホストがシャットダウンまたは接続を閉じると、<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> が <xref:System.Net.Sockets.SocketException>をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-290">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-291">次のコード例では、データが使用可能である限り、<xref:System.Net.Sockets.NetworkStream> から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-291">The following code example reads from the <xref:System.Net.Sockets.NetworkStream> as long as data is available.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-292"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-292">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-293">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-293">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="d6e9c-294"><see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> プロパティを使用して特定のエラー コードを取得してください。エラーの詳細については、<see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Socket Version 2 API のエラー コード</see>に関するドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-294">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code and refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="networkStream.Dispose disposing" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="networkStream.Dispose disposing" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d6e9c-295">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-295"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d6e9c-296"><see cref="T:System.Net.Sockets.NetworkStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-296">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-297">このメソッドは、パブリック `Dispose` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-297">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="d6e9c-298">`Dispose` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-298">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d6e9c-299"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-299"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d6e9c-300">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Net.Sockets.NetworkStream> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-300">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references.</span></span> <span data-ttu-id="d6e9c-301">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-301">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6e9c-302">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-302">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d6e9c-303"><see langword="Dispose(Boolean)" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-303">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="d6e9c-304"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-304">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="d6e9c-305"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-305">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="networkStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="d6e9c-306">非同期呼び出しを表す <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-306">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call.</span></span></param>
        <summary><span data-ttu-id="d6e9c-307">非同期読み取りの終了を処理します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-307">Handles the end of an asynchronous read.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-308"><see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-308">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-309"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> メソッドは、<xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドで開始された非同期の読み取り操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-309">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
 <span data-ttu-id="d6e9c-310"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A>を呼び出す前に、<xref:System.AsyncCallback> デリゲートを実装するコールバックメソッドを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-310">Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="d6e9c-311">このコールバックメソッドは個別のスレッドで実行され、<xref:System.Net.Sockets.NetworkStream.BeginRead%2A> が返された後にシステムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-311">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span> <span data-ttu-id="d6e9c-312">コールバックメソッドは、パラメーターとして <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドから返された <xref:System.IAsyncResult> を受け入れる必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-312">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="d6e9c-313">コールバックメソッド内で、<xref:System.IAsyncResult> の <xref:System.IAsyncResult.AsyncState%2A> プロパティを呼び出して、<xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドに渡される状態オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-313">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="d6e9c-314">この状態オブジェクトから受信側の <xref:System.Net.Sockets.NetworkStream> を抽出します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-314">Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object.</span></span> <span data-ttu-id="d6e9c-315"><xref:System.Net.Sockets.NetworkStream>を取得した後、<xref:System.Net.Sockets.NetworkStream.EndRead%2A> メソッドを呼び出して、読み取り操作を正常に完了し、読み取ったバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-315">After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="d6e9c-316"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> メソッドは、データが使用可能になるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-316">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available.</span></span> <span data-ttu-id="d6e9c-317"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> メソッドは、<xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドの `size` パラメーターで指定されたバイト数まで、使用可能な限り多くのデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-317">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="d6e9c-318">リモートホストが <xref:System.Net.Sockets.Socket> 接続をシャットダウンし、使用可能なすべてのデータを受信した場合、<xref:System.Net.Sockets.NetworkStream.EndRead%2A> メソッドは直ちに完了し、0バイトを返します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-318">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.</span></span>  
  
 <span data-ttu-id="d6e9c-319">受信したデータを取得するには、<xref:System.IAsyncResult>の <xref:System.IAsyncResult.AsyncState%2A> プロパティを呼び出し、結果の状態オブジェクトに格納されているバッファーを抽出します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-319">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-320"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException%2A> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-320">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-321">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode%2A> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、 [Windows Sockets version 2 API エラーコード](/windows/desktop/winsock/windows-sockets-error-codes-2)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-321">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-322">次のコード例では、コールバックメソッドとして <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> するために `myReadCallback` が用意されています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-322">In the following code example, `myReadCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> as the callback method.</span></span> <span data-ttu-id="d6e9c-323"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A>によって開始された非同期読み取り呼び出しを完了するために、`myReadCallback` に <xref:System.Net.Sockets.NetworkStream.EndRead%2A> が実装されています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-323"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> is implemented in `myReadCallback` to complete the asynchronous read call started by <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]
 [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d6e9c-324"><paramref name="asyncResult" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-324">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-325">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-325">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="d6e9c-326">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-326">-or-</span></span> 
<span data-ttu-id="d6e9c-327">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-327">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-328"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-328">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="networkStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="d6e9c-329">非同期呼び出しを表す <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-329">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="d6e9c-330">非同期書き込みの終了を処理します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-330">Handles the end of an asynchronous write.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> は <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>で開始された非同期送信操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="d6e9c-332"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>を呼び出す前に、<xref:System.AsyncCallback> デリゲートを実装するコールバックメソッドを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-332">Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="d6e9c-333">このコールバックメソッドは個別のスレッドで実行され、<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> が返された後にシステムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-333">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span> <span data-ttu-id="d6e9c-334">コールバックメソッドは、パラメーターとして <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> メソッドから返された <xref:System.IAsyncResult> を受け入れる必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-334">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="d6e9c-335">コールバックメソッド内で、`IAsyncResult` パラメーターの <xref:System.IAsyncResult.AsyncState%2A> プロパティを呼び出して <xref:System.Net.Sockets.NetworkStream>を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-335">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-336"><xref:System.Net.Sockets.NetworkStream>を取得した後、<xref:System.Net.Sockets.NetworkStream.EndWrite%2A> メソッドを呼び出して送信操作を正常に完了し、送信されたバイト数を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-336">After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="d6e9c-337"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> メソッドは、要求されたバイト数が送信されるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-337">The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-338"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException%2A> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-338">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-339">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode%2A> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、 [Windows Sockets version 2 API エラーコード](/windows/desktop/winsock/windows-sockets-error-codes-2)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-339">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-340">次のコード例では、コールバックメソッドとして <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> するために `myWriteCallback` が用意されています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-340">In the following code example, `myWriteCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> as the callback method.</span></span> <span data-ttu-id="d6e9c-341"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>によって開始された非同期書き込み呼び出しを完了するために、`myWriteCallback` に <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> が実装されています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-341"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> is implemented in `myWriteCallback` to complete the asynchronous write call started by <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-342"><paramref name="asyncResult" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-342">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-343">基になっている <see cref="T:System.Net.Sockets.Socket" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-343">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="d6e9c-344">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-344">-or-</span></span> 
<span data-ttu-id="d6e9c-345">ネットワークへの書き込み中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-345">An error occurred while writing to the network.</span></span>  
  
<span data-ttu-id="d6e9c-346">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-346">-or-</span></span> 
<span data-ttu-id="d6e9c-347">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-347">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-348"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-348">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NetworkStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NetworkStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="networkStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6e9c-349"><see cref="T:System.Net.Sockets.NetworkStream" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-349">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-350">このメソッドは、<xref:System.Object.Finalize%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-350">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d6e9c-351">アプリケーションコードはこのメソッドを呼び出すことはできません。ガベージコレクターによる終了処理が、<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> メソッドの呼び出しによって無効にされている場合を除き、オブジェクトの <xref:System.Object.Finalize%2A> メソッドは、ガベージコレクション中に自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-351">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d6e9c-352">Finalize メソッドの使用の詳細については、「 [finalize メソッドとデストラクター](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))」、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」、および「 [finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-352">For more information about using the Finalize method, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="networkStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6e9c-353">ストリームからデータをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-353">Flushes data from the stream.</span></span> <span data-ttu-id="d6e9c-354">このメソッドは将来使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-354">This method is reserved for future use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-355"><xref:System.Net.Sockets.NetworkStream.Flush%2A> メソッドは、<xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> メソッドを実装します。ただし、<xref:System.Net.Sockets.NetworkStream> がバッファリングされていないため、ネットワークストリームには影響しません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-355">The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no effect on network streams.</span></span> <span data-ttu-id="d6e9c-356"><xref:System.Net.Sockets.NetworkStream.Flush%2A> メソッドを呼び出すと、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-356">Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="d6e9c-357">この操作を取り消す必要があることを示す通知を伝達するために使用するキャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-357">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="d6e9c-358">非同期操作として、ストリームからデータをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-358">Flushes data from the stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-359">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-359">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-360">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-360">This operation will not block.</span></span> <span data-ttu-id="d6e9c-361">返された <xref:System.Threading.Tasks.Task> オブジェクトは、データが <xref:System.Net.Sockets.NetworkStream> インスタンスのストリームからフラッシュされた後に完了します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-361">The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Sockets.NetworkStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-362">ストリームで使用できるデータ長を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-362">Gets the length of the data available on the stream.</span></span> <span data-ttu-id="d6e9c-363">このプロパティは現在サポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-363">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="d6e9c-364">ストリームで使用できるデータ長。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-364">The length of the data available on the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6e9c-365">このプロパティの使用。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-365">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Sockets.NetworkStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-366">ストリーム内の現在位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-366">Gets or sets the current position in the stream.</span></span> <span data-ttu-id="d6e9c-367">このプロパティは現在サポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-367">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="d6e9c-368">ストリームの現在の位置。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-368">The current position in the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6e9c-369">このプロパティの使用。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-369">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="networkStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-370"><see cref="T:System.Net.Sockets.NetworkStream" /> から読み取られたデータを格納するメモリの領域。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-370">A region of memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="d6e9c-371"><see cref="T:System.Net.Sockets.NetworkStream" /> からデータを読み取り、メモリ内のバイトのスパンに格納します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-371">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" /> and stores it to a span of bytes in memory.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-372"><see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-372">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-373">このメソッドは、`buffer` パラメーターで使用できるデータの量を読み取り、正常に読み取られたバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-373">This method reads as much data as is available into the `buffer` parameter and returns the number of bytes successfully read.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-374"><xref:System.Net.Sockets.NetworkStream.CanRead> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が読み取れるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-374">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="d6e9c-375">読み取ることができない <xref:System.Net.Sockets.NetworkStream> から読み取ろうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-375">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-376"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-376">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-377">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、 [Windows Sockets version 2 API エラーコード](/windows/desktop/winsock/windows-sockets-error-codes-2)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-377">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-378"><see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-378">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-379">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-379">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="d6e9c-380">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-380">-or-</span></span>

<span data-ttu-id="d6e9c-381">ネットワークからの読み取りでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-381">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-382"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-382">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 size) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="networkStream.Read (buffer, offset, size)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 size) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-383"><see cref="T:System.Byte" /> 型の配列。<see cref="T:System.Net.Sockets.NetworkStream" /> から読み取られたデータを格納するメモリ内の場所です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-383">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="d6e9c-384">データの格納を開始する <paramref name="buffer" /> 内の場所。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-384">The location in <paramref name="buffer" /> to begin storing the data to.</span></span></param>
        <param name="size"><span data-ttu-id="d6e9c-385"><see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-385">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="d6e9c-386"><see cref="T:System.Net.Sockets.NetworkStream" /> からデータを読み取り、バイト配列に格納します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-386">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" /> and stores it to a byte array.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-387"><see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-387">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-388">このメソッドは、データを `buffer` に読み取り、正常に読み取られたバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-388">This method reads data into `buffer` and returns the number of bytes successfully read.</span></span> <span data-ttu-id="d6e9c-389">`Read` 操作は、`size` パラメーターで指定されたバイト数まで、使用可能な限り多くのデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-389">The `Read` operation reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-390"><xref:System.Net.Sockets.NetworkStream.CanRead> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が読み取れるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-390">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="d6e9c-391">読み取ることができない <xref:System.Net.Sockets.NetworkStream> から読み取ろうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-391">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-392"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-392">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-393">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、 [Windows Sockets version 2 API エラーコード](/windows/desktop/winsock/windows-sockets-error-codes-2)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-393">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-394">次のコード例では、<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> を使用して、データを読み取ることができるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-394">The following code example uses <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> to determine if data is available to be read.</span></span> <span data-ttu-id="d6e9c-395">データが使用可能な場合は、<xref:System.Net.Sockets.NetworkStream>から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-395">If data is available, it reads from the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-396"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-396"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d6e9c-397"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-397"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-398">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-398">-or-</span></span> 
 <span data-ttu-id="d6e9c-399"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-399"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="d6e9c-400">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-400">-or-</span></span> 
 <span data-ttu-id="d6e9c-401"><paramref name="size" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-401"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-402">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-402">-or-</span></span> 
 <span data-ttu-id="d6e9c-403"><paramref name="size" /> が、<paramref name="buffer" /> から <paramref name="offset" /> を引いた長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-403"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-404"><see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-404">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-405">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-405">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="d6e9c-406">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-406">-or-</span></span>

<span data-ttu-id="d6e9c-407">ネットワークからの読み取りでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-407">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-408"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-408">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="d6e9c-409">ネットワーク上でストリームを使用する</span><span class="sxs-lookup"><span data-stu-id="d6e9c-409">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Readable">
      <MemberSignature Language="C#" Value="protected bool Readable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Readable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Readable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Readable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Readable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Readable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Readable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-410"><see cref="T:System.Net.Sockets.NetworkStream" /> を読み取ることができるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-410">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</span></span></summary>
        <value><span data-ttu-id="d6e9c-411"><see cref="T:System.Net.Sockets.NetworkStream" /> を読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-411"><see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d6e9c-412">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-412">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-413"><xref:System.Net.Sockets.NetworkStream.Readable%2A> プロパティを使用するには、<xref:System.Net.Sockets.NetworkStream> クラスから派生する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-413">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property.</span></span> <span data-ttu-id="d6e9c-414"><xref:System.Net.Sockets.NetworkStream.Readable%2A> が `true`場合、<xref:System.Net.Sockets.NetworkStream> は <xref:System.Net.Sockets.NetworkStream.Read%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-414">If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="d6e9c-415">また、パブリックにアクセス可能な <xref:System.Net.Sockets.NetworkStream.CanRead%2A> プロパティをチェックすることによって、<xref:System.Net.Sockets.NetworkStream> が読み取れるかどうかを判断することもできます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-415">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span>  
  
 <span data-ttu-id="d6e9c-416"><xref:System.Net.Sockets.NetworkStream.Readable%2A> プロパティは、<xref:System.Net.Sockets.NetworkStream> が初期化されるときに設定されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-416">The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-417">次のコード例では、`CanCommunicate` プロパティによって <xref:System.Net.Sockets.NetworkStream.Readable%2A> プロパティがチェックされ、<xref:System.Net.Sockets.NetworkStream> が読み取り可能かどうかが判断されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-417">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-418">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-418">The buffer to write the data to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="d6e9c-419">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-419">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="d6e9c-420"><see cref="T:System.Net.Sockets.NetworkStream" /> からデータを読み取り、非同期操作としてバイト メモリ範囲に格納します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-420">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" /> and stores it in a byte memory range as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-421">非同期の読み取り操作を表すタスク <see cref="T:System.Threading.Tasks.ValueTask`1" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-421">A <see cref="T:System.Threading.Tasks.ValueTask`1" /> that represents the asynchronous read operation.</span></span> <span data-ttu-id="d6e9c-422">その <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-422">The value of its <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> property contains the total number of bytes read into <paramref name="buffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="d6e9c-423">このメソッドは、`buffer` で使用できるデータの量を読み取り、正常に読み取られたバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-423">This method reads as much data as is available into `buffer` and returns the number of bytes successfully read.</span></span>

> [!NOTE]
>  <span data-ttu-id="d6e9c-424"><xref:System.Net.Sockets.NetworkStream.CanRead> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が読み取れるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-424">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="d6e9c-425">読み取ることができない <xref:System.Net.Sockets.NetworkStream> から読み取ろうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-425">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-426"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-426">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-427">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、 [Windows Sockets version 2 API エラーコード](/windows/desktop/winsock/windows-sockets-error-codes-2)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-427">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-428"><see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-428">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-429">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-429">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="d6e9c-430">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-430">-or-</span></span>

<span data-ttu-id="d6e9c-431">ネットワークからの読み取りでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-431">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-432"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-432">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-433">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-433">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="d6e9c-434">データの格納を開始する <paramref name="buffer" /> 内の場所。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-434">The location in <paramref name="buffer" /> to begin storing the data to.</span></span></param>
        <param name="size"><span data-ttu-id="d6e9c-435"><see cref="T:System.Net.Sockets.NetworkStream" /> から読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-435">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="d6e9c-436">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-436">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="d6e9c-437"><see cref="T:System.Net.Sockets.NetworkStream" /> からデータを読み取り、バイト配列の指定された範囲に非同期操作として格納します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-437">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" /> and stores it to a specified range of a byte array as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-438">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-438">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="d6e9c-439">その <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-439">The value of its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains the total number of bytes read into <paramref name="buffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-440">このメソッドは、データを `buffer` に読み取り、正常に読み取られたバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-440">This method reads data into `buffer` and returns the number of bytes successfully read.</span></span> <span data-ttu-id="d6e9c-441">`ReadAsync` 操作は、`size` パラメーターで指定されたバイト数まで、使用可能な限り多くのデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-441">The `ReadAsync` operation reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>

> [!NOTE]
>  <span data-ttu-id="d6e9c-442"><xref:System.Net.Sockets.NetworkStream.CanRead> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が読み取れるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-442">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="d6e9c-443">読み取ることができない <xref:System.Net.Sockets.NetworkStream> から読み取ろうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-443">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-444"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-444">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-445">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、 [Windows Sockets version 2 API エラーコード](/windows/desktop/winsock/windows-sockets-error-codes-2)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-445">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-446"><see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-446">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-447">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-447">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="d6e9c-448">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-448">-or-</span></span>

<span data-ttu-id="d6e9c-449">ネットワークからの読み取りでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-449">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-450"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-450">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="networkStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6e9c-451"><see cref="T:System.Net.Sockets.NetworkStream" /> から 1 バイトを読み取り、ストリーム内の位置を 1 バイト進めます。または、ストリームの末尾の場合は -1 を返します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-451">Reads a byte from the <see cref="T:System.Net.Sockets.NetworkStream" /> and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-452"><see langword="Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-452">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!NOTE]
>  <span data-ttu-id="d6e9c-453"><xref:System.Net.Sockets.NetworkStream.CanRead> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が読み取れるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-453">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead> property.</span></span> <span data-ttu-id="d6e9c-454">読み取ることができない <xref:System.Net.Sockets.NetworkStream> から読み取ろうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-454">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-455"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-455">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-456">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、 [Windows Sockets version 2 API エラーコード](/windows/desktop/winsock/windows-sockets-error-codes-2)のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-456">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-457"><see cref="T:System.Net.Sockets.NetworkStream" /> は読み取りをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-457">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support reading.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-458">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-458">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="d6e9c-459">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-459">-or-</span></span>

<span data-ttu-id="d6e9c-460">ネットワークからの読み取りでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-460">There is a failure reading from the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-461"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-461">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-462">読み取り操作がデータを待機する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-462">Gets or sets the amount of time that a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="d6e9c-463">読み取り操作が失敗するまでの経過時間 (ミリ秒単位) を指定する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-463">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails.</span></span> <span data-ttu-id="d6e9c-464">既定値は <see cref="F:System.Threading.Timeout.Infinite" /> で、読み取り操作がタイムアウトしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-464">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the read operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-465">読み取り操作が、このプロパティで指定された時間内に完了しない場合、読み取り操作は <xref:System.IO.IOException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-465">If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-466">このプロパティは、<xref:System.Net.Sockets.NetworkStream.Read%2A> メソッドを呼び出すことによって実行される同期読み取りのみに影響します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-466">This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="d6e9c-467">このプロパティは、<xref:System.Net.Sockets.NetworkStream.BeginRead%2A> メソッドを呼び出すことによって実行される非同期読み取りには影響しません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-467">This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-468">次のコード例では、ネットワークストリームの読み取りタイムアウトを10ミリ秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-468">The following code example sets the read time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d6e9c-469">指定した値が 0 以下のため <see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-469">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="networkStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="d6e9c-470">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-470">This parameter is not used.</span></span></param>
        <param name="origin"><span data-ttu-id="d6e9c-471">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-471">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="d6e9c-472">ストリームの現在位置を特定の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-472">Sets the current position of the stream to the given value.</span></span> <span data-ttu-id="d6e9c-473">このメソッドは現在サポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-473">This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-474">ストリーム内の位置。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-474">The position in the stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6e9c-475">このプロパティの使用。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-475">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="networkStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6e9c-476">このパラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-476">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="d6e9c-477">ストリームの長さを設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-477">Sets the length of the stream.</span></span> <span data-ttu-id="d6e9c-478">このメソッドは、常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-478">This method always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6e9c-479">このプロパティの使用。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-479">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Socket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Socket" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Socket As Socket" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Socket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Socket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.NetworkStream.Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-480">基になる <see cref="T:System.Net.Sockets.Socket" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-480">Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="d6e9c-481">基になるネットワーク接続を表す <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-481">A <see cref="T:System.Net.Sockets.Socket" /> that represents the underlying network connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-482"><xref:System.Net.Sockets.NetworkStream> から派生するクラスは、このプロパティを使用して、基になる <xref:System.Net.Sockets.Socket>を取得できます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-482">Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="d6e9c-483">によって提供さ <xref:System.Net.Sockets.NetworkStream> れるアクセス権を超えてアクセスする必要がある場合は、<xref:System.Net.Sockets.NetworkStream.Socket%2A> プロパティから返される基になる <xref:System.Net.Sockets.Socket> を使用します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-483">Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-484">このプロパティは、このクラスまたは派生クラスを介してのみアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-484">This property is accessible only through this class or a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-485">次のコード例では、基になる <xref:System.Net.Sockets.Socket> を取得して、アクティブな接続を確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-485">The following code example retrieves the underlying <xref:System.Net.Sockets.Socket> to verify an active connection.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6e9c-486"><see cref="T:System.Net.Sockets.NetworkStream" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-486">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="d6e9c-487">`Dispose` を使い終わったら <xref:System.Net.Sockets.NetworkStream> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-487">Call `Dispose` when you are finished using the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-488">`Dispose`メソッドによって、<xref:System.Net.Sockets.NetworkStream> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-488">The `Dispose` method leaves the <xref:System.Net.Sockets.NetworkStream> in an unusable state.</span></span> <span data-ttu-id="d6e9c-489">`Dispose`呼び出し後は、<xref:System.Net.Sockets.NetworkStream>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Net.Sockets.NetworkStream> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-489">After calling `Dispose`, you must release all references to the <xref:System.Net.Sockets.NetworkStream> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.NetworkStream> was occupying.</span></span> <span data-ttu-id="d6e9c-490">Dispose メソッドの使用方法の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-490">For more information about using the Dispose method, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE]
> <span data-ttu-id="d6e9c-491"><xref:System.Net.Sockets.NetworkStream>への最後の参照を解放する前に、必ず`Dispose`を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-491">Always call `Dispose` before you release your last reference to the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="d6e9c-492">そうしないと、ガベージコレクターが <xref:System.Net.Sockets.NetworkStream> オブジェクトの Finalize メソッドを呼び出すまで、使用しているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-492">Otherwise, the resources it is using are not freed until the garbage collector calls the <xref:System.Net.Sockets.NetworkStream> object's Finalize method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="networkStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-493"><see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むデータ。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-493">The data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="d6e9c-494">読み取り専用のバイト スパンから <see cref="T:System.Net.Sockets.NetworkStream" /> にデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-494">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />  from a read-only byte span.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="d6e9c-495">このメソッドは、`buffer` のすべてのバイトをネットワークに送信します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-495">This method sends all bytes in `buffer` to the network.</span></span> <span data-ttu-id="d6e9c-496">`Write` メソッドは、要求されたバイト数が送信されるか、<xref:System.Net.Sockets.SocketException> がスローされるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-496">The `Write` method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>

> [!NOTE]
> <span data-ttu-id="d6e9c-497"><xref:System.Net.Sockets.NetworkStream.CanWrite> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が書き込み可能かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-497">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="d6e9c-498">書き込み可能でない <xref:System.Net.Sockets.NetworkStream> に書き込もうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-498">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="d6e9c-499"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-499">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-500">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、Windows Sockets version 2 API エラーコードのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-500">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-501"><see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-501">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-502">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-502">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="d6e9c-503">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-503">-or-</span></span>

<span data-ttu-id="d6e9c-504">ネットワークへの書き込み中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-504">There was a failure while writing to the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-505"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-505">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="networkStream.Write (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-506"><see cref="T:System.Byte" /> に書き込むデータを格納する <see cref="T:System.Net.Sockets.NetworkStream" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-506">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="d6e9c-507">データの書き込みを開始する <paramref name="buffer" /> 内の場所。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-507">The location in <paramref name="buffer" /> from which to start writing data.</span></span></param>
        <param name="size"><span data-ttu-id="d6e9c-508"><see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-508">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="d6e9c-509">指定された範囲のバイト配列から <see cref="T:System.Net.Sockets.NetworkStream" /> にデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-509">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" /> from a specified range of a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="d6e9c-510">このメソッドは、指定された `offset` から開始し、`buffer` のコンテンツからネットワークに `size` バイトを送信します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-510">This method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network.</span></span> <span data-ttu-id="d6e9c-511">`Write` メソッドは、要求されたバイト数が送信されるか、<xref:System.Net.Sockets.SocketException> がスローされるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-511">The `Write` method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> 
  
> [!NOTE]
> <span data-ttu-id="d6e9c-512"><xref:System.Net.Sockets.NetworkStream.CanWrite> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が書き込み可能かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-512">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="d6e9c-513">書き込み可能でない <xref:System.Net.Sockets.NetworkStream> に書き込もうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-513">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="d6e9c-514"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-514">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-515">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、Windows Sockets version 2 API エラーコードのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-515">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

  
## Examples  
 <span data-ttu-id="d6e9c-516">次のコード例では、<xref:System.Net.Sockets.NetworkStream> が書き込み可能かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-516">The following code example checks to see whether the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="d6e9c-517">の場合は、<xref:System.Net.Sockets.NetworkStream.Write%2A> を使用して、小さいメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-517">If it is, then <xref:System.Net.Sockets.NetworkStream.Write%2A> is used to write a small message.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-518"><paramref name="buffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-518">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d6e9c-519"><paramref name="offset" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-519">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-520">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-520">-or-</span></span> 
<span data-ttu-id="d6e9c-521"><paramref name="offset" /> パラメーターが <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-521">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="d6e9c-522">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-522">-or-</span></span> 
<span data-ttu-id="d6e9c-523"><paramref name="size" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-523">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-524">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-524">-or-</span></span> 
<span data-ttu-id="d6e9c-525"><paramref name="size" /> パラメーターが、<paramref name="buffer" /> パラメーターの値を引いた <paramref name="offset" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-525">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-526"><see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-526">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-527">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-527">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="d6e9c-528">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-528">-or-</span></span>

<span data-ttu-id="d6e9c-529">ネットワークへの書き込み中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-529">There was a failure while writing to the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-530"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-530">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="Writeable">
      <MemberSignature Language="C#" Value="protected bool Writeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Writeable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Writeable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Writeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Writeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Writeable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Writeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-531"><see cref="T:System.Net.Sockets.NetworkStream" /> が書き込み可能かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-531">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</span></span></summary>
        <value><span data-ttu-id="d6e9c-532">ストリームにデータを書き込むことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-532"><see langword="true" /> if data can be written to the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d6e9c-533">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-533">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-534"><xref:System.Net.Sockets.NetworkStream.Writeable%2A> プロパティを使用するには、<xref:System.Net.Sockets.NetworkStream> クラスから派生する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-534">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property.</span></span> <span data-ttu-id="d6e9c-535"><xref:System.Net.Sockets.NetworkStream.Writeable%2A> が `true`場合、<xref:System.Net.Sockets.NetworkStream> は <xref:System.Net.Sockets.NetworkStream.Write%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-535">If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="d6e9c-536">また、パブリックにアクセス可能な <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> プロパティをチェックすることによって、<xref:System.Net.Sockets.NetworkStream> が書き込み可能かどうかを判断することもできます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-536">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span>  
  
 <span data-ttu-id="d6e9c-537"><xref:System.Net.Sockets.NetworkStream.Writeable%2A> プロパティは、<xref:System.Net.Sockets.NetworkStream> が初期化されるときに設定されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-537">The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-538">次のコード例では、`CanCommunicate` プロパティによって <xref:System.Net.Sockets.NetworkStream.Writeable%2A> プロパティがチェックされ、<xref:System.Net.Sockets.NetworkStream> が書き込み可能かどうかが判断されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-538">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="networkStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-539"><see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むデータが含まれるメモリの領域。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-539">A region of memory that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="d6e9c-540">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-540">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="d6e9c-541">読み取り専用メモリのバイト メモリ範囲から <see cref="T:System.Net.Sockets.NetworkStream" /> に、データを非同期操作として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-541">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" /> from a read-only memory byte memory range as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-542">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-542">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks 
<span data-ttu-id="d6e9c-543">このメソッドは、`buffer` のすべてのバイトをネットワークに送信します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-543">This method sends all bytes in `buffer` to the network.</span></span>

> [!NOTE]
> <span data-ttu-id="d6e9c-544"><xref:System.Net.Sockets.NetworkStream.CanWrite> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が書き込み可能かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-544">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="d6e9c-545">書き込み可能でない <xref:System.Net.Sockets.NetworkStream> に書き込もうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-545">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="d6e9c-546"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-546">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-547">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、Windows Sockets version 2 API エラーコードのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-547">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-548"><see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-548">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-549">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-549">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="d6e9c-550">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-550">-or-</span></span>

<span data-ttu-id="d6e9c-551">ネットワークへの書き込み中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-551">There was a failure while writing to the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-552"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-552">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.WriteAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d6e9c-553"><see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むデータを含むバイト配列。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-553">A byte array that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="d6e9c-554">データの書き込みを開始する <paramref name="buffer" /> 内の場所。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-554">The location in <paramref name="buffer" /> from which to start writing data.</span></span></param>
        <param name="size"><span data-ttu-id="d6e9c-555"><see cref="T:System.Net.Sockets.NetworkStream" /> に書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-555">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="d6e9c-556">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-556">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="d6e9c-557">バイト配列の指定された範囲から <see cref="T:System.Net.Sockets.NetworkStream" /> に、データを非同期操作として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-557">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" /> from the specified range of a byte array as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="d6e9c-558">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-558">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks 
<span data-ttu-id="d6e9c-559">このメソッドは、指定された `offset` から開始し、`buffer` のコンテンツからネットワークに `size` バイトを送信します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-559">This method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network.</span></span>

> [!NOTE]
> <span data-ttu-id="d6e9c-560"><xref:System.Net.Sockets.NetworkStream.CanWrite> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が書き込み可能かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-560">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="d6e9c-561">書き込み可能でない <xref:System.Net.Sockets.NetworkStream> に書き込もうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-561">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="d6e9c-562"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-562">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-563">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、Windows Sockets version 2 API エラーコードのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-563">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d6e9c-564"><paramref name="buffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-564">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d6e9c-565"><paramref name="offset" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-565">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-566">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-566">-or-</span></span> 
<span data-ttu-id="d6e9c-567"><paramref name="offset" /> パラメーターが <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-567">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="d6e9c-568">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-568">-or-</span></span> 
<span data-ttu-id="d6e9c-569"><paramref name="size" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-569">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="d6e9c-570">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-570">-or-</span></span> 
<span data-ttu-id="d6e9c-571"><paramref name="size" /> パラメーターが、<paramref name="buffer" /> パラメーターの値を引いた <paramref name="offset" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-571">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-572"><see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-572">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-573">ネットワークへの書き込み中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-573">There was a failure while writing to the network.</span></span>  
  
 <span data-ttu-id="d6e9c-574">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-574">-or-</span></span>  
  
 <span data-ttu-id="d6e9c-575">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-575">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-576"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-576">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="networkStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6e9c-577">ストリームに書き込むバイト。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-577">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="d6e9c-578"><see cref="T:System.Net.Sockets.NetworkStream" /> の現在位置にバイトを書き込み、ストリームの位置を 1 バイト進めます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-578">Writes a byte to the current position in the <see cref="T:System.Net.Sockets.NetworkStream" /> and advances the position within the stream by one byte.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

> [!NOTE]
> <span data-ttu-id="d6e9c-579"><xref:System.Net.Sockets.NetworkStream.CanWrite> プロパティを呼び出すことによって <xref:System.Net.Sockets.NetworkStream> が書き込み可能かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-579">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by calling the <xref:System.Net.Sockets.NetworkStream.CanWrite> property.</span></span> <span data-ttu-id="d6e9c-580">書き込み可能でない <xref:System.Net.Sockets.NetworkStream> に書き込もうとすると、<xref:System.InvalidOperationException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-580">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.InvalidOperationException>.</span></span>

> [!NOTE]
> <span data-ttu-id="d6e9c-581"><xref:System.IO.IOException>を受け取った場合は、<xref:System.Exception.InnerException> プロパティを調べて、<xref:System.Net.Sockets.SocketException>によって発生したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-581">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="d6e9c-582">その場合は、<xref:System.Net.Sockets.SocketException.ErrorCode> プロパティを使用して特定のエラーコードを取得し、エラーの詳細な説明については、Windows Sockets version 2 API エラーコードのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-582">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6e9c-583"><see cref="T:System.Net.Sockets.NetworkStream" /> では、書き込みがサポートされません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-583">The <see cref="T:System.Net.Sockets.NetworkStream" /> does not support writing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="d6e9c-584">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-584">An error occurred when accessing the socket.</span></span>

<span data-ttu-id="d6e9c-585">- または -</span><span class="sxs-lookup"><span data-stu-id="d6e9c-585">-or-</span></span>

<span data-ttu-id="d6e9c-586">ネットワークへの書き込み中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-586">There was a failure while writing to the network.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d6e9c-587"><see cref="T:System.Net.Sockets.NetworkStream" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-587">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6e9c-588">書き込み操作がデータを待機する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-588">Gets or sets the amount of time that a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="d6e9c-589">書き込み操作が失敗するまでの経過時間 (ミリ秒単位) を指定する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-589">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails.</span></span> <span data-ttu-id="d6e9c-590">既定値は <see cref="F:System.Threading.Timeout.Infinite" /> で、書き込み操作がタイムアウトしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-590">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the write operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6e9c-591">書き込み操作がこのプロパティで指定された時間内に完了しない場合、書き込み操作は <xref:System.IO.IOException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-591">If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6e9c-592">このプロパティは、<xref:System.Net.Sockets.NetworkStream.Write%2A> メソッドを呼び出すことによって実行される同期書き込み操作にのみ影響します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-592">This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="d6e9c-593">このプロパティは、<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> メソッドを呼び出すことによって実行される非同期書き込みには影響しません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-593">This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6e9c-594">次のコード例では、ネットワークストリームの書き込みタイムアウトを10ミリ秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-594">The following code example sets the write time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]
 [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d6e9c-595">指定した値が 0 以下のため <see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="d6e9c-595">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
