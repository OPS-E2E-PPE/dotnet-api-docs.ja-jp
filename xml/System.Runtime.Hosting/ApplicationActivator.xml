<Type Name="ApplicationActivator" FullName="System.Runtime.Hosting.ApplicationActivator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b145de3c58e44a2ba47ce9c3ece9c43b8d15bd4c" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78690697" /></Metadata><TypeSignature Language="C#" Value="public class ApplicationActivator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationActivator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Hosting.ApplicationActivator" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationActivator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationActivator" />
  <TypeSignature Language="F#" Value="type ApplicationActivator = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="22114-101">マニフェストに基づくアセンブリのアクティベーションの基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="22114-101">Provides the base class for the activation of manifest-based assemblies.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22114-102">すべてのアクティベーション呼び出しがルーティングされる各 <xref:System.AppDomain> には、<xref:System.Runtime.Hosting.ApplicationActivator> クラスの1つの指定されたインスタンスがあります。</span><span class="sxs-lookup"><span data-stu-id="22114-102">There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all activation calls are routed.</span></span> <span data-ttu-id="22114-103">現在の <xref:System.AppDomain> の <xref:System.AppDomainManager> は、この目的のために独自のカスタム <xref:System.Runtime.Hosting.ApplicationActivator> を提供できます。</span><span class="sxs-lookup"><span data-stu-id="22114-103">The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator> for this purpose.</span></span> <span data-ttu-id="22114-104">カスタム <xref:System.Runtime.Hosting.ApplicationActivator> が指定されていない場合は、既定の <xref:System.Runtime.Hosting.ApplicationActivator> のインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="22114-104">If a custom <xref:System.Runtime.Hosting.ApplicationActivator> is not provided, an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created.</span></span>  
  
 <span data-ttu-id="22114-105">次の手順では、既定の <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> メソッドの実装の動作について説明します。</span><span class="sxs-lookup"><span data-stu-id="22114-105">The following steps describe the behavior of the default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method implementation:</span></span>  
  
1.  <span data-ttu-id="22114-106">アクティブ化するアドインの <xref:System.ActivationContext> が、現在のドメインの <xref:System.ActivationContext> と一致するかどうかを確認します。それ以外の場合は、手順 2. に進みます。</span><span class="sxs-lookup"><span data-stu-id="22114-106">Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2.</span></span> <span data-ttu-id="22114-107">それ以外の場合、はアセンブリを実行し、オブジェクトハンドルにラップされた結果を返します。</span><span class="sxs-lookup"><span data-stu-id="22114-107">Otherwise, executes the assembly and returns the result wrapped in an object handle.</span></span>  
  
2.  <span data-ttu-id="22114-108">新しい <xref:System.AppDomain>でアドインをアクティブにします。</span><span class="sxs-lookup"><span data-stu-id="22114-108">Activates the add-in in a new <xref:System.AppDomain>.</span></span> <span data-ttu-id="22114-109">アドインの <xref:System.Runtime.Hosting.ActivationArguments> を使用して新しい <xref:System.AppDomain> を初期化するには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="22114-109">The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in.</span></span>  
  
    1.  <span data-ttu-id="22114-110">アドインのアクティベーションコンテキストを格納している <xref:System.Runtime.Hosting.ActivationArguments> オブジェクトを使用して、新しい <xref:System.AppDomainSetup> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="22114-110">Creates a new <xref:System.AppDomainSetup> object using an <xref:System.Runtime.Hosting.ActivationArguments> object containing the activation context for the add-in.</span></span>  
  
    2.  <span data-ttu-id="22114-111"><xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> メソッドを呼び出して、<xref:System.AppDomainSetup> オブジェクトを使用して新しいドメインを作成します。</span><span class="sxs-lookup"><span data-stu-id="22114-111">Calls the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method to create a new domain using the <xref:System.AppDomainSetup> object.</span></span>  
  
    3.  <span data-ttu-id="22114-112"><xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> メソッドは、<xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType> メソッドを呼び出して、アドインの <xref:System.Security.Policy.ApplicationTrust> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="22114-112">The <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method calls the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=nameWithType> method to acquire an <xref:System.Security.Policy.ApplicationTrust> object for the add-in.</span></span> <span data-ttu-id="22114-113"><xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> プロパティが `true`を返した場合は、アドインが実行されます。</span><span class="sxs-lookup"><span data-stu-id="22114-113">If the <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property returns `true`, the add-in is executed.</span></span> <span data-ttu-id="22114-114">それ以外の場合、<xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> は、実行のアクセス許可を取得できなかったことを示す <xref:System.Security.Policy.PolicyException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="22114-114">If not, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> throws a <xref:System.Security.Policy.PolicyException> indicating that execution permission could not be acquired.</span></span>  
  
    4.  <span data-ttu-id="22114-115">アドインの実行が信頼されている場合は、アドインの <xref:System.ActivationContext> 用に新しい <xref:System.AppDomain> が作成されて構成され、アドインが読み込まれて実行されます。</span><span class="sxs-lookup"><span data-stu-id="22114-115">If the add-in is trusted to run, then a new <xref:System.AppDomain> is created and configured for the <xref:System.ActivationContext> of the add-in, and the add-in is loaded and executed.</span></span>  
  
    5.  <span data-ttu-id="22114-116">アドインのアクティブ化の結果が返され、オブジェクトハンドルにラップされます。</span><span class="sxs-lookup"><span data-stu-id="22114-116">The result of the activation of the add-in is returned, wrapped in an object handle.</span></span>  
  
 <span data-ttu-id="22114-117">カスタムアクティベーターを使用すると、特定の一連の状況に対してアドインのアクティベーションをカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="22114-117">A custom activator can tailor the activation of an add-in to a particular set of circumstances.</span></span> <span data-ttu-id="22114-118">たとえば、カスタムアクティベーターは、新しいドメインを毎回作成するのではなく、このアドインをアクティブ化するために既存の <xref:System.AppDomain> を見つけることができます。</span><span class="sxs-lookup"><span data-stu-id="22114-118">For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time.</span></span>  
  
 <span data-ttu-id="22114-119">次の手順では、既存の <xref:System.AppDomain>でアドインをアクティブ化するカスタム <xref:System.Runtime.Hosting.ApplicationActivator> の動作について説明します。</span><span class="sxs-lookup"><span data-stu-id="22114-119">The following steps describe the behavior of a custom <xref:System.Runtime.Hosting.ApplicationActivator> that activates an add-in in an existing <xref:System.AppDomain>:</span></span>  
  
1.  <span data-ttu-id="22114-120">カスタムアクティベーターは、アクティブ化されているアドインと同じ <xref:System.ActivationContext> を持つドメインを検索します。</span><span class="sxs-lookup"><span data-stu-id="22114-120">The custom activator finds a domain that has the same <xref:System.ActivationContext> as the add-in that is being activated.</span></span>  
  
2.  <span data-ttu-id="22114-121">プロセスの前に <xref:System.ActivationContext> が見られていない場合、カスタムアクティベーターは <xref:System.AppDomain.CreateDomain%2A> メソッドを直接呼び出すか、このアクティビティを基底クラスの <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> に委任することによって、この <xref:System.ActivationContext> の新しい <xref:System.AppDomain> を作成します。</span><span class="sxs-lookup"><span data-stu-id="22114-121">If the <xref:System.ActivationContext> has never been seen before in the process, the custom activator creates a new <xref:System.AppDomain> for this <xref:System.ActivationContext> by calling the <xref:System.AppDomain.CreateDomain%2A> method directly, or delegating this activity to the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> in the base class.</span></span>  
  
3.  <span data-ttu-id="22114-122">同じ <xref:System.ActivationContext>を持つ既存のドメインがある場合、アクティベーターは、ターゲットドメインの <xref:System.Runtime.Hosting.ApplicationActivator> に <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> メソッド呼び出しを委任できます。</span><span class="sxs-lookup"><span data-stu-id="22114-122">If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the <xref:System.Runtime.Hosting.ApplicationActivator> in the target domain.</span></span> <span data-ttu-id="22114-123">これは、ターゲット <xref:System.AppDomain>に存在する <xref:System.Runtime.Hosting.ApplicationActivator> のドメイン間呼び出しであることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="22114-123">Note that this would be a cross-domain call to an <xref:System.Runtime.Hosting.ApplicationActivator> that resides in the target <xref:System.AppDomain>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22114-124">次のコード例は、マニフェストベースのアプリケーションの現在の <xref:System.AppDomain.DomainManager%2A> から <xref:System.Runtime.Hosting.ApplicationActivator> オブジェクトを取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="22114-124">The following code example shows how to obtain an <xref:System.Runtime.Hosting.ApplicationActivator> object from the current <xref:System.AppDomain.DomainManager%2A> for a manifest-based application.</span></span>  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#1)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationActivator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationActivator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22114-125"><see cref="T:System.Runtime.Hosting.ApplicationActivator" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="22114-125">Initializes a new instance of the <see cref="T:System.Runtime.Hosting.ApplicationActivator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22114-126">アプリケーションを識別するアクティベーション コンテキストを使用して、アクティブ化するアプリケーションのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="22114-126">Creates an instance of the application to be activated, using an activation context that identifies the application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (activationContext As ActivationContext) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="applicationActivator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="22114-127">アクティブ化するアプリケーションを識別する <see cref="T:System.ActivationContext" />。</span><span class="sxs-lookup"><span data-stu-id="22114-127">An <see cref="T:System.ActivationContext" /> that identifies the application to activate.</span></span></param>
        <summary><span data-ttu-id="22114-128">指定されたアクティベーション コンテキストを使用して、アクティブ化するアプリケーションのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="22114-128">Creates an instance of the application to be activated, using the specified activation context.</span></span></summary>
        <returns><span data-ttu-id="22114-129">アプリケーション実行の戻り値のラッパーである <see cref="T:System.Runtime.Remoting.ObjectHandle" />。</span><span class="sxs-lookup"><span data-stu-id="22114-129">An <see cref="T:System.Runtime.Remoting.ObjectHandle" /> that is a wrapper for the return value of the application execution.</span></span> <span data-ttu-id="22114-130">実際のオブジェクトにアクセスするには、戻り値のラップを解除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="22114-130">The return value must be unwrapped to access the real object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22114-131">このメソッドは、アプリケーションのマニフェストに基づくアクティベーションを目的としています。</span><span class="sxs-lookup"><span data-stu-id="22114-131">This method is intended for the manifest-based activation of applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22114-132"><paramref name="activationContext" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="22114-132"><paramref name="activationContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (activationContext As ActivationContext, activationCustomData As String()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle&#xA;override this.CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="applicationActivator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="22114-133">アクティブ化するアプリケーションを識別する <see cref="T:System.ActivationContext" />。</span><span class="sxs-lookup"><span data-stu-id="22114-133">An <see cref="T:System.ActivationContext" /> that identifies the application to activate.</span></span></param>
        <param name="activationCustomData"><span data-ttu-id="22114-134">カスタムのアクティベーション データ。</span><span class="sxs-lookup"><span data-stu-id="22114-134">Custom activation data.</span></span></param>
        <summary><span data-ttu-id="22114-135">指定されたアクティベーション コンテキストとカスタム アクティベーション データを使用して、アクティブ化するアプリケーションのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="22114-135">Creates an instance of the application to be activated, using the specified activation context  and custom activation data.</span></span></summary>
        <returns><span data-ttu-id="22114-136">アプリケーション実行の戻り値のラッパーである <see cref="T:System.Runtime.Remoting.ObjectHandle" />。</span><span class="sxs-lookup"><span data-stu-id="22114-136">An <see cref="T:System.Runtime.Remoting.ObjectHandle" /> that is a wrapper for the return value of the application execution.</span></span> <span data-ttu-id="22114-137">実際のオブジェクトにアクセスするには、戻り値のラップを解除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="22114-137">The return value must be unwrapped to access the real object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22114-138">このメソッドは、アプリケーションのマニフェストに基づくアクティベーションを目的としています。</span><span class="sxs-lookup"><span data-stu-id="22114-138">This method is intended for the manifest-based activation of applications.</span></span> <span data-ttu-id="22114-139">アクティベーションデータは、URL のクエリ文字列部分などの情報で構成されます。</span><span class="sxs-lookup"><span data-stu-id="22114-139">The activation data consists of information such as the query string portion of a URL.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22114-140"><paramref name="activationContext" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="22114-140"><paramref name="activationContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHelper">
      <MemberSignature Language="C#" Value="protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceHelper(class System.AppDomainSetup adSetup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateInstanceHelper (adSetup As AppDomainSetup) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceHelper(AppDomainSetup ^ adSetup);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceHelper : AppDomainSetup -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper adSetup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adSetup" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="adSetup"><span data-ttu-id="22114-141">アクティブ化するアプリケーションを識別する <see cref="T:System.AppDomainSetup" /> プロパティを持つ <see cref="P:System.AppDomainSetup.ActivationArguments" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22114-141">An <see cref="T:System.AppDomainSetup" /> object whose <see cref="P:System.AppDomainSetup.ActivationArguments" /> property identifies the application to activate.</span></span></param>
        <summary><span data-ttu-id="22114-142">指定した <see cref="T:System.AppDomainSetup" /> オブジェクトを使用してアプリケーションのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="22114-142">Creates an instance of an application using the specified <see cref="T:System.AppDomainSetup" /> object.</span></span></summary>
        <returns><span data-ttu-id="22114-143">アプリケーション実行の戻り値のラッパーである <see cref="T:System.Runtime.Remoting.ObjectHandle" />。</span><span class="sxs-lookup"><span data-stu-id="22114-143">An <see cref="T:System.Runtime.Remoting.ObjectHandle" /> that is a wrapper for the return value of the application execution.</span></span> <span data-ttu-id="22114-144">実際のオブジェクトにアクセスするには、戻り値のラップを解除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="22114-144">The return value must be unwrapped to access the real object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22114-145">このメソッドは、アプリケーションのマニフェストに基づくアクティベーションを目的としています。</span><span class="sxs-lookup"><span data-stu-id="22114-145">This method is intended for the manifest-based activation of applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22114-146"><paramref name="adSetup" /> の <see cref="P:System.AppDomainSetup.ActivationArguments" /> プロパティが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22114-146">The <see cref="P:System.AppDomainSetup.ActivationArguments" /> property of <paramref name="adSetup" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Policy.PolicyException"><span data-ttu-id="22114-147">現在のアプリケーション ドメインのポリシー設定では、このアプリケーションを実行するためのアクセス許可が提供されないため、アプリケーションのインスタンス実行がエラーになりました。</span><span class="sxs-lookup"><span data-stu-id="22114-147">The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
