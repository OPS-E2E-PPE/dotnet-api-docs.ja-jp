<Type Name="MetaData" FullName="System.Runtime.Remoting.MetadataServices.MetaData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="952ec97226a8800207df44d21438cd68d1badaab" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78830789" /></Metadata><TypeSignature Language="C#" Value="public class MetaData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.MetadataServices.MetaData" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaData" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaData" />
  <TypeSignature Language="F#" Value="type MetaData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XML スキーマを処理できるメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.MetadataServices.MetaData> クラスには、型情報から Web サービス記述言語 (WSDL) を生成し、XML スキーマをコードストリームに変換し、コードストリームをアセンブリにコンパイルするためのメソッドが用意されています。 この機能は、 [Soapsuds.exe ツール (soapsuds.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/xd176a6c(v=vs.100))にも含まれています。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" /> のインスタンスを作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceFileToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceFileToAssemblyFile (string codePath, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceFileToAssemblyFile(string codePath, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceFileToAssemblyFile (codePath As String, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceFileToAssemblyFile(System::String ^ codePath, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceFileToAssemblyFile : string * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile (codePath, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePath" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codePath">ソース コードを格納しているファイルへのパス。</param>
        <param name="assemblyPath">新しいランタイム アセンブリが生成される場所。</param>
        <param name="strongNameFilename">新しいアセンブリにコンパイルする厳密な名前。 <see cref="F:System.String.Empty" /> を指定できます。</param>
        <summary>指定したコードのソース ファイルをランタイム アセンブリ ファイルにコンパイルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 厳密な名前の詳細については、「[厳密な名前付きアセンブリ](~/docs/standard/assembly/strong-named.md)」を参照してください。  
  
> [!NOTE]
>  指定した名前のファイルが既に存在する場合は上書きされます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile%2A> メソッドを使用して、指定した型のスキーマ定義を、指定された名前を持つランタイムアセンブリに書き込む方法を示します。 ここに変換される `CsSource.cs` C#ファイルには、ソースコードが含まれています。  
  
 [!code-cpp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceStreamToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceStreamToAssemblyFile (System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceStreamToAssemblyFile(class System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList As ArrayList, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceStreamToAssemblyFile(System::Collections::ArrayList ^ outCodeStreamList, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceStreamToAssemblyFile : System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outCodeStreamList">ソース コードを含むストリームの <see cref="T:System.Collections.ArrayList" />。</param>
        <param name="assemblyPath">新しいランタイム アセンブリが生成される場所。</param>
        <param name="strongNameFilename">新しいランタイム アセンブリにコンパイルする厳密な名前。 <see cref="F:System.String.Empty" /> を指定できます。</param>
        <summary>指定したコードのソース ストリームをランタイム アセンブリ ファイルにコンパイルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 厳密な名前の詳細については、「[厳密な名前付きアセンブリ](~/docs/standard/assembly/strong-named.md)」を参照してください。  
  
> [!NOTE]
>  指定した名前のファイルが既に存在する場合は上書きされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertSchemaStreamToCodeSourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したスキーマ定義を C# ソース コード プロキシに変換します。その後、C# ソース コード プロキシはランタイム プロキシ アセンブリにコンパイルできます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="clientProxy">生成するプロキシの種類を示します。 <see langword="true" /> の場合、チャネルを自動的に読み込み、リモート オブジェクトのすべてのメソッドを公開し、チャネル プロパティへのアクセスを提供する単純なプロキシ (ラップされたプロキシとも呼ばれる) を生成します。 <see langword="false" /> の場合、リモート オブジェクトのすべてのメソッドを公開する透過プロキシを生成します。</param>
        <param name="outputDirectory">プロキシを使用して新しい C# ソース コード ファイルが作成されたディレクトリ。</param>
        <param name="inputStream">Web サービス記述言語 (WSDL: Web Services Description Language) 形式のスキーマ定義が含まれている入力ストリーム。</param>
        <param name="outCodeStreamList">生成されたコード ストリームのファイル名のリスト。 <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> メソッドは、複数のソース コード ストリームを作成できます。</param>
        <summary>指定したスキーマ定義を C# プロキシ ソース コードに変換します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  指定した名前のファイルが既に存在する場合は、上書きされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy">生成するプロキシの種類を示します。 <see langword="true" /> の場合、チャネルを自動的に読み込み、リモート オブジェクトのすべてのメソッドを公開し、チャネル プロパティへのアクセスを提供する単純なプロキシ (ラップされたプロキシとも呼ばれる) を生成します。 <see langword="false" /> の場合、リモート オブジェクトのすべてのメソッドを公開する透過プロキシを生成します。</param>
        <param name="outputDirectory">プロキシを使用して新しい C# ソース コード ファイルが作成されたディレクトリ。</param>
        <param name="inputStream">Web サービス記述言語 (WSDL: Web Services Description Language) 形式のスキーマ定義が含まれている入力ストリーム。</param>
        <param name="outCodeStreamList">生成されたコード ストリームのファイル名のリスト。 <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> メソッドは、複数のソース コード ストリームを作成できます。</param>
        <param name="proxyUrl">新しいプロキシが表すターゲット リモート オブジェクトが存在する URL。</param>
        <summary>指定したスキーマ定義を、指定した URL にあるリモート オブジェクトの C# プロキシ ソース コードに変換します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  指定した名前のファイルが既に存在する場合は、上書きされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String, proxyNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl, System::String ^ proxyNamespace);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl, proxyNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
        <Parameter Name="proxyNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy">生成するプロキシの種類を示します。 <see langword="true" /> の場合、チャネルを自動的に読み込み、リモート オブジェクトのすべてのメソッドを公開し、チャネル プロパティへのアクセスを提供する単純なプロキシ (ラップされたプロキシとも呼ばれる) を生成します。 <see langword="false" /> の場合、リモート オブジェクトのすべてのメソッドを公開する透過プロキシを生成します。</param>
        <param name="outputDirectory">プロキシを使用して新しい C# ソース コード ファイルが作成されたディレクトリ。</param>
        <param name="inputStream">Web サービス記述言語 (WSDL: Web Services Description Language) 形式のスキーマ定義が含まれている入力ストリーム。</param>
        <param name="outCodeStreamList">生成されたコード ストリームのファイル名のリスト。 <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> メソッドは、複数のソース コード ストリームを作成できます。</param>
        <param name="proxyUrl">新しいプロキシが表すターゲット リモート オブジェクトが存在する URL。</param>
        <param name="proxyNamespace">新しく作成されたプロキシの名前空間。</param>
        <summary>指定したスキーマ定義を、提供されたクラスの名前空間の、指定した URL にあるリモート オブジェクトの C# プロキシ ソース コードに変換します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  指定した名前のファイルが既に存在する場合は、上書きされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToFile">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した型を XML スキーマに変換し、ファイルに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (System.Runtime.Remoting.MetadataServices.ServiceType[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Runtime.Remoting.MetadataServices.ServiceType[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertTypesToSchemaToFile (types As ServiceType(), sdlType As SdlType, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types">XML スキーマに変換する <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> インスタンス。</param>
        <param name="sdlType">XML スキーマに使用する、サービス記述言語の種類。</param>
        <param name="path">XML ファイルのパス。</param>
        <summary>指定したサービス型を XML スキーマに変換し、名前で指定したファイルに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.MetadataServices.ServiceType> インスタンスを使用すると、URL をオブジェクト <xref:System.Type>に関連付けることができます。  
  
> [!NOTE]
>  指定した名前のファイルが既に存在する場合は上書きされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertTypesToSchemaToFile (types As Type(), sdlType As SdlType, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types">XML スキーマに変換するオブジェクト型。</param>
        <param name="sdlType">XML スキーマに使用する、サービス記述言語の種類。</param>
        <param name="path">XML ファイルのパス。</param>
        <summary>指定したオブジェクト型を XML スキーマに変換し、名前で指定したファイルに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  指定した名前のファイルが既に存在する場合は上書きされます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile%2A> メソッドを使用して、指定した型のスキーマ定義をファイルに書き込む方法を示します。  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した型を XML スキーマに変換し、ストリームに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertTypesToSchemaToStream (serviceTypes As ServiceType(), sdlType As SdlType, outputStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ serviceTypes, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (serviceTypes, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceTypes" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serviceTypes">XML スキーマに変換する <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> インスタンス。</param>
        <param name="sdlType">XML スキーマに使用する、サービス記述言語の種類。</param>
        <param name="outputStream">スキーマの書き込み先の <see cref="T:System.IO.Stream" />。</param>
        <summary>指定したサービス型を XML スキーマに変換し、指定したストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.MetadataServices.ServiceType> インスタンスを使用すると、URL をオブジェクト <xref:System.Type>に関連付けることができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertTypesToSchemaToStream (types As Type(), sdlType As SdlType, outputStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (types, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="types">XML スキーマに変換するオブジェクト型。</param>
        <param name="sdlType">XML スキーマに使用する、サービス記述言語の種類。</param>
        <param name="outputStream">スキーマの書き込み先の <see cref="T:System.IO.Stream" />。</param>
        <summary>指定したオブジェクト型を XML スキーマに変換し、指定したストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream%2A> メソッドを使用して、指定した型のスキーマ定義をストリームに書き込む方法を示しています。  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToFile">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToFile (string url, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToFile(string url, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToFile (url As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToFile(System::String ^ url, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToFile : string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile (url, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">XML スキーマが存在する URL。</param>
        <param name="path">スキーマの書き込み先のファイルのパス。</param>
        <summary>URL から XML スキーマをダウンロードし、指定したファイルに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  指定した名前のファイルが既に存在する場合は上書きされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToStream">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToStream (string url, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToStream(string url, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToStream (url As String, outputStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToStream(System::String ^ url, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToStream : string * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream (url, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="url">XML スキーマが存在する URL。</param>
        <param name="outputStream">スキーマの書き込み先の <see cref="T:System.IO.Stream" />。</param>
        <summary>URL から XML スキーマをダウンロードし、指定したストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveStreamToFile">
      <MemberSignature Language="C#" Value="public static void SaveStreamToFile (System.IO.Stream inputStream, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveStreamToFile(class System.IO.Stream inputStream, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveStreamToFile (inputStream As Stream, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveStreamToFile(System::IO::Stream ^ inputStream, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member SaveStreamToFile : System.IO.Stream * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile (inputStream, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputStream">指定したファイルに書き込むストリーム。</param>
        <param name="path">入力ストリームの書き込み先のファイル。</param>
        <summary>指定した名前のファイルに入力ストリームを保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  指定した名前のファイルが既に存在する場合は上書きされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
