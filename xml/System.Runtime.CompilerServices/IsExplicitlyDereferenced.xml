<Type Name="IsExplicitlyDereferenced" FullName="System.Runtime.CompilerServices.IsExplicitlyDereferenced">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffcbffd2495bb9c066982e301576903b6bbd9826" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83950535" /></Metadata><TypeSignature Language="C#" Value="public static class IsExplicitlyDereferenced" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsExplicitlyDereferenced extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced" />
  <TypeSignature Language="VB.NET" Value="Public Class IsExplicitlyDereferenced" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsExplicitlyDereferenced abstract sealed" />
  <TypeSignature Language="F#" Value="type IsExplicitlyDereferenced = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime.CompilerServices.VisualC" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>マネージド ポインターがメソッド シグネチャ内のポインター パラメーターを表すことを示します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 でC++は、マネージポインターとマネージ参照は、ポインターとしてメタデータに出力されます。  メタデータ内の2つの型を区別するC++ために、Microsoft コンパイラはこの修飾子をマネージポインターに適用します。  マネージ参照型に修飾子を出力しません。  コンパイラは、メタデータスコープからメソッドをインポートするときに、正しい呼び出し構文を認識している必要があります。  <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> クラスとそのパートナー (<xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> クラス) は、ポインターパラメーターから参照パラメーターを明確に区別します。  
  
 コンパイラは、既定の動作が適切でない場合にジャストインタイム (JIT) コンパイラが値を処理する方法を変更するために、メタデータ内にカスタム修飾子を出力します。  JIT コンパイラはカスタム修飾子を検出すると、修飾子によって指定された方法で値を処理します。  コンパイラは、メソッド、パラメーター、および戻り値にカスタム修飾子を適用できます。  JIT コンパイラは必須の修飾子に応答する必要がありますが、省略可能な修飾子は無視できます。  
  
 次のいずれかの方法を使用して、カスタム修飾子をメタデータに出力できます。  
  
-   <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>、<xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>、<xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>、<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>などの <xref:System.Reflection.Emit.TypeBuilder> クラスのメソッドの使用。  
  
-   `modopt` と `modreq`の呼び出しを含む Microsoft 中間言語 (MSIL) 命令ファイルを生成し、 [Ilasm (IL アセンブラー)](/dotnet/framework/tools/ilasm-exe-il-assembler)を使用してファイルをアセンブルします。  
  
-   アンマネージリフレクション API を使用します。  
  
   
  
## Examples  
 次の例は、リフレクションを使用して <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> オブジェクトをアセンブリに出力する方法を示しています。  
  
 [!code-cpp[Runtime.CompilerServices.IsExplicitlyDereferenced#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsExplicitlyDereferenced/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
