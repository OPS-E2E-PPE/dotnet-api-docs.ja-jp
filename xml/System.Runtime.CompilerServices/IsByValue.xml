<Type Name="IsByValue" FullName="System.Runtime.CompilerServices.IsByValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41d1b602757840d76f7103665fc2e60fb99c0728" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75166422" /></Metadata><TypeSignature Language="C#" Value="public static class IsByValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsByValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsByValue" />
  <TypeSignature Language="VB.NET" Value="Public Class IsByValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsByValue abstract sealed" />
  <TypeSignature Language="F#" Value="type IsByValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0dfe2-101">修飾されているメソッドの引数が、値渡しのオブジェクトのセマンティクスを持つものとして解釈される必要があることを示します。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-101">Indicates that a modified method argument should be interpreted as having object passed-by-value semantics.</span></span> <span data-ttu-id="0dfe2-102">この修飾子は参照型に適用されます。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-102">This modifier is applied to reference types.</span></span>  <span data-ttu-id="0dfe2-103">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfe2-104"><xref:System.Runtime.CompilerServices.IsByValue> クラスは、メソッドのパラメーターとC++戻り値を示すために Microsoft コンパイラによって使用C++されます。この値は、値渡しで渡されるオブジェクトの規則に従っています。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-104">The <xref:System.Runtime.CompilerServices.IsByValue> class is used by the Microsoft C++ compiler to denote method parameters and return values whose semantics follow the C++ rules for objects passed by value.</span></span>  
  
 <span data-ttu-id="0dfe2-105">コンパイラは、既定の動作が適切でない場合にジャストインタイム (JIT) コンパイラが値を処理する方法を変更するために、メタデータ内にカスタム修飾子を出力します。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="0dfe2-106">JIT コンパイラはカスタム修飾子を検出すると、修飾子によって指定された方法で値を処理します。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="0dfe2-107">コンパイラは、メソッド、パラメーター、および戻り値にカスタム修飾子を適用できます。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="0dfe2-108">JIT コンパイラは必須の修飾子に応答する必要がありますが、省略可能な修飾子は無視できます。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="0dfe2-109">次のいずれかの方法を使用して、カスタム修飾子をメタデータに出力できます。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="0dfe2-110"><xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>、<xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>、<xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>、<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>などの <xref:System.Reflection.Emit.TypeBuilder> クラスのメソッドの使用。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="0dfe2-111">`modopt` と `modreq`の呼び出しを含む Microsoft 中間言語 (MSIL) 命令ファイルを生成し、 [Ilasm (IL アセンブラー)](~/docs/framework/tools/ilasm-exe-il-assembler.md)を使用してファイルをアセンブルします。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="0dfe2-112">アンマネージリフレクション API を使用します。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0dfe2-113">次の例は、リフレクションを使用して <xref:System.Runtime.CompilerServices.IsByValue> オブジェクトをアセンブリに出力する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0dfe2-113">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsByValue> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsByValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsByValue/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
