<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23303c0ba7230544511ab3bed94cc35721a64b5e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75092010" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>通常は現在のアセンブリ内でのみ参照できる型が、指定したアセンブリから参照可能であることを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、`internal` または `private protected` スコープ (内C#) と `Friend` および `Private Protected` スコープ (Visual Basic) の型およびメンバーは、それらが定義されているアセンブリ内でのみ表示されます。 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性は、フレンドアセンブリと呼ばれる、指定されたアセンブリ内の型からも参照できるようにします。 これは `internal` (VB の`Friend`) または `private protected`(VB の場合は`Private Protected`) にのみ適用されますが、`private` は含まれません。
  
 属性は、アセンブリレベルで適用されます。 これは、ソースコードファイルの先頭に含めることも、Visual Studio プロジェクトの AssemblyInfo ファイルに含めることもできることを意味します。 属性を使用して、現在のアセンブリの内部型およびメンバーにアクセスできる単一のフレンドアセンブリを指定できます。 複数のフレンドアセンブリを定義するには、次の2つの方法があります。 これらは、次の例に示すように、個々のアセンブリレベル属性として表示できます。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 また、次の例に示すように、個別の <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> タグでも1つの `assembly` キーワードを使用して表示することもできます。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 フレンドアセンブリは、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> コンストラクターによって識別されます。 現在のアセンブリとフレンドアセンブリの両方が符号なしであるか、または両方のアセンブリが厳密な名前で署名されている必要があります。  
  
 両方のアセンブリが署名されていない場合、`assemblyName` 引数は、ディレクトリパスまたはファイル名拡張子なしで指定されたフレンドアセンブリの名前で構成されます。  
  
 両方のアセンブリが厳密な名前で署名されている場合、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> コンストラクターの引数は、ディレクトリパスまたはファイル名拡張子を持たないアセンブリの名前と、完全な公開キー (公開キートークンではなく) で構成されている必要があります。 厳密な名前付きアセンブリの完全な公開キーを取得するには、この記事で後述する「[完全な公開キーの取得](#Key)」セクションを参照してください。 厳密な名前付きアセンブリでの <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> の使用の詳細については、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> コンストラクターを参照してください。  
  
 引数に <xref:System.Reflection.AssemblyName.CultureInfo%2A>、<xref:System.Reflection.AssemblyName.Version%2A>、または <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> フィールドの値を含めないでください。Visual Basic、 C#、およびC++コンパイラは、これをコンパイラエラーとして扱います。 エラーとして扱わないコンパイラ (たとえば、 [IL アセンブラー (ILAsm)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) を使用する場合、アセンブリは厳密な名前であるため、指定されたフレンドアセンブリが <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性を含むアセンブリに初めてアクセスすると、<xref:System.MethodAccessException> 例外がスローされます。  
  
 この属性の使用方法の詳細については、次のトピックを参照してください。  
  
-   [フレンド アセンブリ (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [フレンド アセンブリ](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a>完全な公開キーを取得しています  
 厳密[名ツール (sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md)を使用して、厳密な名前のキー (.snk) ファイルから完全な公開キーを取得できます。 これを行うには、次の手順を実行します。  
  
1.  厳密な名前のキーファイルから別のファイルに公開キーを抽出します。  
  
     **Sn-p***snk_file* ** の出力  
  
2.  完全な公開キーをコンソールに表示します。  
  
     **Sn-tp**** 出力  
  
3.  完全な公開キーの値をコピーして、ソースコードに貼り付けます。  
  
## <a name="compiling-the-friend-assembly-with-c"></a>を使用したフレンドアセンブリのコンパイルC#  
 C#コンパイラを使用してフレンドアセンブリをコンパイルする場合は、 **/out**コンパイラオプションを使用して、出力ファイル (.exe または .dll) の名前を明示的に指定する必要があります。 この指定は必ず行ってください。コンパイラが外部参照にバインドする時点ではまだ、ビルド中のアセンブリの名前が生成されていないためです。 **/Out**コンパイラオプションは Visual Basic コンパイラでは省略可能であり、 F#コンパイラを使用してフレンドアセンブリをコンパイルするときに、対応する**out**または **-o**コンパイラオプションを使用することはできません。  
  
## <a name="compiling-the-friend-assembly-with-c"></a>を使用したフレンドアセンブリのコンパイルC++  
 でC++は、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性によって有効にされた内部メンバーをフレンドアセンブリからアクセスできるようにするには、 C++ディレクティブで `as_friend` 属性を使用する必要があります。 詳細については、「 [FriendC++Assemblies ()](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)」を参照してください。  
  
   
  
## Examples  
 **署名されたアセンブリ**  
  
 次の例では、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性を使用して、署名されたアセンブリに `AppendDirectorySeparator` という名前の `internal` メソッドを別の署名されたアセンブリから参照できるようにします。 内部 `AppendDirectorySeparator` メソッドを含む `FileUtilities` クラスを定義します。 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性は、`FileUtilities` クラスを含むアセンブリに適用されます。 属性は、`Friend1` という名前のアセンブリがこの内部メンバーにアクセスできるようにします。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 次の例が `Friend1`という名前の厳密な名前のアセンブリにコンパイルされている場合、`Friend1` の `Example.Main` メソッドは `FileUtilities.AppendDirectorySeparator` メソッドを正常に呼び出すことができます。ただし、メソッドは `Assembly1` アセンブリの内部にあります。 をC#コマンドラインからコンパイルする場合は、 **/out**コンパイラスイッチを使用して、コンパイラが外部参照にバインドするときにフレンドアセンブリの名前を使用できるようにする必要があることに注意してください。  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 **署名されていないアセンブリ**  
  
 次の例では、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性を使用して、署名されていないアセンブリの `internal` メンバーを別の未署名のアセンブリに参照できるようにします。 属性を指定すると、`UtilityLib` という名前のアセンブリ内の `internal` `StringLib.IsFirstLetterUpperCase` メソッドが、`Friend2`という名前のアセンブリ内のコードから参照できるようになります。  次に示すのは、ユーティリティのソースコードです。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 次の例では、`Friend2` アセンブリのソースコードを提供します。 をC#コマンドラインからコンパイルする場合は、 **/out**コンパイラスイッチを使用して、コンパイラが外部参照にバインドするときにフレンドアセンブリの名前を使用できるようにする必要があることに注意してください。  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">フレンド アセンブリの名前。</param>
        <summary>指定したフレンド アセンブリの名前を使用して <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> コンストラクターは、現在のアセンブリの内部およびプライベートの保護された型およびメンバーにアクセスできるアセンブリであるフレンドアセンブリを定義します。  
  
 現在のアセンブリとフレンドアセンブリの両方が符号なしであるか、またはその両方が厳密な名前で署名されている必要があります。 (厳密な名前付きアセンブリの詳細については、「[厳密な名前付きアセンブリの作成と使用](~/docs/standard/assembly/create-use-strong-named.md)」を参照してください)。両方が符号なしの場合、`assemblyName` 引数は、ディレクトリパスまたはファイル拡張子なしで指定されたフレンドアセンブリの名前で構成されます。 両方が署名されている場合、`assemblyName` は、ディレクトリパスまたはファイル名拡張子のないフレンドアセンブリの名前と、完全な公開キー (ただし、その公開キートークンではありません) で構成されます。 カルチャ、バージョン、またはプロセッサのアーキテクチャ情報を提供するコンポーネントなど、厳密な名前のその他のコンポーネントは、`assemblyName` 引数で指定できません。  
  
> [!IMPORTANT]
>  C#コンパイラを使用してフレンドアセンブリをコンパイルする場合は、 **/out**コンパイラオプションを使用して、出力ファイル (.exe または .dll) の名前を明示的に指定する必要があります。 この指定は必ず行ってください。コンパイラが外部参照にバインドする時点ではまだ、ビルド中のアセンブリの名前が生成されていないためです。 **/Out**コンパイラオプションは Visual Basic コンパイラでは省略可能であり、 F#コンパイラを使用してフレンドアセンブリをコンパイルするときに、対応する**out**または **-o**コンパイラオプションを使用することはできません。  
  
 [Sn.exe (厳密名ツール)](~/docs/framework/tools/sn-exe-strong-name-tool.md)を使用して、厳密な名前のキー (.snk) ファイルから完全な公開キーを取得できます。 これを行うには、次の手順を実行します。  
  
1.  厳密な名前のキーファイルから別のファイルに公開キーを抽出します。  
  
     **Sn-p***snk_file* ** の出力  
  
2.  完全な公開キーをコンソールに表示します。  
  
     **Sn-tp**** 出力  
  
3.  完全な公開キーの値をコピーして、ソースコードに貼り付けます。  
  
 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性の使用方法の詳細については、次のトピックを参照してください。  
  
-   [フレンド アセンブリ (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [フレンド アセンブリ](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 **署名されたアセンブリ**  
  
 次の例では、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性を使用して、署名されたアセンブリに `AppendDirectorySeparator` という名前の `internal` メソッドを別の署名されたアセンブリから参照できるようにします。 内部 `AppendDirectorySeparator` メソッドを含む `FileUtilities` クラスを定義します。 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性は、`FileUtilities` クラスを含むアセンブリに適用されます。 属性は、`Friend1` という名前のアセンブリがこの内部メンバーにアクセスできるようにします。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 次の例を `Friend1`という名前の厳密な名前のアセンブリにコンパイルすると、メソッドが `Assembly1` アセンブリの内部にある場合でも、`FileUtilities.AppendDirectorySeparator` メソッドを正常に呼び出すことができます。 をC#コマンドラインからコンパイルする場合は、 **/out**コンパイラスイッチを使用して、コンパイラが外部参照にバインドするときにフレンドアセンブリの名前を使用できるようにする必要があることに注意してください。  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 次の例では、<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性を使用して、署名されていないアセンブリの `internal` メンバーを別の未署名のアセンブリに参照できるようにします。 属性を指定すると、`UtilityLib` という名前のアセンブリ内の `internal` `StringLib.IsFirstLetterUpperCase` メソッドが、`Friend2`という名前のアセンブリ内のコードから参照できるようになります。  次に示すのは、ユーティリティのソースコードです。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 **署名されていないアセンブリ**  
  
 次の例では、`Friend2` アセンブリのソースコードを提供します。 をC#コマンドラインからコンパイルする場合は、 **/out**コンパイラスイッチを使用して、コンパイラが外部参照にバインドするときにフレンドアセンブリの名前を使用できるようにする必要があることに注意してください。  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプロパティは実装されていません。</summary>
        <value>このプロパティは値を返しません。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="internal" /> キーワードを使用してマークされている型と型のメンバーをすべて参照できるようにする、フレンド アセンブリの名前を取得します。</summary>
        <value>フレンド アセンブリの名前を表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性の使用方法の詳細については、次のトピックを参照してください。  
  
-   [フレンド アセンブリ (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [フレンド アセンブリ](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
