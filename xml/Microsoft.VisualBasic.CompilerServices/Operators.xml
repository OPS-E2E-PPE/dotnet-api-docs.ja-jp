<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b36e497c74fe1504acf602c2ad171e753f83194" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73377729" /></Metadata><TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="81e6d-101">Visual Basic コンパイラが内部的に使用する、<see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> や <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" /> などの遅延バインディング数値演算子を提供します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-102">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md"><span data-ttu-id="81e6d-103">演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-103">Operators (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object AddObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-104">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-104">Required.</span></span> <span data-ttu-id="81e6d-105">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-105">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-106">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-106">Required.</span></span> <span data-ttu-id="81e6d-107">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-107">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-108">Visual Basic の加算 (+) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-108">Represents the Visual Basic addition (+) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-109"><paramref name="Left" /> と <paramref name="Right" /> の合計。</span><span class="sxs-lookup"><span data-stu-id="81e6d-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-110">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="81e6d-111">+ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-111">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object AndObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-112">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-112">Required.</span></span> <span data-ttu-id="81e6d-113">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-114">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-114">Required.</span></span> <span data-ttu-id="81e6d-115">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-116">Visual Basic の <see langword="And" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-116">Represents the Visual Basic <see langword="And" /> operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-117"><see langword="Boolean" /> 演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも <see langword="True" /> と評価される場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="81e6d-118">ビットごとの演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも 1 と評価される場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="81e6d-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-119">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="81e6d-120">And 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Right" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="TextCompare" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-121">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-121">Required.</span></span> <span data-ttu-id="81e6d-122">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-122">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-123">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-123">Required.</span></span> <span data-ttu-id="81e6d-124">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-124">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-125">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-125">Required.</span></span> <span data-ttu-id="81e6d-126">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-126"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-127">Visual Basic の比較演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-127">Represents Visual Basic comparison operators.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="81e6d-128">[値]</span><span class="sxs-lookup"><span data-stu-id="81e6d-128">Value</span></span> 
 </term>
              <description> <span data-ttu-id="81e6d-129">条件</span><span class="sxs-lookup"><span data-stu-id="81e6d-129">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="81e6d-130">-1</span><span class="sxs-lookup"><span data-stu-id="81e6d-130">-1</span></span> 
 </term>
              <description><span data-ttu-id="81e6d-131">
                <paramref name="Left" /> は <paramref name="Right" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-131">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="81e6d-132">0</span><span class="sxs-lookup"><span data-stu-id="81e6d-132">0</span></span> 
 </term>
              <description><span data-ttu-id="81e6d-133">
                <paramref name="Left" /> と <paramref name="Right" /> が等しい。</span><span class="sxs-lookup"><span data-stu-id="81e6d-133">
                <paramref name="Left" /> and <paramref name="Right" /> are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="81e6d-134">1</span><span class="sxs-lookup"><span data-stu-id="81e6d-134">1</span></span> 
 </term>
              <description><span data-ttu-id="81e6d-135">
                <paramref name="Left" /> が <paramref name="Right" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="81e6d-135">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list>
<span data-ttu-id="81e6d-136">.</span><span class="sxs-lookup"><span data-stu-id="81e6d-136">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-137">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-137">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="81e6d-138">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-138">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-139">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-139">Required.</span></span> <span data-ttu-id="81e6d-140">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-140">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-141">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-141">Required.</span></span> <span data-ttu-id="81e6d-142">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-142">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-143">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-143">Required.</span></span> <span data-ttu-id="81e6d-144">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-144"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-145">Visual Basic の等値 (=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-145">Represents the Visual Basic equal (=) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-146"><see langword="True" /> と <paramref name="Left" /> が等しい場合は <paramref name="Right" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-146"><see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-147">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-147">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="81e6d-148">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-148">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-149">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-149">Required.</span></span> <span data-ttu-id="81e6d-150">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-150">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-151">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-151">Required.</span></span> <span data-ttu-id="81e6d-152">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-152">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-153">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-153">Required.</span></span> <span data-ttu-id="81e6d-154">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-154"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-155">Visual Basic のより大きい (&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-155">Represents the Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-156"><see langword="True" /> が <paramref name="Left" /> より大きい場合は <paramref name="Right" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-156"><see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-157">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-157">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="81e6d-158">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-158">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-159">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-159">Required.</span></span> <span data-ttu-id="81e6d-160">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-160">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-161">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-161">Required.</span></span> <span data-ttu-id="81e6d-162">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-162">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-163">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-163">Required.</span></span> <span data-ttu-id="81e6d-164">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-164"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-165">Visual Basic のより大か等しい (&gt;=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-165">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-166"><paramref name="Left" /> が <paramref name="Right" /> 以上の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-166"><see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-167">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-167">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="81e6d-168">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-168">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-169">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-169">Required.</span></span> <span data-ttu-id="81e6d-170">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-170">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-171">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-171">Required.</span></span> <span data-ttu-id="81e6d-172">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-172">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-173">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-173">Required.</span></span> <span data-ttu-id="81e6d-174">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-174"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-175">Visual Basic のより小さい (&lt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-175">Represents the Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-176"><paramref name="Left" /> が <paramref name="Right" /> より小さい場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-176"><see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-177">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="81e6d-178">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-178">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-179">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-179">Required.</span></span> <span data-ttu-id="81e6d-180">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-180">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-181">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-181">Required.</span></span> <span data-ttu-id="81e6d-182">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-182">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-183">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-183">Required.</span></span> <span data-ttu-id="81e6d-184">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-184"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-185">Visual Basic のより小さいか等しい (&lt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-185">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-186"><paramref name="Left" /> が <paramref name="Right" /> 以下の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-186"><see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-187">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-187">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="81e6d-188">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-188">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-189">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-189">Required.</span></span> <span data-ttu-id="81e6d-190">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-190">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-191">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-191">Required.</span></span> <span data-ttu-id="81e6d-192">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-192">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-193">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-193">Required.</span></span> <span data-ttu-id="81e6d-194">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-194"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-195">Visual Basic の不等号 (&lt;&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-195">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-196"><see langword="True" /> が <paramref name="Left" /> と等しくない場合は <paramref name="Right" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-196"><see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-197">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-197">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="81e6d-198">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-198">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareString(string Left, string Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-199">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-199">Required.</span></span> <span data-ttu-id="81e6d-200">任意のブール型 ( <see langword="String" /> ) の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-200">Any <see langword="String" /> expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-201">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-201">Required.</span></span> <span data-ttu-id="81e6d-202">任意のブール型 ( <see langword="String" /> ) の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-202">Any <see langword="String" /> expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-203">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-203">Required.</span></span> <span data-ttu-id="81e6d-204">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-204"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-205">指定された 2 つの文字列に対して、バイナリ文字列比較またはテキスト文字列比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-205">Performs binary or text string comparison when given two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="81e6d-206">[値]</span><span class="sxs-lookup"><span data-stu-id="81e6d-206">Value</span></span> 
 </term>
              <description> <span data-ttu-id="81e6d-207">条件</span><span class="sxs-lookup"><span data-stu-id="81e6d-207">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="81e6d-208">-1</span><span class="sxs-lookup"><span data-stu-id="81e6d-208">-1</span></span> 
 </term>
              <description><span data-ttu-id="81e6d-209">
                <paramref name="Left" /> は <paramref name="Right" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-209">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="81e6d-210">0</span><span class="sxs-lookup"><span data-stu-id="81e6d-210">0</span></span> 
 </term>
              <description><span data-ttu-id="81e6d-211">
                <paramref name="Left" /> と <paramref name="Right" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-211">
                <paramref name="Left" /> is equal to <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="81e6d-212">1</span><span class="sxs-lookup"><span data-stu-id="81e6d-212">1</span></span> 
 </term>
              <description><span data-ttu-id="81e6d-213">
                <paramref name="Left" /> が <paramref name="Right" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="81e6d-213">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list>
<span data-ttu-id="81e6d-214">.</span><span class="sxs-lookup"><span data-stu-id="81e6d-214">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-215">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-215">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="81e6d-216">2つの文字列を比較するために Visual Basic 等値演算子を使用する場合は、`TextCompare` 引数に `False` の値と共に <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> メソッドに文字列を渡します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-216">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="81e6d-217">これは、 [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)ステートメントの値に応じて、序数または現在のカルチャに基づいて、大文字と小文字を区別する比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-217">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="81e6d-218">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-218">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ConcatenateObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-219">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-219">Required.</span></span> <span data-ttu-id="81e6d-220">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-220">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-221">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-221">Required.</span></span> <span data-ttu-id="81e6d-222">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-222">Any expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-223">Visual Basic の連結 (&amp;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-223">Represents the Visual Basic concatenation (&amp;) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-224"><paramref name="Left" /> と <paramref name="Right" /> の連結を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="81e6d-224">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-225">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-225">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="81e6d-226">&amp; 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-226">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-227">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-227">Required.</span></span> <span data-ttu-id="81e6d-228">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-228">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-229">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-229">Required.</span></span> <span data-ttu-id="81e6d-230">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-230">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-231">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-231">Required.</span></span> <span data-ttu-id="81e6d-232">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-232"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-233">Visual Basic のオーバーロードされた等値 (=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-233">Represents the overloaded Visual Basic equals (=) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-234">オーバーロードされた等値演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="81e6d-234">The result of the overloaded equals operator.</span></span> <span data-ttu-id="81e6d-235">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-235"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-236">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-236">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="81e6d-237">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="81e6d-237">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-238">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-238">Required.</span></span> <span data-ttu-id="81e6d-239">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-239">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-240">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-240">Required.</span></span> <span data-ttu-id="81e6d-241">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-241">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-242">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-242">Required.</span></span> <span data-ttu-id="81e6d-243">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-243"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-244">Visual Basic のオーバーロードされたより大きい (&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-244">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-245">オーバーロードされた大なり演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="81e6d-245">The result of the overloaded greater-than operator.</span></span> <span data-ttu-id="81e6d-246">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-246"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-247">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-247">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="81e6d-248">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="81e6d-248">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-249">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-249">Required.</span></span> <span data-ttu-id="81e6d-250">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-250">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-251">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-251">Required.</span></span> <span data-ttu-id="81e6d-252">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-252">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-253">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-253">Required.</span></span> <span data-ttu-id="81e6d-254">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-254"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-255">Visual Basic のオーバーロードされたより大か等しい (&gt;=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-255">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-256">オーバーロードされた以上演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="81e6d-256">The result of the overloaded greater-than or equal-to operator.</span></span> <span data-ttu-id="81e6d-257">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-257"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-258">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="81e6d-259">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="81e6d-259">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-260">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-260">Required.</span></span> <span data-ttu-id="81e6d-261">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-261">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-262">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-262">Required.</span></span> <span data-ttu-id="81e6d-263">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-263">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-264">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-264">Required.</span></span> <span data-ttu-id="81e6d-265">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-265"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-266">Visual Basic のオーバーロードされたより小さい (&lt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-266">Represents the overloaded Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-267">オーバーロードされた小なり演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="81e6d-267">The result of the overloaded less-than operator.</span></span> <span data-ttu-id="81e6d-268">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-268"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-269">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-269">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="81e6d-270">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="81e6d-270">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-271">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-271">Required.</span></span> <span data-ttu-id="81e6d-272">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-272">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-273">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-273">Required.</span></span> <span data-ttu-id="81e6d-274">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-274">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-275">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-275">Required.</span></span> <span data-ttu-id="81e6d-276">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-276"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-277">Visual Basic のオーバーロードされたより小さいか等しい (&lt;=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-277">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-278">オーバーロードされた以下演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="81e6d-278">The result of the overloaded less-than or equal-to operator.</span></span> <span data-ttu-id="81e6d-279">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-279"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-280">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-280">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="81e6d-281">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="81e6d-281">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-282">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-282">Required.</span></span> <span data-ttu-id="81e6d-283">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-283">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-284">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-284">Required.</span></span> <span data-ttu-id="81e6d-285">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-285">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="81e6d-286">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-286">Required.</span></span> <span data-ttu-id="81e6d-287">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-287"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-288">Visual Basic のオーバーロードされた不等号 (&lt;&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-288">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-289">オーバーロードされた不等演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="81e6d-289">The result of the overloaded not-equal operator.</span></span> <span data-ttu-id="81e6d-290">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-290"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-291">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-291">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="81e6d-292">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="81e6d-292">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object DivideObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-293">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-293">Required.</span></span> <span data-ttu-id="81e6d-294">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-294">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-295">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-295">Required.</span></span> <span data-ttu-id="81e6d-296">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-296">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-297">Visual Basic の除算 (/) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-297">Represents the Visual Basic division (/) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-298"><paramref name="Left" /> を <paramref name="Right" /> で割った、剰余を含む完全な商。</span><span class="sxs-lookup"><span data-stu-id="81e6d-298">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-299">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-299">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="81e6d-300">/ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-300">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ExponentObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-301">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-301">Required.</span></span> <span data-ttu-id="81e6d-302">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-302">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-303">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-303">Required.</span></span> <span data-ttu-id="81e6d-304">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-304">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-305">Visual Basic の指数 (^) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-305">Represents the Visual Basic exponent (^) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-306"><paramref name="Left" /> を <paramref name="Right" /> で累乗した結果。</span><span class="sxs-lookup"><span data-stu-id="81e6d-306">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-307">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-307">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="81e6d-308">^ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-308">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object FallbackInvokeUserDefinedOperator(object vbOp, object[] arguments) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, arguments As Object()) As Object" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, arguments)" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Arguments" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="vbOp"><span data-ttu-id="81e6d-309">ユーザー定義の演算子。</span><span class="sxs-lookup"><span data-stu-id="81e6d-309">The user-defined operator.</span></span></param>
        <param name="Arguments"><span data-ttu-id="81e6d-310">ユーザー定義の演算子に渡す引数値。</span><span class="sxs-lookup"><span data-stu-id="81e6d-310">Argument values to pass to the user-defined operator.</span></span></param>
        <param name="arguments">To be added.</param>
        <summary><span data-ttu-id="81e6d-311">ユーザー定義の演算子の遅延バインディング評価を実行します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-311">Executes a late-bound evaluation of a user-defined operator.</span></span> <span data-ttu-id="81e6d-312">このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-312">This helper method is not meant to be called directly from your code.</span></span></summary>
        <returns><span data-ttu-id="81e6d-313">ユーザー定義の演算子から返される結果。</span><span class="sxs-lookup"><span data-stu-id="81e6d-313">The result returned from the user-defined operator.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object IntDivideObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-314">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-314">Required.</span></span> <span data-ttu-id="81e6d-315">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-315">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-316">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-316">Required.</span></span> <span data-ttu-id="81e6d-317">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-317">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-318">Visual Basic の整数除算 (\\) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-318">Represents the Visual Basic integer division (\\) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-319"><paramref name="Left" /> を <paramref name="Right" /> で割った整数の商。余りはすべて破棄され、整数部分だけが保持されます。</span><span class="sxs-lookup"><span data-stu-id="81e6d-319">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-320">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-320">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="81e6d-321">\ 演算子</span><span class="sxs-lookup"><span data-stu-id="81e6d-321">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object LeftShiftObject(object Operand, object Amount) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="81e6d-322">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-322">Required.</span></span> <span data-ttu-id="81e6d-323">整数の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-323">Integral numeric expression.</span></span> <span data-ttu-id="81e6d-324">シフトされるビット パターンです。</span><span class="sxs-lookup"><span data-stu-id="81e6d-324">The bit pattern to be shifted.</span></span> <span data-ttu-id="81e6d-325">データ型は整数型 (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" />、<see langword="ULong" />) である必要があります。</span><span class="sxs-lookup"><span data-stu-id="81e6d-325">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="81e6d-326">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-326">Required.</span></span> <span data-ttu-id="81e6d-327">数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-327">Numeric expression.</span></span> <span data-ttu-id="81e6d-328">ビット パターンは、このビット数だけシフトされます。</span><span class="sxs-lookup"><span data-stu-id="81e6d-328">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="81e6d-329">データ型は、整数型 (<see langword="Integer" />) であるか、整数型 (<see langword="Integer" />) に拡大変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="81e6d-329">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-330">Visual Basic の算術左シフト (&lt;&lt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-330">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-331">整数値。</span><span class="sxs-lookup"><span data-stu-id="81e6d-331">An integral numeric value.</span></span> <span data-ttu-id="81e6d-332">ビット パターンをシフトした結果が格納されます。</span><span class="sxs-lookup"><span data-stu-id="81e6d-332">The result of shifting the bit pattern.</span></span> <span data-ttu-id="81e6d-333">データ型は、<paramref name="Operand" /> の型と同じになります。</span><span class="sxs-lookup"><span data-stu-id="81e6d-333">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-334">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-334">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="81e6d-335">&lt;&lt; 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-335">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="81e6d-336">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-336">Required.</span></span> <span data-ttu-id="81e6d-337">任意の式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-337">Any expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="81e6d-338">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-338">Required.</span></span> <span data-ttu-id="81e6d-339">「Like 演算子」で説明されているパターン一致規則に準拠した任意の文字列式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-339">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="81e6d-340">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-340">Required.</span></span> <span data-ttu-id="81e6d-341">演算でテキスト比較とバイナリ比較のどちらを使用するかを指定する <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 値。</span><span class="sxs-lookup"><span data-stu-id="81e6d-341">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="81e6d-342">Visual Basic の <see langword="Like" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-342">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-343"><paramref name="Source" /> の値の文字列表現が <paramref name="Pattern" /> で指定されているパターンを満たす場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-343"><see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="81e6d-344"><paramref name="Source" /> と <paramref name="Pattern" /> が両方とも <see langword="True" /> の場合は <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-344"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-345">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-345">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="81e6d-346">Like 演算子</span><span class="sxs-lookup"><span data-stu-id="81e6d-346">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="81e6d-347">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-347">Required.</span></span> <span data-ttu-id="81e6d-348">任意のブール型 ( <see langword="String" /> ) の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-348">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="81e6d-349">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-349">Required.</span></span> <span data-ttu-id="81e6d-350">パターン一致規則に適合させる任意の文字列 (<see langword="String" />) 式を指定します。規則については「Like 演算子」で説明します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-350">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="81e6d-351">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-351">Required.</span></span> <span data-ttu-id="81e6d-352">演算でテキスト比較とバイナリ比較のどちらを使用するかを指定する <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 値。</span><span class="sxs-lookup"><span data-stu-id="81e6d-352">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="81e6d-353">Visual Basic の <see langword="Like" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-353">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-354"><paramref name="Source" /> の値が <paramref name="Pattern" /> で指定されているパターンを満たす場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-354"><see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="81e6d-355"><paramref name="Source" /> と <paramref name="Pattern" /> が両方とも空の場合は <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-355"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-356">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-356">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="81e6d-357">Like 演算子</span><span class="sxs-lookup"><span data-stu-id="81e6d-357">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ModObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-358">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-358">Required.</span></span> <span data-ttu-id="81e6d-359">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-359">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-360">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-360">Required.</span></span> <span data-ttu-id="81e6d-361">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-361">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-362">Visual Basic の <see langword="Mod" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-362">Represents the Visual Basic <see langword="Mod" /> operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-363"><paramref name="Left" /> を <paramref name="Right" /> で除算した後の剰余。</span><span class="sxs-lookup"><span data-stu-id="81e6d-363">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-364">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-364">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="81e6d-365">Mod 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-365">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object MultiplyObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-366">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-366">Required.</span></span> <span data-ttu-id="81e6d-367">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-367">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-368">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-368">Required.</span></span> <span data-ttu-id="81e6d-369">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-369">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-370">Visual Basic の乗算 (\*) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-370">Represents the Visual Basic multiply (\*) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-371"><paramref name="Left" /> と <paramref name="Right" /> の積。</span><span class="sxs-lookup"><span data-stu-id="81e6d-371">The product of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-372">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-372">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="81e6d-373">\* 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-373">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object NegateObject(object Operand) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="81e6d-374">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-374">Required.</span></span> <span data-ttu-id="81e6d-375">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-375">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-376">Visual Basic の単項マイナス (-) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-376">Represents the Visual Basic unary minus (-) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-377"><paramref name="Operand" /> の負の値。</span><span class="sxs-lookup"><span data-stu-id="81e6d-377">The negative value of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-378">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-378">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="81e6d-379">- 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-379">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object NotObject(object Operand) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="81e6d-380">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-380">Required.</span></span> <span data-ttu-id="81e6d-381">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-381">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-382">Visual Basic の <see langword="Not" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-382">Represents the Visual Basic <see langword="Not" /> operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-383"><see langword="Boolean" /> 演算では、<paramref name="Operand" /> が <see langword="False" /> の場合は <see langword="True" />。それ以外の場合は <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-383">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="81e6d-384">ビットごとの演算では、<paramref name="Operand" /> が 0 の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="81e6d-384">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-385">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-385">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="81e6d-386">Not 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-386">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object OrObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-387">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-387">Required.</span></span> <span data-ttu-id="81e6d-388">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-388">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-389">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-389">Required.</span></span> <span data-ttu-id="81e6d-390">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-390">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-391">Visual Basic の <see langword="Or" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-391">Represents the Visual Basic <see langword="Or" /> operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-392"><see langword="Boolean" /> 演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも <see langword="False" /> と評価される場合は <see langword="False" />。それ以外の場合は <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="81e6d-392">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="81e6d-393">ビットごとの演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも 0 と評価される場合は 0。それ以外の場合は 1。</span><span class="sxs-lookup"><span data-stu-id="81e6d-393">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-394">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-394">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="81e6d-395">Or 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-395">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PlusObject(object Operand) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="81e6d-396">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-396">Required.</span></span> <span data-ttu-id="81e6d-397">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-397">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-398">Visual Basic の単項プラス (+) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-398">Represents the Visual Basic unary plus (+) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-399"><paramref name="Operand" /> の値。</span><span class="sxs-lookup"><span data-stu-id="81e6d-399">The value of <paramref name="Operand" />.</span></span> <span data-ttu-id="81e6d-400">(<paramref name="Operand" /> の符号は変更されません)。</span><span class="sxs-lookup"><span data-stu-id="81e6d-400">(The sign of the <paramref name="Operand" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-401">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-401">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="81e6d-402">+ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-402">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object RightShiftObject(object Operand, object Amount) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="81e6d-403">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-403">Required.</span></span> <span data-ttu-id="81e6d-404">整数の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-404">Integral numeric expression.</span></span> <span data-ttu-id="81e6d-405">シフトされるビット パターンです。</span><span class="sxs-lookup"><span data-stu-id="81e6d-405">The bit pattern to be shifted.</span></span> <span data-ttu-id="81e6d-406">データ型は整数型 (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" />、<see langword="ULong" />) である必要があります。</span><span class="sxs-lookup"><span data-stu-id="81e6d-406">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="81e6d-407">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-407">Required.</span></span> <span data-ttu-id="81e6d-408">数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-408">Numeric expression.</span></span> <span data-ttu-id="81e6d-409">ビット パターンは、このビット数だけシフトされます。</span><span class="sxs-lookup"><span data-stu-id="81e6d-409">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="81e6d-410">データ型は、整数型 (<see langword="Integer" />) であるか、整数型 (<see langword="Integer" />) に拡大変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="81e6d-410">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="81e6d-411">Visual Basic の算術右シフト (&gt;&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-411">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-412">整数値。</span><span class="sxs-lookup"><span data-stu-id="81e6d-412">An integral numeric value.</span></span> <span data-ttu-id="81e6d-413">ビット パターンをシフトした結果が格納されます。</span><span class="sxs-lookup"><span data-stu-id="81e6d-413">The result of shifting the bit pattern.</span></span> <span data-ttu-id="81e6d-414">データ型は、<paramref name="Operand" /> の型と同じになります。</span><span class="sxs-lookup"><span data-stu-id="81e6d-414">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-415">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-415">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="81e6d-416">&gt;&gt; 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-416">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object SubtractObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-417">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-417">Required.</span></span> <span data-ttu-id="81e6d-418">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-418">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-419">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-419">Required.</span></span> <span data-ttu-id="81e6d-420">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="81e6d-420">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-421">Visual Basic の減算 (-) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-421">Represents the Visual Basic subtraction (-) operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-422"><paramref name="Left" /> と <paramref name="Right" /> の差。</span><span class="sxs-lookup"><span data-stu-id="81e6d-422">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-423">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-423">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="81e6d-424">- 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-424">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XorObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="81e6d-425">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-425">Required.</span></span> <span data-ttu-id="81e6d-426">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-426">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="81e6d-427">必須です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-427">Required.</span></span> <span data-ttu-id="81e6d-428">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-428">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="81e6d-429">Visual Basic の <see langword="Xor" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="81e6d-429">Represents the Visual Basic <see langword="Xor" /> operator.</span></span></summary>
        <returns><span data-ttu-id="81e6d-430"><see langword="Boolean" /> 値または数値。</span><span class="sxs-lookup"><span data-stu-id="81e6d-430">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="81e6d-431"><see langword="Boolean" /> 式の比較の場合、戻り値は 2 つの <see langword="Boolean" /> 値の排他的論理和です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-431">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="81e6d-432">ビットごとの (数値) 演算の場合、戻り値は 2 つの数値ビット パターンのビットごとの排他的論理和を表す数値です。</span><span class="sxs-lookup"><span data-stu-id="81e6d-432">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="81e6d-433">詳細については、「<see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor 演算子</see>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="81e6d-433">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81e6d-434">このクラスは Visual Basic コンパイラをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="81e6d-434">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="81e6d-435">Xor 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="81e6d-435">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
