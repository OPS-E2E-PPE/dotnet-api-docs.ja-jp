<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b9f80d0c710558ebe142d686dae5a47ffb42216" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78774057" /></Metadata><TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c0918-101">URL を物理ファイルに割り当てる方法を定義するためのプロパティとメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="c0918-101">Provides properties and methods for defining how a URL maps to a physical file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="c0918-102">物理ファイルの URL をマップするために、<xref:System.Web.Routing.PageRouteHandler> のインスタンスを <xref:System.Web.Routing.Route> コンストラクターに渡します。</span><span class="sxs-lookup"><span data-stu-id="c0918-102">You pass an instance of <xref:System.Web.Routing.PageRouteHandler> to the <xref:System.Web.Routing.Route> constructor in order to map a URL of a physical file.</span></span> <span data-ttu-id="c0918-103"><xref:System.Web.Routing.PageRouteHandler> オブジェクトは、物理ファイルの仮想パスを指定し、物理 URL の承認規則を確認するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="c0918-103">The <xref:System.Web.Routing.PageRouteHandler> object specifies the virtual path of the physical file and determines whether authorization rules for the physical URL is checked.</span></span>

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="c0918-104">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="c0918-104">ASP.NET Routing</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="c0918-105">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="c0918-105">How to: Define Routes for Web Forms Applications</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="c0918-106">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="c0918-106">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0918-107"><see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c0918-107">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span></span></summary>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="c0918-108">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="c0918-108">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="c0918-109">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="c0918-109">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="c0918-110">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="c0918-110">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="c0918-111">この <see cref="P:System.Web.Routing.RouteData.Route" /> オブジェクトに対応する物理ファイルの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="c0918-111">The virtual path of the physical file for this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span></span> <span data-ttu-id="c0918-112">ファイルは現在のアプリケーションに存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c0918-112">The file must be located in the current application.</span></span> <span data-ttu-id="c0918-113">したがって、パスはティルダ (~) で始まる必要があります。</span><span class="sxs-lookup"><span data-stu-id="c0918-113">Therefore, the path must begin with a tilde (~).</span></span></param>
        <summary><span data-ttu-id="c0918-114"><see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c0918-114">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="c0918-115">このコンストラクターを使用する場合、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティは `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="c0918-115">When you use this constructor, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true`.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0918-116"><paramref name="virtualPath" /> パラメーターは、<see langword="null" /> であるか、空の文字列であるか、"~/" で始まっていません。</span><span class="sxs-lookup"><span data-stu-id="c0918-116">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span></span></exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="c0918-117">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="c0918-117">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="c0918-118">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="c0918-118">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="c0918-119">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="c0918-119">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="c0918-120">この <see cref="P:System.Web.Routing.RouteData.Route" /> オブジェクトの物理ファイルの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="c0918-120">The virtual path of the physical file of this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span></span> <span data-ttu-id="c0918-121">ファイルは現在のアプリケーションに存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c0918-121">The file must be located in the current application.</span></span> <span data-ttu-id="c0918-122">したがって、パスはティルダ (~) で始まる必要があります。</span><span class="sxs-lookup"><span data-stu-id="c0918-122">Therefore, the path must begin with a tilde (~).</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="c0918-123">このプロパティが <see langword="false" /> に設定されている場合、認証規則は要求 URL に適用され、物理ページの URL には適用されません。</span><span class="sxs-lookup"><span data-stu-id="c0918-123">If this property is set to <see langword="false" />, authorization rules will be applied to the request URL and not to the URL of the physical page.</span></span> <span data-ttu-id="c0918-124">このプロパティが <see langword="true" /> に設定されている場合、認証規則は要求 URL と物理ページの URL の両方に適用されます。</span><span class="sxs-lookup"><span data-stu-id="c0918-124">If this property is set to <see langword="true" />, authorization rules will be applied to both the request URL and to the URL of the physical page.</span></span></param>
        <summary><span data-ttu-id="c0918-125"><see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c0918-125">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="c0918-126">既定では、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティは `true`です。</span><span class="sxs-lookup"><span data-stu-id="c0918-126">By default, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`.</span></span> <span data-ttu-id="c0918-127">したがって、物理ページの URL とルート URL の両方に承認規則を適用する場合は、このコンストラクターの代わりに <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> コンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="c0918-127">Therefore, if you want authorization rules to be applied to both the URL of the physical page and to the route URL, you can use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> constructor instead of this constructor.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0918-128"><paramref name="virtualPath" /> パラメーターは、<see langword="null" /> であるか、空の文字列であるか、"~/" で始まっていません。</span><span class="sxs-lookup"><span data-stu-id="c0918-128">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span></span></exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="c0918-129">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="c0918-129">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="c0918-130">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="c0918-130">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="c0918-131">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="c0918-131">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0918-132">認証規則が物理ファイルの URL に適用されるかどうかを指定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c0918-132">Gets a value that determines whether authorization rules are applied to the physical file's URL.</span></span></summary>
        <value><span data-ttu-id="c0918-133">ルートに関連付けられている物理ファイルの URL に対して認証が行われる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c0918-133"><see langword="true" /> if authorization is checked for the URL of the physical file that is associated with the route; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c0918-134">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="c0918-134">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="c0918-135"><xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> コンストラクターを使用する場合は、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティを設定できます。</span><span class="sxs-lookup"><span data-stu-id="c0918-135">You can set the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property when you use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> constructor.</span></span>

 <span data-ttu-id="c0918-136"><xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティの値によって、<xref:System.Web.Routing.PageRouteHandler> オブジェクトがルート URL に対してのみ、または物理ページとルート URL の両方のセキュリティアクセス許可をチェックするかどうかが決まります。</span><span class="sxs-lookup"><span data-stu-id="c0918-136">The value of the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property determines whether the <xref:System.Web.Routing.PageRouteHandler> object will check security permissions only for the route URL or for both the physical page and the route URL.</span></span>

 <span data-ttu-id="c0918-137"><xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティが `true` (既定値) に設定されている場合、ユーザーはルート URL と物理 URL の両方にアクセスするためのアクセス許可を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c0918-137">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true` (which is its default value), a user must have permission to access both the route URL and the physical URL.</span></span> <span data-ttu-id="c0918-138"><xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティが `false`に設定されている場合、ユーザーはルート URL にアクセスするためのアクセス許可のみを必要とし、物理 URL のアクセス許可はチェックされません。</span><span class="sxs-lookup"><span data-stu-id="c0918-138">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `false`, a user requires only permission to access the route URL, and permissions for the physical URL are not checked.</span></span>

 <span data-ttu-id="c0918-139">権限は、次の例に示すように、web.config ファイルで定義されています。</span><span class="sxs-lookup"><span data-stu-id="c0918-139">Permissions are defined in the Web.config file, as shown in the following example:</span></span>

```
<configuration>
  <location path="categoriespage.aspx">
    <system.web>
      <authorization>
        <allow roles="admin"/>
        <deny users="*"/>
      </authorization>
    </system.web>
  </location>
  <location path="category">
    <system.web>
      <authorization>
        <allow users="*"/>
      </authorization>
    </system.web>
  </location>
</configuration>
```

 <span data-ttu-id="c0918-140">ドメイン名の後に `Category/food/show` が含まれている要求 URL の場合、ルート URL パターンが `Category/{action}/{categoryName}`、物理ページがカテゴリページの場合、[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] は、前の例で定義されているアクセス許可を次のいずれかの方法で適用します。</span><span class="sxs-lookup"><span data-stu-id="c0918-140">For a request URL that contains `Category/food/show` after the domain name, if the route URL pattern is `Category/{action}/{categoryName}` and the physical page is Categoriespage.aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applies the permissions defined in the previous example in one of the following ways:</span></span>

-   <span data-ttu-id="c0918-141"><xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティが `false`の場合、すべてのユーザーには `category`で始まる URL パターンへのアクセスが許可されるため、すべてのユーザーにアクセス権が付与されます。</span><span class="sxs-lookup"><span data-stu-id="c0918-141">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `false`, all users are granted access, because all users are granted access to the URL pattern that starts with `category`.</span></span>

-   <span data-ttu-id="c0918-142"><xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティが `true`の場合、`admin` ユーザーのみにアクセスが許可されます。</span><span class="sxs-lookup"><span data-stu-id="c0918-142">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`, only `admin` users are granted access.</span></span> <span data-ttu-id="c0918-143">すべてのユーザーは `category`で始まる URL パターンにアクセスできますが、`admin` のユーザーのみが物理的なページカテゴリの .aspx にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="c0918-143">All users have access to the URL pattern that begins with `category`, but only `admin` users have access to the physical page Categoriespage.aspx.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="c0918-144">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="c0918-144">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="c0918-145">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="c0918-145">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="c0918-146">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="c0918-146">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHttpHandler (requestContext As RequestContext) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="c0918-147">要求に関する情報をカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c0918-147">An object that encapsulates information about the request.</span></span></param>
        <summary><span data-ttu-id="c0918-148">要求を処理するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="c0918-148">Returns the object that processes the request.</span></span></summary>
        <returns><span data-ttu-id="c0918-149">要求を処理するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c0918-149">The object that processes the request.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0918-150"><paramref name="requestContext" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c0918-150">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="c0918-151">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="c0918-151">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="c0918-152">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="c0918-152">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="c0918-153">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="c0918-153">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubstitutedVirtualPath (requestContext As RequestContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="c0918-154">要求に関する情報をカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c0918-154">An object that encapsulates information about the request.</span></span></param>
        <summary><span data-ttu-id="c0918-155">すべての置換パラメーターに置き換えが適用された後に、ルートに対応する物理ファイルの仮想パスを返します。</span><span class="sxs-lookup"><span data-stu-id="c0918-155">Returns the virtual path of the physical file for the route after substitutions have been applied to any replacement parameters.</span></span></summary>
        <returns><span data-ttu-id="c0918-156">ルートから生成された物理ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="c0918-156">The URL of the physical file that was generated from a route.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="c0918-157"><xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> 値に置換パラメーターが含まれていない場合、<xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> メソッドは <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> プロパティと同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="c0918-157">If the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> value does not contain any replacement parameters, the <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> method returns the same value as the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0918-158"><paramref name="requestContext" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c0918-158">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="c0918-159">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="c0918-159">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="c0918-160">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="c0918-160">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="c0918-161">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="c0918-161">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0918-162">このルートに関連付けられている Web ページの仮想パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="c0918-162">Gets the virtual path of the Web page that is associated with this route.</span></span></summary>
        <value><span data-ttu-id="c0918-163">置換パラメーターに対して置き換えが適用される前の、Web ページの URL。</span><span class="sxs-lookup"><span data-stu-id="c0918-163">The URL of the Web page, before substitutions have been applied for any replacement parameters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="c0918-164"><xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> プロパティは、<xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> コンストラクターまたは <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> コンストラクターで設定します。</span><span class="sxs-lookup"><span data-stu-id="c0918-164">You set the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor or in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="c0918-165">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="c0918-165">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="c0918-166">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="c0918-166">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="c0918-167">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="c0918-167">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
