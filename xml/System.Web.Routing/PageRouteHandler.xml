<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b9f80d0c710558ebe142d686dae5a47ffb42216" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78774057" /></Metadata><TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>URL を物理ファイルに割り当てる方法を定義するためのプロパティとメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 物理ファイルの URL をマップするために、<xref:System.Web.Routing.PageRouteHandler> のインスタンスを <xref:System.Web.Routing.Route> コンストラクターに渡します。 <xref:System.Web.Routing.PageRouteHandler> オブジェクトは、物理ファイルの仮想パスを指定し、物理 URL の承認規則を確認するかどうかを決定します。

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">方法: Web フォームアプリケーションのルートを定義する</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</summary>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">方法: Web フォームアプリケーションのルートを定義する</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">この <see cref="P:System.Web.Routing.RouteData.Route" /> オブジェクトに対応する物理ファイルの仮想パス。 ファイルは現在のアプリケーションに存在する必要があります。 したがって、パスはティルダ (~) で始まる必要があります。</param>
        <summary><see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このコンストラクターを使用する場合、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティは `true`に設定されます。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> パラメーターは、<see langword="null" /> であるか、空の文字列であるか、"~/" で始まっていません。</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">方法: Web フォームアプリケーションのルートを定義する</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">この <see cref="P:System.Web.Routing.RouteData.Route" /> オブジェクトの物理ファイルの仮想パス。 ファイルは現在のアプリケーションに存在する必要があります。 したがって、パスはティルダ (~) で始まる必要があります。</param>
        <param name="checkPhysicalUrlAccess">このプロパティが <see langword="false" /> に設定されている場合、認証規則は要求 URL に適用され、物理ページの URL には適用されません。 このプロパティが <see langword="true" /> に設定されている場合、認証規則は要求 URL と物理ページの URL の両方に適用されます。</param>
        <summary><see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 既定では、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティは `true`です。 したがって、物理ページの URL とルート URL の両方に承認規則を適用する場合は、このコンストラクターの代わりに <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> コンストラクターを使用できます。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> パラメーターは、<see langword="null" /> であるか、空の文字列であるか、"~/" で始まっていません。</exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">方法: Web フォームアプリケーションのルートを定義する</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</related>
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>認証規則が物理ファイルの URL に適用されるかどうかを指定する値を取得します。</summary>
        <value>ルートに関連付けられている物理ファイルの URL に対して認証が行われる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> コンストラクターを使用する場合は、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティを設定できます。

 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティの値によって、<xref:System.Web.Routing.PageRouteHandler> オブジェクトがルート URL に対してのみ、または物理ページとルート URL の両方のセキュリティアクセス許可をチェックするかどうかが決まります。

 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティが `true` (既定値) に設定されている場合、ユーザーはルート URL と物理 URL の両方にアクセスするためのアクセス許可を持っている必要があります。 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティが `false`に設定されている場合、ユーザーはルート URL にアクセスするためのアクセス許可のみを必要とし、物理 URL のアクセス許可はチェックされません。

 権限は、次の例に示すように、web.config ファイルで定義されています。

```
<configuration>
  <location path="categoriespage.aspx">
    <system.web>
      <authorization>
        <allow roles="admin"/>
        <deny users="*"/>
      </authorization>
    </system.web>
  </location>
  <location path="category">
    <system.web>
      <authorization>
        <allow users="*"/>
      </authorization>
    </system.web>
  </location>
</configuration>
```

 ドメイン名の後に `Category/food/show` が含まれている要求 URL の場合、ルート URL パターンが `Category/{action}/{categoryName}`、物理ページがカテゴリページの場合、[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] は、前の例で定義されているアクセス許可を次のいずれかの方法で適用します。

-   <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティが `false`の場合、すべてのユーザーには `category`で始まる URL パターンへのアクセスが許可されるため、すべてのユーザーにアクセス権が付与されます。

-   <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> プロパティが `true`の場合、`admin` ユーザーのみにアクセスが許可されます。 すべてのユーザーは `category`で始まる URL パターンにアクセスできますが、`admin` のユーザーのみが物理的なページカテゴリの .aspx にアクセスできます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">方法: Web フォームアプリケーションのルートを定義する</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</related>
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHttpHandler (requestContext As RequestContext) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">要求に関する情報をカプセル化するオブジェクト。</param>
        <summary>要求を処理するオブジェクトを返します。</summary>
        <returns>要求を処理するオブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestContext" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">方法: Web フォームアプリケーションのルートを定義する</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</related>
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubstitutedVirtualPath (requestContext As RequestContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">要求に関する情報をカプセル化するオブジェクト。</param>
        <summary>すべての置換パラメーターに置き換えが適用された後に、ルートに対応する物理ファイルの仮想パスを返します。</summary>
        <returns>ルートから生成された物理ファイルの URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> 値に置換パラメーターが含まれていない場合、<xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> メソッドは <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> プロパティと同じ値を返します。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestContext" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">方法: Web フォームアプリケーションのルートを定義する</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</related>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このルートに関連付けられている Web ページの仮想パスを取得します。</summary>
        <value>置換パラメーターに対して置き換えが適用される前の、Web ページの URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> プロパティは、<xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> コンストラクターまたは <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> コンストラクターで設定します。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">方法: Web フォームアプリケーションのルートを定義する</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</related>
      </Docs>
    </Member>
  </Members>
</Type>
