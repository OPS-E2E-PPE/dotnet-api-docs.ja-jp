<Type Name="IRouteConstraint" FullName="System.Web.Routing.IRouteConstraint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8133863065171e5dd681b336649c2784212b3eea" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77103067" /></Metadata><TypeSignature Language="C#" Value="public interface IRouteConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRouteConstraint" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.IRouteConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRouteConstraint" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRouteConstraint" />
  <TypeSignature Language="F#" Value="type IRouteConstraint = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>URL パラメーター値が制約に対して有効かどうかを調べるためにクラスで実装する必要のあるコントラクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 ルート定義に URL パラメーターの制約を含める場合は、制約を文字列として、または <xref:System.Web.Routing.IRouteConstraint> インターフェイスを実装するオブジェクトとして表す必要があります。 制約が文字列の場合は、正規表現として扱われます。 検証ロジックを正規表現として簡単に表すことができない場合は、<xref:System.Web.Routing.IRouteConstraint> を実装するクラスを作成します。 <xref:System.Web.Routing.IRouteConstraint.Match%2A> メソッドに検証ロジックを追加します。

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
  </Docs>
  <Members>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.Web.HttpContextBase httpContext, class System.Web.Routing.Route route, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Web::HttpContextBase ^ httpContext, System::Web::Routing::Route ^ route, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.Web.HttpContextBase * System.Web.Routing.Route * string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteDirection -&gt; bool" Usage="iRouteConstraint.Match (httpContext, route, parameterName, values, routeDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="route" Type="System.Web.Routing.Route" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">HTTP 要求に関する情報をカプセル化するオブジェクト。</param>
        <param name="route">この制約が属するオブジェクト。</param>
        <param name="parameterName">チェックされるパラメーターの名前。</param>
        <param name="values">URL のパラメーターが含まれるオブジェクト。</param>
        <param name="routeDirection">受信要求の処理時、または URL の生成時に、制約チェックが実行されるかどうかを示すオブジェクト。</param>
        <summary>URL パラメーターにこの制約の正しい値が含まれているかどうかを判断します。</summary>
        <returns>URL パラメーターに正しい値が含まれている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Routing.IRouteConstraint.Match%2A> メソッドを使用して、制約の検証ロジックを追加します。 このメソッドは、受信要求が処理され、URL が構築されるときに、ルーティングフレームワークによって呼び出されます。 現在のシナリオを確認するには、`routeDirection` パラメーターを調べます。

 要求が処理されると、ルーティングフレームワークは、受信要求のパターンと値がルートのパターンと制約と一致するかどうかを判断します。 URL が構築されると、ルーティングフレームワークによって、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> メソッドが呼び出されたときに指定された値が、ルートのパターンおよび制約と一致するかどうかが判断されます。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET ルーティング</related>
      </Docs>
    </Member>
  </Members>
</Type>
