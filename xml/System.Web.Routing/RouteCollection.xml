<Type Name="RouteCollection" FullName="System.Web.Routing.RouteCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe45e1e7f1cc5defee7300ffc657a156cf470b23" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78773706" /></Metadata><TypeSignature Language="C#" Value="public class RouteCollection : System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.RouteCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteCollection&#xA;Inherits Collection(Of RouteBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteCollection : System::Collections::ObjectModel::Collection&lt;System::Web::Routing::RouteBase ^&gt;" />
  <TypeSignature Language="F#" Value="type RouteCollection = class&#xA;    inherit Collection&lt;RouteBase&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Web.Routing" FromVersion="4.0.0.0" To="System.Web" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Web.Routing.RouteBase</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6b039-101">ASP.NET ルーティングのルートのコレクションを提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-101">Provides a collection of routes for ASP.NET routing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-102"><xref:System.Web.Routing.RouteCollection> クラスは、<xref:System.Web.Routing.RouteBase> クラスから派生するオブジェクトのコレクションを管理するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-102">The <xref:System.Web.Routing.RouteCollection> class provides methods that enable you to manage a collection of objects that derive from the <xref:System.Web.Routing.RouteBase> class.</span></span>

 <span data-ttu-id="6b039-103">通常は、<xref:System.Web.Routing.RouteTable> クラスの `static`<xref:System.Web.Routing.RouteTable.Routes%2A> プロパティを使用して、<xref:System.Web.Routing.RouteCollection> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="6b039-103">Typically, you will use the `static`<xref:System.Web.Routing.RouteTable.Routes%2A> property of the <xref:System.Web.Routing.RouteTable> class to retrieve a <xref:System.Web.Routing.RouteCollection> object.</span></span> <span data-ttu-id="6b039-104"><xref:System.Web.Routing.RouteTable.Routes%2A> プロパティは、ASP.NET アプリケーションのすべてのルートを格納します。</span><span class="sxs-lookup"><span data-stu-id="6b039-104">The <xref:System.Web.Routing.RouteTable.Routes%2A> property stores all the routes for an ASP.NET application.</span></span> <span data-ttu-id="6b039-105">ASP.NET ルーティングは、<xref:System.Web.Routing.RouteTable.Routes%2A> プロパティ内のルートを反復処理して、URL に一致するルートを検索します。</span><span class="sxs-lookup"><span data-stu-id="6b039-105">ASP.NET routing iterates through the routes in the <xref:System.Web.Routing.RouteTable.Routes%2A> property to find the route that matches a URL.</span></span>

 <span data-ttu-id="6b039-106">URL を作成するには、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> メソッドを呼び出し、値のコレクションを渡します。</span><span class="sxs-lookup"><span data-stu-id="6b039-106">To construct a URL, you call the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method and pass in a collection of values.</span></span> <span data-ttu-id="6b039-107"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> メソッドは、渡された値と一致するパラメーターを持つ最初のルートを検索し、一致するルートに関する情報を格納する <xref:System.Web.Routing.VirtualPathData> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="6b039-107">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method finds the first route with parameters that match the values that you passed in, and returns a <xref:System.Web.Routing.VirtualPathData> object that contains information about the matching route.</span></span> <span data-ttu-id="6b039-108">URL を取得するには、<xref:System.Web.Routing.VirtualPathData> オブジェクトの <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="6b039-108">You retrieve the URL through the <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> property of the <xref:System.Web.Routing.VirtualPathData> object.</span></span>

 <span data-ttu-id="6b039-109">名前を使用するか、名前を付けずに、ルートを追加できます。</span><span class="sxs-lookup"><span data-stu-id="6b039-109">You can add a route either with a name or without a name.</span></span> <span data-ttu-id="6b039-110">名前を含めると、Url の構築時に同様のルートを区別できます。</span><span class="sxs-lookup"><span data-stu-id="6b039-110">Including a name enables you to distinguish between similar routes when URLs are constructed.</span></span> <span data-ttu-id="6b039-111">名前を指定しない場合、ASP.NET routing はコレクション内で最初に一致するルートを使用して URL を作成します。</span><span class="sxs-lookup"><span data-stu-id="6b039-111">If you do not specify a name, ASP.NET routing uses the first matching route in the collection to construct a URL.</span></span>

 <span data-ttu-id="6b039-112">名前のないルートを <xref:System.Web.Routing.RouteCollection> オブジェクトに追加した場合、既にコレクション内に存在するルートを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="6b039-112">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span> <span data-ttu-id="6b039-113">名前付きルートを追加する場合、コレクション内のルートを既に識別している名前を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="6b039-113">When you add a named route, you cannot use a name that already identifies a route in the collection.</span></span>

 <span data-ttu-id="6b039-114"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A> メソッドと <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> メソッドを使用して、他のプロセスと競合することなく、コレクションとの対話を確実に行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6b039-114">You use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 <span data-ttu-id="6b039-115">ルートコレクションにルートを追加する方法の詳細については、「 [ASP.NET Routing](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6b039-115">For more information about how to add a route to a route collection, see [ASP.NET Routing](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)).</span></span>

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-116">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-116">ASP.NET Routing</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6b039-117"><see cref="T:System.Web.Routing.RouteCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6b039-117">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span></span></summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-118">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-118">ASP.NET Routing</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b039-119"><see cref="T:System.Web.Routing.RouteCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6b039-119">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-120">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-120">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPathProvider As VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.RouteCollection : System.Web.Hosting.VirtualPathProvider -&gt; System.Web.Routing.RouteCollection" Usage="new System.Web.Routing.RouteCollection virtualPathProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider"><span data-ttu-id="6b039-121">仮想ファイル システムからリソースを取得するためのプロバイダーです。</span><span class="sxs-lookup"><span data-stu-id="6b039-121">A provider for retrieving resources from a virtual file system.</span></span></param>
        <summary><span data-ttu-id="6b039-122">指定した仮想パス プロバイダーを使用して、<see cref="T:System.Web.Routing.RouteCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6b039-122">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class by using the specified virtual path provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-123">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-123">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Add(System.String,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.Add : string * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.Add (name, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6b039-124">ルートを識別する値。</span><span class="sxs-lookup"><span data-stu-id="6b039-124">The value that identifies the route.</span></span> <span data-ttu-id="6b039-125">この値を <see langword="null" /> または空の文字列にすることもできます。</span><span class="sxs-lookup"><span data-stu-id="6b039-125">The value can be <see langword="null" /> or an empty string.</span></span></param>
        <param name="item"><span data-ttu-id="6b039-126">コレクションの末尾に追加するルート。</span><span class="sxs-lookup"><span data-stu-id="6b039-126">The route to add to the end of the collection.</span></span></param>
        <summary><span data-ttu-id="6b039-127"><see cref="T:System.Web.Routing.RouteCollection" /> オブジェクトの末尾にルートを追加し、そのルートに指定した名前を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="6b039-127">Adds a route to the end of the <see cref="T:System.Web.Routing.RouteCollection" /> object and assigns the specified name to the route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-128"><xref:System.Web.Routing.RouteCollection.Add%2A> メソッドを使用すると、ルートコレクションにルートを追加するときに、その名前を定義できます。</span><span class="sxs-lookup"><span data-stu-id="6b039-128">The <xref:System.Web.Routing.RouteCollection.Add%2A> method enables you to define a name for a route when you add it to the route collection.</span></span> <span data-ttu-id="6b039-129">ルートの名前を定義することで、ルーティングを使用して URL を作成するときに使用する特定のルートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="6b039-129">By defining a name for the route, you can specify a particular route to use when you use routing to construct a URL.</span></span> <span data-ttu-id="6b039-130">複数のルートが <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> メソッドに渡す値と一致する場合は、特定のルートを指定することが重要です。</span><span class="sxs-lookup"><span data-stu-id="6b039-130">Specifying a particular route is important when more than one route matches the values that you pass to the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method.</span></span> <span data-ttu-id="6b039-131">名前付きルートを指定しない場合、ASP.NET ルーティングは、コレクション内の値に一致する最初のルートを使用します。</span><span class="sxs-lookup"><span data-stu-id="6b039-131">If you do not specify a named route, ASP.NET routing will use the first route in the collection that matches the values.</span></span> <span data-ttu-id="6b039-132">詳細については、「[方法: ルートから url を作成する](https://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6b039-132">For more information, see [How to: Construct URLs from Routes](https://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650).</span></span>

 <span data-ttu-id="6b039-133">名前は、<xref:System.Web.Routing.RouteCollection> オブジェクト内で1回のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="6b039-133">A name can be used only one time in the <xref:System.Web.Routing.RouteCollection> object.</span></span>

 <span data-ttu-id="6b039-134">ルートの名前を指定する必要がない場合は、<xref:System.Collections.ObjectModel.Collection%601.Add%2A> メソッドを呼び出してルートを追加できます。</span><span class="sxs-lookup"><span data-stu-id="6b039-134">If you do not have to specify a name for the route, you can add the route by calling the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method.</span></span>

 <span data-ttu-id="6b039-135"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A> メソッドと <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> メソッドを使用して、他のプロセスと競合することなく、コレクションとの対話を確実に行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6b039-135">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>



## Examples
 <span data-ttu-id="6b039-136">次の例では、<xref:System.Web.Routing.RouteCollection> オブジェクトにルートを追加し、ルートに名前を割り当てる方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6b039-136">The following example shows how to add a route to a <xref:System.Web.Routing.RouteCollection> object and assign a name to the route.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#1)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6b039-137"><paramref name="item" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="6b039-137"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6b039-138"><paramref name="name" /> は既にコレクション内で使用されています。</span><span class="sxs-lookup"><span data-stu-id="6b039-138"><paramref name="name" /> is already used in the collection.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-139">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-139">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public bool AppendTrailingSlash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendTrailingSlash { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AppendTrailingSlash : bool with get, set" Usage="System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b039-140">仮想パスが正規化されるときに後続のスラッシュを追加するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6b039-140">Gets or sets a value that indicates whether trailing slashes are added when virtual paths are normalized.</span></span></summary>
        <value><span data-ttu-id="6b039-141">末尾のスラッシュが追加される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6b039-141"><see langword="true" /> if trailing slashes are added; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6b039-142">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6b039-142">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="routeCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b039-143"><see cref="T:System.Web.Routing.RouteCollection" /> オブジェクトからすべての要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="6b039-143">Removes all the elements from the <see cref="T:System.Web.Routing.RouteCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-144"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A> メソッドと <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> メソッドを使用して、他のプロセスと競合することなく、コレクションとの対話を確実に行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6b039-144">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-145">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-145">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetReadLock">
      <MemberSignature Language="C#" Value="public IDisposable GetReadLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetReadLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetReadLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetReadLock();" />
      <MemberSignature Language="F#" Value="member this.GetReadLock : unit -&gt; IDisposable" Usage="routeCollection.GetReadLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b039-146">コレクションからオブジェクトを取得する場合に、スレッド セーフを管理するためのオブジェクトを提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-146">Provides an object for managing thread safety when you retrieve an object from the collection.</span></span></summary>
        <returns><span data-ttu-id="6b039-147">スレッド セーフを管理するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-147">An object that manages thread safety.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-148"><xref:System.Web.Routing.RouteCollection> オブジェクトは、アプリケーション内の複数のプロセスで使用できます。</span><span class="sxs-lookup"><span data-stu-id="6b039-148">The <xref:System.Web.Routing.RouteCollection> object is available to multiple processes in the application.</span></span> <span data-ttu-id="6b039-149">そのため、アプリケーションの実行中にルートを取得する必要がある場合は、スレッドセーフを保証するために <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="6b039-149">Therefore, if you have to retrieve a route when the application is running, use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method in order to guarantee thread safety.</span></span> <span data-ttu-id="6b039-150">ルートコレクションの読み取りロックを取得することによって、コレクションを取得しようとしている間に、コレクションが変更されないようにします。</span><span class="sxs-lookup"><span data-stu-id="6b039-150">By obtaining a read lock on the route collection, you make sure that the collection will not be modified while you are trying to retrieve it.</span></span>

 <span data-ttu-id="6b039-151"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A> メソッドは、ロックを取得できるようになるまでスレッドの続行を停止します。</span><span class="sxs-lookup"><span data-stu-id="6b039-151">The <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method stops the thread from continuing until the lock can be acquired.</span></span> <span data-ttu-id="6b039-152">書き込みロックが設定されている場合、スレッドは更新が完了し、書き込みロックが解除されるまで待機します。</span><span class="sxs-lookup"><span data-stu-id="6b039-152">If a write lock is in place, the thread waits until the update is completed and the write lock is released.</span></span> <span data-ttu-id="6b039-153">このメソッドによって返される <xref:System.IDisposable> オブジェクトが破棄されると、ルートコレクションの読み取りロックが解除されます。</span><span class="sxs-lookup"><span data-stu-id="6b039-153">The read lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>

 <span data-ttu-id="6b039-154"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A>を使用しない場合は、<xref:System.Web.Routing.RouteCollection> コレクションの読み取り中にエラーが発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="6b039-154">If you do not use <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>, you might get an error while you are reading through the <xref:System.Web.Routing.RouteCollection> collection.</span></span> <span data-ttu-id="6b039-155">たとえば、<xref:System.Web.Routing.RouteCollection> コレクション内のオブジェクトをループ処理して、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>を呼び出さずに読み取るとします。</span><span class="sxs-lookup"><span data-stu-id="6b039-155">For example, suppose you loop through the objects in the <xref:System.Web.Routing.RouteCollection> collection to read them, without calling <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span> <span data-ttu-id="6b039-156">この操作を行っている間に、別の要求の別のスレッドが <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> を呼び出して、ルートをコレクションに追加することがあります。</span><span class="sxs-lookup"><span data-stu-id="6b039-156">While you are doing that, another thread from another request might call <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> and add a route to the collection.</span></span> <span data-ttu-id="6b039-157">その後、最初のスレッドがエラーで失敗します。</span><span class="sxs-lookup"><span data-stu-id="6b039-157">The first thread will then fail with an error.</span></span>

 <span data-ttu-id="6b039-158"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A>を呼び出す必要がないシナリオが2つあります。</span><span class="sxs-lookup"><span data-stu-id="6b039-158">There are two scenarios in which you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span></span>

-   <span data-ttu-id="6b039-159"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> や <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> などの <xref:System.Web.Routing.RouteCollection> クラスのパブリックメソッドは、内部的に <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6b039-159">Public methods of the <xref:System.Web.Routing.RouteCollection> class such as <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> and <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> internally.</span></span> <span data-ttu-id="6b039-160">したがって、<xref:System.Web.Routing.RouteCollection> クラスのパブリックメソッドを呼び出してコレクションからデータを取得する場合は、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A> を明示的に呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="6b039-160">Therefore, you do not have to explicitly call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> when you call a public method of the <xref:System.Web.Routing.RouteCollection> class to retrieve data from the collection.</span></span>

-   <span data-ttu-id="6b039-161">アプリケーションが起動しているときに、`Application_Start` イベントハンドラーなどの要求をまだ処理していない場合、実行中のスレッドは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="6b039-161">When the application is starting and is not yet processing requests, such as in the `Application_Start` event handler, only one thread is running.</span></span> <span data-ttu-id="6b039-162">読み取り中にコレクションを更新する可能性のある他のスレッドがないため、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>を呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="6b039-162">Because there are no other threads that might update the collection while you are reading it, you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span>



## Examples
 <span data-ttu-id="6b039-163">次の例は、アプリケーションの実行中にルートを取得するときに <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 方法を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-163">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method when you retrieve a route while the application is running.</span></span> <span data-ttu-id="6b039-164">`Using` ステートメントを使用すると、コレクションから読み取るときに実行時に何が起こるか (コードが正常に完了したか、例外がスローされたか) に関係なく、`Using` コードブロックの最後にロックが安全に解放されます。</span><span class="sxs-lookup"><span data-stu-id="6b039-164">The `Using` statement ensures that no matter what happens at run time when you read from the collection (whether the code completes normally or an exception is thrown) the lock will be safely released at the end of the `Using` code block.</span></span>



 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-165">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-165">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="member this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="routeCollection.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext"><span data-ttu-id="6b039-166">HTTP 要求に関する情報をカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-166">An object that encapsulates information about the HTTP request.</span></span></param>
        <summary><span data-ttu-id="6b039-167">指定した値と一致する、コレクション内のルートに関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="6b039-167">Returns information about the route in the collection that matches the specified values.</span></span></summary>
        <returns><span data-ttu-id="6b039-168">ルート定義からの値が含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-168">An object that contains the values from the route definition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6b039-169"><paramref name="context" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="6b039-169"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6b039-170"><paramref name="context" /> パラメーターのオブジェクトの <see cref="P:System.Web.HttpContextBase.Request" /> プロパティは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6b039-170">The <see cref="P:System.Web.HttpContextBase.Request" /> property of the object in the <paramref name="context" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-171">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-171">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetVirtualPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6b039-172">ルートと関連付けられている URL パスに関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="6b039-172">Returns information about the URL path that is associated with the route.</span></span></summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-173">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-173">ASP.NET Routing</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualPath (requestContext As RequestContext, values As RouteValueDictionary) As VirtualPathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="6b039-174">要求されたルートに関する情報をカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-174">An object that encapsulates information about the requested route.</span></span></param>
        <param name="values"><span data-ttu-id="6b039-175">ルートのパラメーターを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-175">An object that contains the parameters for a route.</span></span></param>
        <summary><span data-ttu-id="6b039-176">指定のコンテキストおよびパラメーター値に基づいて、ルートに関連付けられている URL パスに関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="6b039-176">Returns information about the URL path that is associated with the route, given the specified context and parameter values.</span></span></summary>
        <returns><span data-ttu-id="6b039-177">ルートに関連付けられている URL パスに関する情報を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-177">An object that contains information about the URL path that is associated with the route.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-178">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-178">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, string name, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, string name, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualPath (requestContext As RequestContext, name As String, values As RouteValueDictionary) As VirtualPathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::String ^ name, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="6b039-179">要求されたルートに関する情報をカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-179">An object that encapsulates information about the requested route.</span></span></param>
        <param name="name"><span data-ttu-id="6b039-180">URL パスに関する情報を取得するときに使用するルート名。</span><span class="sxs-lookup"><span data-stu-id="6b039-180">The name of the route to use when information about the URL path is retrieved.</span></span></param>
        <param name="values"><span data-ttu-id="6b039-181">ルートのパラメーターを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-181">An object that contains the parameters for a route.</span></span></param>
        <summary><span data-ttu-id="6b039-182">指定のコンテキスト、ルート名、およびパラメーター値に基づいて、名前付きのルートに関連付けられている URL パスに関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="6b039-182">Returns information about the URL path that is associated with the named route, given the specified context, route name, and parameter values.</span></span></summary>
        <returns><span data-ttu-id="6b039-183">ルートに関連付けられている URL パスに関する情報を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-183">An object that contains information about the URL path that is associated with the route.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6b039-184"><paramref name="name" /> パラメーターに指定された名前を持つルートは見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="6b039-184">No route could be found that has the name specified in the <paramref name="name" /> parameter.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-185">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-185">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetWriteLock">
      <MemberSignature Language="C#" Value="public IDisposable GetWriteLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetWriteLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetWriteLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWriteLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetWriteLock();" />
      <MemberSignature Language="F#" Value="member this.GetWriteLock : unit -&gt; IDisposable" Usage="routeCollection.GetWriteLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b039-186">コレクション内の要素を追加または削除する場合に、スレッド セーフを管理するためのオブジェクトを提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-186">Provides an object for managing thread safety when you add or remove elements in the collection.</span></span></summary>
        <returns><span data-ttu-id="6b039-187">スレッド セーフを管理するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6b039-187">An object that manages thread safety.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-188">ASP.NET アプリケーションでルートを定義する場合は、global.asax ファイルの `Application_Start` イベントのイベントハンドラーの <xref:System.Web.Routing.RouteTable.Routes%2A> プロパティにルートを追加することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="6b039-188">The recommended approach for defining routes in an ASP.NET application is to add the routes to the <xref:System.Web.Routing.RouteTable.Routes%2A> property in an event handler for the `Application_Start` event in the Global.asax file.</span></span> <span data-ttu-id="6b039-189">詳細については、「<xref:System.Web.Routing.RouteCollection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6b039-189">For more information, see <xref:System.Web.Routing.RouteCollection>.</span></span>

 <span data-ttu-id="6b039-190">アプリケーションの実行時にルートを追加する必要がある場合は、<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> メソッドを使用して、スレッドセーフを確保します。</span><span class="sxs-lookup"><span data-stu-id="6b039-190">If you have to add a route when the application is running, you use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to guarantee thread safety.</span></span> <span data-ttu-id="6b039-191">このメソッドによって返される <xref:System.IDisposable> オブジェクトが破棄されると、ルートコレクションの書き込みロックが解放されます。</span><span class="sxs-lookup"><span data-stu-id="6b039-191">The write lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>



## Examples
 <span data-ttu-id="6b039-192">次の例は、アプリケーションの実行中にルートを追加するときに、<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> メソッドを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-192">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method when you add a route while the application is running.</span></span>



 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-193">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-193">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ignore">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6b039-194">ルートの照合を行わない URL パターンを定義します。</span><span class="sxs-lookup"><span data-stu-id="6b039-194">Defines a URL pattern that should not be checked for matches against routes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-195">このメソッドは、<xref:System.Web.Routing.StopRoutingHandler> ルートハンドラーにマップされるルートを作成します。</span><span class="sxs-lookup"><span data-stu-id="6b039-195">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="6b039-196">このメソッドを呼び出した後、指定した URL パターンに一致する要求は、ルート要求として処理されません。</span><span class="sxs-lookup"><span data-stu-id="6b039-196">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>

 <span data-ttu-id="6b039-197">ASP.NET routing は、URL がイメージファイルなどの物理ファイルと一致する場合、要求を自動的に無視します。</span><span class="sxs-lookup"><span data-stu-id="6b039-197">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="6b039-198">場合によっては、物理ファイルが存在しないときに、ルーティングで要求を無視することが必要になる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="6b039-198">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="6b039-199">たとえば、ASP.NET が自動的に作成する要求は、ファイル名の拡張子に対応する物理ファイルがない場合でも、ファイルをルート要求として扱うことはできません。</span><span class="sxs-lookup"><span data-stu-id="6b039-199">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-200">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-200">ASP.NET Routing</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string -&gt; unit" Usage="routeCollection.Ignore url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="6b039-201">無視する URL パターン。</span><span class="sxs-lookup"><span data-stu-id="6b039-201">The URL pattern to be ignored.</span></span></param>
        <summary><span data-ttu-id="6b039-202">ルートの照合を行わない URL パターンを定義します。</span><span class="sxs-lookup"><span data-stu-id="6b039-202">Defines a URL pattern that should not be checked for matches against routes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-203">このメソッドは、<xref:System.Web.Routing.StopRoutingHandler> ルートハンドラーにマップされるルートを作成します。</span><span class="sxs-lookup"><span data-stu-id="6b039-203">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="6b039-204">このメソッドを呼び出した後、指定した URL パターンに一致する要求は、ルート要求として処理されません。</span><span class="sxs-lookup"><span data-stu-id="6b039-204">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>

 <span data-ttu-id="6b039-205">ASP.NET routing は、URL がイメージファイルなどの物理ファイルと一致する場合、要求を自動的に無視します。</span><span class="sxs-lookup"><span data-stu-id="6b039-205">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="6b039-206">場合によっては、物理ファイルが存在しないときに、ルーティングで要求を無視することが必要になる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="6b039-206">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="6b039-207">たとえば、ASP.NET が自動的に作成する要求は、ファイル名の拡張子に対応する物理ファイルがない場合でも、ファイルをルート要求として扱うことはできません。</span><span class="sxs-lookup"><span data-stu-id="6b039-207">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>



## Examples
 <span data-ttu-id="6b039-208">MVC プロジェクトの既定のテンプレートでは、次の例に示すように、このメソッドを使用して、trace.axd ファイルをルーティングから除外します。</span><span class="sxs-lookup"><span data-stu-id="6b039-208">The default template for MVC projects uses this method to exclude .axd files from routing, as shown in the following example:</span></span>

 [!code-csharp[MvcDefaultApp#2](~/samples/snippets/csharp/VS_Snippets_WebNet/mvcdefaultapp/cs/global.asax.cs#2)]
 [!code-vb[MvcDefaultApp#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/mvcdefaultapp/vb/global.asax.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-209">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-209">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url, object constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url, object constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String, constraints As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url, System::Object ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string * obj -&gt; unit" Usage="routeCollection.Ignore (url, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="constraints" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="6b039-210">無視する URL パターン。</span><span class="sxs-lookup"><span data-stu-id="6b039-210">The URL pattern to be ignored.</span></span></param>
        <param name="constraints"><span data-ttu-id="6b039-211">URL パターンに一致する要求を無視するかどうかを決定する、追加の抽出条件。</span><span class="sxs-lookup"><span data-stu-id="6b039-211">Additional criteria that determine whether a request that matches the URL pattern will be ignored.</span></span></param>
        <summary><span data-ttu-id="6b039-212">要求 URL が指定された制約に一致する場合に、ルートの照合を行わない URL パターンを定義します。</span><span class="sxs-lookup"><span data-stu-id="6b039-212">Defines a URL pattern that should not be checked for matches against routes if a request URL meets the specified constraints.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-213">このメソッドは、<xref:System.Web.Routing.StopRoutingHandler> ルートハンドラーにマップされるルートを作成します。</span><span class="sxs-lookup"><span data-stu-id="6b039-213">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="6b039-214">このメソッドを呼び出した後、指定した URL パターンに一致する要求は、ルート要求として処理されません。</span><span class="sxs-lookup"><span data-stu-id="6b039-214">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>

 <span data-ttu-id="6b039-215">ASP.NET routing は、URL がイメージファイルなどの物理ファイルと一致する場合、要求を自動的に無視します。</span><span class="sxs-lookup"><span data-stu-id="6b039-215">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="6b039-216">場合によっては、物理ファイルが存在しないときに、ルーティングで要求を無視することが必要になる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="6b039-216">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="6b039-217">たとえば、ASP.NET が自動的に作成する要求は、ファイル名の拡張子に対応する物理ファイルがない場合でも、ファイルをルート要求として扱うことはできません。</span><span class="sxs-lookup"><span data-stu-id="6b039-217">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>



## Examples
 <span data-ttu-id="6b039-218">次の例は、このメソッドを使用して、.aspx 拡張子を持つすべての Url を無視する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-218">The following example shows how to use this method to ignore all URLs that have an .aspx extension.</span></span> <span data-ttu-id="6b039-219">拡張機能 ".aspx" を含むファイルのすべての Url を処理するカスタム HTTP ハンドラーを登録する場合は、この操作を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6b039-219">You might want to do this if you register a custom HTTP handler to handle all URLs for files that have the extension ".aspx".</span></span> <span data-ttu-id="6b039-220">すべての .aspx 要求に一致する単一の URL パターンでは、`{*path}.aspx/{*pathinfo}`などの2つの汎用パラメーターが必要です。</span><span class="sxs-lookup"><span data-stu-id="6b039-220">A single URL pattern that would match all .aspx requests would require two catchall parameters such as `{*path}.aspx/{*pathinfo}`.</span></span> <span data-ttu-id="6b039-221">(このパターンは、クエリ文字列パラメーターを持つ URL を含め、.aspx で終了するすべての URL と一致します)。ただし、ルーティングでは、最後に汎用パラメーターを1つだけ使用できます。</span><span class="sxs-lookup"><span data-stu-id="6b039-221">(This pattern would match any URL that ends in .aspx, including those that have query-string parameters.) However, routing allows only one catchall parameter at the end.</span></span> <span data-ttu-id="6b039-222">別の方法として、次の例に示すように、すべての Url に一致する1つの汎用パラメーターを持つ URL パターンを指定し、.aspx 拡張子が付いていないすべてを除外する制約を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6b039-222">As an alternative, you can specify a URL pattern that has a single catchall parameter that matches all URLs and then specify constraints that exclude everything that does not have the .aspx extension, as shown in the following example:</span></span>

```vb
routes.Ignore("{*allaspx}", new With {.allaspx = ".*\.aspx(/.*)?"})
```

```csharp
routes.Ignore("{*allaspx}", new {allaspx=@".*\.aspx(/.*)?"});
```

 <span data-ttu-id="6b039-223">前のコード行は通常、<xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> オーバーロードの例に示すように、global.asax の `Application_Start` メソッドから呼び出されるメソッドに追加されます。</span><span class="sxs-lookup"><span data-stu-id="6b039-223">The previous line of code would typically be added to a method that is called from the `Application_Start` method in the Global.asax, as shown in the example for the <xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> overload.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6b039-224"><paramref name="url" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6b039-224">The <paramref name="url" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-225">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-225">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.InsertItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6b039-226"><paramref name="item" /> を挿入する位置の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="6b039-226">The zero-based index at which <paramref name="item" /> is inserted.</span></span></param>
        <param name="item"><span data-ttu-id="6b039-227">挿入するルート。</span><span class="sxs-lookup"><span data-stu-id="6b039-227">The route to insert.</span></span></param>
        <summary><span data-ttu-id="6b039-228">指定したルートを、指定したインデックス位置にある <see cref="T:System.Web.Routing.RouteCollection" /> オブジェクトに挿入します。</span><span class="sxs-lookup"><span data-stu-id="6b039-228">Inserts the specified route into the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-229">名前のないルートを <xref:System.Web.Routing.RouteCollection> オブジェクトに追加した場合、既にコレクション内に存在するルートを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="6b039-229">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>

 <span data-ttu-id="6b039-230"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A> メソッドと <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> メソッドを使用して、他のプロセスと競合することなく、コレクションとの対話を確実に行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6b039-230">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6b039-231"><paramref name="item" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="6b039-231"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6b039-232"><paramref name="item" /> はコレクションに既にあります。</span><span class="sxs-lookup"><span data-stu-id="6b039-232"><paramref name="item" /> is already in the collection.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-233">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-233">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteBase this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteBase Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As RouteBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteBase ^ default[System::String ^] { System::Web::Routing::RouteBase ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.Routing.RouteBase" Usage="System.Web.Routing.RouteCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6b039-234">取得するルートを識別する値。</span><span class="sxs-lookup"><span data-stu-id="6b039-234">The value that identifies the route to get.</span></span></param>
        <summary><span data-ttu-id="6b039-235">指定した名前のルートをコレクションから取得します。</span><span class="sxs-lookup"><span data-stu-id="6b039-235">Gets the route in the collection that has the specified name.</span></span></summary>
        <value><span data-ttu-id="6b039-236">指定した名前を持つオブジェクト。<paramref name="name" /> が <see langword="null" />、空の文字列、またはコレクション内のいずれのルートとも一致しない名前の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6b039-236">An object that has the specified name, or <see langword="null" /> if <paramref name="name" /> is <see langword="null" />, is an empty string, or does not match any route in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-237"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A> メソッドと <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> メソッドを使用して、他のプロセスと競合することなく、コレクションとの対話を確実に行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6b039-237">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-238">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-238">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LowercaseUrls">
      <MemberSignature Language="C#" Value="public bool LowercaseUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LowercaseUrls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property LowercaseUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LowercaseUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LowercaseUrls : bool with get, set" Usage="System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b039-239">仮想パスが正規化されるときに URL を小文字に変換するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6b039-239">Gets or sets a value that indicates whether URLs are converted to lower case when virtual paths are normalized.</span></span></summary>
        <value><span data-ttu-id="6b039-240">小文字に URL を変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6b039-240"><see langword="true" /> to convert URLs to lower case; otherwise <see langword="false" />.</span></span> <span data-ttu-id="6b039-241">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6b039-241">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-242">URL にクエリ文字列が含まれている場合、URL のその部分は小文字に変換されません。</span><span class="sxs-lookup"><span data-stu-id="6b039-242">If a query string is included in the URL, that part of the URL is not converted to lower case.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPageRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6b039-243">Web フォーム アプリケーションのルートを定義する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-243">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-244">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="6b039-244">This method is provided for coding convenience.</span></span> <span data-ttu-id="6b039-245">これは、<xref:System.Web.Routing.RouteCollection.Add%2A> メソッドを呼び出し、<xref:System.Web.Routing.PageRouteHandler> クラスを使用して作成された <xref:System.Web.Routing.Route> オブジェクトを渡すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="6b039-245">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="6b039-246">次の例は、このメソッドを使用して、Web フォームアプリケーションのルートを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-246">The following example shows how to define routes for a Web Forms application by using this method.</span></span> <span data-ttu-id="6b039-247">この例は、global.asax ファイルの `Application_Start` から呼び出される `RegisterRoutes` という名前のメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-247">The example shows a method named `RegisterRoutes` that is called from `Application_Start` in the Global.asax file.</span></span> <span data-ttu-id="6b039-248">メソッドは、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> の各オーバーロードを使用して、アプリケーションにルートを追加します。</span><span class="sxs-lookup"><span data-stu-id="6b039-248">The method uses each overload of <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> to add a route to the application.</span></span> <span data-ttu-id="6b039-249">Web フォームアプリケーションのルートを定義する方法の詳細については、「[方法: Web フォームアプリケーションのルートを定義](https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6b039-249">For more information about how to define routes for Web Forms applications, see [How to: Define Routes for Web Forms Applications](https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678).</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#122)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#122)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-250">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-250">ASP.NET Routing</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="6b039-251">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="6b039-251">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="6b039-252">ルートの URL パターン。</span><span class="sxs-lookup"><span data-stu-id="6b039-252">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="6b039-253">ルートの物理的な URL。</span><span class="sxs-lookup"><span data-stu-id="6b039-253">The physical URL for the route.</span></span></param>
        <summary><span data-ttu-id="6b039-254">Web フォーム アプリケーションのルートを定義する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-254">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="6b039-255">ルート コレクションに追加されたルート。</span><span class="sxs-lookup"><span data-stu-id="6b039-255">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-256">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="6b039-256">This method is provided for coding convenience.</span></span> <span data-ttu-id="6b039-257">これは、<xref:System.Web.Routing.RouteCollection.Add%2A> メソッドを呼び出し、<xref:System.Web.Routing.PageRouteHandler> クラスを使用して作成された <xref:System.Web.Routing.Route> オブジェクトを渡すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="6b039-257">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="6b039-258">次の例は、このメソッドを使用してルートを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-258">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="6b039-259">最初のステートメントは、名前のないルートを定義します。</span><span class="sxs-lookup"><span data-stu-id="6b039-259">The first statement defines a route that does not have a name.</span></span> <span data-ttu-id="6b039-260">2番目のステートメントでは、名前付きのルートを定義します。</span><span class="sxs-lookup"><span data-stu-id="6b039-260">The second statement defines a named route.</span></span> <span data-ttu-id="6b039-261">この例は、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> メソッドの概要で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6b039-261">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#140)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#140)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-262">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-262">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="6b039-263">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="6b039-263">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="6b039-264">ルートの URL パターン。</span><span class="sxs-lookup"><span data-stu-id="6b039-264">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="6b039-265">ルートの物理的な URL。</span><span class="sxs-lookup"><span data-stu-id="6b039-265">The physical URL for the route.</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="6b039-266">物理的な URL にアクセスするための権限をユーザーが持っていることを ASP.NET で確認するかどうかを示す値 (ルート URL は常にチェックされます)。</span><span class="sxs-lookup"><span data-stu-id="6b039-266">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span></span> <span data-ttu-id="6b039-267">このパラメーターは、<see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6b039-267">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span></span></param>
        <summary><span data-ttu-id="6b039-268">Web フォーム アプリケーションのルートを定義する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-268">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="6b039-269">ルート コレクションに追加されたルート。</span><span class="sxs-lookup"><span data-stu-id="6b039-269">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-270">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="6b039-270">This method is provided for coding convenience.</span></span> <span data-ttu-id="6b039-271">これは、<xref:System.Web.Routing.RouteCollection.Add%2A> メソッドを呼び出し、<xref:System.Web.Routing.PageRouteHandler> クラスを使用して作成された <xref:System.Web.Routing.Route> オブジェクトを渡すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="6b039-271">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="6b039-272">次の例は、このメソッドを使用してルートを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-272">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="6b039-273">この例は、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> メソッドの概要で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6b039-273">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#145)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#145)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-274">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-274">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="6b039-275">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="6b039-275">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="6b039-276">ルートの URL パターン。</span><span class="sxs-lookup"><span data-stu-id="6b039-276">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="6b039-277">ルートの物理的な URL。</span><span class="sxs-lookup"><span data-stu-id="6b039-277">The physical URL for the route.</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="6b039-278">物理的な URL にアクセスするための権限をユーザーが持っていることを ASP.NET で確認するかどうかを示す値 (ルート URL は常にチェックされます)。</span><span class="sxs-lookup"><span data-stu-id="6b039-278">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span></span> <span data-ttu-id="6b039-279">このパラメーターは、<see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6b039-279">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span></span></param>
        <param name="defaults"><span data-ttu-id="6b039-280">ルート パラメーターの既定値。</span><span class="sxs-lookup"><span data-stu-id="6b039-280">Default values for the route parameters.</span></span></param>
        <summary><span data-ttu-id="6b039-281">Web フォーム アプリケーションのルートを定義する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-281">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="6b039-282">ルート コレクションに追加されたルート。</span><span class="sxs-lookup"><span data-stu-id="6b039-282">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-283">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="6b039-283">This method is provided for coding convenience.</span></span> <span data-ttu-id="6b039-284">これは、<xref:System.Web.Routing.RouteCollection.Add%2A> メソッドを呼び出し、<xref:System.Web.Routing.PageRouteHandler> クラスを使用して作成された <xref:System.Web.Routing.Route> オブジェクトを渡すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="6b039-284">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="6b039-285">次の例は、このメソッドを使用してルートを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-285">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="6b039-286">この例は、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> メソッドの概要で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6b039-286">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#150)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#150)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-287">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-287">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="6b039-288">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="6b039-288">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="6b039-289">ルートの URL パターン。</span><span class="sxs-lookup"><span data-stu-id="6b039-289">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="6b039-290">ルートの物理的な URL。</span><span class="sxs-lookup"><span data-stu-id="6b039-290">The physical URL for the route.</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="6b039-291">物理的な URL にアクセスするための権限をユーザーが持っていることを ASP.NET で確認するかどうかを示す値 (ルート URL は常にチェックされます)。</span><span class="sxs-lookup"><span data-stu-id="6b039-291">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span></span> <span data-ttu-id="6b039-292">このパラメーターは、<see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6b039-292">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span></span></param>
        <param name="defaults"><span data-ttu-id="6b039-293">ルートの既定値。</span><span class="sxs-lookup"><span data-stu-id="6b039-293">Default values for the route.</span></span></param>
        <param name="constraints"><span data-ttu-id="6b039-294">このルートとして処理されるために URL 要求で満たす必要がある制約。</span><span class="sxs-lookup"><span data-stu-id="6b039-294">Constraints that a URL request must meet in order to be processed as this route.</span></span></param>
        <summary><span data-ttu-id="6b039-295">Web フォーム アプリケーションのルートを定義する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-295">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="6b039-296">ルート コレクションに追加されたルート。</span><span class="sxs-lookup"><span data-stu-id="6b039-296">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-297">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="6b039-297">This method is provided for coding convenience.</span></span> <span data-ttu-id="6b039-298">これは、<xref:System.Web.Routing.RouteCollection.Add%2A> メソッドを呼び出し、<xref:System.Web.Routing.PageRouteHandler> クラスを使用して作成された <xref:System.Web.Routing.Route> オブジェクトを渡すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="6b039-298">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="6b039-299">次の例は、このメソッドを使用してルートを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-299">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="6b039-300">この例は、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> メソッドの概要で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6b039-300">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#155)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#155)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-301">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-301">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints, dataTokens)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="6b039-302">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="6b039-302">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="6b039-303">ルートの URL パターン。</span><span class="sxs-lookup"><span data-stu-id="6b039-303">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="6b039-304">ルートの物理的な URL。</span><span class="sxs-lookup"><span data-stu-id="6b039-304">The physical URL for the route.</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="6b039-305">物理的な URL にアクセスするための権限をユーザーが持っていることを ASP.NET で確認するかどうかを示す値 (ルート URL は常にチェックされます)。</span><span class="sxs-lookup"><span data-stu-id="6b039-305">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span></span> <span data-ttu-id="6b039-306">このパラメーターは、<see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6b039-306">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span></span></param>
        <param name="defaults"><span data-ttu-id="6b039-307">ルート パラメーターの既定値。</span><span class="sxs-lookup"><span data-stu-id="6b039-307">Default values for the route parameters.</span></span></param>
        <param name="constraints"><span data-ttu-id="6b039-308">このルートとして処理されるために URL 要求で満たす必要がある制約。</span><span class="sxs-lookup"><span data-stu-id="6b039-308">Constraints that a URL request must meet in order to be processed as this route.</span></span></param>
        <param name="dataTokens"><span data-ttu-id="6b039-309">ルートに関連付けられているが、ルートが URL パターンに一致するかどうかの判定には使用されない値。</span><span class="sxs-lookup"><span data-stu-id="6b039-309">Values that are associated with the route that are not used to determine whether a route matches a URL pattern.</span></span></param>
        <summary><span data-ttu-id="6b039-310">Web フォーム アプリケーションのルートを定義する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="6b039-310">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="6b039-311">ルート コレクションに追加されたルート。</span><span class="sxs-lookup"><span data-stu-id="6b039-311">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-312">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="6b039-312">This method is provided for coding convenience.</span></span> <span data-ttu-id="6b039-313">これは、<xref:System.Web.Routing.RouteCollection.Add%2A> メソッドを呼び出し、<xref:System.Web.Routing.PageRouteHandler> クラスを使用して作成された <xref:System.Web.Routing.Route> オブジェクトを渡すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="6b039-313">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="6b039-314">次の例は、このメソッドを使用してルートを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6b039-314">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="6b039-315">この例は、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> メソッドの概要で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6b039-315">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#160)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#160)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6b039-316"><paramref name="routeUrl" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6b039-316">The <paramref name="routeUrl" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-317">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-317">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="routeCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6b039-318">削除するルートの 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="6b039-318">The zero-based index of the route to remove.</span></span></param>
        <summary><span data-ttu-id="6b039-319">指定されたインデックス位置にあるルートを <see cref="T:System.Web.Routing.RouteCollection" /> オブジェクトから削除します。</span><span class="sxs-lookup"><span data-stu-id="6b039-319">Removes the route from the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-320"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A> メソッドと <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> メソッドを使用して、他のプロセスと競合することなく、コレクションとの対話を確実に行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6b039-320">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-321">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-321">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RouteExistingFiles">
      <MemberSignature Language="C#" Value="public bool RouteExistingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteExistingFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteExistingFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteExistingFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RouteExistingFiles : bool with get, set" Usage="System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b039-322">既存のファイルと一致する URL を ASP.NET ルーティングが処理するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6b039-322">Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.</span></span></summary>
        <value><span data-ttu-id="6b039-323">ASP.NET ルーティングで、既存のファイルと一致する要求も含めすべての要求を処理する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6b039-323"><see langword="true" /> if ASP.NET routing handles all requests, even those that match an existing file; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6b039-324">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6b039-324">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-325">この値は動的に変更できますが、ASP.NET ルーティング統合を使用すると、サービスがアクティブ化された後に行われた変更はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="6b039-325">Although this value can be changed dynamically, any change made after a service has been activated will be ignored when using ASP.NET routing integration.</span></span> <span data-ttu-id="6b039-326">詳細については、「 [ASP.NET Routing Integration](https://go.microsoft.com/fwlink/?LinkId=195235)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6b039-326">For more information, see [ASP.NET Routing Integration](https://go.microsoft.com/fwlink/?LinkId=195235).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-327">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-327">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.SetItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6b039-328">置き換えるルートの 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="6b039-328">The zero-based index of the route to replace.</span></span></param>
        <param name="item"><span data-ttu-id="6b039-329">指定したインデックス位置に追加するルート。</span><span class="sxs-lookup"><span data-stu-id="6b039-329">The route to add at the specified index.</span></span></param>
        <summary><span data-ttu-id="6b039-330">指定したインデックス位置にあるルートを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6b039-330">Replaces the route at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6b039-331">名前のないルートを <xref:System.Web.Routing.RouteCollection> オブジェクトに追加した場合、既にコレクション内に存在するルートを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="6b039-331">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>

 <span data-ttu-id="6b039-332"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A> メソッドと <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> メソッドを使用して、他のプロセスと競合することなく、コレクションとの対話を確実に行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6b039-332">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6b039-333"><paramref name="item" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="6b039-333"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6b039-334"><paramref name="item" /> はコレクションに既にあります。</span><span class="sxs-lookup"><span data-stu-id="6b039-334"><paramref name="item" /> is already in the collection.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="6b039-335">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="6b039-335">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
