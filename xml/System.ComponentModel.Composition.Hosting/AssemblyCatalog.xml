<Type Name="AssemblyCatalog" FullName="System.ComponentModel.Composition.Hosting.AssemblyCatalog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95d1f7055f599c2b647f728551cc6e2cef1d990d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75150328" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <TypeSignature Language="F#" Value="type AssemblyCatalog = class&#xA;    inherit ComposablePartCatalog&#xA;    interface ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="59393-101">マネージド コード アセンブリで属性付きの部分を検出します。</span><span class="sxs-lookup"><span data-stu-id="59393-101">Discovers attributed parts in a managed code assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59393-102">指定されたアセンブリに存在するすべてのパーツを解析するために <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="59393-102">An <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> is used to parse all the parts present in a specified assembly.</span></span> <span data-ttu-id="59393-103">ターゲットアセンブリは、オブジェクト参照またはパスによって指定できます。</span><span class="sxs-lookup"><span data-stu-id="59393-103">The target assembly can be indicated either by object reference or by path.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="59393-104">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="59393-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="59393-105">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="59393-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="59393-106">直接的に型を破棄するには、<xref:System.IDisposable.Dispose%2A>`try`/ ブロック内で `catch` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="59393-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="59393-107">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="59393-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="59393-108">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="59393-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="59393-109">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="59393-109">This type is thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59393-110">次のコードは、独自のアセンブリを解析するための <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> を作成するアプリケーションの一般的なシナリオを示しています。</span><span class="sxs-lookup"><span data-stu-id="59393-110">The following code demonstrates the common scenario of an application creating an <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> to parse its own assembly.</span></span> <span data-ttu-id="59393-111">これは、1つのプロジェクトに含まれるパーツを Managed Extensibility Framework (MEF) に読み込むための簡単な方法です。</span><span class="sxs-lookup"><span data-stu-id="59393-111">This is a straightforward way to load parts contained in a single project into the Managed Extensibility Framework (MEF).</span></span>  
  
 [!code-csharp[Composition.CompositionContainer#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="59393-112"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="59393-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog assembly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="59393-113"><see cref="T:System.Type" /> オブジェクトに追加する属性付きの <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトを格納するアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="59393-113">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <summary><span data-ttu-id="59393-114">アセンブリを指定して、<see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="59393-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59393-115"><paramref name="assembly" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="59393-115"><paramref name="assembly" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="59393-116">または</span><span class="sxs-lookup"><span data-stu-id="59393-116">-or-</span></span> 
 <span data-ttu-id="59393-117"><paramref name="assembly" /> が、リフレクション専用コンテキストで読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="59393-117"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog codeBase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="59393-118"><see cref="T:System.Type" /> オブジェクトに追加するための属性付き <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトを含むアセンブリのコード ベース (つまり、アセンブリ ファイルへのパス) を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="59393-118">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <summary><span data-ttu-id="59393-119">コード ベースを指定して、<see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="59393-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59393-120">`codeBase` によって参照されるアセンブリが読み込みコンテキストに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="59393-120">The assembly referenced by `codeBase` is loaded into the load context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="59393-121"><paramref name="codeBase" /> は有効なアセンブリ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="59393-121"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="59393-122">または</span><span class="sxs-lookup"><span data-stu-id="59393-122">-or-</span></span> 
<span data-ttu-id="59393-123">現在、Version 2.0 以前の共通言語ランタイムが読み込まれていますが、それよりも新しいバージョンを使用して <paramref name="codeBase" /> がコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="59393-123">Version 2.0 or earlier of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="59393-124">呼び出し元に、パス検索アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="59393-124">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="59393-125"><paramref name="codeBase" /> を読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="59393-125"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="59393-126">または</span><span class="sxs-lookup"><span data-stu-id="59393-126">-or-</span></span> 
 <span data-ttu-id="59393-127"><paramref name="codeBase" /> がディレクトリを指定しました。</span><span class="sxs-lookup"><span data-stu-id="59393-127"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="59393-128"><paramref name="codeBase" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="59393-128"><paramref name="codeBase" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="59393-129"><paramref name="codeBase" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="59393-129"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59393-130"><paramref name="codeBase" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="59393-130"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="59393-131">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="59393-131">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (assembly, definitionOrigin)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="59393-132"><see cref="T:System.Type" /> オブジェクトに追加する属性付きの <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトを格納するアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="59393-132">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="59393-133">パーツのソースを識別するために診断で使用される要素。</span><span class="sxs-lookup"><span data-stu-id="59393-133">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="59393-134">アセンブリを指定して、<see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="59393-134">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59393-135"><paramref name="assembly" /> または <paramref name="definitionOrigin" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="59393-135"><paramref name="assembly" /> or <paramref name="definitionOrigin" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="59393-136">または</span><span class="sxs-lookup"><span data-stu-id="59393-136">-or-</span></span> 
 <span data-ttu-id="59393-137"><paramref name="assembly" /> が、リフレクション専用コンテキストで読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="59393-137"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (assembly, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="59393-138"><see cref="T:System.Type" /> オブジェクトに追加する属性付きの <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトを格納するアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="59393-138">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="59393-139">型を解釈するためにカタログで使用されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="59393-139">The context used by the catalog to interpret types.</span></span></param>
        <summary><span data-ttu-id="59393-140">指定したアセンブリとリフレクション コンテキストを使用して、<see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="59393-140">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly and reflection context.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59393-141"><paramref name="assembly" /> または <paramref name="reflectionContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="59393-141"><paramref name="assembly" /> or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="59393-142">または</span><span class="sxs-lookup"><span data-stu-id="59393-142">-or-</span></span> 
 <span data-ttu-id="59393-143"><paramref name="assembly" /> が、リフレクション専用コンテキストで読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="59393-143"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String, definitionOrigin As ICompositionElement)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (codeBase, definitionOrigin)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="59393-144"><see cref="T:System.Type" /> オブジェクトに追加するための属性付き <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトを含むアセンブリのコード ベース (つまり、アセンブリ ファイルへのパス) を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="59393-144">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="59393-145">パーツのソースを識別するために診断で使用される要素。</span><span class="sxs-lookup"><span data-stu-id="59393-145">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="59393-146">コード ベースを指定して、<see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="59393-146">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="59393-147">`codeBase` によって参照されるアセンブリが読み込みコンテキストに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="59393-147">The assembly referenced by `codeBase` is loaded into the Load context.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="59393-148"><paramref name="codeBase" /> は有効なアセンブリ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="59393-148"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="59393-149">または</span><span class="sxs-lookup"><span data-stu-id="59393-149">-or-</span></span> 
<span data-ttu-id="59393-150">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="codeBase" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="59393-150">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="59393-151">呼び出し元に、パス検索アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="59393-151">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="59393-152"><paramref name="codeBase" /> を読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="59393-152"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="59393-153">または</span><span class="sxs-lookup"><span data-stu-id="59393-153">-or-</span></span> 
 <span data-ttu-id="59393-154"><paramref name="codeBase" /> がディレクトリを指定しました。</span><span class="sxs-lookup"><span data-stu-id="59393-154"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="59393-155"><paramref name="codebase" /> または <paramref name="definitionOrigin" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="59393-155"><paramref name="codebase" /> or <paramref name="definitionOrigin" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="59393-156"><paramref name="codeBase" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="59393-156"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59393-157"><paramref name="codeBase" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="59393-157"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="59393-158">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="59393-158">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (codeBase, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="59393-159"><see cref="T:System.Type" /> オブジェクトに追加するための属性付き <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトを含むアセンブリのコード ベース (つまり、アセンブリ ファイルへのパス) を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="59393-159">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="59393-160">型を解釈するためにカタログで使用されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="59393-160">The context used by the catalog to interpret types.</span></span></param>
        <summary><span data-ttu-id="59393-161">指定したコード ベースとリフレクション コンテキストを使用して、<see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="59393-161">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base and reflection context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="59393-162">`codebase` によって参照されるアセンブリが読み込みコンテキストに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="59393-162">The assembly referenced by`codebase` is loaded into the Load context.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="59393-163"><paramref name="codeBase" /> は有効なアセンブリ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="59393-163"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="59393-164">または</span><span class="sxs-lookup"><span data-stu-id="59393-164">-or-</span></span> 
<span data-ttu-id="59393-165">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="codeBase" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="59393-165">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="59393-166">呼び出し元に、パス検索アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="59393-166">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="59393-167"><paramref name="codeBase" /> を読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="59393-167"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="59393-168">または</span><span class="sxs-lookup"><span data-stu-id="59393-168">-or-</span></span> 
 <span data-ttu-id="59393-169"><paramref name="codeBase" /> がディレクトリを指定しました。</span><span class="sxs-lookup"><span data-stu-id="59393-169"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="59393-170"><paramref name="codebase" /> または <paramref name="reflectionContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="59393-170"><paramref name="codebase" /> or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="59393-171"><paramref name="codeBase" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="59393-171"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59393-172"><paramref name="codeBase" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="59393-172"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="59393-173">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="59393-173">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (assembly, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="59393-174"><see cref="T:System.Type" /> オブジェクトに追加する属性付きの <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトを格納するアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="59393-174">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="59393-175">型を解釈するためにカタログで使用されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="59393-175">The context used by the catalog to interpret types.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="59393-176">パーツのソースを識別するために診断で使用される要素。</span><span class="sxs-lookup"><span data-stu-id="59393-176">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="59393-177">指定したアセンブリとリフレクション コンテキストを使用して、<see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="59393-177">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly and reflection context.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59393-178"><paramref name="assembly" />、<paramref name="definitionOrigin" />、または <paramref name="reflectionContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="59393-178"><paramref name="assembly" />, <paramref name="definitionOrigin" />, or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="59393-179">または</span><span class="sxs-lookup"><span data-stu-id="59393-179">-or-</span></span> 
 <span data-ttu-id="59393-180"><paramref name="assembly" /> が、リフレクション専用コンテキストで読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="59393-180"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (codeBase, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="59393-181"><see cref="T:System.Type" /> オブジェクトに追加するための属性付き <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトを含むアセンブリのコード ベース (つまり、アセンブリ ファイルへのパス) を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="59393-181">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="59393-182">型を解釈するためにカタログで使用されるコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="59393-182">The context used by the catalog to interpret types.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="59393-183">パーツのソースを識別するために診断で使用される要素。</span><span class="sxs-lookup"><span data-stu-id="59393-183">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="59393-184">指定したコード ベースとリフレクション コンテキストを使用して、<see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="59393-184">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base and reflection context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="59393-185">`codebase` によって参照されるアセンブリが読み込みコンテキストに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="59393-185">The assembly referenced by `codebase` is loaded into the Load context.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="59393-186"><paramref name="codeBase" /> は有効なアセンブリ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="59393-186"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="59393-187">または</span><span class="sxs-lookup"><span data-stu-id="59393-187">-or-</span></span> 
<span data-ttu-id="59393-188">共通言語ランタイムのバージョン 2.0 以降が現在読み込まれています。<paramref name="codeBase" /> は、より新しいバージョンでコンパイルされています。</span><span class="sxs-lookup"><span data-stu-id="59393-188">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="59393-189">呼び出し元に、パス検索アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="59393-189">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="59393-190"><paramref name="codeBase" /> を読み込めませんでした。</span><span class="sxs-lookup"><span data-stu-id="59393-190"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="59393-191">または</span><span class="sxs-lookup"><span data-stu-id="59393-191">-or-</span></span> 
 <span data-ttu-id="59393-192"><paramref name="codeBase" /> がディレクトリを指定しました。</span><span class="sxs-lookup"><span data-stu-id="59393-192"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="59393-193"><paramref name="codebase" />、<paramref name="definitionOrigin" />、または <paramref name="reflectionContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="59393-193"><paramref name="codebase" />, <paramref name="definitionOrigin" /> or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="59393-194"><paramref name="codeBase" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="59393-194"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59393-195"><paramref name="codeBase" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="59393-195"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="59393-196">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="59393-196">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59393-197">属性付きの型がアセンブリ カタログに格納されているアセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="59393-197">Gets the assembly whose attributed types are contained in the assembly catalog.</span></span></summary>
        <value><span data-ttu-id="59393-198">属性付きの <see cref="T:System.Type" /> オブジェクトが <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> に格納されているアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="59393-198">The assembly whose attributed <see cref="T:System.Type" /> objects are contained in the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="assemblyCatalog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="59393-199">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59393-199"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="59393-200"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="59393-200">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="assemblyCatalog.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59393-201">カタログを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="59393-201">Returns an enumerator that iterates through the catalog.</span></span></summary>
        <returns><span data-ttu-id="59393-202">カタログの反復処理に使用できる列挙子。</span><span class="sxs-lookup"><span data-stu-id="59393-202">An enumerator that can be used to iterate through the catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="override this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ExportDefinition&gt;" Usage="assemblyCatalog.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="59393-203">一致するエクスポートを指定する条件。</span><span class="sxs-lookup"><span data-stu-id="59393-203">Conditions that specify which exports to match.</span></span></param>
        <summary><span data-ttu-id="59393-204">インポート定義で指定した条件に一致するエクスポートのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="59393-204">Gets a collection of exports that match the conditions specified by the import definition.</span></span></summary>
        <returns><span data-ttu-id="59393-205"><paramref name="definition" /> で指定した条件に一致するエクスポートのコレクション。</span><span class="sxs-lookup"><span data-stu-id="59393-205">A collection of exports that match the conditions specified by <paramref name="definition" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## <a name="notes-to-inheritors"></a><span data-ttu-id="59393-206">継承に関する注意事項</span><span class="sxs-lookup"><span data-stu-id="59393-206">Notes to inheritors</span></span>
 <span data-ttu-id="59393-207">このプロパティの Overriders がない場合は `null` を返しません</span><span class="sxs-lookup"><span data-stu-id="59393-207">Overriders of this property should never return `null` if no</span></span>  
<span data-ttu-id="59393-208"><xref:System.ComponentModel.Composition.Primitives.ExportDefinition> は `definition`で定義された条件と一致します。代わりに、空の <xref:System.Collections.Generic.IEnumerable%601>を返します。</span><span class="sxs-lookup"><span data-stu-id="59393-208"><xref:System.ComponentModel.Composition.Primitives.ExportDefinition> matches the conditions defined by `definition`; instead, return an empty <xref:System.Collections.Generic.IEnumerable%601>.</span></span>
                ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="59393-209"><paramref name="definition" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="59393-209"><paramref name="definition" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="59393-210"><see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="59393-210">The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parts">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parts As IQueryable(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ Parts { System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parts : System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59393-211">アセンブリ カタログに格納されているパーツ定義を取得します。</span><span class="sxs-lookup"><span data-stu-id="59393-211">Gets the part definitions that are contained in the assembly catalog.</span></span></summary>
        <value><span data-ttu-id="59393-212"><see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> に格納されている <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="59393-212">The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects contained in the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="59393-213"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトは破棄されました。</span><span class="sxs-lookup"><span data-stu-id="59393-213">The <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::ComponentModel::Composition::Primitives::ICompositionElement::DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59393-214"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトの表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="59393-214">Gets the display name of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></summary>
        <value><span data-ttu-id="59393-215">この <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> オブジェクトの型およびアセンブリを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="59393-215">A string that represents the type and assembly of this <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59393-216">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="59393-216">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="59393-217">これは、<xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> のインスタンスが <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="59393-217">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System::ComponentModel::Composition::Primitives::ICompositionElement::Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59393-218">この要素の基になっている合成要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="59393-218">Gets the composition element that this element originated from.</span></span></summary>
        <value><span data-ttu-id="59393-219">常に <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="59393-219">Always <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59393-220">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="59393-220">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="59393-221">これは、<xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> のインスタンスが <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="59393-221">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assemblyCatalog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59393-222">アセンブリ カタログの文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="59393-222">Gets a string representation of the assembly catalog.</span></span></summary>
        <returns><span data-ttu-id="59393-223">アセンブリ カタログの表現。</span><span class="sxs-lookup"><span data-stu-id="59393-223">A representation of the assembly catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
