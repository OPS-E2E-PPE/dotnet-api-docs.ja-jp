<Type Name="ServiceCollectionServiceExtensions" FullName="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="468bf0553747675b183a1733501aa6056bd22bd7" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73405148" /></Metadata><TypeSignature Language="C#" Value="public static class ServiceCollectionServiceExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceCollectionServiceExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceCollectionServiceExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCollectionServiceExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ServiceCollectionServiceExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ec72f-101">サービスを <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加するための拡張メソッド。</span><span class="sxs-lookup"><span data-stu-id="ec72f-101">Extension methods for adding services to an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddScoped">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddScoped (services As IServiceCollection, serviceType As Type) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="static member AddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped (services, serviceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-102">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-102">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-103">登録するサービスの型と使用する実装。</span><span class="sxs-lookup"><span data-stu-id="ec72f-103">The type of the service to register and the implementation to use.</span></span></param>
        <summary><span data-ttu-id="ec72f-104"><paramref name="serviceType" /> で指定した型のスコープ サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-104">Adds a scoped service of the type specified in <paramref name="serviceType" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-105">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-105">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />
      </Docs>
    </Member>
    <Member MemberName="AddScoped">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddScoped (services As IServiceCollection, serviceType As Type, implementationFactory As Func(Of IServiceProvider, Object)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member AddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Func&lt;IServiceProvider, obj&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped (services, serviceType, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-106">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-106">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-107">登録するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-107">The type of the service to register.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="ec72f-108">サービスを作成するファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec72f-108">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-109"><paramref name="implementationFactory" /> でファクトリを指定し、<paramref name="serviceType" /> で指定した型のスコープ サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-109">Adds a scoped service of the type specified in <paramref name="serviceType" /> with a factory specified in <paramref name="implementationFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-110">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-110">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />
      </Docs>
    </Member>
    <Member MemberName="AddScoped">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddScoped (services As IServiceCollection, serviceType As Type, implementationType As Type) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member AddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Type -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped (services, serviceType, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-111">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-111">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-112">登録するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-112">The type of the service to register.</span></span></param>
        <param name="implementationType"><span data-ttu-id="ec72f-113">サービスの実装の型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-113">The implementation type of the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-114"><paramref name="implementationType" /> で型の実装を指定し、<paramref name="serviceType" /> で指定した型のスコープ サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-114">Adds a scoped service of the type specified in <paramref name="serviceType" /> with an implementation of the type specified in <paramref name="implementationType" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-115">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-115">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />
      </Docs>
    </Member>
    <Member MemberName="AddScoped&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddScoped(Of TService As Class) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-116">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-116">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-117">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-117">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <summary><span data-ttu-id="ec72f-118"><typeparamref name="TService" /> で指定した型のスコープ サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-118">Adds a scoped service of the type specified in <typeparamref name="TService" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-119">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-119">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />
      </Docs>
    </Member>
    <Member MemberName="AddScoped&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddScoped(Of TService As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member AddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-120">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-120">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-121">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-121">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="ec72f-122">サービスを作成するファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec72f-122">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-123"><paramref name="implementationFactory" /> でファクトリを指定し、<typeparamref name="TService" /> で指定した型のスコープ サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-123">Adds a scoped service of the type specified in <typeparamref name="TService" /> with a factory specified in <paramref name="implementationFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-124">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-124">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />
      </Docs>
    </Member>
    <Member MemberName="AddScoped&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddScoped(Of TService As Class, TImplementation As Class) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-125">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-125">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="ec72f-126">使用する実装の型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-126">The type of the implementation to use.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-127">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-127">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <summary><span data-ttu-id="ec72f-128"><typeparamref name="TImplementation" /> で実装型を指定し、<typeparamref name="TService" /> で指定した型のスコープ サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-128">Adds a scoped service of the type specified in <typeparamref name="TService" /> with an implementation type specified in <typeparamref name="TImplementation" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-129">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-129">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />
      </Docs>
    </Member>
    <Member MemberName="AddScoped&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TImplementation&gt; implementationFactory) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddScoped&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TImplementation&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddScoped(Of TService As Class, TImplementation As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TImplementation)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TImplementation&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member AddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, #'Service&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddScoped (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TImplementation&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-130">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-130">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="ec72f-131">使用する実装の型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-131">The type of the implementation to use.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-132">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-132">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="ec72f-133">サービスを作成するファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec72f-133">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-134"><paramref name="implementationFactory" /> で指定したファクトリを使用して <typeparamref name="TImplementation" /> で実装型を指定し、<typeparamref name="TService" /> で指定した型のスコープ サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-134">Adds a scoped service of the type specified in <typeparamref name="TService" /> with an implementation type specified in <typeparamref name="TImplementation" /> using the factory specified in <paramref name="implementationFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-135">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-135">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />
      </Docs>
    </Member>
    <Member MemberName="AddSingleton">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSingleton (services As IServiceCollection, serviceType As Type) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="static member AddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton (services, serviceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-136">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-136">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-137">登録するサービスの型と使用する実装。</span><span class="sxs-lookup"><span data-stu-id="ec72f-137">The type of the service to register and the implementation to use.</span></span></param>
        <summary><span data-ttu-id="ec72f-138"><paramref name="serviceType" /> で指定した型のシングルトン サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-138">Adds a singleton service of the type specified in <paramref name="serviceType" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-139">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-139">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      </Docs>
    </Member>
    <Member MemberName="AddSingleton">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSingleton (services As IServiceCollection, serviceType As Type, implementationFactory As Func(Of IServiceProvider, Object)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member AddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Func&lt;IServiceProvider, obj&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton (services, serviceType, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-140">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-140">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-141">登録するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-141">The type of the service to register.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="ec72f-142">サービスを作成するファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec72f-142">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-143"><paramref name="implementationFactory" /> でファクトリを指定し、<paramref name="serviceType" /> で指定した型のシングルトン サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-143">Adds a singleton service of the type specified in <paramref name="serviceType" /> with a factory specified in <paramref name="implementationFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-144">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-144">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      </Docs>
    </Member>
    <Member MemberName="AddSingleton">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType, object implementationInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType, object implementationInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSingleton (services As IServiceCollection, serviceType As Type, implementationInstance As Object) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType, System::Object ^ implementationInstance);" />
      <MemberSignature Language="F#" Value="static member AddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * obj -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton (services, serviceType, implementationInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-145">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-145">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-146">登録するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-146">The type of the service to register.</span></span></param>
        <param name="implementationInstance"><span data-ttu-id="ec72f-147">サービスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ec72f-147">The instance of the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-148"><paramref name="implementationInstance" /> でインスタンスを指定し、<paramref name="serviceType" /> で指定した型のシングルトン サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-148">Adds a singleton service of the type specified in <paramref name="serviceType" /> with an instance specified in <paramref name="implementationInstance" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-149">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-149">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      </Docs>
    </Member>
    <Member MemberName="AddSingleton">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSingleton (services As IServiceCollection, serviceType As Type, implementationType As Type) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member AddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Type -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton (services, serviceType, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-150">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-150">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-151">登録するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-151">The type of the service to register.</span></span></param>
        <param name="implementationType"><span data-ttu-id="ec72f-152">サービスの実装の型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-152">The implementation type of the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-153"><paramref name="implementationType" /> で型の実装を指定し、<paramref name="serviceType" /> で指定した型のシングルトン サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-153">Adds a singleton service of the type specified in <paramref name="serviceType" /> with an implementation of the type specified in <paramref name="implementationType" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-154">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-154">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      </Docs>
    </Member>
    <Member MemberName="AddSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSingleton(Of TService As Class) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-155">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-155">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-156">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-156">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <summary><span data-ttu-id="ec72f-157"><typeparamref name="TService" /> で指定した型のシングルトン サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-157">Adds a singleton service of the type specified in <typeparamref name="TService" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-158">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-158">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      </Docs>
    </Member>
    <Member MemberName="AddSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSingleton(Of TService As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member AddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-159">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-159">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-160">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-160">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="ec72f-161">サービスを作成するファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec72f-161">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-162"><paramref name="implementationFactory" /> でファクトリを指定し、<typeparamref name="TService" /> で指定した型のシングルトン サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-162">Adds a singleton service of the type specified in <typeparamref name="TService" /> with a factory specified in <paramref name="implementationFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-163">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-163">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      </Docs>
    </Member>
    <Member MemberName="AddSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, TService implementationInstance) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, !!TService implementationInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSingleton(Of TService As Class) (services As IServiceCollection, implementationInstance As TService) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, TService implementationInstance);" />
      <MemberSignature Language="F#" Value="static member AddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * 'Service -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton (services, implementationInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationInstance" Type="TService" />
      </Parameters>
      <Docs>
        <typeparam name="TService">To be added.</typeparam>
        <param name="services"><span data-ttu-id="ec72f-164">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-164">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="implementationInstance"><span data-ttu-id="ec72f-165">サービスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ec72f-165">The instance of the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-166"><paramref name="implementationInstance" /> でインスタンスを指定し、<typeparamref name="TService" /> で指定した型のシングルトン サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-166">Adds a singleton service of the type specified in <typeparamref name="TService" /> with an instance specified in <paramref name="implementationInstance" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-167">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-167">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      </Docs>
    </Member>
    <Member MemberName="AddSingleton&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSingleton(Of TService As Class, TImplementation As Class) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-168">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-168">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="ec72f-169">使用する実装の型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-169">The type of the implementation to use.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-170">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-170">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <summary><span data-ttu-id="ec72f-171"><typeparamref name="TImplementation" /> で実装型を指定し、<typeparamref name="TService" /> で指定した型のシングルトン サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-171">Adds a singleton service of the type specified in <typeparamref name="TService" /> with an implementation type specified in <typeparamref name="TImplementation" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-172">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-172">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      </Docs>
    </Member>
    <Member MemberName="AddSingleton&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TImplementation&gt; implementationFactory) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddSingleton&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TImplementation&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSingleton(Of TService As Class, TImplementation As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TImplementation)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TImplementation&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member AddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, #'Service&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TImplementation&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-173">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-173">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="ec72f-174">使用する実装の型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-174">The type of the implementation to use.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-175">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-175">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="ec72f-176">サービスを作成するファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec72f-176">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-177"><paramref name="implementationFactory" /> で指定したファクトリを使用して <typeparamref name="TImplementation" /> で実装型を指定し、<typeparamref name="TService" /> で指定した型のシングルトン サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-177">Adds a singleton service of the type specified in <typeparamref name="TService" /> with an implementation type specified in <typeparamref name="TImplementation" /> using the factory specified in <paramref name="implementationFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-178">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-178">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />
      </Docs>
    </Member>
    <Member MemberName="AddTransient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTransient (services As IServiceCollection, serviceType As Type) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="static member AddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient (services, serviceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-179">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-179">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-180">登録するサービスの型と使用する実装。</span><span class="sxs-lookup"><span data-stu-id="ec72f-180">The type of the service to register and the implementation to use.</span></span></param>
        <summary><span data-ttu-id="ec72f-181"><paramref name="serviceType" /> で指定した型の一時サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-181">Adds a transient service of the type specified in <paramref name="serviceType" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-182">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-182">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" />
      </Docs>
    </Member>
    <Member MemberName="AddTransient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTransient (services As IServiceCollection, serviceType As Type, implementationFactory As Func(Of IServiceProvider, Object)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member AddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Func&lt;IServiceProvider, obj&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient (services, serviceType, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-183">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-183">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-184">登録するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-184">The type of the service to register.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="ec72f-185">サービスを作成するファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec72f-185">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-186"><paramref name="implementationFactory" /> でファクトリを指定し、<paramref name="serviceType" /> で指定した型の一時サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-186">Adds a transient service of the type specified in <paramref name="serviceType" /> with a factory specified in <paramref name="implementationFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-187">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-187">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" />
      </Docs>
    </Member>
    <Member MemberName="AddTransient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type serviceType, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type serviceType, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTransient (services As IServiceCollection, serviceType As Type, implementationType As Type) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ serviceType, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member AddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Type -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient (services, serviceType, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="ec72f-188">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-188">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="serviceType"><span data-ttu-id="ec72f-189">登録するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-189">The type of the service to register.</span></span></param>
        <param name="implementationType"><span data-ttu-id="ec72f-190">サービスの実装の型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-190">The implementation type of the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-191"><paramref name="implementationType" /> で型の実装を指定し、<paramref name="serviceType" /> で指定した型の一時サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-191">Adds a transient service of the type specified in <paramref name="serviceType" /> with an implementation of the type specified in <paramref name="implementationType" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-192">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-192">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" />
      </Docs>
    </Member>
    <Member MemberName="AddTransient&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTransient(Of TService As Class) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-193">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-193">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-194">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-194">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <summary><span data-ttu-id="ec72f-195"><typeparamref name="TService" /> で指定した型の一時サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-195">Adds a transient service of the type specified in <typeparamref name="TService" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-196">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-196">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" />
      </Docs>
    </Member>
    <Member MemberName="AddTransient&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTransient(Of TService As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member AddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-197">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-197">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-198">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-198">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="ec72f-199">サービスを作成するファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec72f-199">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-200"><paramref name="implementationFactory" /> でファクトリを指定し、<typeparamref name="TService" /> で指定した型の一時サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-200">Adds a transient service of the type specified in <typeparamref name="TService" /> with a factory specified in <paramref name="implementationFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-201">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-201">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" />
      </Docs>
    </Member>
    <Member MemberName="AddTransient&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTransient(Of TService As Class, TImplementation As Class) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-202">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-202">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="ec72f-203">使用する実装の型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-203">The type of the implementation to use.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-204">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-204">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <summary><span data-ttu-id="ec72f-205"><typeparamref name="TImplementation" /> で実装型を指定し、<typeparamref name="TService" /> で指定した型の一時サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-205">Adds a transient service of the type specified in <typeparamref name="TService" /> with an implementation type specified in <typeparamref name="TImplementation" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-206">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-206">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" />
      </Docs>
    </Member>
    <Member MemberName="AddTransient&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TImplementation&gt; implementationFactory) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTransient&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TImplementation&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTransient(Of TService As Class, TImplementation As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TImplementation)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TImplementation&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member AddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, #'Service&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddTransient (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TImplementation&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="ec72f-207">追加するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-207">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="ec72f-208">使用する実装の型。</span><span class="sxs-lookup"><span data-stu-id="ec72f-208">The type of the implementation to use.</span></span></typeparam>
        <param name="services"><span data-ttu-id="ec72f-209">サービスを追加する先の <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ec72f-209">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the service to.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="ec72f-210">サービスを作成するファクトリ。</span><span class="sxs-lookup"><span data-stu-id="ec72f-210">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="ec72f-211"><paramref name="implementationFactory" /> で指定したファクトリを使用して <typeparamref name="TImplementation" /> で実装型を指定し、<typeparamref name="TService" /> で指定した型の一時サービスを、指定した <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="ec72f-211">Adds a transient service of the type specified in <typeparamref name="TService" /> with an implementation type specified in <typeparamref name="TImplementation" /> using the factory specified in <paramref name="implementationFactory" /> to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ec72f-212">操作が完了した後のこのインスタンスへの参照。</span><span class="sxs-lookup"><span data-stu-id="ec72f-212">A reference to this instance after the operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" />
      </Docs>
    </Member>
  </Members>
</Type>
