<Type Name="HttpClientBuilderExtensions" FullName="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37ddaeb9cda7d8ea0918c4aa74c9809af5d139ad" /><Meta Name="ms.sourcegitcommit" Value="2b0967e04b047f6709322418d97215dfcef6a938" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/20/2019" /><Meta Name="ms.locfileid" Value="74234759" /></Metadata><TypeSignature Language="C#" Value="public static class HttpClientBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpClientBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpClientBuilderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientBuilderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type HttpClientBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> を構成するための拡張メソッド。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHttpMessageHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;IServiceProvider,System.Net.Http.DelegatingHandler&gt; configureHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`2&lt;class System.IServiceProvider, class System.Net.Http.DelegatingHandler&gt; configureHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.IServiceProvider,System.Net.Http.DelegatingHandler})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpMessageHandler (builder As IHttpClientBuilder, configureHandler As Func(Of IServiceProvider, DelegatingHandler)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;IServiceProvider ^, System::Net::Http::DelegatingHandler ^&gt; ^ configureHandler);" />
      <MemberSignature Language="F#" Value="static member AddHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;IServiceProvider, System.Net.Http.DelegatingHandler&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler (builder, configureHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureHandler" Type="System.Func&lt;System.IServiceProvider,System.Net.Http.DelegatingHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <param name="configureHandler"><see cref="T:System.Net.Http.DelegatingHandler" /> の作成に使用されるデリゲート。</param>
        <summary>名前付き <see cref="T:System.Net.Http.HttpClient" /> の追加メッセージ ハンドラーの作成に使用されるデリゲートを追加します。</summary>
        <returns>クライアントを構成するために使用できる <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</returns>
        <remarks><para>
<paramref name="configureHandler" /> デリゲートは、呼び出されるたびにメッセージハンドラーの新しいインスタンスを返す必要があります。
            </para>
          <para>
<paramref name="configureHandler" /> に指定された <see cref="T:System.IServiceProvider" /> 引数は、構築されているハンドラーの有効期間を共有するスコープ付きサービスプロバイダーへの参照になります。
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpMessageHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;System.Net.Http.DelegatingHandler&gt; configureHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`1&lt;class System.Net.Http.DelegatingHandler&gt; configureHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.DelegatingHandler})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpMessageHandler (builder As IHttpClientBuilder, configureHandler As Func(Of DelegatingHandler)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;System::Net::Http::DelegatingHandler ^&gt; ^ configureHandler);" />
      <MemberSignature Language="F#" Value="static member AddHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;System.Net.Http.DelegatingHandler&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler (builder, configureHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureHandler" Type="System.Func&lt;System.Net.Http.DelegatingHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <param name="configureHandler"><see cref="T:System.Net.Http.DelegatingHandler" /> の作成に使用されるデリゲート。</param>
        <summary>名前付き <see cref="T:System.Net.Http.HttpClient" /> の追加メッセージ ハンドラーの作成に使用されるデリゲートを追加します。</summary>
        <returns>クライアントを構成するために使用できる <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</returns>
        <remarks><paramref name="configureHandler" /> デリゲートは、呼び出されるたびにメッセージハンドラーの新しいインスタンスを返す必要があります。</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpMessageHandler&lt;THandler&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler&lt;THandler&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) where THandler : System.Net.Http.DelegatingHandler;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler&lt;(class System.Net.Http.DelegatingHandler) THandler&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpMessageHandler(Of THandler As DelegatingHandler) (builder As IHttpClientBuilder) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename THandler&gt;&#xA; where THandler : System::Net::Http::DelegatingHandler[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member AddHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Handler :&gt; System.Net.Http.DelegatingHandler)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="THandler">
          <Constraints>
            <BaseTypeName>System.Net.Http.DelegatingHandler</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="THandler"><see cref="T:System.Net.Http.DelegatingHandler" /> の型。 ハンドラーの型は、一時的なサービスとして登録する必要があります。</typeparam>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <summary>名前付き <see cref="T:System.Net.Http.HttpClient" /> の依存関係挿入コンテナーからメッセージ ハンドラーを追加します。</summary>
        <returns>クライアントを構成するために使用できる <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</returns>
        <remarks><para>
<typeparamref name="THandler" /> は、構築されているハンドラーの有効期間を共有するスコープサービスプロバイダーから解決されます。
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypedClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTypedClient(Of TClient As Class) (builder As IHttpClientBuilder) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddTypedClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member AddTypedClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">型指定されたクライアントの型。 指定された型は、一時的なサービスとしてサービスコレクションに登録されます。 型指定のあるクライアントの作成の詳細については、「<see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />」を参照してください。</typeparam>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <summary><typeparamref name="TClient" /> で関連付けられている <see cref="T:System.Net.Http.HttpClient" /> 型と名前付き <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> の間のバインドを構成します。</summary>
        <returns>To be added.</returns>
        <remarks><para>適切な <see cref="T:System.Net.Http.HttpClient" /> で構築された 
            <typeparamref name="TClient" /> インスタンスは、サービスの種類として <typeparamref name="TClient" /> を提供することにより、<see cref="M:System.IServiceProvider.GetService(System.Type)" /> (および関連するメソッド) から取得できます。
            </para>
          <para>
<see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" /> を呼び出すと、<see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />を使用して <typeparamref name="TClient" /> を作成する型指定されたクライアントバインディングが登録されます。
            </para>
          <para>
型指定されたクライアントのサービス依存関係は、型指定されたクライアントの解決に使用されるのと同じサービスプロバイダーから解決されます。 メッセージハンドラーにバインドされているスコープからサービスにアクセスすることはできません。これは、個別に管理されます。
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypedClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;System.Net.Http.HttpClient,IServiceProvider,TClient&gt; factory) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`3&lt;class System.Net.Http.HttpClient, class System.IServiceProvider, !!TClient&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTypedClient(Of TClient As Class) (builder As IHttpClientBuilder, factory As Func(Of HttpClient, IServiceProvider, TClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddTypedClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;System::Net::Http::HttpClient ^, IServiceProvider ^, TClient&gt; ^ factory);" />
      <MemberSignature Language="F#" Value="static member AddTypedClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;System.Net.Http.HttpClient, IServiceProvider, 'Client (requires 'Client : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient (builder, factory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="factory" Type="System.Func&lt;System.Net.Http.HttpClient,System.IServiceProvider,TClient&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">型指定されたクライアントの型。 指定された型は、一時的なサービスとしてサービスコレクションに登録されます。</typeparam>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <param name="factory">型指定されたクライアントの構築に使用されるファクトリ関数。</param>
        <summary><typeparamref name="TClient" /> で関連付けられている <see cref="T:System.Net.Http.HttpClient" /> 型と名前付き <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> の間のバインドを構成します。</summary>
        <returns>To be added.</returns>
        <remarks><para>適切な <see cref="T:System.Net.Http.HttpClient" /> で構築された 
            <typeparamref name="TClient" /> インスタンスは、サービスの種類として <typeparamref name="TClient" /> を提供することにより、<see cref="M:System.IServiceProvider.GetService(System.Type)" /> (および関連するメソッド) から取得できます。
            </para>
          <para>
<see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,System.IServiceProvider,``0})" /> を呼び出すと、指定されたファクトリ関数を使用して <typeparamref name="TClient" /> を作成する型指定されたクライアントバインディングが登録されます。
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypedClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;System.Net.Http.HttpClient,TClient&gt; factory) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`2&lt;class System.Net.Http.HttpClient, !!TClient&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTypedClient(Of TClient As Class) (builder As IHttpClientBuilder, factory As Func(Of HttpClient, TClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddTypedClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;System::Net::Http::HttpClient ^, TClient&gt; ^ factory);" />
      <MemberSignature Language="F#" Value="static member AddTypedClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;System.Net.Http.HttpClient, 'Client (requires 'Client : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient (builder, factory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="factory" Type="System.Func&lt;System.Net.Http.HttpClient,TClient&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">型指定されたクライアントの型。 指定された型は、一時的なサービスとしてサービスコレクションに登録されます。</typeparam>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <param name="factory">型指定されたクライアントの構築に使用されるファクトリ関数。</param>
        <summary><typeparamref name="TClient" /> で関連付けられている <see cref="T:System.Net.Http.HttpClient" /> 型と名前付き <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> の間のバインドを構成します。</summary>
        <returns>To be added.</returns>
        <remarks><para>適切な <see cref="T:System.Net.Http.HttpClient" /> で構築された 
            <typeparamref name="TClient" /> インスタンスは、サービスの種類として <typeparamref name="TClient" /> を提供することにより、<see cref="M:System.IServiceProvider.GetService(System.Type)" /> (および関連するメソッド) から取得できます。
            </para>
          <para>
<see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,``0})" /> を呼び出すと、指定されたファクトリ関数を使用して <typeparamref name="TClient" /> を作成する型指定されたクライアントバインディングが登録されます。
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypedClient&lt;TClient,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;TClient,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) where TClient : class where TImplementation : class, TClient;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;class TClient, class (!!TClient) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``2(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTypedClient(Of TClient As Class, TImplementation As Class) (builder As IHttpClientBuilder) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient, typename TImplementation&gt;&#xA; where TClient : class where TImplementation : class, TClient[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddTypedClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member AddTypedClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TClient</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TClient">型指定されたクライアントの宣言型。 指定された型は、一時的なサービスとしてサービスコレクションに登録されます。 型指定のあるクライアントの作成の詳細については、「<see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />」を参照してください。</typeparam>
        <typeparam name="TImplementation">型指定されたクライアントの実装型。 によって指定された型は、<see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />によってインスタンス化されます。</typeparam>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <summary><typeparamref name="TClient" /> で関連付けられている <see cref="T:System.Net.Http.HttpClient" /> 型と名前付き <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> の間のバインドを構成します。 作成されたインスタンスの型は <typeparamref name="TImplementation" /> になります。</summary>
        <returns>To be added.</returns>
        <remarks><para>適切な <see cref="T:System.Net.Http.HttpClient" /> で構築された 
            <typeparamref name="TClient" /> インスタンスは、サービスの種類として <typeparamref name="TClient" /> を提供することにより、<see cref="M:System.IServiceProvider.GetService(System.Type)" /> (および関連するメソッド) から取得できます。
            </para>
          <para>
<see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``2(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" /> を呼び出すと、<see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />を使用して <typeparamref name="TImplementation" /> を作成する型指定されたクライアントバインディングが登録されます。
            </para>
          <para>
型指定されたクライアントのサービス依存関係は、型指定されたクライアントの解決に使用されるのと同じサービスプロバイダーから解決されます。 メッセージハンドラーにバインドされているスコープからサービスにアクセスすることはできません。これは、個別に管理されます。
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHttpClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpClient (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Action&lt;IServiceProvider,System.Net.Http.HttpClient&gt; configureClient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpClient(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Action`2&lt;class System.IServiceProvider, class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureHttpClient (builder As IHttpClientBuilder, configureClient As Action(Of IServiceProvider, HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigureHttpClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Action&lt;IServiceProvider ^, System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member ConfigureHttpClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Action&lt;IServiceProvider, System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient (builder, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.IServiceProvider,System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</param>
        <param name="configureClient"><see cref="T:System.Net.Http.HttpClient" /> の構成に使用されるデリゲート。</param>
        <summary>名前付き <see cref="T:System.Net.Http.HttpClient" /> の構成に使用されるデリゲートを追加します。</summary>
        <returns>クライアントを構成するために使用できる <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</returns>
        <remarks><paramref name="configureClient" /> に提供される <see cref="T:System.IServiceProvider" /> は、同じアプリケーションのルートサービスプロバイダーインスタンスになります。</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHttpClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpClient (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Action&lt;System.Net.Http.HttpClient&gt; configureClient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpClient(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Action`1&lt;class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureHttpClient (builder As IHttpClientBuilder, configureClient As Action(Of HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigureHttpClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Action&lt;System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member ConfigureHttpClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Action&lt;System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient (builder, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</param>
        <param name="configureClient"><see cref="T:System.Net.Http.HttpClient" /> の構成に使用されるデリゲート。</param>
        <summary>名前付き <see cref="T:System.Net.Http.HttpClient" /> の構成に使用されるデリゲートを追加します。</summary>
        <returns>クライアントを構成するために使用できる <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHttpMessageHandlerBuilder">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpMessageHandlerBuilder (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Action&lt;Microsoft.Extensions.Http.HttpMessageHandlerBuilder&gt; configureBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpMessageHandlerBuilder(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Http.HttpMessageHandlerBuilder&gt; configureBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpMessageHandlerBuilder(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.Http.HttpMessageHandlerBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureHttpMessageHandlerBuilder (builder As IHttpClientBuilder, configureBuilder As Action(Of HttpMessageHandlerBuilder)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigureHttpMessageHandlerBuilder(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Action&lt;Microsoft::Extensions::Http::HttpMessageHandlerBuilder ^&gt; ^ configureBuilder);" />
      <MemberSignature Language="F#" Value="static member ConfigureHttpMessageHandlerBuilder : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Action&lt;Microsoft.Extensions.Http.HttpMessageHandlerBuilder&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpMessageHandlerBuilder (builder, configureBuilder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureBuilder" Type="System.Action&lt;Microsoft.Extensions.Http.HttpMessageHandlerBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <param name="configureBuilder"><see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" /> の構成に使用されるデリゲート。</param>
        <summary>名前付き <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" /> に対して <see cref="T:System.Net.Http.HttpClient" /> を使用し、メッセージ ハンドラーを構成するために使用されるデリゲートを追加します。</summary>
        <returns>クライアントを構成するために使用できる <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurePrimaryHttpMessageHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;IServiceProvider,System.Net.Http.HttpMessageHandler&gt; configureHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`2&lt;class System.IServiceProvider, class System.Net.Http.HttpMessageHandler&gt; configureHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.IServiceProvider,System.Net.Http.HttpMessageHandler})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigurePrimaryHttpMessageHandler (builder As IHttpClientBuilder, configureHandler As Func(Of IServiceProvider, HttpMessageHandler)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigurePrimaryHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;IServiceProvider ^, System::Net::Http::HttpMessageHandler ^&gt; ^ configureHandler);" />
      <MemberSignature Language="F#" Value="static member ConfigurePrimaryHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;IServiceProvider, System.Net.Http.HttpMessageHandler&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler (builder, configureHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureHandler" Type="System.Func&lt;System.IServiceProvider,System.Net.Http.HttpMessageHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <param name="configureHandler"><see cref="T:System.Net.Http.HttpMessageHandler" /> の作成に使用されるデリゲート。</param>
        <summary>名前付き <see cref="T:System.Net.Http.HttpMessageHandler" /> に対してプライマリ <see cref="T:System.Net.Http.HttpClient" /> を構成するために使用されるデリゲートを追加します。</summary>
        <returns>クライアントを構成するために使用できる <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</returns>
        <remarks><para>
<paramref name="configureHandler" /> デリゲートは、呼び出されるたびにメッセージハンドラーの新しいインスタンスを返す必要があります。
            </para>
          <para>
<paramref name="configureHandler" /> に指定された <see cref="T:System.IServiceProvider" /> 引数は、構築されているハンドラーの有効期間を共有するスコープ付きサービスプロバイダーへの参照になります。
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurePrimaryHttpMessageHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;System.Net.Http.HttpMessageHandler&gt; configureHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`1&lt;class System.Net.Http.HttpMessageHandler&gt; configureHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpMessageHandler})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigurePrimaryHttpMessageHandler (builder As IHttpClientBuilder, configureHandler As Func(Of HttpMessageHandler)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigurePrimaryHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;System::Net::Http::HttpMessageHandler ^&gt; ^ configureHandler);" />
      <MemberSignature Language="F#" Value="static member ConfigurePrimaryHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;System.Net.Http.HttpMessageHandler&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler (builder, configureHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureHandler" Type="System.Func&lt;System.Net.Http.HttpMessageHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <param name="configureHandler"><see cref="T:System.Net.Http.HttpMessageHandler" /> の作成に使用されるデリゲート。</param>
        <summary>名前付き <see cref="T:System.Net.Http.HttpMessageHandler" /> に対してプライマリ <see cref="T:System.Net.Http.HttpClient" /> を構成するために使用されるデリゲートを追加します。</summary>
        <returns>クライアントを構成するために使用できる <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</returns>
        <remarks><paramref name="configureHandler" /> デリゲートは、呼び出されるたびにメッセージハンドラーの新しいインスタンスを返す必要があります。</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurePrimaryHttpMessageHandler&lt;THandler&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler&lt;THandler&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) where THandler : System.Net.Http.HttpMessageHandler;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler&lt;(class System.Net.Http.HttpMessageHandler) THandler&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigurePrimaryHttpMessageHandler(Of THandler As HttpMessageHandler) (builder As IHttpClientBuilder) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename THandler&gt;&#xA; where THandler : System::Net::Http::HttpMessageHandler[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigurePrimaryHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ConfigurePrimaryHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Handler :&gt; System.Net.Http.HttpMessageHandler)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="THandler">
          <Constraints>
            <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="THandler"><see cref="T:System.Net.Http.DelegatingHandler" /> の型。 ハンドラーの型は、一時的なサービスとして登録する必要があります。</typeparam>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</param>
        <summary>名前付き <see cref="T:System.Net.Http.HttpMessageHandler" /> に対して依存関係挿入コンテナーからプライマリ <see cref="T:System.Net.Http.HttpClient" /> を構成します。</summary>
        <returns>クライアントを構成するために使用できる <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</returns>
        <remarks><para>
<typeparamref name="THandler" /> は、構築されているハンドラーの有効期間を共有するスコープサービスプロバイダーから解決されます。
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHandlerLifetime">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder SetHandlerLifetime (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, TimeSpan handlerLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder SetHandlerLifetime(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, valuetype System.TimeSpan handlerLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.SetHandlerLifetime(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetHandlerLifetime (builder As IHttpClientBuilder, handlerLifetime As TimeSpan) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ SetHandlerLifetime(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, TimeSpan handlerLifetime);" />
      <MemberSignature Language="F#" Value="static member SetHandlerLifetime : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * TimeSpan -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.SetHandlerLifetime (builder, handlerLifetime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="handlerLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="handlerLifetime">To be added.</param>
        <summary><see cref="T:System.Net.Http.HttpMessageHandler" /> を再利用できる時間を設定します。 名前付きの各クライアントには、独自の構成済みハンドラーの有効期間の値を設定できます。 既定値は 2 分です。 ハンドラーの有効期限を無効にするには、有効期間を <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> に設定します。</summary>
        <returns>To be added.</returns>
        <remarks><para>
<see cref="T:System.Net.Http.IHttpClientFactory" /> の既定の実装では、リソースの消費量を削減するために、ファクトリによって作成された <see cref="T:System.Net.Http.HttpMessageHandler" /> インスタンスがプールされます。 この設定では、プールおよび破棄からの削除をスケジュールする前に、ハンドラーをプールできる時間を構成します。
            </para>
          <para>
通常各ハンドラーは基になる HTTP 接続を独自に管理しており、必要以上に多くのハンドラーを作成すると接続が遅延する可能性があるため、ハンドラーをプールするのは望ましい方法です。 ハンドラーによっては、接続を無期限に開いたままにしておくこともできます。 ネットワーク環境での変更に対応するためのアプリケーションの要件を理解した上で、<paramref name="handlerLifetime" /> の値を選択する必要があります。
            </para>
          <para>
ハンドラーの有効期限が切れても、ハンドラーはすぐに破棄されません。 有効期限が切れたハンドラーは別のプールに配置されます。このプールは、アクセスできなくなったときにのみハンドラーを破棄するように間隔で処理されます。 有効期間が長い <see cref="T:System.Net.Http.HttpClient" /> インスタンスを使用すると、すべての参照がガベージコレクトされるまで、基になる <see cref="T:System.Net.Http.HttpMessageHandler" /> が破棄されるのを防ぐことができます。
            </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
