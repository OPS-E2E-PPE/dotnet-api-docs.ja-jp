<Type Name="WorkflowRuntimeService" FullName="System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="917dc1122278c09a445ffbcfc25ed4fd6294baca" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78842554" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowRuntimeService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntimeService abstract" />
  <TypeSignature Language="F#" Value="type WorkflowRuntimeService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4462b-101">ワークフロー ランタイム エンジンのコア サービスの派生元となる抽象基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="4462b-101">Represents the abstract base class from which the workflow runtime engine core services are derived.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="4462b-102"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生したサービスは、ワークフロー ランタイム エンジンによって開始および停止します。</span><span class="sxs-lookup"><span data-stu-id="4462b-102">Services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class can be started and stopped by the workflow runtime engine.</span></span> <span data-ttu-id="4462b-103">ただし、サービスが開始される順序も停止する順序も不定です。また、サービスは、開始時に自身を適切に初期化するために他のサービスのサポートを必要とする場合があります。また、停止時に適切にシャットダウンするために他のサービスのサポートを必要とする場合があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-103">The order in which the services are started or stopped, however, is indeterminate, and services may require the support of other services in order to properly initialize themselves when they are started, and, conversely, may require the to support of other services in order to properly shut down when they are stopped.</span></span> <span data-ttu-id="4462b-104">この問題に対処するために、ワークフロー ランタイム エンジンには、サービスの開始と停止に 2 フェーズ機構が用意されています。</span><span class="sxs-lookup"><span data-stu-id="4462b-104">To address this problem, the workflow runtime engine provides two-phase mechanisms for starting and stopping services.</span></span> <span data-ttu-id="4462b-105"><xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> が呼び出されると、ワークフロー ランタイム エンジンは、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> クラスから派生したそのサービスごとに <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4462b-105">When <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> is called, the workflow runtime engine invokes the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method for each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="4462b-106">これらのサービスがすべて開始されると、ワークフロー ランタイム エンジンは <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> イベントを発生させます。このイベントが基になって、ワークフロー ランタイム エンジンのサービスごとに <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4462b-106">After all of these services have been started, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event, which causes the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> method to be invoked for each workflow runtime engine service.</span></span> <span data-ttu-id="4462b-107">サービスは、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> メソッドをオーバーライドしてこの 2 フェーズ プロセスに参加できます。</span><span class="sxs-lookup"><span data-stu-id="4462b-107">Your service can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> method to participate in this two phase process.</span></span> <span data-ttu-id="4462b-108">同様に、<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> が呼び出されたときも、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> メソッド、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> イベント、および <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> メソッドが、この 2 フェーズ機構を使用します。</span><span class="sxs-lookup"><span data-stu-id="4462b-108">Similarly, when <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> is called, the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method, the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event, and the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method provide this two-phase mechanism.</span></span>  <span data-ttu-id="4462b-109">State プロパティは、サービスが開始または停止しようとしているか、あるいは完全に開始または停止したかを示す <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="4462b-109">The State property contains a <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> value that indicates whether the service is in the process of starting or stopping or is completely started or stopped.</span></span>  
  
 <span data-ttu-id="4462b-110"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生したサービスは、未処理の例外の原因となる状態を検出すると、<xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> を呼び出すことにより、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> イベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="4462b-110">Services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class can raise the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> event when they encounter a condition that causes an unhandled exception by calling <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.</span></span>  
  
 <span data-ttu-id="4462b-111"><xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> クラス、および <xref:System.Workflow.Runtime.Tracking.TrackingService> クラスから派生したサービスは、結局は <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生しています。</span><span class="sxs-lookup"><span data-stu-id="4462b-111">Services derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class ultimately derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowRuntimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowRuntimeService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4462b-112">派生クラスとして実装された場合、<see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4462b-112">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4462b-113"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> は <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="4462b-113"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> is initialized to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStarted();" />
      <MemberSignature Language="F#" Value="abstract member OnStarted : unit -&gt; unit&#xA;override this.OnStarted : unit -&gt; unit" Usage="workflowRuntimeService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4462b-114">派生クラスでオーバーライドされるときに、ワークフロー ランタイム エンジンが <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /> イベントを発生させると呼び出されるメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="4462b-114">When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4462b-115"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスは、2 フェーズ開始機構を実装しています。この機構により、ワークフロー ランタイム エンジンのサービスは、ワークフロー ランタイム エンジンがそのすべてのサービスの <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> メソッドを呼び出した後に、他のサービスに依存する初期化を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="4462b-115">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class implements a two-phase starting mechanism so that workflow runtime engine services may perform any initialization that depends on other services after the workflow runtime engine has invoked the  <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method for all of its workflow runtime engine services.</span></span> <span data-ttu-id="4462b-116">ワークフロー ランタイム エンジンは、そのすべてのサービスの <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> メソッドを呼び出した後で <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4462b-116">After the workflow runtime engine has called the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method of all of its workflow runtime engine services, it raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="4462b-117"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> メソッドをオーバーライドして、<xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> イベントが発生したときにサービスが必要とする最終的な開始機能を持たせることができます。</span><span class="sxs-lookup"><span data-stu-id="4462b-117">You can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> method to provide any final startup functionality required by your service when the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event is raised.</span></span> <span data-ttu-id="4462b-118"><xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> イベントのサブスクリプションとサブスクリプションの解除は、内部で処理されます。</span><span class="sxs-lookup"><span data-stu-id="4462b-118">The mechanics of subscribing and unsubscribing from the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event is handled internally.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4462b-119">ワークフロー ランタイム エンジンを起動した後、<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> を呼び出してサービスをワークフロー ランタイム エンジンに追加した場合、ワークフロー ランタイム エンジンはそのサービスに対して <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4462b-119">If your service is added to the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> after the workflow runtime engine has already been started, the workflow runtime engine will call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on your service.</span></span> <span data-ttu-id="4462b-120">ただし、このような場合は、<xref:System.Workflow.Runtime.WorkflowRuntime.Started> イベントが既に発生しているため、サービスは、通常であれば <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> で実行される初期化を、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> メソッド内から実行することが必要な場合があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-120">However, in this situation, the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> from inside the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method.</span></span> <span data-ttu-id="4462b-121"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> をテストすると、ワークフロー ランタイム エンジンが起動されているかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="4462b-121">You can test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to determine whether the workflow runtime engine has been started.</span></span>  
  
 <span data-ttu-id="4462b-122"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> は、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started> が呼び出される前に <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="4462b-122"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> is set to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started> before <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> is invoked.</span></span>  <span data-ttu-id="4462b-123"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> の既定の実装では、アクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="4462b-123">The default implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> performs no action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStopped">
      <MemberSignature Language="C#" Value="protected virtual void OnStopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStopped();" />
      <MemberSignature Language="F#" Value="abstract member OnStopped : unit -&gt; unit&#xA;override this.OnStopped : unit -&gt; unit" Usage="workflowRuntimeService.OnStopped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4462b-124">派生クラスでオーバーライドされるときに、ワークフロー ランタイム エンジンが <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /> イベントを発生させると呼び出されるメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="4462b-124">When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4462b-125"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスは、2 フェーズ停止機構を実装しています。この機構により、ワークフロー ランタイム エンジンのサービスは、必要であれば、その <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> メソッドがワークフロー ランタイム エンジンによって呼び出された後も、他のサービスのシャットダウンをサポートするための機能を保持できます。</span><span class="sxs-lookup"><span data-stu-id="4462b-125">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class implements a two-phase stopping mechanism so that workflow runtime engine services may retain some functionality after their <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method is invoked by the workflow runtime engine in order that they may, if necessary, support the shutdown of other services.</span></span> <span data-ttu-id="4462b-126">ワークフロー ランタイム エンジンは、そのすべてのサービスの <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> メソッドを呼び出した後で <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4462b-126">After the workflow runtime engine has called the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method of all of its workflow runtime engine services, it raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="4462b-127"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> メソッドをオーバーライドして、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> イベントが発生したときにサービスが必要とする最終的なシャットダウン機能を持たせることができます。</span><span class="sxs-lookup"><span data-stu-id="4462b-127">You can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method to provide any final shutdown functionality required by your service when the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event is raised.</span></span> <span data-ttu-id="4462b-128"><xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> イベントのサブスクリプションとサブスクリプションの解除は、内部で処理されます。</span><span class="sxs-lookup"><span data-stu-id="4462b-128">The mechanics of subscribing and unsubscribing from the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event is handled internally.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4462b-129">ワークフロー ランタイム エンジンの実行中に <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> を呼び出して <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> をワークフロー ランタイム エンジンから削除すると、ワークフロー ランタイム エンジンはそのサービスに対して <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4462b-129">If your <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> is removed from the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> while the workflow runtime engine is running, the workflow runtime engine will call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> on your service.</span></span> <span data-ttu-id="4462b-130">ただし、このような場合は、そのサービスに対して <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> メソッドが呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="4462b-130">However, in this situation, the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method will not be called for your service.</span></span> <span data-ttu-id="4462b-131">したがってサービスは、通常であれば <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> で実行する最終的なシャットダウンを、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> メソッド内から実行することが必要な場合があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-131">Therefore, your service may have to perform any final shutdown that it would ordinarily perform in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> from inside the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method.</span></span> <span data-ttu-id="4462b-132"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> をテストすると、ワークフロー ランタイム エンジンが実行されているかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="4462b-132">You can test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to determine whether the workflow runtime engine is running.</span></span>  
  
 <span data-ttu-id="4462b-133"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> は、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> が呼び出される前に <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="4462b-133"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> is set to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> before <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> is invoked.</span></span>  <span data-ttu-id="4462b-134"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> の既定の実装では、アクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="4462b-134">The default implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> performs no action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseServicesExceptionNotHandledEvent">
      <MemberSignature Language="C#" Value="protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseServicesExceptionNotHandledEvent(class System.Exception exception, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseServicesExceptionNotHandledEvent (exception As Exception, instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseServicesExceptionNotHandledEvent(Exception ^ exception, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.RaiseServicesExceptionNotHandledEvent : Exception * Guid -&gt; unit" Usage="workflowRuntimeService.RaiseServicesExceptionNotHandledEvent (exception, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="4462b-135">処理できなかった例外。</span><span class="sxs-lookup"><span data-stu-id="4462b-135">The exception that could not be handled.</span></span></param>
        <param name="instanceId"><span data-ttu-id="4462b-136">未処理の例外に関連付けられているワークフロー インスタンスの <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="4462b-136">The <see cref="T:System.Guid" /> of the workflow instance associated with the unhandled exception.</span></span></param>
        <summary><span data-ttu-id="4462b-137"><see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4462b-137">Raises the <see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4462b-138">サービスは、実行中に処理できない例外を検出すると、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> を呼び出して <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> イベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="4462b-138">Your service can call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> to raise the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> event when it encounters an exception that it cannot handle during its execution.</span></span> <span data-ttu-id="4462b-139">未処理の例外に関連付けられているワークフロー インスタンスの <xref:System.Guid> を渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-139">You should pass the <xref:System.Guid> of the workflow instance associated with the unhandled exception.</span></span> <span data-ttu-id="4462b-140">たとえば、タイマー サービスは、例外が発生したタイマーに関連付けられている <xref:System.Guid> を渡します。</span><span class="sxs-lookup"><span data-stu-id="4462b-140">For example, a timer service might pass the <xref:System.Guid> associated with the timer for which the exception occurred.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Runtime">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime Runtime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Runtime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ Runtime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Runtime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4462b-141">このサービスの <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="4462b-141">Gets the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> for this service.</span></span></summary>
        <value><span data-ttu-id="4462b-142"><see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4462b-142">The <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4462b-143">ワークフロー ランタイム エンジンは、サービスに対する <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> を呼び出す前に、このプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4462b-143">The workflow runtime engine sets this property before it calls <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Start();" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="workflowRuntimeService.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4462b-144">派生クラスでオーバーライドされると、サービスを開始して、<see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> を <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" /> に変更します。</span><span class="sxs-lookup"><span data-stu-id="4462b-144">When overridden in a derived class, starts the service and changes the <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> to <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4462b-145"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> が呼び出されると、ワークフロー ランタイム エンジンは、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生したそのすべてのサービスについて <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4462b-145"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> is invoked by the workflow runtime engine on all of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class when <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> is called.</span></span>  
  
 <span data-ttu-id="4462b-146">ワークフロー ランタイム エンジンを開始した後、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> を呼び出してワークフロー ランタイム エンジンにワークフロー ランタイム エンジン サービスを追加したときも、<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> がワークフロー ランタイム エンジンによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4462b-146"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> is also invoked by the workflow runtime engine when a workflow runtime engine service is added to the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> after the workflow runtime engine has already started.</span></span> <span data-ttu-id="4462b-147"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> の既定の実装は、サービスが開始されたかどうかを追跡し、この情報を使用することによって、既に実行されているサービスが開始された場合は適切な例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4462b-147">The default implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is started while it is already running.</span></span>  
  
 <span data-ttu-id="4462b-148">このメソッドをオーバーライドすることにより、サービスをワークフロー ランタイム エンジンで開始するために必要な追加機能を持たせることができます。</span><span class="sxs-lookup"><span data-stu-id="4462b-148">You can provide additional functionality necessary to have your service started by the workflow runtime engine by overriding this method.</span></span> <span data-ttu-id="4462b-149">ワークフロー ランタイム エンジンがサービスに対する <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> を呼び出したときに、存在するどのサービスが実行されているかについての保証はありません。</span><span class="sxs-lookup"><span data-stu-id="4462b-149">There is no guarantee about which, if any, services will be running when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on your service.</span></span> <span data-ttu-id="4462b-150">したがって、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> メソッドでは、他のサービスが提供する機能に依存しない初期化のみを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-150">Therefore, in the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method, you should only perform any initialization that does not depend on functionality provided by other services.</span></span> <span data-ttu-id="4462b-151">これには、スケジューラ サービスなどのコア サービスが提供する機能が含まれます。</span><span class="sxs-lookup"><span data-stu-id="4462b-151">This includes functionality provided by core services such as the scheduler service.</span></span> <span data-ttu-id="4462b-152">ワークフロー ランタイム エンジンは、そのすべてのサービスの <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> メソッドを呼び出した後で <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4462b-152">The workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event after it has called the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method of all of its workflow runtime engine services.</span></span> <span data-ttu-id="4462b-153">ワークフロー ランタイム エンジンのすべてのサービスを開始した後で、サービスをさらに初期化する必要がある場合は、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> イベントが発生した時点でその初期化を実行するように <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> メソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="4462b-153">If your service requires additional initialization after all of the workflow runtime engine services have been started, you can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> method in order to perform this initialization when the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4462b-154">ワークフロー ランタイム エンジンを起動した後、<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> を呼び出してサービスをワークフロー ランタイム エンジンに追加した場合、ワークフロー ランタイム エンジンはそのサービスに対して <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4462b-154">If your service is added to the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> after the workflow runtime engine has already been started, the workflow runtime engine will call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on your service.</span></span> <span data-ttu-id="4462b-155">ただし、このような場合は、<xref:System.Workflow.Runtime.WorkflowRuntime.Started> イベントが既に発生しているため、サービスは、通常であれば <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> で実行される初期化を、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> メソッド内から実行することが必要な場合があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-155">However, in this situation, the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> from inside the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method.</span></span> <span data-ttu-id="4462b-156"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> をテストすると、ワークフロー ランタイム エンジンが起動されているかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="4462b-156">You can test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to determine whether the workflow runtime engine has been started.</span></span>  
  
 <span data-ttu-id="4462b-157"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> は、ワークフロー ランタイム エンジンでのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-157"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> should only be called by the workflow runtime engine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4462b-158"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> から派生したオブジェクト (TerminationTrackingService) に対する Start メソッドを呼び出す方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="4462b-158">The following example demonstrates calling the Start method on an object derived from <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.</span></span>  <span data-ttu-id="4462b-159">この例は、終了追跡サービスの SDK サンプルです。</span><span class="sxs-lookup"><span data-stu-id="4462b-159">This example is from the Termination Tracking Service SDK sample.</span></span>  <span data-ttu-id="4462b-160">詳細については、「[ターミネーション Tracking Service Sample](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4462b-160">For more information, see [Termination Tracking Service Sample](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).</span></span>  
  
 [!code-csharp[WF_Samples#112](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#112)]
 [!code-vb[WF_Samples#112](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#112)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4462b-161"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4462b-161"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</span></span> 
<span data-ttu-id="4462b-162">または</span><span class="sxs-lookup"><span data-stu-id="4462b-162">-or-</span></span> 
<span data-ttu-id="4462b-163">サービスが既に開始されています。</span><span class="sxs-lookup"><span data-stu-id="4462b-163">The service has already been started.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property State As WorkflowRuntimeServiceState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState State { System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4462b-164"><see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> の状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="4462b-164">Gets the state of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />.</span></span></summary>
        <value><span data-ttu-id="4462b-165"><see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="4462b-165">One of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4462b-166"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスは、ワークフロー ランタイム エンジンのサービスの開始と停止の両方について、2 フェーズ機構を実装しています。</span><span class="sxs-lookup"><span data-stu-id="4462b-166">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class implements two-phase mechanisms for both starting and stopping a workflow runtime engine service.</span></span> <span data-ttu-id="4462b-167">開始機構の最初のフェーズは、ワークフロー ランタイム エンジンがサービスの <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> メソッドの実装を呼び出すと始まります。</span><span class="sxs-lookup"><span data-stu-id="4462b-167">The first phase of the start mechanism begins when the workflow runtime engine calls the implementation of the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method for the service.</span></span> <span data-ttu-id="4462b-168">このメソッドは、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> を <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> に設定する <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting> の基本実装を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-168">This method should call the base implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>, which sets <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting>.</span></span> <span data-ttu-id="4462b-169">2 番目のフェーズは、ワークフロー ランタイム エンジンがそのすべてのサービスを開始した後に起こり、ワークフロー ランタイム エンジンが <xref:System.Workflow.Runtime.WorkflowRuntime.Started> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4462b-169">The second phase occurs after the workflow runtime engine starts all of its workflow runtime engine services when it raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event.</span></span> <span data-ttu-id="4462b-170"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> はこのイベントのサブスクリプションを内部で管理し、そのハンドラーは <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> を <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started> に設定します。</span><span class="sxs-lookup"><span data-stu-id="4462b-170">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> internally manages a subscription to this event and its handler will set <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started>.</span></span>  
  
 <span data-ttu-id="4462b-171">ワークフロー ランタイム エンジンのサービスを停止する場合の 2 フェーズ機構は、ワークフロー ランタイム エンジンがサービスの <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> メソッドの実装を呼び出すと始まります。</span><span class="sxs-lookup"><span data-stu-id="4462b-171">The two-phase mechanism for stopping a workflow runtime engine service begins when the workflow runtime engine calls the implementation of the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method for the service.</span></span> <span data-ttu-id="4462b-172">このメソッドは、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> を <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> に設定する <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping> の基本実装を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-172">This method should call the base implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>, which sets <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping>.</span></span> <span data-ttu-id="4462b-173">ワークフロー ランタイム エンジンは、そのすべてのサービスを停止した後に、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4462b-173">After it has stopped all of its workflow runtime engine services, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event.</span></span> <span data-ttu-id="4462b-174"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> はこのイベントのサブスクリプションを内部で管理し、そのハンドラーは <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> を <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> に設定します。</span><span class="sxs-lookup"><span data-stu-id="4462b-174">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> internally manages a subscription to this event and its handler will set <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Stop();" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="workflowRuntimeService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4462b-175">派生クラスでオーバーライドされると、サービスを停止して <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> を <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" /> に変更します。</span><span class="sxs-lookup"><span data-stu-id="4462b-175">When overridden in a derived class, stops the service and changes the <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> to <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4462b-176"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> が呼び出されると、ワークフロー ランタイム エンジンは、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生したそのすべてのサービスについて <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4462b-176"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> is invoked by the workflow runtime engine on all of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class when <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> is called.</span></span>  <span data-ttu-id="4462b-177"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> の呼び出しによってワークフロー ランタイム エンジンからワークフロー ランタイム エンジンのサービスが削除されるときも、<xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> がワークフロー ランタイム エンジンによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4462b-177"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> is also invoked by the workflow runtime engine when a workflow runtime engine service is removed from the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>.</span></span> <span data-ttu-id="4462b-178"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> の既定の実装は、サービスが開始されたかどうかを追跡し、この情報を使用することによって、開始前のサービスが停止させられる場合は適切な例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4462b-178">The default implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is stopped before it is started.</span></span>  
  
 <span data-ttu-id="4462b-179">このメソッドをオーバーライドすることにより、サービスをワークフロー ランタイム エンジンで停止させるために必要な追加機能を持たせることができます。</span><span class="sxs-lookup"><span data-stu-id="4462b-179">You can provide additional functionality necessary to have your service stopped by the workflow runtime engine by overriding this method.</span></span> <span data-ttu-id="4462b-180">サービスに対する <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> が呼び出されたときに、存在するどのサービスが停止しているかまたは実行されているかについての保証はありません。</span><span class="sxs-lookup"><span data-stu-id="4462b-180">There is no guarantee about which, if any, services will be stopped or running when <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> is called on your service.</span></span> <span data-ttu-id="4462b-181">ワークフロー ランタイム エンジンは、そのすべてのサービスの <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> メソッドを呼び出した後で <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4462b-181">The workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event after it has called the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method of all of its workflow runtime engine services.</span></span> <span data-ttu-id="4462b-182">サービスは、ワークフロー ランタイム エンジンがワークフロー ランタイム エンジンのすべてのサービスについて停止メソッドを呼び出し終えるまで、他のサービスをサポートするための残留機能を保持しておくことが必要な場合があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-182">Your service may need to retain some residual functionality to support other services until all the workflow runtime engine services have had their stop methods invoked by the workflow runtime engine.</span></span> <span data-ttu-id="4462b-183">サービスがこうした機能を保持する必要がある場合は、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> イベントが発生したときにサービスの停止を完了するために必要な追加アクションを実行するように <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> メソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="4462b-183">If your service must retain such functionality, you can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method to perform any additional action required to finish stopping your service when the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4462b-184">ワークフロー ランタイム エンジンの実行中に <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> を呼び出して <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> をワークフロー ランタイム エンジンから削除すると、ワークフロー ランタイム エンジンはそのサービスに対して <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4462b-184">If your <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> is removed from the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> while the workflow runtime engine is running, the workflow runtime engine will call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> on your service.</span></span> <span data-ttu-id="4462b-185">ただし、このような場合は、そのサービスに対して <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> メソッドが呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="4462b-185">However, in this situation, the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method will not be called for your service.</span></span> <span data-ttu-id="4462b-186">したがって、通常サービスは <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> でシャットダウン機能を実行しますが、ここでは <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> メソッド内からシャットダウンする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-186">Therefore, your service may have to perform any additional shutdown functionality that it would ordinarily perform in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> from inside the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method.</span></span> <span data-ttu-id="4462b-187"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> をテストすると、ワークフロー ランタイム エンジンが実行されているかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="4462b-187">You can test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to determine whether the workflow runtime engine is running.</span></span>  
  
 <span data-ttu-id="4462b-188"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> は、ワークフロー ランタイム エンジンでのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4462b-188"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> should only be called by the workflow runtime engine.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4462b-189"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="4462b-189"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>  
  
<span data-ttu-id="4462b-190">または</span><span class="sxs-lookup"><span data-stu-id="4462b-190">-or-</span></span> 
<span data-ttu-id="4462b-191">サービスがまだ開始されていません。</span><span class="sxs-lookup"><span data-stu-id="4462b-191">The service has not yet been started.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
