<Type Name="ManualWorkflowSchedulerService" FullName="System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9db5de1232d8a2dedff0ad512c8e7574347de3f" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82496216" /></Metadata><TypeSignature Language="C#" Value="public class ManualWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManualWorkflowSchedulerService extends System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" />
  <TypeSignature Language="VB.NET" Value="Public Class ManualWorkflowSchedulerService&#xA;Inherits WorkflowSchedulerService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManualWorkflowSchedulerService : System::Workflow::Runtime::Hosting::WorkflowSchedulerService" />
  <TypeSignature Language="F#" Value="type ManualWorkflowSchedulerService = class&#xA;    inherit WorkflowSchedulerService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowSchedulerService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6072c-101">スレッド サービスを提供します。ワークフロー インスタンスを作成するホスト アプリケーションは、このスレッド サービスを使用することにより、ワークフロー インスタンスが実行される <see cref="T:System.Threading.Thread" /> を提供できます。</span><span class="sxs-lookup"><span data-stu-id="6072c-101">Provides a threading service that allows the host application creating a workflow instance to donate the <see cref="T:System.Threading.Thread" /> on which the workflow instance is run.</span></span> <span data-ttu-id="6072c-102">このスレッド サービスを使用することで、ホスト アプリケーションは 1 つの <see cref="T:System.Threading.Thread" /> のワークフロー インスタンスを同期モードで実行できます (ただし、ワークフローに遅延アクティビティが含まれる場合、<see cref="T:System.Threading.Timer" /> によって生じる個別のスレッドで遅延アクティビティが実行されるまで、処理が延期されます)。</span><span class="sxs-lookup"><span data-stu-id="6072c-102">Using this threading service, host applications can run a workflow instance on a single <see cref="T:System.Threading.Thread" /> in synchronous mode (although if the workflow contains a delay activity, the work is postponed until after the delay activity is executed on a separate thread spawned by <see cref="T:System.Threading.Timer" />).</span></span> <span data-ttu-id="6072c-103">このモードでは、ワークフロー インスタンスがアイドル状態になるまで、ホスト アプリケーションの実行がブロックされます。</span><span class="sxs-lookup"><span data-stu-id="6072c-103">This mode blocks the execution of the host application until the workflow instance becomes idle.</span></span> <span data-ttu-id="6072c-104">その後、このサービスの <see cref="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" /> メソッドの使用によってのみ、ワークフロー インスタンスを実行できます。</span><span class="sxs-lookup"><span data-stu-id="6072c-104">Subsequently, the workflow instance can only be executed using the <see cref="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" /> method of this service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="6072c-105"><xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> は、キュー内のワークフロー インスタンスを自動的には実行しません。</span><span class="sxs-lookup"><span data-stu-id="6072c-105"><xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> does not automatically run a workflow instance that is in the queue.</span></span> <span data-ttu-id="6072c-106">ホストが <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A> を呼び出して、指定されたワークフローを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6072c-106">The host must call <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A> to run a specified workflow.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6072c-107"><see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6072c-107">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualWorkflowSchedulerService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualWorkflowSchedulerService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6072c-108"><see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6072c-108">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualWorkflowSchedulerService (bool useActiveTimers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useActiveTimers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useActiveTimers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualWorkflowSchedulerService(bool useActiveTimers);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService : bool -&gt; System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService useActiveTimers" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useActiveTimers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useActiveTimers"><span data-ttu-id="6072c-109">遅延アクティビティの処理方法を決定する <see langword="Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="6072c-109"><see langword="Boolean" /> that determines how delay activities are handled.</span></span> <span data-ttu-id="6072c-110"><see langword="true" /> の場合は、遅延アクティビティの期限が切れると、スケジューラ サービスはメモリ内のタイマーを使用して自動的にワークフローを再開します。</span><span class="sxs-lookup"><span data-stu-id="6072c-110">If <see langword="true" />, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer).</span></span> <span data-ttu-id="6072c-111"><see langword="false" /> の場合は、遅延アクティビティの期限が切れてからホストが手動でワークフローを再開する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6072c-111">If <see langword="false" />, the host must manually resume the workflow after the delay activities expire.</span></span></param>
        <summary><span data-ttu-id="6072c-112"><see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6072c-112">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualWorkflowSchedulerService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService : System.Collections.Specialized.NameValueCollection -&gt; System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="6072c-113"><see cref="T:System.Collections.Specialized.NameValueCollection" /> のパラメーターが格納された <paramref name="useActiveTimers" />。</span><span class="sxs-lookup"><span data-stu-id="6072c-113">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains parameters for <paramref name="useActiveTimers" />.</span></span> <span data-ttu-id="6072c-114"><see langword="true" /> の場合は、遅延アクティビティの期限が切れると、スケジューラ サービスはメモリ内のタイマーを使用して自動的にワークフローを再開します。</span><span class="sxs-lookup"><span data-stu-id="6072c-114">If <see langword="true" />, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer).</span></span> <span data-ttu-id="6072c-115"><see langword="false" /> の場合は、遅延アクティビティの期限が切れてからホストが手動でワークフローを再開する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6072c-115">If <see langword="false" />, the host must manually resume the workflow after the delay activities expire.</span></span></param>
        <summary><span data-ttu-id="6072c-116"><see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6072c-116">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal override void Cancel (Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Cancel(valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Cancel (timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Cancel(Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Cancel : Guid -&gt; unit" Usage="manualWorkflowSchedulerService.Cancel timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerId"><span data-ttu-id="6072c-117">キャンセルする既存のスケジュール済み作業項目に関連付けられている <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="6072c-117">The <see cref="T:System.Guid" /> associated with the existing scheduled work item to cancel.</span></span></param>
        <summary><span data-ttu-id="6072c-118">指定した既存のワークフロー インスタンス作業項目をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="6072c-118">Cancels the specified existing workflow instance work item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberSignature Language="F#" Value="override this.OnStarted : unit -&gt; unit" Usage="manualWorkflowSchedulerService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6072c-119"><see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" /> からオーバーロードされます。</span><span class="sxs-lookup"><span data-stu-id="6072c-119">Overloaded from <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />.</span></span> <span data-ttu-id="6072c-120">このメソッドは <see cref="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" /> が呼び出されるときに必ず呼び出され、<see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> が開始されるときの必要な作業を行うために <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="6072c-120">This method is called whenever <see cref="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" /> is called and is used by the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> to do work that is needed when the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> starts.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunWorkflow">
      <MemberSignature Language="C#" Value="public bool RunWorkflow (Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RunWorkflow(valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function RunWorkflow (workflowInstanceId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RunWorkflow(Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="member this.RunWorkflow : Guid -&gt; bool" Usage="manualWorkflowSchedulerService.RunWorkflow workflowInstanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowInstanceId"><span data-ttu-id="6072c-121">実行するワークフロー インスタンスの <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="6072c-121">The <see cref="T:System.Guid" /> for the workflow instance to run.</span></span></param>
        <summary><span data-ttu-id="6072c-122">指定したワークフロー インスタンスを実行します。</span><span class="sxs-lookup"><span data-stu-id="6072c-122">Runs the specified workflow instance.</span></span></summary>
        <returns><span data-ttu-id="6072c-123">ワークフローが実行を開始した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6072c-123"><see langword="true" /> if the workflow starts running; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6072c-124">これは、現在のスレッドを使用してワークフローを実行する同期呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="6072c-124">This is a synchronous call that uses the current thread to run the workflow.</span></span> <span data-ttu-id="6072c-125">ワークフローがアイドル状態になるか、中断、完了、終了、中止のいずれかの状態になるまで返されません。</span><span class="sxs-lookup"><span data-stu-id="6072c-125">It does not return until the workflow idles, suspends, completes, terminates, or aborts.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6072c-126"><paramref name="workflowInstanceId" /> が空の GUID です。</span><span class="sxs-lookup"><span data-stu-id="6072c-126"><paramref name="workflowInstanceId" /> is an empty GUID.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schedule">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6072c-127">保留中の作業項目のキューにワークフロー インスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="6072c-127">Adds a workflow instance to the pending work items queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid -&gt; unit" Usage="manualWorkflowSchedulerService.Schedule (callback, workflowInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="6072c-128">実行するメソッドを表す <see cref="T:System.Threading.WaitCallback" /> マルチキャスト デリゲート。</span><span class="sxs-lookup"><span data-stu-id="6072c-128">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span></span></param>
        <param name="workflowInstanceId"><span data-ttu-id="6072c-129">ワークフロー インスタンスを表す <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="6072c-129">A <see cref="T:System.Guid" /> that represents the workflow instance.</span></span></param>
        <summary><span data-ttu-id="6072c-130">指定したマルチキャスト デリゲートを使用する指定したワークフロー インスタンスを使用して、保留中の作業項目のキューにワークフロー インスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="6072c-130">Adds a workflow instance to the pending work items queue using the specified workflow instance using the specified multicast delegate.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6072c-131"><paramref name="callback" /> に null 参照 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="6072c-131"><paramref name="callback" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId, valuetype System.DateTime whenUtc, valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid, whenUtc As DateTime, timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid * DateTime * Guid -&gt; unit" Usage="manualWorkflowSchedulerService.Schedule (callback, workflowInstanceId, whenUtc, timerId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="whenUtc" Type="System.DateTime" />
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="6072c-132">実行するメソッドを表す <see cref="T:System.Threading.WaitCallback" /> マルチキャスト デリゲート。</span><span class="sxs-lookup"><span data-stu-id="6072c-132">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span></span></param>
        <param name="workflowInstanceId"><span data-ttu-id="6072c-133">ワークフロー インスタンスを表す <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="6072c-133">A <see cref="T:System.Guid" /> that represents the workflow instance.</span></span></param>
        <param name="whenUtc"><span data-ttu-id="6072c-134">スレッドの実行を開始する時刻を示す <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="6072c-134">The <see cref="T:System.DateTime" /> that indicates the time to begin running the thread.</span></span></param>
        <param name="timerId"><span data-ttu-id="6072c-135">スケジュール済みスレッドを表す <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="6072c-135">A <see cref="T:System.Guid" /> that represents the scheduled thread.</span></span></param>
        <summary><span data-ttu-id="6072c-136">指定したマルチキャスト デリゲート、<see cref="T:System.DateTime" />、および GUID を使用して、保留中の作業項目のキューに、指定したワークフロー インスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="6072c-136">Adds the specified workflow instance to the pending work item queue using the specified multicast delegate, <see cref="T:System.DateTime" /> and GUIDs.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6072c-137"><paramref name="callback" /> に null 参照 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="6072c-137"><paramref name="callback" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6072c-138"><paramref name="workflowInstanceId" /> または <paramref name="timerId" /> が空の GUID です。</span><span class="sxs-lookup"><span data-stu-id="6072c-138"><paramref name="workflowInstanceId" /> or <paramref name="timerId" /> is an empty GUID.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberSignature Language="F#" Value="override this.Stop : unit -&gt; unit" Usage="manualWorkflowSchedulerService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6072c-139"><see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" /> からオーバーロードされます。</span><span class="sxs-lookup"><span data-stu-id="6072c-139">Overloaded from <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />.</span></span> <span data-ttu-id="6072c-140"><see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> はこのメソッドを使用して、<see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> が停止するときの必要な作業を行います。</span><span class="sxs-lookup"><span data-stu-id="6072c-140">The <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> uses this method to do work that is needed when the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> stops.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
