<Type Name="SqlWorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85c4fdec2b7c6ce7055108516bbbc990058d04fe" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78807571" /></Metadata><TypeSignature Language="C#" Value="public class SqlWorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowPersistenceService, System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlWorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowPersistenceService implements class System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlWorkflowPersistenceService&#xA;Inherits WorkflowPersistenceService&#xA;Implements IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlWorkflowPersistenceService : System::Workflow::Runtime::Hosting::WorkflowPersistenceService, System::Workflow::Runtime::IPendingWork" />
  <TypeSignature Language="F#" Value="type SqlWorkflowPersistenceService = class&#xA;    inherit WorkflowPersistenceService&#xA;    interface IPendingWork" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowPersistenceService</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Runtime.IPendingWork</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="71ec4-101">SQL データベースを使用してワークフロー状態情報を格納する永続性サービスを表します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-101">Represents a persistence service that uses a SQL database to store workflow state information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="71ec4-102"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> クラスは、完全に機能する永続性サービスを表します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-102">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class represents a fully-functional persistence service.</span></span> <span data-ttu-id="71ec4-103">このそのサービスをそのまま使用して、ワークフロー ランタイム エンジンから要求されたときに、ワークフロー インスタンスについてのワークフロー状態情報を永続化および取得できます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-103">You can use this service out-of-box to persist and retrieve workflow state information about a workflow instance when requested to by the workflow runtime engine.</span></span>  
  
 <span data-ttu-id="71ec4-104"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> は、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> の提供するワークフローのトランザクション バッチ機能に参加します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-104">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> participates in the workflow transaction batching functionality provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>.</span></span> <span data-ttu-id="71ec4-105">つまり、このサービスは、SQL データベースへの書き込み保留を表すオブジェクトを <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> に追加し、<xref:System.Workflow.Runtime.IPendingWork> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-105">That is, it adds objects that represent pending writes to the SQL database to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> and implements the <xref:System.Workflow.Runtime.IPendingWork> interface.</span></span>  
  
 <span data-ttu-id="71ec4-106"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> は、ワークフロー インスタンスのロックをサポートします。</span><span class="sxs-lookup"><span data-stu-id="71ec4-106">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> supports locking of workflow instances.</span></span> <span data-ttu-id="71ec4-107">この機能は、いくつかのワークフロー ランタイムが同じデータベースを共有するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-107">This feature is used when several workflow runtimes share the same database.</span></span> <span data-ttu-id="71ec4-108">ワークフロー インスタンスがワークフロー ランタイムによって使用されているときは、そのワークフロー インスタンスがロックされていることをマークするために、SQL データベース テーブルの 1 つの列が使用されます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-108">A column in the SQL database table is used to mark a workflow instance as locked whenever it is being used by a workflow runtime.</span></span> <span data-ttu-id="71ec4-109"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> は、別のランタイムによって "使用中" とマークされたワークフロー インスタンスを読み込みません。</span><span class="sxs-lookup"><span data-stu-id="71ec4-109">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> does not load a workflow instance that is marked as "in use" by another runtime.</span></span> <span data-ttu-id="71ec4-110">こうしたロックが解放されるのは通常、ワークフロー インスタンスが永続化されたとき、たとえばワークフロー インスタンスがアイドル状態になったとき、あるいは完了または終了したときです。</span><span class="sxs-lookup"><span data-stu-id="71ec4-110">Typically these locks are released when the workflow instance is persisted, for example, on idle, completion, or termination.</span></span> <span data-ttu-id="71ec4-111">また、非アクティブ期間の後にロックを自動的に解放することもできます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-111">The locks can also be released automatically after a period of inactivity.</span></span> <span data-ttu-id="71ec4-112">この非アクティブ期間は、<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> クラスのコンストラクターを使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-112">This period of inactivity can be set using the constructor of the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class.</span></span>  <span data-ttu-id="71ec4-113">構成ファイルを介して設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-113">It can also be set through the configuration file.</span></span>  
  
 <span data-ttu-id="71ec4-114">一般的な永続性サービスの詳細については、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="71ec4-114">For more information about persistence services in general, see the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  
  
 <span data-ttu-id="71ec4-115">たとえば <xref:System.Workflow.Activities.DelayActivity> を持つワークフロー インスタンスは、タイマーを含むことができます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-115">Workflow instances can contain timers, for example, if they have a <xref:System.Workflow.Activities.DelayActivity>.</span></span> <span data-ttu-id="71ec4-116">タイマーを含むワークフローの場合、<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> は、ワークフローの次のタイマーが切れる時刻を記録します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-116">For workflows that contain timers, the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> records the time when the workflow's next timer expires.</span></span> <span data-ttu-id="71ec4-117"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> は定期的にデータベースをポーリングして、タイマーが切れたワークフローを探します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-117">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> periodically polls the database, looking for workflows whose timers have expired.</span></span> <span data-ttu-id="71ec4-118">ポーリング間隔の頻度は、<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> コンストラクターまたは構成ファイルを使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-118">The frequency of the polling interval can be set using the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> constructor or using a configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71ec4-119">ワークフロー アプリケーションで <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> と <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> の両方を使用する場合は、永続化と追跡に 1 つのデータベースを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="71ec4-119">When using both the <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> and the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> in a workflow application, it is recommended to use a single database for both persistence and tracking.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71ec4-120"><see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-120">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService : System.Collections.Specialized.NameValueCollection -&gt; System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" Usage="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="71ec4-121">開始パラメーターを格納した <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-121">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains startup parameters.</span></span></param>
        <summary><span data-ttu-id="71ec4-122">指定されたパラメーターを使用して、<see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-122">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> class by using the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-123">このコンストラクターは、ワークフロー ランタイム エンジンがアプリケーション構成ファイルからサービスを読み込むときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-123">This constructor is invoked when the workflow runtime engine loads services from an application configuration file.</span></span> <span data-ttu-id="71ec4-124">`NameValueCollection` パラメーターを指定してプログラムによって呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-124">It can also be programmatically invoked with the `NameValueCollection` parameter.</span></span> <span data-ttu-id="71ec4-125">有効なパラメーターは、`ConnectionString`、`OwnershipTimeoutSeconds`、`UnloadOnIdle`、および `EnableRetries` です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-125">The valid parameters are `ConnectionString`, `OwnershipTimeoutSeconds`, `UnloadOnIdle`, and `EnableRetries`.</span></span> <span data-ttu-id="71ec4-126">パラメーターに他のキーが含まれていると、<xref:System.ArgumentException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-126">An <xref:System.ArgumentException> is thrown if parameters contain any other keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="71ec4-127"><paramref name="parameters" /> に無効なデータベース接続文字列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="71ec4-127"><paramref name="parameters" /> contains an invalid database connection string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="71ec4-128"><paramref name="parameters" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-128"><paramref name="parameters" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService : string -&gt; System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" Usage="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="71ec4-129">有効なデータベース接続文字列。</span><span class="sxs-lookup"><span data-stu-id="71ec4-129">A valid database connection string.</span></span></param>
        <summary><span data-ttu-id="71ec4-130">データベース接続文字列を使用して、<see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-130">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> class by using the database connection string.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="71ec4-131"><paramref name="connectionString" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-131"><paramref name="connectionString" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (string connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool unloadOnIdle, valuetype System.TimeSpan instanceOwnershipDuration, valuetype System.TimeSpan loadingInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, unloadOnIdle As Boolean, instanceOwnershipDuration As TimeSpan, loadingInterval As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::String ^ connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService : string * bool * TimeSpan * TimeSpan -&gt; System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" Usage="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService (connectionString, unloadOnIdle, instanceOwnershipDuration, loadingInterval)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="unloadOnIdle" Type="System.Boolean" />
        <Parameter Name="instanceOwnershipDuration" Type="System.TimeSpan" />
        <Parameter Name="loadingInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="71ec4-132">有効なデータベース接続文字列。</span><span class="sxs-lookup"><span data-stu-id="71ec4-132">A valid database connection string.</span></span></param>
        <param name="unloadOnIdle"><span data-ttu-id="71ec4-133">アイドル状態になったワークフローをアンロードする場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-133"><see langword="true" /> to unload the workflow when it is in an idle state.</span></span></param>
        <param name="instanceOwnershipDuration"><span data-ttu-id="71ec4-134">ロックがアイドル状態のワークフローで保持される時間の長さ。</span><span class="sxs-lookup"><span data-stu-id="71ec4-134">The length of time that locks are maintained on idle workflows.</span></span></param>
        <param name="loadingInterval"><span data-ttu-id="71ec4-135">永続性サービスが、タイマーが切れたワークフローのデータベースをポーリングする頻度。</span><span class="sxs-lookup"><span data-stu-id="71ec4-135">The frequency at which the persistence service polls the database for workflows with expired timers.</span></span></param>
        <summary><span data-ttu-id="71ec4-136">データベース接続文字列と他のパラメーターを使用して、<see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-136">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> class using a database connection string and other parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-137">`instanceOwnershipDuration` の値を提供するこのコンストラクターを使用すると、ロック機能が有効です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-137">Note that using this constructor (which provides a value for `instanceOwnershipDuration`) enables locking.</span></span> <span data-ttu-id="71ec4-138">ロック機能が無効の永続性サービスを作成するには、`instanceOwnershipDuration` を指定しない異なるコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-138">To create a persistence service that does not enable locking, use a different constructor that does not specify `instanceOwnershipDuration`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="71ec4-139"><paramref name="connectionString" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-139"><paramref name="connectionString" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableRetries">
      <MemberSignature Language="C#" Value="public bool EnableRetries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRetries" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRetries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRetries { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRetries : bool with get, set" Usage="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71ec4-140"><see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> が作業バッチのコミットを再試行するかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-140">Gets or sets a value that specifies whether the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> retries committing a work batch.</span></span></summary>
        <value><span data-ttu-id="71ec4-141">サービスで作業バッチのコミットを再試行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-141"><see langword="true" /> if the service should retry committing the work batch; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="71ec4-142">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-142">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-143">次の作業項目はバッチ処理できません。トランザクションの再試行は、`EnableRetries` プロパティを介して処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="71ec4-143">The following work items cannot be batched and any transaction retries must be handled through the `EnableRetries` property:</span></span>  
  
-   <span data-ttu-id="71ec4-144">期限切れデータベース タイマーのポーリング</span><span class="sxs-lookup"><span data-stu-id="71ec4-144">Polling for expired database timers.</span></span>  
  
-   <span data-ttu-id="71ec4-145">ワークフロー インスタンス状態の読み込み</span><span class="sxs-lookup"><span data-stu-id="71ec4-145">Loading workflow instance states.</span></span>  
  
-   <span data-ttu-id="71ec4-146">ワークフロー ランタイム エンジン起動時のワークフロー インスタンスの再読み込み</span><span class="sxs-lookup"><span data-stu-id="71ec4-146">Reloading workflow instances when the workflow run-time engine starts.</span></span>  
  
-   <span data-ttu-id="71ec4-147"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A> の呼び出し。</span><span class="sxs-lookup"><span data-stu-id="71ec4-147">Calling <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A>.</span></span>  
  
 <span data-ttu-id="71ec4-148">この機能は、プログラムで設定する以外に、構成ファイルを使用して有効にすることもできます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-148">Besides being set programmatically, this functionality can be enabled through a configuration file.</span></span> <span data-ttu-id="71ec4-149">構成ファイルを使用してこのプロパティを設定する方法の詳細については、「[ワークフロー構成ファイル](https://msdn.microsoft.com/library/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="71ec4-149">For more information about how to set this property through a configuration file, see [Workflow Configuration Files](https://msdn.microsoft.com/library/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909).</span></span>  
  
 <span data-ttu-id="71ec4-150">作業バッチトランザクションの再試行に関する一般的な情報については、「[ワークフローの状態情報のバッチ](https://msdn.microsoft.com/library/ecda18ba-9140-4bd7-b13d-6787fdf5959d)処理」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="71ec4-150">For general information about retrying work batch transactions, see [Batching State Information in Workflows](https://msdn.microsoft.com/library/ecda18ba-9140-4bd7-b13d-6787fdf5959d).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllWorkflows">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt; GetAllWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt; GetAllWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllWorkflows () As IEnumerable(Of SqlPersistenceWorkflowInstanceDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Workflow::Runtime::Hosting::SqlPersistenceWorkflowInstanceDescription ^&gt; ^ GetAllWorkflows();" />
      <MemberSignature Language="F#" Value="member this.GetAllWorkflows : unit -&gt; seq&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt;" Usage="sqlWorkflowPersistenceService.GetAllWorkflows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71ec4-151">永続化されたすべてのワークフローのインスタンスの説明を取得します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-151">Retrieves instance descriptions of all persisted workflows.</span></span></summary>
        <returns><span data-ttu-id="71ec4-152">永続化されたすべてのワークフローのリスト。</span><span class="sxs-lookup"><span data-stu-id="71ec4-152">A list of all persisted workflows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid id, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid id, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function LoadCompletedContextActivity (id As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid id, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="override this.LoadCompletedContextActivity : Guid * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="sqlWorkflowPersistenceService.LoadCompletedContextActivity (id, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="71ec4-153">スコープ アクティビティの <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-153">The <see cref="T:System.Guid" /> of the scope activity.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="71ec4-154">スコープ アクティビティを囲む <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-154">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that encloses the scope activity.</span></span></param>
        <summary><span data-ttu-id="71ec4-155">指定した完了スコープをデータベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-155">Retrieves the specified completed scope from the database.</span></span></summary>
        <returns><span data-ttu-id="71ec4-156">完了したスコープを表す <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-156">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-157">ワークフロー ランタイム エンジンは、補正中は <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-157">The workflow run-time engine uses <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> during compensation.</span></span> <span data-ttu-id="71ec4-158"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> は、ワークフロー ランタイム エンジンでのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="71ec4-158"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> should only be called by the workflow run-time engine.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71ec4-159"><paramref name="id" /> と一致するスコープがデータベースに見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="71ec4-159">A scope that matches <paramref name="id" /> could not be found in the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadExpiredTimerWorkflowIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Guid&gt; LoadExpiredTimerWorkflowIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; LoadExpiredTimerWorkflowIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadExpiredTimerWorkflowIds () As IList(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Guid&gt; ^ LoadExpiredTimerWorkflowIds();" />
      <MemberSignature Language="F#" Value="member this.LoadExpiredTimerWorkflowIds : unit -&gt; System.Collections.Generic.IList&lt;Guid&gt;" Usage="sqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71ec4-160">タイマーが切れたワークフローの ID のリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-160">Retrieves a list of ids for workflows with expired timers.</span></span></summary>
        <returns><span data-ttu-id="71ec4-161">タイマーが切れたワークフローの ID のリスト。</span><span class="sxs-lookup"><span data-stu-id="71ec4-161">A list of ids for workflows with expired timers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadingInterval">
      <MemberSignature Language="C#" Value="public TimeSpan LoadingInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LoadingInterval" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadingInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan LoadingInterval { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadingInterval : TimeSpan" Usage="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71ec4-162">読み込み間隔の長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-162">Gets the length of the loading interval.</span></span></summary>
        <value><span data-ttu-id="71ec4-163">永続性サービスが、タイマーが切れたワークフローのデータベースをポーリングする頻度。</span><span class="sxs-lookup"><span data-stu-id="71ec4-163">The frequency at which the persistence service polls the database for workflows with expired timers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-164">既定値は 2 分です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-164">The default value is 2 minutes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function LoadWorkflowInstanceState (id As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid id);" />
      <MemberSignature Language="F#" Value="override this.LoadWorkflowInstanceState : Guid -&gt; System.Workflow.ComponentModel.Activity" Usage="sqlWorkflowPersistenceService.LoadWorkflowInstanceState id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="71ec4-165">ワークフロー インスタンス状態の <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-165">The <see cref="T:System.Guid" /> of the workflow instance state.</span></span></param>
        <summary><span data-ttu-id="71ec4-166">指定したワークフロー インスタンス状態をデータベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-166">Retrieves the specified workflow instance state from the database.</span></span></summary>
        <returns><span data-ttu-id="71ec4-167">ワークフロー インスタンスのルート アクティビティを表す <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-167">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-168"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState%2A> は、ワークフロー ランタイム エンジンでのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="71ec4-168"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState%2A> should only be called by the workflow run-time engine.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71ec4-169"><paramref name="id" /> と一致するワークフロー インスタンス状態がデータベースに見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="71ec4-169">A workflow instance state that matches <paramref name="id" /> could not be found in the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberSignature Language="F#" Value="override this.OnStarted : unit -&gt; unit" Usage="sqlWorkflowPersistenceService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71ec4-170">新しいタイマーを開始し、実行中のワークフロー インスタンスを回復します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-170">Starts a new timer and recovers running workflow instances.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal override void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity completedScopeActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity completedScopeActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SaveCompletedContextActivity (completedScopeActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ completedScopeActivity);" />
      <MemberSignature Language="F#" Value="override this.SaveCompletedContextActivity : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="sqlWorkflowPersistenceService.SaveCompletedContextActivity completedScopeActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedScopeActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="completedScopeActivity"><span data-ttu-id="71ec4-171">完了したスコープを表す <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-171">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></param>
        <summary><span data-ttu-id="71ec4-172">指定した完了スコープの状態を保存します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-172">Saves the state of the specified completed scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-173">`completedScopeActivity` は、シリアル化されて <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> に追加されます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-173">`completedScopeActivity` is serialized and added to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberSignature Language="F#" Value="override this.SaveWorkflowInstanceState : System.Workflow.ComponentModel.Activity * bool -&gt; unit" Usage="sqlWorkflowPersistenceService.SaveWorkflowInstanceState (rootActivity, unlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="71ec4-174">ワークフロー インスタンスのルート アクティビティ。</span><span class="sxs-lookup"><span data-stu-id="71ec4-174">The root activity of the workflow instance.</span></span></param>
        <param name="unlock"><span data-ttu-id="71ec4-175">ワークフロー インスタンスをロックしない場合は <see langword="true" />、ロックする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-175"><see langword="true" /> if the workflow instance should not be locked; <see langword="false" /> if the workflow instance should be locked.</span></span></param>
        <summary><span data-ttu-id="71ec4-176">指定したワークフロー インスタンス状態を保存します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-176">Saves the specified workflow instance state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-177">`rootActivity` は、シリアル化されて <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> に書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-177">`rootActivity` is serialized and written to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="71ec4-178">そのまますぐに使用できる <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> は、ワークフロー インスタンス状態のロック処理を実装しています。</span><span class="sxs-lookup"><span data-stu-id="71ec4-178">The out-of-box <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implements locking of the workflow instance state.</span></span> <span data-ttu-id="71ec4-179">ユーザーは、コンストラクターの `instanceOwnershipDuration` パラメーターを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="71ec4-179">The user must configure the `instanceOwnershipDuration` parameter in the constructor.</span></span> <span data-ttu-id="71ec4-180">この値は、ホストがインスタンスをロックしておける時間間隔を決定します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-180">This value decides the time interval during which the instance can be locked by a host.</span></span> <span data-ttu-id="71ec4-181">複数のホストが同じ永続性サービスとデータベースを共有している場合、この間に別のホストがインスタンスを読み込もうとすると、<xref:System.Workflow.Runtime.WorkflowOwnershipException> が発生します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-181">If multiple hosts share the same persistence service and database, and another host tries to load the instance during this interval, a <xref:System.Workflow.Runtime.WorkflowOwnershipException> occurs.</span></span> <span data-ttu-id="71ec4-182">詳細については、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="71ec4-182">For more information, see the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceInstanceId">
      <MemberSignature Language="C#" Value="public Guid ServiceInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ServiceInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ServiceInstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceInstanceId : Guid" Usage="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71ec4-183">サービス インスタンス識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-183">Gets the service instance identifier.</span></span></summary>
        <value><span data-ttu-id="71ec4-184">サービス インスタンス識別子。</span><span class="sxs-lookup"><span data-stu-id="71ec4-184">The service instance identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-185">既定値は `Guid.Empty` です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-185">The default value is `Guid.Empty`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal override void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Start();" />
      <MemberSignature Language="F#" Value="override this.Start : unit -&gt; unit" Usage="sqlWorkflowPersistenceService.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71ec4-186"><see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> を開始します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-186">Starts the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-187"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start%2A> は、ワークフロー ランタイム エンジンでのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="71ec4-187"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start%2A> must only be called by the workflow run-time engine.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberSignature Language="F#" Value="override this.Stop : unit -&gt; unit" Usage="sqlWorkflowPersistenceService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71ec4-188">サービスとタイマーを停止します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-188">Stops the service and the timer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.Commit">
      <MemberSignature Language="C#" Value="void IPendingWork.Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Runtime.IPendingWork.Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub Commit (transaction As Transaction, items As ICollection) Implements IPendingWork.Commit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Runtime.IPendingWork.Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::Commit;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.Runtime.IPendingWork.Commit : System.Transactions.Transaction * System.Collections.ICollection -&gt; unit&#xA;override this.System.Workflow.Runtime.IPendingWork.Commit : System.Transactions.Transaction * System.Collections.ICollection -&gt; unit" Usage="sqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit (transaction, items)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="71ec4-189"><see cref="T:System.Transactions.Transaction" /> です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-189">A <see cref="T:System.Transactions.Transaction" />.</span></span></param>
        <param name="items"><span data-ttu-id="71ec4-190">データベースに書き込まれる作業項目の <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-190">The <see cref="T:System.Collections.ICollection" /> of work items to be written to the database.</span></span></param>
        <summary><span data-ttu-id="71ec4-191">シリアル化された状態オブジェクトの <see cref="T:System.Collections.ICollection" /> をデータベースに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-191">Writes an <see cref="T:System.Collections.ICollection" /> of serialized state objects to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-192">`items` に格納されたシリアル化された状態オブジェクトがデータベースに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-192">The serialized state objects that are contained in `items` are written to the database.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Workflow.Runtime.Hosting.PersistenceException"><span data-ttu-id="71ec4-193">データベースに書き込もうとしているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="71ec4-193">An error occurred while trying to write to the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.Complete">
      <MemberSignature Language="C#" Value="void IPendingWork.Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Runtime.IPendingWork.Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub Complete (succeeded As Boolean, items As ICollection) Implements IPendingWork.Complete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Runtime.IPendingWork.Complete(bool succeeded, System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::Complete;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.Runtime.IPendingWork.Complete : bool * System.Collections.ICollection -&gt; unit&#xA;override this.System.Workflow.Runtime.IPendingWork.Complete : bool * System.Collections.ICollection -&gt; unit" Usage="sqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete (succeeded, items)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded"><span data-ttu-id="71ec4-194">コミットが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-194"><see langword="true" /> if the commit succeeded; otherwise, <see langword="false" />.</span></span></param>
        <param name="items"><span data-ttu-id="71ec4-195">シリアル化された状態オブジェクトの <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-195">An <see cref="T:System.Collections.ICollection" /> of serialized state objects.</span></span></param>
        <summary><span data-ttu-id="71ec4-196">作業バッチを完了し、すべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-196">Completes the work batch and releases any resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-197">そのまますぐに使用できる <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> の実装では、</span><span class="sxs-lookup"><span data-stu-id="71ec4-197">In the out-of-box implementation of the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>,</span></span>   
 <span data-ttu-id="71ec4-198"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> は no-op です。</span><span class="sxs-lookup"><span data-stu-id="71ec4-198"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> is a no-op.</span></span> <span data-ttu-id="71ec4-199"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> クラスから継承して拡張する場合、<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> を使用して、`items` に対して実装に応じて必要なアクションを実行できます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-199">If you inherit from and extend the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, you may use <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> to perform any actions required on `items` dictated by your implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.MustCommit">
      <MemberSignature Language="C#" Value="bool IPendingWork.MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.Runtime.IPendingWork.MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Function MustCommit (items As ICollection) As Boolean Implements IPendingWork.MustCommit" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Workflow.Runtime.IPendingWork.MustCommit(System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::MustCommit;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.Runtime.IPendingWork.MustCommit : System.Collections.ICollection -&gt; bool&#xA;override this.System.Workflow.Runtime.IPendingWork.MustCommit : System.Collections.ICollection -&gt; bool" Usage="sqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit items" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="71ec4-200">データベースに書き込まれるシリアル化された状態オブジェクトの <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-200">An <see cref="T:System.Collections.ICollection" /> of serialized state objects to be written to the database.</span></span></param>
        <summary><span data-ttu-id="71ec4-201">シリアル化された状態オブジェクトのコレクションをデータベースに書き込む必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-201">Returns a value that indicates whether the collection of serialized state objects should be written to the database.</span></span></summary>
        <returns><span data-ttu-id="71ec4-202"><see langword="true" /> は、バッチをコミットする必要があることを示します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-202"><see langword="true" /> indicates that the batch should be committed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-203"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> は、常に `true` を返します。これは、バッチに対して <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> を呼び出すようワークフロー ランタイム エンジンに指示しています。</span><span class="sxs-lookup"><span data-stu-id="71ec4-203"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> always returns `true`, which instructs the workflow run-time engine to invoke <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> on the batch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal override bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UnloadOnIdle (activity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="override this.UnloadOnIdle : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="sqlWorkflowPersistenceService.UnloadOnIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="71ec4-204">ワークフロー インスタンスのルート アクティビティを表す <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-204">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="71ec4-205">アイドル状態になったワークフローがアンロードされるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-205">Returns a value that indicates whether the workflow is unloaded when it is in an idle state.</span></span></summary>
        <returns><span data-ttu-id="71ec4-206">アイドル状態になったワークフローがアンロードされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-206"><see langword="true" /> if the workflow is unloaded when it is in an idle state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="override this.UnlockWorkflowInstanceState : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="sqlWorkflowPersistenceService.UnlockWorkflowInstanceState rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="71ec4-207">ワークフロー インスタンスのルート アクティビティを表す <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="71ec4-207">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="71ec4-208">指定したワークフロー インスタンス状態へのアクセスのロックを解除します。</span><span class="sxs-lookup"><span data-stu-id="71ec4-208">Unlocks access to the specified workflow instance state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ec4-209">このメソッドは、永続性のないデータ ストア内のワークフロー インスタンス状態のロックを解除するためにワークフロー ランタイムによって使用され、ランタイムが状態を永続化せずにロック解除する必要がある場合 (たとえば <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> の場合) に、ワークフロー ランタイムによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="71ec4-209">This method is used by the workflow runtime to unlock a workflow instance state in the data store without persistence and is called by the workflow runtime if the runtime must unlock the state without persisting, for example, in the case of an <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
