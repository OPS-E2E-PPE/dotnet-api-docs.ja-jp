<Type Name="RemotingServices" FullName="System.Runtime.Remoting.RemotingServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1cee83084cbf8704c196a2c43d3edf0ef6e2a574" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78829905" /></Metadata><TypeSignature Language="C#" Value="public sealed class RemotingServices" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RemotingServices extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.RemotingServices" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RemotingServices" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class RemotingServices sealed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type RemotingServices = class" />
  <TypeSignature Language="C#" Value="public static class RemotingServices" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed RemotingServices extends System.Object" FrameworkAlternate="netframework-4.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Class RemotingServices" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class RemotingServices abstract sealed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RemotingServices extends System.Object" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e9566-101">リモート オブジェクトとプロキシを使用および公開するための複数のメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="e9566-101">Provides several methods for using and publishing remoted objects and proxies.</span></span> <span data-ttu-id="e9566-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e9566-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-103">アクティブ化、有効期間管理、トランザクションなどの問題を処理するサービスプロバイダーでない限り、プロキシ参照とオブジェクト参照を区別する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-103">Unless you are a service provider dealing with issues such as activation, lifetime management, or transactions, you do not need to distinguish between proxy references and object references.</span></span> <span data-ttu-id="e9566-104">リモート処理インフラストラクチャは、リモートオブジェクトがクライアントの領域に存在するという印象を与える透過プロキシを使用します。</span><span class="sxs-lookup"><span data-stu-id="e9566-104">The remoting infrastructure uses transparent proxies that give the impression that the remote objects reside in the client's space.</span></span> <span data-ttu-id="e9566-105">プロキシは、リモートの場所で実際のオブジェクトに対して行われた呼び出しを転送することによってこれを実現します。</span><span class="sxs-lookup"><span data-stu-id="e9566-105">Proxies achieve this by forwarding calls made on them to the real objects at remote locations.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9566-106">既知のオブジェクトのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e9566-106">Creates a proxy for a well-known object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public static object Connect (Type classToProxy, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Connect(class System.Type classToProxy, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Connect (classToProxy As Type, url As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Connect(Type ^ classToProxy, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member Connect : Type * string -&gt; obj" Usage="System.Runtime.Remoting.RemotingServices.Connect (classToProxy, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classToProxy" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classToProxy"><span data-ttu-id="e9566-107">サーバー エンドにある接続する既知のオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-107">The <see cref="T:System.Type" /> of a well-known object on the server end to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="e9566-108">サーバー クラスの URL。</span><span class="sxs-lookup"><span data-stu-id="e9566-108">The URL of the server class.</span></span></param>
        <summary><span data-ttu-id="e9566-109"><see cref="T:System.Type" /> および URL を指定して、既知のオブジェクトのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e9566-109">Creates a proxy for a well-known object, given the <see cref="T:System.Type" /> and URL.</span></span></summary>
        <returns><span data-ttu-id="e9566-110">指定した既知のオブジェクトによって提供されたエンドポイントを指す、リモート オブジェクトへのプロキシ。</span><span class="sxs-lookup"><span data-stu-id="e9566-110">A proxy to the remote object that points to an endpoint served by the specified well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-111">返されたプロキシオブジェクトは、指定された既知のオブジェクトによって提供されるエンドポイントを指します。</span><span class="sxs-lookup"><span data-stu-id="e9566-111">The returned proxy object points to an endpoint served by the specified well-known object.</span></span> <span data-ttu-id="e9566-112">プロキシでメソッドが呼び出されるまで、ネットワーク経由でメッセージが送信されることはありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-112">No messages are sent over the network until a method is called on the proxy.</span></span>



## Examples
 <span data-ttu-id="e9566-113">次のコード例は、<xref:System.Runtime.Remoting.RemotingServices.Connect%2A> メソッドを使用して、既知のオブジェクトへのプロキシを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-113">The following code example demonstrates how to use the <xref:System.Runtime.Remoting.RemotingServices.Connect%2A> method to create a proxy to a well-known object.</span></span>

 [!code-cpp[RemotingServices.BasicSample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices.BasicSample/CPP/basicclient.cpp#1)]
 [!code-csharp[RemotingServices.BasicSample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.BasicSample/CS/basicclient.cs#1)]
 [!code-vb[RemotingServices.BasicSample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.BasicSample/VB/basicclient.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-114">直前の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-114">The immediate caller does not have permission to configure remoting types and channels.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public static object Connect (Type classToProxy, string url, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Connect(class System.Type classToProxy, string url, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Connect (classToProxy As Type, url As String, data As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Connect(Type ^ classToProxy, System::String ^ url, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member Connect : Type * string * obj -&gt; obj" Usage="System.Runtime.Remoting.RemotingServices.Connect (classToProxy, url, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classToProxy" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="classToProxy"><span data-ttu-id="e9566-115">接続する既知のオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-115">The <see cref="T:System.Type" /> of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="e9566-116">既知のオブジェクトの URL。</span><span class="sxs-lookup"><span data-stu-id="e9566-116">The URL of the well-known object.</span></span></param>
        <param name="data"><span data-ttu-id="e9566-117">チャネル固有のデータ。</span><span class="sxs-lookup"><span data-stu-id="e9566-117">Channel specific data.</span></span> <span data-ttu-id="e9566-118"><see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-118">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e9566-119"><see cref="T:System.Type" />、URL、およびチャネル固有のデータを指定して、既知のオブジェクトのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="e9566-119">Creates a proxy for a well-known object, given the <see cref="T:System.Type" />, URL, and channel-specific data.</span></span></summary>
        <returns><span data-ttu-id="e9566-120">要求した既知のオブジェクトによって提供されたエンドポイントを指すプロキシ。</span><span class="sxs-lookup"><span data-stu-id="e9566-120">A proxy that points to an endpoint that is served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-121">返されたプロキシオブジェクトは、指定された既知のオブジェクトによって提供されるエンドポイントを指します。</span><span class="sxs-lookup"><span data-stu-id="e9566-121">The returned proxy object points to an endpoint served by the specified well-known object.</span></span> <span data-ttu-id="e9566-122">プロキシでメソッドが呼び出されるまで、ネットワーク経由でメッセージが送信されることはありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-122">No messages are sent over the network until a method is called on the proxy.</span></span>

 <span data-ttu-id="e9566-123">`data` オブジェクトは、情報をチャネルに伝達するために使用され、<xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-123">The `data` object is used to communicate information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-124">直前の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-124">The immediate caller does not have permission to configure remoting types and channels.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public static bool Disconnect (MarshalByRefObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Disconnect(class System.MarshalByRefObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Disconnect (obj As MarshalByRefObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Disconnect(MarshalByRefObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member Disconnect : MarshalByRefObject -&gt; bool" Usage="System.Runtime.Remoting.RemotingServices.Disconnect obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.MarshalByRefObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e9566-125">チャネルから切断するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-125">Object to disconnect from its channel.</span></span></param>
        <summary><span data-ttu-id="e9566-126">オブジェクトが登録したリモート処理チャネルを経由してそれ以上のメッセージを受信するのを停止します。</span><span class="sxs-lookup"><span data-stu-id="e9566-126">Stops an object from receiving any further messages through the registered remoting channels.</span></span></summary>
        <returns><span data-ttu-id="e9566-127">オブジェクトが登録されたリモート処理チャネルから正常に切断された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-127"><see langword="true" /> if the object was disconnected from the registered remoting channels successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="e9566-128">次のコード例は、<xref:System.Runtime.Remoting.RemotingServices.Disconnect%2A> メソッドを使用して、リモート処理チャネルからオブジェクトを切断する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-128">The following code example demonstrates how to use the <xref:System.Runtime.Remoting.RemotingServices.Disconnect%2A> method to disconnect an object from the remoting channels.</span></span>

 [!code-cpp[RemotingServices.BasicSample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices.BasicSample/CPP/manualserver.cpp#2)]
 [!code-csharp[RemotingServices.BasicSample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.BasicSample/CS/manualserver.cs#2)]
 [!code-vb[RemotingServices.BasicSample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.BasicSample/VB/manualserver.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e9566-129"><paramref name="obj" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e9566-129">The <paramref name="obj" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e9566-130"><paramref name="obj" /> パラメーターがプロキシです。</span><span class="sxs-lookup"><span data-stu-id="e9566-130">The <paramref name="obj" /> parameter is a proxy.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-131">直前の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-131">The immediate caller does not have permission to configure remoting types and channels.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMessage">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.Messaging.IMethodReturnMessage ExecuteMessage (MarshalByRefObject target, System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.Messaging.IMethodReturnMessage ExecuteMessage(class System.MarshalByRefObject target, class System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecuteMessage (target As MarshalByRefObject, reqMsg As IMethodCallMessage) As IMethodReturnMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::Messaging::IMethodReturnMessage ^ ExecuteMessage(MarshalByRefObject ^ target, System::Runtime::Remoting::Messaging::IMethodCallMessage ^ reqMsg);" />
      <MemberSignature Language="F#" Value="static member ExecuteMessage : MarshalByRefObject * System.Runtime.Remoting.Messaging.IMethodCallMessage -&gt; System.Runtime.Remoting.Messaging.IMethodReturnMessage" Usage="System.Runtime.Remoting.RemotingServices.ExecuteMessage (target, reqMsg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMethodReturnMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.MarshalByRefObject" />
        <Parameter Name="reqMsg" Type="System.Runtime.Remoting.Messaging.IMethodCallMessage" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="e9566-132">メソッドを呼び出す対象のリモート オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-132">The remote object whose method you want to call.</span></span></param>
        <param name="reqMsg"><span data-ttu-id="e9566-133">指定したリモート オブジェクトのメソッドへのメソッド呼び出しメッセージ。</span><span class="sxs-lookup"><span data-stu-id="e9566-133">A method call message to the specified remote object's method.</span></span></param>
        <summary><span data-ttu-id="e9566-134">指定したリモート オブジェクトに接続し、そのオブジェクトで提供された <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> を実行します。</span><span class="sxs-lookup"><span data-stu-id="e9566-134">Connects to the specified remote object, and executes the provided <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> on it.</span></span></summary>
        <returns><span data-ttu-id="e9566-135">リモート メソッドの応答。</span><span class="sxs-lookup"><span data-stu-id="e9566-135">The response of the remote method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-136">現在のメソッドは、指定されたメソッド呼び出しを別のリモートオブジェクトに転送するために、サーバーによって特殊なケースで使用されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-136">The current method is used in special cases by the server to forward the specified method call to another, possibly remote, object.</span></span> <span data-ttu-id="e9566-137">このメソッドは、呼び出し元が適切なコンテキスト内にある場合にのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e9566-137">This method can be called only when the caller is in the appropriate context.</span></span>



## Examples
 <span data-ttu-id="e9566-138">次のコード例は、<xref:System.Runtime.Remoting.RemotingServices.ExecuteMessage%2A> メソッドを使用して、メソッド呼び出しをリモートオブジェクトに転送する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-138">The following code example demonstrates how to use the <xref:System.Runtime.Remoting.RemotingServices.ExecuteMessage%2A> method to forward method calls to remote objects.</span></span>

 [!code-cpp[RemotingServices.ExecuteMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices.ExecuteMessage/CPP/serviceclass.cpp#1)]
 [!code-csharp[RemotingServices.ExecuteMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.ExecuteMessage/CS/serviceclass.cs#1)]
 [!code-vb[RemotingServices.ExecuteMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.ExecuteMessage/VB/serviceclass.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-139">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-139">The immediate caller does not have infrastructure permission.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="e9566-140">メソッドがオブジェクトのネイティブ コンテキスト以外のコンテキストから呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e9566-140">The method was called from a context other than the native context of the object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnvoyChainForProxy">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.Messaging.IMessageSink GetEnvoyChainForProxy (MarshalByRefObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.Messaging.IMessageSink GetEnvoyChainForProxy(class System.MarshalByRefObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvoyChainForProxy (obj As MarshalByRefObject) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::Messaging::IMessageSink ^ GetEnvoyChainForProxy(MarshalByRefObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetEnvoyChainForProxy : MarshalByRefObject -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.MarshalByRefObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e9566-141">要求したエンボイ シンクが関連付けられているリモート オブジェクトのプロキシ。</span><span class="sxs-lookup"><span data-stu-id="e9566-141">The proxy of the remote object that requested envoy sinks are associated with.</span></span></param>
        <summary><span data-ttu-id="e9566-142">指定したプロキシによって表されるリモート オブジェクトに、メッセージを送信するときに使用するエンボイ シンクのチェインを返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-142">Returns a chain of envoy sinks that should be used when sending messages to the remote object represented by the specified proxy.</span></span></summary>
        <returns><span data-ttu-id="e9566-143">指定したプロキシに関連付けられているエンボイ シンクのチェイン。</span><span class="sxs-lookup"><span data-stu-id="e9566-143">A chain of envoy sinks associated with the specified proxy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-144">エンボイシンクは、オブジェクトにメッセージを返すときに使用されるオブジェクトの <xref:System.Runtime.Remoting.ObjRef> と共に送信されるシンクです。</span><span class="sxs-lookup"><span data-stu-id="e9566-144">Envoy sinks are sinks sent along with the <xref:System.Runtime.Remoting.ObjRef> of an object that is used when returning messages to that object.</span></span> <span data-ttu-id="e9566-145">現在のメソッドは、オブジェクトのプロキシとオブジェクト自体の間の通信中に使用されるエンボイシンクを返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-145">The current method returns the envoy sinks that are used during communication between the proxy of the object and the object itself.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-146">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-146">The immediate caller does not have infrastructure permission.</span></span></exception>
        <altmember cref="T:System.Runtime.Remoting.IEnvoyInfo" />
        <altmember cref="T:System.Runtime.Remoting.ObjRef" />
      </Docs>
    </Member>
    <Member MemberName="GetLifetimeService">
      <MemberSignature Language="C#" Value="public static object GetLifetimeService (MarshalByRefObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetLifetimeService(class System.MarshalByRefObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLifetimeService (obj As MarshalByRefObject) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetLifetimeService(MarshalByRefObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetLifetimeService : MarshalByRefObject -&gt; obj" Usage="System.Runtime.Remoting.RemotingServices.GetLifetimeService obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.MarshalByRefObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e9566-147">有効期間サービスを取得する対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-147">The object to obtain lifetime service for.</span></span></param>
        <summary><span data-ttu-id="e9566-148">指定したオブジェクトの有効期間ポリシーを制御する、有効期間サービス オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-148">Returns a lifetime service object that controls the lifetime policy of the specified object.</span></span></summary>
        <returns><span data-ttu-id="e9566-149"><paramref name="obj" /> の有効期間を制御するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-149">The object that controls the lifetime of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-150">既定の有効期間サービスの場合、返されるオブジェクトは <xref:System.Runtime.Remoting.Lifetime.ILease>型のオブジェクトになります。</span><span class="sxs-lookup"><span data-stu-id="e9566-150">For the default lifetime service the returned object will be an object of type <xref:System.Runtime.Remoting.Lifetime.ILease>.</span></span> <span data-ttu-id="e9566-151">`obj` パラメーターが `null`の場合、メソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-151">If the `obj` parameter is `null`, the method returns `null`.</span></span>



## Examples
 <span data-ttu-id="e9566-152">次のコード例は、<xref:System.Runtime.Remoting.RemotingServices.GetLifetimeService%2A> メソッドを使用して、指定されたオブジェクトの有効期間リースを取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-152">The following code example demonstrates how to use the <xref:System.Runtime.Remoting.RemotingServices.GetLifetimeService%2A> method to get a lifetime lease for the specified object.</span></span>

 [!code-cpp[RemotingServices.TimerSample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices.TimerSample/CPP/timerclient.cpp#1)]
 [!code-csharp[RemotingServices.TimerSample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.TimerSample/CS/timerclient.cs#1)]
 [!code-vb[RemotingServices.TimerSample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.TimerSample/VB/timerclient.vb#1)]

 <span data-ttu-id="e9566-153">この例をコンパイルして実行するには、サーバーをコンパイルして実行し、共有ライブラリの timerserver .dll をコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e9566-153">To compile and run this example, you will need to compile and run a server, timerserver.exe, and compile a shared library, timerservice.dll.</span></span>

 <span data-ttu-id="e9566-154">次のように、timerserver のソースを次に示します。</span><span class="sxs-lookup"><span data-stu-id="e9566-154">The source for timerserver.exe follows:</span></span>

 [!code-csharp[RemotingServices.TimerSample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.TimerSample/CS/timerserver.cs#2)]
 [!code-vb[RemotingServices.TimerSample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.TimerSample/VB/timerserver.vb#2)]

 <span data-ttu-id="e9566-155">Timerservice .dll のソースは次のようになります。</span><span class="sxs-lookup"><span data-stu-id="e9566-155">The source for timerservice.dll follows:</span></span>

 [!code-csharp[RemotingServices.TimerSample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.TimerSample/CS/timerservice.cs#3)]
 [!code-vb[RemotingServices.TimerSample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.TimerSample/VB/timerservice.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-156">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-156">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodBaseFromMethodMessage">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodBase GetMethodBaseFromMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodBase GetMethodBaseFromMethodMessage(class System.Runtime.Remoting.Messaging.IMethodMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodBaseFromMethodMessage (msg As IMethodMessage) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MethodBase ^ GetMethodBaseFromMethodMessage(System::Runtime::Remoting::Messaging::IMethodMessage ^ msg);" />
      <MemberSignature Language="F#" Value="static member GetMethodBaseFromMethodMessage : System.Runtime.Remoting.Messaging.IMethodMessage -&gt; System.Reflection.MethodBase" Usage="System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMethodMessage" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="e9566-157">メソッド ベースの抽出元となるメソッド メッセージ。</span><span class="sxs-lookup"><span data-stu-id="e9566-157">The method message to extract the method base from.</span></span></param>
        <summary><span data-ttu-id="e9566-158">特定の <see cref="T:System.Runtime.Remoting.Messaging.IMethodMessage" /> からメソッド ベースを返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-158">Returns the method base from the given <see cref="T:System.Runtime.Remoting.Messaging.IMethodMessage" />.</span></span></summary>
        <returns><span data-ttu-id="e9566-159"><paramref name="msg" /> パラメーターから抽出されたメソッド ベース。</span><span class="sxs-lookup"><span data-stu-id="e9566-159">The method base extracted from the <paramref name="msg" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-160">これにより、<xref:System.Runtime.Remoting.Messaging.IMethodMessage> の <xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A>、<xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A>、および <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A> プロパティからのメソッドベースが決定され、<xref:System.Runtime.Remoting.Messaging.IMethodMessage> インターフェイスを実装するクラスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-160">This determines the method base from the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A>, <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A>, and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A> properties of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> and is used by classes implementing the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.</span></span> <span data-ttu-id="e9566-161"><xref:System.Runtime.Remoting.Messaging.IMethodMessage> クラスのコンシューマーは、<xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=nameWithType> プロパティを参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e9566-161">Consumers of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> classes should reference the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=nameWithType> property.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-162">直前の呼び出し元にインフラストラクチャ アクセス許可がありません。または、コールスタックの上位にある 1 つ以上の呼び出し元に非パブリック メンバーの型情報を取得するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-162">Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public static void GetObjectData (object obj, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetObjectData(object obj, class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetObjectData (obj As Object, info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetObjectData(System::Object ^ obj, System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="static member GetObjectData : obj * System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="System.Runtime.Remoting.RemotingServices.GetObjectData (obj, info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e9566-163">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-163">The object to serialize.</span></span></param>
        <param name="info"><span data-ttu-id="e9566-164">シリアル化するオブジェクトの <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-164">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> into which the object is serialized.</span></span></param>
        <param name="context"><span data-ttu-id="e9566-165">シリアル化元とシリアル化先。</span><span class="sxs-lookup"><span data-stu-id="e9566-165">The source and destination of the serialization.</span></span></param>
        <summary><span data-ttu-id="e9566-166">参照オブジェクトによって指定されたマーシャルを提供される <see cref="T:System.Runtime.Serialization.SerializationInfo" /> にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="e9566-166">Serializes the specified marshal by reference object into the provided <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e9566-167"><paramref name="obj" /> パラメーターまたは <paramref name="info" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e9566-167">The <paramref name="obj" /> or <paramref name="info" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-168">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-168">The immediate caller does not have infrastructure permission.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectUri">
      <MemberSignature Language="C#" Value="public static string GetObjectUri (MarshalByRefObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetObjectUri(class System.MarshalByRefObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectUri (obj As MarshalByRefObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetObjectUri(MarshalByRefObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetObjectUri : MarshalByRefObject -&gt; string" Usage="System.Runtime.Remoting.RemotingServices.GetObjectUri obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.MarshalByRefObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e9566-169">URI が要求される対象の <see cref="T:System.MarshalByRefObject" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-169">The <see cref="T:System.MarshalByRefObject" /> for which a URI is requested.</span></span></param>
        <summary><span data-ttu-id="e9566-170">指定したオブジェクトの URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="e9566-170">Retrieves the URI for the specified object.</span></span></summary>
        <returns><span data-ttu-id="e9566-171">指定したオブジェクトの URI が 1 つの場合はその URI。オブジェクトがマーシャリングされていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-171">The URI of the specified object if it has one, or <see langword="null" /> if the object has not yet been marshaled.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 [!code-cpp[System.Runtime.Remoting.RemotingServices#18](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.RemotingServices/CPP/remotingservicessample.cpp#18)]
 [!code-csharp[System.Runtime.Remoting.RemotingServices#18](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.RemotingServices/CS/remotingservicessample.cs#18)]
 [!code-vb[System.Runtime.Remoting.RemotingServices#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Runtime.Remoting.RemotingServices/VB/remotingservicessample.vb#18)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-172">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-172">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjRefForProxy">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjRef GetObjRefForProxy (MarshalByRefObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjRef GetObjRefForProxy(class System.MarshalByRefObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjRefForProxy (obj As MarshalByRefObject) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjRef ^ GetObjRefForProxy(MarshalByRefObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetObjRefForProxy : MarshalByRefObject -&gt; System.Runtime.Remoting.ObjRef" Usage="System.Runtime.Remoting.RemotingServices.GetObjRefForProxy obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.MarshalByRefObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e9566-173"><see cref="T:System.Runtime.Remoting.ObjRef" /> を作成する対象となるオブジェクトに接続されたプロキシ。</span><span class="sxs-lookup"><span data-stu-id="e9566-173">A proxy connected to the object you want to create a <see cref="T:System.Runtime.Remoting.ObjRef" /> for.</span></span></param>
        <summary><span data-ttu-id="e9566-174">指定したプロキシから、リモート オブジェクトを表す <see cref="T:System.Runtime.Remoting.ObjRef" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-174">Returns the <see cref="T:System.Runtime.Remoting.ObjRef" /> that represents the remote object from the specified proxy.</span></span></summary>
        <returns><span data-ttu-id="e9566-175">指定したプロキシが接続されているリモート オブジェクトを表す <see cref="T:System.Runtime.Remoting.ObjRef" />。オブジェクトまたはプロキシがマーシャリングされていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-175">A <see cref="T:System.Runtime.Remoting.ObjRef" /> that represents the remote object the specified proxy is connected to, or <see langword="null" /> if the object or proxy have not been marshaled.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-176"><xref:System.Runtime.Remoting.ObjRef> は、アプリケーションドメインの境界を越えてオブジェクト参照を転送するために使用されるオブジェクトのシリアル化可能な表現です。</span><span class="sxs-lookup"><span data-stu-id="e9566-176">A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</span></span> <span data-ttu-id="e9566-177">オブジェクトの <xref:System.Runtime.Remoting.ObjRef> の作成は、マーシャリングと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-177">Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling.</span></span> <span data-ttu-id="e9566-178"><xref:System.Runtime.Remoting.ObjRef> は、チャネルを通じて別のアプリケーションドメイン (別のプロセスまたはコンピューターなど) に転送できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-178">The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer).</span></span> <span data-ttu-id="e9566-179">もう一方のアプリケーションドメインでは、オブジェクトのプロキシを作成するために <xref:System.Runtime.Remoting.ObjRef> を解析する必要があります。通常、実際のオブジェクトに接続します。</span><span class="sxs-lookup"><span data-stu-id="e9566-179">Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object.</span></span> <span data-ttu-id="e9566-180">この操作は、マーシャリング解除と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-180">This operation is known as unmarshaling.</span></span> <span data-ttu-id="e9566-181">マーシャリング解除中に、<xref:System.Runtime.Remoting.ObjRef> が解析され、リモートオブジェクトのメソッド情報が抽出され、透過プロキシと <xref:System.Runtime.Remoting.Proxies.RealProxy> オブジェクトの両方が作成されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-181">During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created.</span></span>

 <span data-ttu-id="e9566-182"><xref:System.Runtime.Remoting.ObjRef> には、マーシャリングするオブジェクトの <xref:System.Type> とクラス、特定のオブジェクトインスタンスを一意に識別する URI、およびオブジェクトが配置されているリモートアプリケーションへの接続方法に関する通信関連情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e9566-182">A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remote application where the object is located.</span></span>



## Examples
 <span data-ttu-id="e9566-183">次のコード例は、指定されたオブジェクトの <xref:System.Runtime.Remoting.ObjRef> インスタンスを取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-183">The following code example demonstrates how to get a <xref:System.Runtime.Remoting.ObjRef> instance for the specified object.</span></span>

 [!code-cpp[RemotingServices.GetObjRefForProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices.GetObjRefForProxy/CPP/client.cpp#1)]
 [!code-csharp[RemotingServices.GetObjRefForProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.GetObjRefForProxy/CS/client.cs#1)]
 [!code-vb[RemotingServices.GetObjRefForProxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.GetObjRefForProxy/VB/client.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-184">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-184">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRealProxy">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.Proxies.RealProxy GetRealProxy (object proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.Proxies.RealProxy GetRealProxy(object proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRealProxy (proxy As Object) As RealProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::Proxies::RealProxy ^ GetRealProxy(System::Object ^ proxy);" />
      <MemberSignature Language="F#" Value="static member GetRealProxy : obj -&gt; System.Runtime.Remoting.Proxies.RealProxy" Usage="System.Runtime.Remoting.RemotingServices.GetRealProxy proxy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Proxies.RealProxy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proxy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="proxy"><span data-ttu-id="e9566-185">透過プロキシ。</span><span class="sxs-lookup"><span data-stu-id="e9566-185">A transparent proxy.</span></span></param>
        <summary><span data-ttu-id="e9566-186">指定した透過プロキシを実現するための実際のプロキシを返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-186">Returns the real proxy backing the specified transparent proxy.</span></span></summary>
        <returns><span data-ttu-id="e9566-187">透過プロキシを実現するための実際のプロキシ インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e9566-187">The real proxy instance backing the transparent proxy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-188">任意の種類のリモート処理境界でオブジェクトを使用するクライアントは、実際にはオブジェクトに対して透過的なプロキシを使用します。</span><span class="sxs-lookup"><span data-stu-id="e9566-188">A client that uses an object across any kind of remoting boundary is actually using a transparent proxy for the object.</span></span> <span data-ttu-id="e9566-189">透過プロキシは、実際のオブジェクトがクライアントの領域に存在するという印象を与えます。</span><span class="sxs-lookup"><span data-stu-id="e9566-189">The transparent proxy gives the impression that the actual object resides in the client's space.</span></span> <span data-ttu-id="e9566-190">これを実現するには、リモート処理インフラストラクチャを使用して、それに対して行われた呼び出しを実際のオブジェクトに転送します。</span><span class="sxs-lookup"><span data-stu-id="e9566-190">It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</span></span>

 <span data-ttu-id="e9566-191">透過プロキシは、<xref:System.Runtime.Remoting.Proxies.RealProxy>型のマネージランタイムクラスのインスタンスによってサポートされます。</span><span class="sxs-lookup"><span data-stu-id="e9566-191">The transparent proxy is backed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>.</span></span> <span data-ttu-id="e9566-192"><xref:System.Runtime.Remoting.Proxies.RealProxy> は、透過プロキシから操作を転送するために必要な機能の一部を実装します。</span><span class="sxs-lookup"><span data-stu-id="e9566-192">The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy.</span></span>

 <span data-ttu-id="e9566-193">プロキシオブジェクトは、ガベージコレクションなどのマネージオブジェクトの関連付けられたセマンティクス、メンバーとメソッドのサポート、および新しいクラスを作成するために拡張できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-193">A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.</span></span> <span data-ttu-id="e9566-194">プロキシは、リモートオブジェクト (透過プロキシ) と同じクラスのオブジェクトとして機能し、マネージオブジェクトでもあります。</span><span class="sxs-lookup"><span data-stu-id="e9566-194">The proxy acts as an object of the same class as the remote object (transparent proxy), and is also a managed object.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-195">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-195">The immediate caller does not have infrastructure permission.</span></span></exception>
        <altmember cref="T:System.Runtime.Remoting.Proxies.RealProxy" />
        <altmember cref="T:System.Runtime.Remoting.ObjRef" />
      </Docs>
    </Member>
    <Member MemberName="GetServerTypeForUri">
      <MemberSignature Language="C#" Value="public static Type GetServerTypeForUri (string URI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetServerTypeForUri(string URI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServerTypeForUri (URI As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetServerTypeForUri(System::String ^ URI);" />
      <MemberSignature Language="F#" Value="static member GetServerTypeForUri : string -&gt; Type" Usage="System.Runtime.Remoting.RemotingServices.GetServerTypeForUri URI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="URI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="URI"><span data-ttu-id="e9566-196"><see cref="T:System.Type" /> が要求されるオブジェクトの URI。</span><span class="sxs-lookup"><span data-stu-id="e9566-196">The URI of the object whose <see cref="T:System.Type" /> is requested.</span></span></param>
        <summary><span data-ttu-id="e9566-197">指定した URI を持つオブジェクトの <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-197">Returns the <see cref="T:System.Type" /> of the object with the specified URI.</span></span></summary>
        <returns><span data-ttu-id="e9566-198">指定した URI を持つオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-198">The <see cref="T:System.Type" /> of the object with the specified URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-199">リモート処理は Uri を使用してエンドポイントを識別するため、<xref:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri%2A> メソッドは、<xref:System.Runtime.Remoting.Messaging.IMessage> オブジェクトを使用するリモート処理インフラストラクチャのプラグ可能な部分 (チャネルシンク、動的シンク、コンテキストシンクなど) で非常に便利です。これは、現在のメソッドが、関連付けられている型オブジェクトを URI から返すためです。</span><span class="sxs-lookup"><span data-stu-id="e9566-199">Because remoting identifies endpoints using URIs, the <xref:System.Runtime.Remoting.RemotingServices.GetServerTypeForUri%2A> method is very useful in the pluggable parts of the remoting infrastructure (for example, channel sinks, dynamic sinks, and context sinks) that use <xref:System.Runtime.Remoting.Messaging.IMessage> objects, because the current method will return the associated type object from the URI.</span></span>



## Examples
 [!code-cpp[System.Runtime.Remoting.RemotingServices#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.RemotingServices/CPP/remotingservicessample.cpp#7)]
 [!code-csharp[System.Runtime.Remoting.RemotingServices#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.RemotingServices/CS/remotingservicessample.cs#7)]
 [!code-vb[System.Runtime.Remoting.RemotingServices#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Runtime.Remoting.RemotingServices/VB/remotingservicessample.vb#7)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-200">直前の呼び出し元にインフラストラクチャ アクセス許可がありません。または、コールスタックの上位にある 1 つ以上の呼び出し元に非パブリック メンバーの型情報を取得するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-200">Either the immediate caller does not have infrastructure permission, or at least one of the callers higher in the callstack does not have permission to retrieve the type information of non-public members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionIdForMethodMessage">
      <MemberSignature Language="C#" Value="public static string GetSessionIdForMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSessionIdForMethodMessage(class System.Runtime.Remoting.Messaging.IMethodMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSessionIdForMethodMessage (msg As IMethodMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetSessionIdForMethodMessage(System::Runtime::Remoting::Messaging::IMethodMessage ^ msg);" />
      <MemberSignature Language="F#" Value="static member GetSessionIdForMethodMessage : System.Runtime.Remoting.Messaging.IMethodMessage -&gt; string" Usage="System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMethodMessage" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="e9566-201">セッション ID が要求される対象の <see cref="T:System.Runtime.Remoting.Messaging.IMethodMessage" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-201">The <see cref="T:System.Runtime.Remoting.Messaging.IMethodMessage" /> for which a session ID is requested.</span></span></param>
        <summary><span data-ttu-id="e9566-202">メッセージのセッション ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="e9566-202">Retrieves a session ID for a message.</span></span></summary>
        <returns><span data-ttu-id="e9566-203">現在のセッションを一意に識別するセッション ID 文字列。</span><span class="sxs-lookup"><span data-stu-id="e9566-203">A session ID string that uniquely identifies the current session.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-204">同じアプリケーション内のオブジェクトに対して同じセッション ID が返される場合がありますが、この方法では、異なるリモートアプリケーションの2つのオブジェクトに対して同じセッション ID は返されません。</span><span class="sxs-lookup"><span data-stu-id="e9566-204">The same session ID might be returned for objects in the same application, but this method will never return the same session ID for two objects in different remote applications.</span></span>

 <span data-ttu-id="e9566-205">セッションとセッション Id の識別の詳細については、「ASP.Net [ASP.NET Session State の概要](https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e9566-205">For more information about identifying sessions and session IDs, see ASP.Net [ASP.NET Session State Overview](https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="e9566-206">次のコード例は、現在のセッションのセッション ID 文字列を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-206">The following code example demonstrates how to get the session ID string for the current session.</span></span>

 [!code-cpp[RemotingServices.ExecuteMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices.ExecuteMessage/CPP/serviceclass.cpp#1)]
 [!code-csharp[RemotingServices.ExecuteMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.ExecuteMessage/CS/serviceclass.cs#1)]
 [!code-vb[RemotingServices.ExecuteMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.ExecuteMessage/VB/serviceclass.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-207">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-207">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsMethodOverloaded">
      <MemberSignature Language="C#" Value="public static bool IsMethodOverloaded (System.Runtime.Remoting.Messaging.IMethodMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMethodOverloaded(class System.Runtime.Remoting.Messaging.IMethodMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMethodOverloaded (msg As IMethodMessage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMethodOverloaded(System::Runtime::Remoting::Messaging::IMethodMessage ^ msg);" />
      <MemberSignature Language="F#" Value="static member IsMethodOverloaded : System.Runtime.Remoting.Messaging.IMethodMessage -&gt; bool" Usage="System.Runtime.Remoting.RemotingServices.IsMethodOverloaded msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMethodMessage" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="e9566-208">該当するメソッドへの呼び出しを格納しているメッセージ。</span><span class="sxs-lookup"><span data-stu-id="e9566-208">The message that contains a call to the method in question.</span></span></param>
        <summary><span data-ttu-id="e9566-209">特定のメッセージ内のメソッドがオーバーロードされているかどうかを示す Boolean 値を返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-209">Returns a Boolean value that indicates whether the method in the given message is overloaded.</span></span></summary>
        <returns><span data-ttu-id="e9566-210"><see langword="true" /> で呼び出されたメソッドがオーバーロードされている場合は <paramref name="msg" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-210"><see langword="true" /> if the method called in <paramref name="msg" /> is overloaded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-211">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-211">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsObjectOutOfAppDomain">
      <MemberSignature Language="C#" Value="public static bool IsObjectOutOfAppDomain (object tp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsObjectOutOfAppDomain(object tp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsObjectOutOfAppDomain (tp As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsObjectOutOfAppDomain(System::Object ^ tp);" />
      <MemberSignature Language="F#" Value="static member IsObjectOutOfAppDomain : obj -&gt; bool" Usage="System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain tp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tp" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tp"><span data-ttu-id="e9566-212">確認する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-212">The object to check.</span></span></param>
        <summary><span data-ttu-id="e9566-213">特定の透過プロキシで指定したオブジェクトが、現在のメソッドを呼び出したオブジェクトとは異なるアプリケーション ドメインに格納されているかどうかを示す Boolean 値を返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-213">Returns a Boolean value that indicates whether the object specified by the given transparent proxy is contained in a different application domain than the object that called the current method.</span></span></summary>
        <returns><span data-ttu-id="e9566-214">オブジェクトが現在のアプリケーション ドメイン外にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-214"><see langword="true" /> if the object is out of the current application domain; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-215">アプリケーションドメインの詳細については、「[アプリケーションドメイン](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/cxk374d9(v=vs.90))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e9566-215">For information about application domains, see [Application Domains](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/cxk374d9(v=vs.90)).</span></span>



## Examples
 [!code-cpp[RemotingServices IsObject Snippets#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices IsObject Snippets/CPP/class1.cpp#1)]
 [!code-csharp[RemotingServices IsObject Snippets#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices IsObject Snippets/CS/class1.cs#1)]
 [!code-vb[RemotingServices IsObject Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices IsObject Snippets/VB/class1.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/cxk374d9(v=vs.90)"><span data-ttu-id="e9566-216">アプリケーション ドメイン</span><span class="sxs-lookup"><span data-stu-id="e9566-216">Application Domains</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsObjectOutOfContext">
      <MemberSignature Language="C#" Value="public static bool IsObjectOutOfContext (object tp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsObjectOutOfContext(object tp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsObjectOutOfContext (tp As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsObjectOutOfContext(System::Object ^ tp);" />
      <MemberSignature Language="F#" Value="static member IsObjectOutOfContext : obj -&gt; bool" Usage="System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext tp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tp" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tp"><span data-ttu-id="e9566-217">確認する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-217">The object to check.</span></span></param>
        <summary><span data-ttu-id="e9566-218">特定のプロキシによって表されたオブジェクトが、現在のメソッドを呼び出したオブジェクトとは異なるコンテキスト内に格納されているかどうかを示す Boolean 値を返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-218">Returns a Boolean value that indicates whether the object represented by the given proxy is contained in a different context than the object that called the current method.</span></span></summary>
        <returns><span data-ttu-id="e9566-219">オブジェクトが現在のコンテキスト外にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-219"><see langword="true" /> if the object is out of the current context; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-220">コンテキストとは、その内部に存在するオブジェクトの環境を定義する、順序付けられた一連のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="e9566-220">A context is an ordered sequence of properties that define an environment for the objects that reside inside it.</span></span> <span data-ttu-id="e9566-221">コンテキストは、同期、トランザクション、ジャストインタイムアクティベーション、セキュリティなど、特定の自動サービスを必要とするように構成されているオブジェクトのアクティブ化プロセス中に作成されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-221">Contexts are created during the activation process for objects that are configured to require certain automatic services such synchronization, transactions, just-in-time activation, security, and so on.</span></span> <span data-ttu-id="e9566-222">1 つのコンテキスト内に複数のオブジェクトを常駐させることができます。</span><span class="sxs-lookup"><span data-stu-id="e9566-222">Multiple objects can live inside a context.</span></span>



## Examples
 [!code-cpp[RemotingServices IsObject Snippets#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices IsObject Snippets/CPP/class1.cpp#1)]
 [!code-csharp[RemotingServices IsObject Snippets#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices IsObject Snippets/CS/class1.cs#1)]
 [!code-vb[RemotingServices IsObject Snippets#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices IsObject Snippets/VB/class1.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
      </Docs>
    </Member>
    <Member MemberName="IsOneWay">
      <MemberSignature Language="C#" Value="public static bool IsOneWay (System.Reflection.MethodBase method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsOneWay(class System.Reflection.MethodBase method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOneWay (method As MethodBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOneWay(System::Reflection::MethodBase ^ method);" />
      <MemberSignature Language="F#" Value="static member IsOneWay : System.Reflection.MethodBase -&gt; bool" Usage="System.Runtime.Remoting.RemotingServices.IsOneWay method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="e9566-223">該当するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e9566-223">The method in question.</span></span></param>
        <summary><span data-ttu-id="e9566-224">特定のメッセージ内で指定したメソッドを呼び出したクライアントが、実行を継続する前に、このメソッドの処理をサーバーが完了するまで待機するかどうかを示す Boolean 値を返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-224">Returns a Boolean value that indicates whether the client that called the method specified in the given message is waiting for the server to finish processing the method before continuing execution.</span></span></summary>
        <returns><span data-ttu-id="e9566-225">メソッドが一方向の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-225"><see langword="true" /> if the method is one way; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-226">一方向のメソッドが呼び出されると、クライアントは、サーバーがメッセージの処理を終了するまで待機しません。</span><span class="sxs-lookup"><span data-stu-id="e9566-226">When a one-way method is called, the client does not wait for the server to finish processing the message.</span></span> <span data-ttu-id="e9566-227">クライアントメソッドは、サーバーがメッセージを正常に処理するかどうかを知らずにアプリケーションに戻ります。</span><span class="sxs-lookup"><span data-stu-id="e9566-227">The client method returns to the application with no knowledge of whether or not the server will successfully process the message.</span></span> <span data-ttu-id="e9566-228">メソッドは、<xref:System.Runtime.Remoting.Messaging.OneWayAttribute>を使用して1つの方法としてマークされます。</span><span class="sxs-lookup"><span data-stu-id="e9566-228">Methods are marked as one way using the <xref:System.Runtime.Remoting.Messaging.OneWayAttribute>.</span></span>

 <span data-ttu-id="e9566-229">一方向のメソッドに戻り値または出力パラメーターを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="e9566-229">One-way methods cannot have a return value or any out parameters.</span></span>



## Examples
 [!code-cpp[System.Runtime.Remoting.RemotingServices#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.RemotingServices/CPP/remotingservicessample.cpp#2)]
 [!code-csharp[System.Runtime.Remoting.RemotingServices#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.RemotingServices/CS/remotingservicessample.cs#2)]
 [!code-vb[System.Runtime.Remoting.RemotingServices#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Runtime.Remoting.RemotingServices/VB/remotingservicessample.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-230">直前の呼び出し元に、インフラストラクチャ アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-230">The immediate caller does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsTransparentProxy">
      <MemberSignature Language="C#" Value="public static bool IsTransparentProxy (object proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTransparentProxy(object proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTransparentProxy (proxy As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTransparentProxy(System::Object ^ proxy);" />
      <MemberSignature Language="F#" Value="static member IsTransparentProxy : obj -&gt; bool" Usage="System.Runtime.Remoting.RemotingServices.IsTransparentProxy proxy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proxy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="proxy"><span data-ttu-id="e9566-231">確認する対象のオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="e9566-231">The reference to the object to check.</span></span></param>
        <summary><span data-ttu-id="e9566-232">特定のオブジェクトが、透過プロキシまたは実際のオブジェクトのどちらであるかを示す Boolean 値を返します。</span><span class="sxs-lookup"><span data-stu-id="e9566-232">Returns a Boolean value that indicates whether the given object is a transparent proxy or a real object.</span></span></summary>
        <returns><span data-ttu-id="e9566-233"><paramref name="proxy" /> パラメーターで指定したオブジェクトが、透過プロキシまたは実際のオブジェクトのどちらであるかを示す Boolean 値。</span><span class="sxs-lookup"><span data-stu-id="e9566-233">A Boolean value that indicates whether the object specified in the <paramref name="proxy" /> parameter is a transparent proxy or a real object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-234">任意の種類のリモート処理境界でオブジェクトを使用するクライアントは、実際にはオブジェクトに対して透過的なプロキシを使用します。</span><span class="sxs-lookup"><span data-stu-id="e9566-234">A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object.</span></span> <span data-ttu-id="e9566-235">透過プロキシは、実際のオブジェクトがクライアントの領域に存在するという印象を与えます。</span><span class="sxs-lookup"><span data-stu-id="e9566-235">The transparent proxy gives the impression that the actual object resides in the client's space.</span></span> <span data-ttu-id="e9566-236">これを実現するには、リモート処理インフラストラクチャを使用して、それに対して行われた呼び出しを実際のオブジェクトに転送します。</span><span class="sxs-lookup"><span data-stu-id="e9566-236">It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.</span></span>

 <span data-ttu-id="e9566-237">透過プロキシ自体は、<xref:System.Runtime.Remoting.Proxies.RealProxy>型のマネージランタイムクラスのインスタンスによって格納されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-237">The transparent proxy is itself housed by an instance of a managed runtime class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>.</span></span> <span data-ttu-id="e9566-238"><xref:System.Runtime.Remoting.Proxies.RealProxy> は、透過プロキシから操作を転送するために必要な機能の一部を実装します。</span><span class="sxs-lookup"><span data-stu-id="e9566-238">The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy.</span></span> <span data-ttu-id="e9566-239">プロキシオブジェクトは、ガベージコレクションなどのマネージオブジェクトの関連付けられたセマンティクス、メンバーとメソッドのサポート、および新しいクラスを作成するために拡張できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-239">A proxy object inherits the associated semantics of managed objects such as garbage collection, support for members and methods, and can be extended to form new classes.</span></span> <span data-ttu-id="e9566-240">このため、プロキシには二重の性質があります。一方では、リモートオブジェクト (透過プロキシ) と同じクラスのオブジェクトとして動作する必要があり、もう1つはマネージオブジェクト自体です。</span><span class="sxs-lookup"><span data-stu-id="e9566-240">Thus the proxy has a dual nature; on the one hand it needs to act as an object of the same class as the remote object (transparent proxy), and on the other it is a managed object itself.</span></span>

 <span data-ttu-id="e9566-241">プロキシオブジェクトは、<xref:System.AppDomain>内のリモート処理の区分に関係なく使用できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-241">A proxy object can be used without regard to any remoting subdivisions within a <xref:System.AppDomain>.</span></span> <span data-ttu-id="e9566-242">アプリケーションでは、プロキシ参照とオブジェクト参照を区別する必要がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-242">Applications need not distinguish between proxy references and object references.</span></span> <span data-ttu-id="e9566-243">ただし、アクティブ化、有効期間管理、トランザクションなどの問題を処理するサービスプロバイダーは、このような区別を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="e9566-243">However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.</span></span>



## Examples
 <span data-ttu-id="e9566-244">次のコード例は、<xref:System.Runtime.Remoting.RemotingServices.IsTransparentProxy%2A> メソッドを使用して、オブジェクトがプロキシまたは実際のオブジェクトであるかどうかを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-244">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.RemotingServices.IsTransparentProxy%2A> method to determine whether an object is a proxy or a real object.</span></span> <span data-ttu-id="e9566-245">コード例全体については、<xref:System.Runtime.Remoting.Messaging.AsyncResult> クラスの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e9566-245">For the complete example code, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.</span></span>

 [!code-cpp[AsyncResult.NewExamples#6](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncResult.NewExamples/CPP/ad.cpp#6)]
 [!code-csharp[AsyncResult.NewExamples#6](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncResult.NewExamples/CS/ad.cs#6)]
 [!code-vb[AsyncResult.NewExamples#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncResult.NewExamples/VB/ad.vb#6)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Remoting.Proxies.RealProxy" />
        <altmember cref="T:System.Runtime.Remoting.ObjRef" />
      </Docs>
    </Member>
    <Member MemberName="LogRemotingStage">
      <MemberSignature Language="C#" Value="public static void LogRemotingStage (int stage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogRemotingStage(int32 stage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LogRemotingStage (stage As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LogRemotingStage(int stage);" />
      <MemberSignature Language="F#" Value="static member LogRemotingStage : int -&gt; unit" Usage="System.Runtime.Remoting.RemotingServices.LogRemotingStage stage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("REMOTING_PERF")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("It existed for only internal use in .NET and unimplemented in mono")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use of this method is not recommended. The LogRemotingStage existed for internal diagnostic purposes only.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stage"><span data-ttu-id="e9566-246">リモート処理エクスチェンジの段階を示す、内部的に定義されている定数。</span><span class="sxs-lookup"><span data-stu-id="e9566-246">An internally defined constant that identifies the stage in a remoting exchange.</span></span></param>
        <summary><span data-ttu-id="e9566-247">リモート処理エクスチェンジの段階のログを外部デバッガーに記録します。</span><span class="sxs-lookup"><span data-stu-id="e9566-247">Logs the stage in a remoting exchange to an external debugger.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-248">`"REMOTING_PERF"` 前処理シンボルは、<xref:System.Diagnostics.ConditionalAttribute> 属性を使用してメソッドに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-248">A `"REMOTING_PERF"` preprocessing symbol is applied to the method by using the <xref:System.Diagnostics.ConditionalAttribute> attribute.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Marshal">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9566-249">特定の <see cref="T:System.MarshalByRefObject" /> を <see cref="T:System.Runtime.Remoting.ObjRef" /> クラスのインスタンスに変換して、このインスタンスをアプリケーション ドメイン間およびネットワーク上の伝送のためにシリアル化できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-249">Converts the given <see cref="T:System.MarshalByRefObject" /> into an instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class, which can be serialized for transmission between application domains and over a network.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Marshal">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjRef Marshal(class System.MarshalByRefObject Obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Marshal (Obj As MarshalByRefObject) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjRef ^ Marshal(MarshalByRefObject ^ Obj);" />
      <MemberSignature Language="F#" Value="static member Marshal : MarshalByRefObject -&gt; System.Runtime.Remoting.ObjRef" Usage="System.Runtime.Remoting.RemotingServices.Marshal Obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Obj" Type="System.MarshalByRefObject" />
      </Parameters>
      <Docs>
        <param name="Obj"><span data-ttu-id="e9566-250">変換するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-250">The object to convert.</span></span></param>
        <summary><span data-ttu-id="e9566-251"><see cref="T:System.MarshalByRefObject" /> を取り、これをリモート処理インフラストラクチャで登録して、<see cref="T:System.Runtime.Remoting.ObjRef" /> クラスのインスタンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="e9566-251">Takes a <see cref="T:System.MarshalByRefObject" />, registers it with the remoting infrastructure, and converts it into an instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class.</span></span></summary>
        <returns><span data-ttu-id="e9566-252"><see cref="T:System.Runtime.Remoting.ObjRef" /> パラメーターで指定されたオブジェクトを表す <paramref name="Obj" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="e9566-252">An instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class that represents the object specified in the <paramref name="Obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-253"><xref:System.Runtime.Remoting.ObjRef> は、アプリケーションドメインの境界を越えてオブジェクト参照を転送するために使用されるオブジェクトのシリアル化可能な表現です。</span><span class="sxs-lookup"><span data-stu-id="e9566-253">A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</span></span> <span data-ttu-id="e9566-254">オブジェクトの <xref:System.Runtime.Remoting.ObjRef> の作成は、マーシャリングと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-254">Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling.</span></span> <span data-ttu-id="e9566-255"><xref:System.Runtime.Remoting.ObjRef> は、チャネルを通じて別のアプリケーションドメイン (別のプロセスまたはコンピューターなど) に転送できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-255">The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer).</span></span> <span data-ttu-id="e9566-256">もう一方のアプリケーションドメインでは、オブジェクトのプロキシを作成するために <xref:System.Runtime.Remoting.ObjRef> を解析する必要があります。通常、実際のオブジェクトに接続します。</span><span class="sxs-lookup"><span data-stu-id="e9566-256">Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object.</span></span> <span data-ttu-id="e9566-257">この操作は、マーシャリング解除と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-257">This operation is known as unmarshaling.</span></span>

 <span data-ttu-id="e9566-258"><xref:System.Runtime.Remoting.ObjRef> には、マーシャリングされるオブジェクトの <xref:System.Type> とクラス、特定のオブジェクトインスタンスを一意に識別する URI、およびオブジェクトが配置されているリモート処理の部分に対する通信に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e9566-258">A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</span></span>

 <span data-ttu-id="e9566-259">マーシャリング中に、オブジェクトが作成されたときにアクティブだったコンテキストではなく、現在のスレッドからのコンテキストが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-259">During marshaling, the context from the current thread is used, not the context that was active when the object was created.</span></span> <span data-ttu-id="e9566-260">URI が <xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A> メソッドによって明示的に設定されていない場合は、リモート処理 id インフラストラクチャによって自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-260">If a URI was not explicitly set by the <xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A> method, it is automatically generated by the remoting identity infrastructure.</span></span>

 <span data-ttu-id="e9566-261">Uri をプロキシに関連付けることはできません。次の2つの理由があります。つまり、uri がサーバー側で生成されたか、オブジェクトが既知である場合、URI は既知です。</span><span class="sxs-lookup"><span data-stu-id="e9566-261">You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</span></span> <span data-ttu-id="e9566-262">このため、`Obj` パラメーターがプロキシの場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e9566-262">For this reason, if the `Obj` parameter is a proxy, an exception will be thrown.</span></span> <span data-ttu-id="e9566-263">カスタムプロキシの場合、透過プロキシはサーバーオブジェクトとして扱われるため、この制限は緩和されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-263">For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="e9566-264"><paramref name="Obj" /> パラメーターがオブジェクトのプロキシです。</span><span class="sxs-lookup"><span data-stu-id="e9566-264">The <paramref name="Obj" /> parameter is an object proxy.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-265">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-265">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span></exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Runtime.Remoting.Proxies.RealProxy" />
        <altmember cref="T:System.Runtime.Remoting.ObjRef" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/cxk374d9(v=vs.90)"><span data-ttu-id="e9566-266">アプリケーション ドメイン</span><span class="sxs-lookup"><span data-stu-id="e9566-266">Application Domains</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Marshal">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string URI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjRef Marshal(class System.MarshalByRefObject Obj, string URI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Marshal (Obj As MarshalByRefObject, URI As String) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjRef ^ Marshal(MarshalByRefObject ^ Obj, System::String ^ URI);" />
      <MemberSignature Language="F#" Value="static member Marshal : MarshalByRefObject * string -&gt; System.Runtime.Remoting.ObjRef" Usage="System.Runtime.Remoting.RemotingServices.Marshal (Obj, URI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Obj" Type="System.MarshalByRefObject" />
        <Parameter Name="URI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Obj"><span data-ttu-id="e9566-267">変換するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-267">The object to convert.</span></span></param>
        <param name="URI"><span data-ttu-id="e9566-268">新しい <see cref="T:System.Runtime.Remoting.ObjRef" /> を初期化するために使用する指定した URI。</span><span class="sxs-lookup"><span data-stu-id="e9566-268">The specified URI with which to initialize the new <see cref="T:System.Runtime.Remoting.ObjRef" />.</span></span> <span data-ttu-id="e9566-269"><see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-269">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e9566-270">特定の <see cref="T:System.MarshalByRefObject" /> を、指定した URI を持つ <see cref="T:System.Runtime.Remoting.ObjRef" /> クラスのインスタンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="e9566-270">Converts the given <see cref="T:System.MarshalByRefObject" /> into an instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class with the specified URI.</span></span></summary>
        <returns><span data-ttu-id="e9566-271"><see cref="T:System.Runtime.Remoting.ObjRef" /> パラメーターで指定されたオブジェクトを表す <paramref name="Obj" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="e9566-271">An instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class that represents the object specified in the <paramref name="Obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-272"><xref:System.Runtime.Remoting.ObjRef> は、アプリケーションドメインの境界を越えてオブジェクト参照を転送するために使用されるオブジェクトのシリアル化可能な表現です。</span><span class="sxs-lookup"><span data-stu-id="e9566-272">A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</span></span> <span data-ttu-id="e9566-273">オブジェクトの <xref:System.Runtime.Remoting.ObjRef> の作成は、マーシャリングと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-273">Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling.</span></span> <span data-ttu-id="e9566-274"><xref:System.Runtime.Remoting.ObjRef> は、チャネルを通じて別のアプリケーションドメイン (別のプロセスまたはコンピューターなど) に転送できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-274">The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer).</span></span> <span data-ttu-id="e9566-275">もう一方のアプリケーションドメインでは、オブジェクトのプロキシを作成するために <xref:System.Runtime.Remoting.ObjRef> を解析する必要があります。通常、実際のオブジェクトに接続します。</span><span class="sxs-lookup"><span data-stu-id="e9566-275">Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object.</span></span> <span data-ttu-id="e9566-276">この操作は、マーシャリング解除と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-276">This operation is known as unmarshaling.</span></span>

 <span data-ttu-id="e9566-277"><xref:System.Runtime.Remoting.ObjRef> には、マーシャリングされるオブジェクトの <xref:System.Type> とクラス、特定のオブジェクトインスタンスを一意に識別する URI、およびオブジェクトが配置されているリモート処理の部分に対する通信に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e9566-277">A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</span></span>

 <span data-ttu-id="e9566-278">マーシャリング中に、オブジェクトが作成されたときにアクティブだったコンテキストではなく、現在のスレッドからのコンテキストが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-278">During marshaling, the context from the current thread is used, not the context that was active when the object was created.</span></span>

 <span data-ttu-id="e9566-279">Uri をプロキシに関連付けることはできません。次の2つの理由があります。つまり、uri がサーバー側で生成されたか、オブジェクトが既知である場合、URI は既知です。</span><span class="sxs-lookup"><span data-stu-id="e9566-279">You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</span></span> <span data-ttu-id="e9566-280">このため、`Obj` パラメーターがプロキシの場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e9566-280">For this reason, if the `Obj` parameter is a proxy, an exception will be thrown.</span></span> <span data-ttu-id="e9566-281">カスタムプロキシの場合、透過プロキシはサーバーオブジェクトとして扱われるため、この制限は緩和されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-281">For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</span></span>



## Examples
 <span data-ttu-id="e9566-282">次のコード例は、現在の <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> メソッドを使用して、指定されたオブジェクトをマーシャリングする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-282">The following code example demonstrates how to use the current <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method to marshal a specified object.</span></span>

 [!code-cpp[RemotingServices.BasicSample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices.BasicSample/CPP/manualserver.cpp#2)]
 [!code-csharp[RemotingServices.BasicSample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.BasicSample/CS/manualserver.cs#2)]
 [!code-vb[RemotingServices.BasicSample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.BasicSample/VB/manualserver.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="e9566-283"><paramref name="Obj" /> がオブジェクト プロキシであり、<paramref name="URI" /> パラメーターが <see langword="null" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-283"><paramref name="Obj" /> is an object proxy, and the <paramref name="URI" /> parameter is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-284">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-284">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span></exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Runtime.Remoting.Proxies.RealProxy" />
        <altmember cref="T:System.Runtime.Remoting.ObjRef" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/cxk374d9(v=vs.90)"><span data-ttu-id="e9566-285">アプリケーション ドメイン</span><span class="sxs-lookup"><span data-stu-id="e9566-285">Application Domains</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Marshal">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string ObjURI, Type RequestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjRef Marshal(class System.MarshalByRefObject Obj, string ObjURI, class System.Type RequestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Marshal (Obj As MarshalByRefObject, ObjURI As String, RequestedType As Type) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjRef ^ Marshal(MarshalByRefObject ^ Obj, System::String ^ ObjURI, Type ^ RequestedType);" />
      <MemberSignature Language="F#" Value="static member Marshal : MarshalByRefObject * string * Type -&gt; System.Runtime.Remoting.ObjRef" Usage="System.Runtime.Remoting.RemotingServices.Marshal (Obj, ObjURI, RequestedType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Obj" Type="System.MarshalByRefObject" />
        <Parameter Name="ObjURI" Type="System.String" />
        <Parameter Name="RequestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="Obj"><span data-ttu-id="e9566-286"><see cref="T:System.Runtime.Remoting.ObjRef" /> に変換するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-286">The object to convert into a <see cref="T:System.Runtime.Remoting.ObjRef" />.</span></span></param>
        <param name="ObjURI"><span data-ttu-id="e9566-287"><paramref name="Obj" /> パラメーターで指定したオブジェクトがマーシャリングされるときに使用する URI。</span><span class="sxs-lookup"><span data-stu-id="e9566-287">The URI the object specified in the <paramref name="Obj" /> parameter is marshaled with.</span></span> <span data-ttu-id="e9566-288"><see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-288">Can be <see langword="null" />.</span></span></param>
        <param name="RequestedType"><span data-ttu-id="e9566-289"><see cref="T:System.Type" /> がマーシャリングされるときの <paramref name="Obj" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-289">The <see cref="T:System.Type" /><paramref name="Obj" /> is marshaled as.</span></span> <span data-ttu-id="e9566-290"><see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-290">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e9566-291"><see cref="T:System.MarshalByRefObject" /> を取り、これを指定した URI と提供された <see cref="T:System.Runtime.Remoting.ObjRef" /> を持つ、<see cref="T:System.Type" /> クラスのインスタンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="e9566-291">Takes a <see cref="T:System.MarshalByRefObject" /> and converts it into an instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class with the specified URI, and the provided <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="e9566-292"><see cref="T:System.Runtime.Remoting.ObjRef" /> パラメーターで指定されたオブジェクトを表す <paramref name="Obj" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="e9566-292">An instance of the <see cref="T:System.Runtime.Remoting.ObjRef" /> class that represents the object specified in the <paramref name="Obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-293"><xref:System.Runtime.Remoting.ObjRef> は、アプリケーションドメインの境界を越えてオブジェクト参照を転送するために使用されるオブジェクトのシリアル化可能な表現です。</span><span class="sxs-lookup"><span data-stu-id="e9566-293">A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</span></span> <span data-ttu-id="e9566-294">オブジェクトの <xref:System.Runtime.Remoting.ObjRef> の作成は、マーシャリングと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-294">Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling.</span></span> <span data-ttu-id="e9566-295"><xref:System.Runtime.Remoting.ObjRef> は、チャネルを通じて別のアプリケーションドメイン (別のプロセスまたはコンピューターなど) に転送できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-295">The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer).</span></span> <span data-ttu-id="e9566-296">もう一方のアプリケーションドメインでは、オブジェクトのプロキシを作成するために <xref:System.Runtime.Remoting.ObjRef> を解析する必要があります。通常、実際のオブジェクトに接続します。</span><span class="sxs-lookup"><span data-stu-id="e9566-296">Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object.</span></span> <span data-ttu-id="e9566-297">この操作は、マーシャリング解除と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-297">This operation is known as unmarshaling.</span></span>

 <span data-ttu-id="e9566-298"><xref:System.Runtime.Remoting.ObjRef> には、マーシャリングされるオブジェクトの <xref:System.Type> とクラス、特定のオブジェクトインスタンスを一意に識別する URI、およびオブジェクトが配置されているリモート処理の部分に対する通信に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e9566-298">A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</span></span>

 <span data-ttu-id="e9566-299">指定された <xref:System.Type> は、公開される型階層のスコープを制限するために、リモート処理インフラストラクチャによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-299">The specified <xref:System.Type> is used by the remoting infrastructure to limit the scope of the exposed type hierarchy.</span></span> <span data-ttu-id="e9566-300">たとえば、オブジェクト A がオブジェクト C から派生したオブジェクト B から派生し、<xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> が呼び出された場合、クライアントは C と B の間にプロキシをキャストできますが、にはキャストできません。</span><span class="sxs-lookup"><span data-stu-id="e9566-300">For example, if object A derives from object B, which derives from object C, and <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> is called, then the client can cast the proxy between C and B but not to A.</span></span>

 <span data-ttu-id="e9566-301">マーシャリング中に、オブジェクトが作成されたときにアクティブだったコンテキストではなく、現在のスレッドからのコンテキストが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-301">During marshaling, the context from the current thread is used, not the context that was active when the object was created.</span></span>

 <span data-ttu-id="e9566-302">Uri をプロキシに関連付けることはできません。次の2つの理由があります。つまり、uri がサーバー側で生成されたか、オブジェクトが既知である場合、URI は既知です。</span><span class="sxs-lookup"><span data-stu-id="e9566-302">You cannot associate a URI with a proxy for one of two reasons: either the URI was generated at the server side for the object it represents, or the object is well known, in which case the URI is known.</span></span> <span data-ttu-id="e9566-303">このため、`Obj` パラメーターがプロキシの場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e9566-303">For this reason, if the `Obj` parameter is a proxy, an exception will be thrown.</span></span> <span data-ttu-id="e9566-304">カスタムプロキシの場合、透過プロキシはサーバーオブジェクトとして扱われるため、この制限は緩和されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-304">For custom proxies this restriction is relaxed because the transparent proxy is treated as the server object.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="e9566-305"><paramref name="Obj" /> がリモート オブジェクトのプロキシであり、<paramref name="ObjUri" /> パラメーターが <see langword="null" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-305"><paramref name="Obj" /> is a proxy of a remote object, and the <paramref name="ObjUri" /> parameter is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-306">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-306">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span></exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Runtime.Remoting.Proxies.RealProxy" />
        <altmember cref="T:System.Runtime.Remoting.ObjRef" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/cxk374d9(v=vs.90)"><span data-ttu-id="e9566-307">アプリケーション ドメイン</span><span class="sxs-lookup"><span data-stu-id="e9566-307">Application Domains</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetObjectUriForMarshal">
      <MemberSignature Language="C#" Value="public static void SetObjectUriForMarshal (MarshalByRefObject obj, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetObjectUriForMarshal(class System.MarshalByRefObject obj, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetObjectUriForMarshal (obj As MarshalByRefObject, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetObjectUriForMarshal(MarshalByRefObject ^ obj, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="static member SetObjectUriForMarshal : MarshalByRefObject * string -&gt; unit" Usage="System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal (obj, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.MarshalByRefObject" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e9566-308">URI を設定する対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e9566-308">The object to set a URI for.</span></span></param>
        <param name="uri"><span data-ttu-id="e9566-309">指定したオブジェクトに割り当てる URI。</span><span class="sxs-lookup"><span data-stu-id="e9566-309">The URI to assign to the specified object.</span></span></param>
        <summary><span data-ttu-id="e9566-310"><see cref="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)" /> メソッドへの後続の呼び出しに対して URI を設定します。</span><span class="sxs-lookup"><span data-stu-id="e9566-310">Sets the URI for the subsequent call to the <see cref="M:System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-311">現在のメソッドによって設定された URI は、指定されたオブジェクトをマーシャリングするときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-311">The URI set by the current method is used when marshaling the given object.</span></span>

 <span data-ttu-id="e9566-312">マーシャリング後、指定したオブジェクトの URI は、現在の <xref:System.AppDomain>の <xref:System.Guid> に追加された `uri` パラメーターの文字列に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-312">After marshaling, the URI of the specified object is set to the string in the `uri` parameter appended onto the <xref:System.Guid> of the current <xref:System.AppDomain>.</span></span>

 <span data-ttu-id="e9566-313">現在のアプリケーションが HTTP ポートでリッスンしている場合は、`uri` パラメーターに指定された文字列と、指定されたオブジェクトへの現在の <xref:System.AppDomain> ルートの <xref:System.Guid> に `uri` 文字列が追加されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-313">If the current application is listening on an HTTP port, then both the string specified in the `uri` parameter and the `uri` string appended onto the <xref:System.Guid> of the current <xref:System.AppDomain> route to the specified object.</span></span> <span data-ttu-id="e9566-314">たとえば、アプリケーションが HTTP ポート9000でリッスンしている場合、`http://localhost:9000/objectUri`、`http://localhost:9000/<appdomainguid>/objectUri`、`obj` パラメーターで指定されたオブジェクトにルーティングされます。</span><span class="sxs-lookup"><span data-stu-id="e9566-314">For example, if the application is listening on HTTP port 9000, then both `http://localhost:9000/objectUri`, and `http://localhost:9000/<appdomainguid>/objectUri` route to the object specified in the `obj` parameter.</span></span>



## Examples
 <span data-ttu-id="e9566-315">次のコード例は、指定されたオブジェクトをマーシャリングするときに、<xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> メソッドによって使用される URI を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-315">The following code example demonstrates how to set the URI that will be used by the <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method when marshaling the specified object.</span></span>

 [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CPP/source.cpp#1)]
 [!code-csharp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CS/source.cs#1)]
 [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="e9566-316"><paramref name="obj" /> がローカル オブジェクトではありません。既にマーシャリングされています。または、現在のメソッドが既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="e9566-316"><paramref name="obj" /> is not a local object, has already been marshaled, or the current method has already been called on.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-317">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-317">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span></exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Unmarshal">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9566-318">特定の <see cref="T:System.Runtime.Remoting.ObjRef" /> をプロキシ オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="e9566-318">Converts a given <see cref="T:System.Runtime.Remoting.ObjRef" /> into a proxy object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unmarshal">
      <MemberSignature Language="C#" Value="public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Unmarshal(class System.Runtime.Remoting.ObjRef objectRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unmarshal (objectRef As ObjRef) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Unmarshal(System::Runtime::Remoting::ObjRef ^ objectRef);" />
      <MemberSignature Language="F#" Value="static member Unmarshal : System.Runtime.Remoting.ObjRef -&gt; obj" Usage="System.Runtime.Remoting.RemotingServices.Unmarshal objectRef" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectRef" Type="System.Runtime.Remoting.ObjRef" />
      </Parameters>
      <Docs>
        <param name="objectRef"><span data-ttu-id="e9566-319">プロキシが作成される対象のリモート オブジェクトを表す <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-319">The <see cref="T:System.Runtime.Remoting.ObjRef" /> that represents the remote object for which the proxy is being created.</span></span></param>
        <summary><span data-ttu-id="e9566-320"><see cref="T:System.Runtime.Remoting.ObjRef" /> を取得し、これからプロキシ オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="e9566-320">Takes a <see cref="T:System.Runtime.Remoting.ObjRef" /> and creates a proxy object out of it.</span></span></summary>
        <returns><span data-ttu-id="e9566-321">特定の <see cref="T:System.Runtime.Remoting.ObjRef" /> が表すオブジェクトへのプロキシ。</span><span class="sxs-lookup"><span data-stu-id="e9566-321">A proxy to the object that the given <see cref="T:System.Runtime.Remoting.ObjRef" /> represents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-322"><xref:System.Runtime.Remoting.ObjRef> は、アプリケーションドメインの境界を越えてオブジェクト参照を転送するために使用されるオブジェクトのシリアル化可能な表現です。</span><span class="sxs-lookup"><span data-stu-id="e9566-322">A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</span></span> <span data-ttu-id="e9566-323">オブジェクトの <xref:System.Runtime.Remoting.ObjRef> の作成は、マーシャリングと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-323">Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling.</span></span> <span data-ttu-id="e9566-324"><xref:System.Runtime.Remoting.ObjRef> は、チャネルを通じて別のアプリケーションドメイン (別のプロセスまたはコンピューターなど) に転送できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-324">The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer).</span></span> <span data-ttu-id="e9566-325">もう一方のアプリケーションドメインでは、オブジェクトのプロキシを作成するために <xref:System.Runtime.Remoting.ObjRef> を解析する必要があります。通常、実際のオブジェクトに接続します。</span><span class="sxs-lookup"><span data-stu-id="e9566-325">Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object.</span></span> <span data-ttu-id="e9566-326">この操作は、マーシャリング解除と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-326">This operation is known as unmarshaling.</span></span> <span data-ttu-id="e9566-327">マーシャリング解除中に、<xref:System.Runtime.Remoting.ObjRef> が解析され、リモートオブジェクトのメソッド情報が抽出され、透過プロキシと <xref:System.Runtime.Remoting.Proxies.RealProxy> オブジェクトの両方が作成されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-327">During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created.</span></span> <span data-ttu-id="e9566-328">透過プロキシが共通言語ランタイムに登録される前に、解析された <xref:System.Runtime.Remoting.ObjRef> の内容が透過プロキシに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-328">The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.</span></span>

 <span data-ttu-id="e9566-329"><xref:System.Runtime.Remoting.ObjRef> には、マーシャリングされるオブジェクトの <xref:System.Type> とクラス、特定のオブジェクトインスタンスを一意に識別する URI、およびオブジェクトが配置されているリモート処理の部分に対する通信に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e9566-329">A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</span></span>



## Examples
 <span data-ttu-id="e9566-330">次のコード例は、オブジェクトのマーシャリングを解除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e9566-330">The following code example demonstrates how to unmarshal an object.</span></span>

 [!code-cpp[RemotingServices.Unmarshal#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingServices.Unmarshal/CPP/client.cpp#2)]
 [!code-csharp[RemotingServices.Unmarshal#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingServices.Unmarshal/CS/client.cs#2)]
 [!code-vb[RemotingServices.Unmarshal#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingServices.Unmarshal/VB/client.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e9566-331"><see cref="T:System.Runtime.Remoting.ObjRef" /> パラメーターで指定した <paramref name="objectRef" /> インスタンスが適切に構成されていません。</span><span class="sxs-lookup"><span data-stu-id="e9566-331">The <see cref="T:System.Runtime.Remoting.ObjRef" /> instance specified in the <paramref name="objectRef" /> parameter is not well-formed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-332">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-332">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span></exception>
        <altmember cref="T:System.Runtime.Remoting.Proxies.RealProxy" />
        <altmember cref="T:System.Runtime.Remoting.ObjRef" />
      </Docs>
    </Member>
    <Member MemberName="Unmarshal">
      <MemberSignature Language="C#" Value="public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef, bool fRefine);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Unmarshal(class System.Runtime.Remoting.ObjRef objectRef, bool fRefine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unmarshal (objectRef As ObjRef, fRefine As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Unmarshal(System::Runtime::Remoting::ObjRef ^ objectRef, bool fRefine);" />
      <MemberSignature Language="F#" Value="static member Unmarshal : System.Runtime.Remoting.ObjRef * bool -&gt; obj" Usage="System.Runtime.Remoting.RemotingServices.Unmarshal (objectRef, fRefine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectRef" Type="System.Runtime.Remoting.ObjRef" />
        <Parameter Name="fRefine" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="objectRef"><span data-ttu-id="e9566-333">プロキシが作成される対象のリモート オブジェクトを表す <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-333">The <see cref="T:System.Runtime.Remoting.ObjRef" /> that represents the remote object for which the proxy is being created.</span></span></param>
        <param name="fRefine"><span data-ttu-id="e9566-334">サーバーにある型に対してプロキシを詳細に指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9566-334"><see langword="true" /> to refine the proxy to the type on the server; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e9566-335"><see cref="T:System.Runtime.Remoting.ObjRef" /> を取得し、これからプロキシ オブジェクトを作成し、サーバーにある型に対してこのプロキシ オブジェクトを詳細に指定します。</span><span class="sxs-lookup"><span data-stu-id="e9566-335">Takes a <see cref="T:System.Runtime.Remoting.ObjRef" /> and creates a proxy object out of it, refining it to the type on the server.</span></span></summary>
        <returns><span data-ttu-id="e9566-336">特定の <see cref="T:System.Runtime.Remoting.ObjRef" /> が表すオブジェクトへのプロキシ。</span><span class="sxs-lookup"><span data-stu-id="e9566-336">A proxy to the object that the given <see cref="T:System.Runtime.Remoting.ObjRef" /> represents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e9566-337"><xref:System.Runtime.Remoting.ObjRef> は、アプリケーションドメインの境界を越えてオブジェクト参照を転送するために使用されるオブジェクトのシリアル化可能な表現です。</span><span class="sxs-lookup"><span data-stu-id="e9566-337">A <xref:System.Runtime.Remoting.ObjRef> is a serializable representation of an object used to transfer an object reference across an application domain boundary.</span></span> <span data-ttu-id="e9566-338">オブジェクトの <xref:System.Runtime.Remoting.ObjRef> の作成は、マーシャリングと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-338">Creating a <xref:System.Runtime.Remoting.ObjRef> for an object is known as marshaling.</span></span> <span data-ttu-id="e9566-339"><xref:System.Runtime.Remoting.ObjRef> は、チャネルを通じて別のアプリケーションドメイン (別のプロセスまたはコンピューターなど) に転送できます。</span><span class="sxs-lookup"><span data-stu-id="e9566-339">The <xref:System.Runtime.Remoting.ObjRef> can be transferred through a channel into another application domain (possibly on another process or computer).</span></span> <span data-ttu-id="e9566-340">もう一方のアプリケーションドメインでは、オブジェクトのプロキシを作成するために <xref:System.Runtime.Remoting.ObjRef> を解析する必要があります。通常、実際のオブジェクトに接続します。</span><span class="sxs-lookup"><span data-stu-id="e9566-340">Once in the other application domain, the <xref:System.Runtime.Remoting.ObjRef> must be parsed to create a proxy for the object, generally connected to the real object.</span></span> <span data-ttu-id="e9566-341">この操作は、マーシャリング解除と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e9566-341">This operation is known as unmarshaling.</span></span> <span data-ttu-id="e9566-342">マーシャリング解除中に、<xref:System.Runtime.Remoting.ObjRef> が解析され、リモートオブジェクトのメソッド情報が抽出され、透過プロキシと <xref:System.Runtime.Remoting.Proxies.RealProxy> オブジェクトの両方が作成されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-342">During unmarshaling, the <xref:System.Runtime.Remoting.ObjRef> is parsed to extract the method information of the remote object and both the transparent proxy and <xref:System.Runtime.Remoting.Proxies.RealProxy> objects are created.</span></span> <span data-ttu-id="e9566-343">透過プロキシが共通言語ランタイムに登録される前に、解析された <xref:System.Runtime.Remoting.ObjRef> の内容が透過プロキシに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e9566-343">The content of the parsed <xref:System.Runtime.Remoting.ObjRef> is added to the transparent proxy before the transparent proxy is registered with the common language runtime.</span></span>

 <span data-ttu-id="e9566-344"><xref:System.Runtime.Remoting.ObjRef> には、マーシャリングされるオブジェクトの <xref:System.Type> とクラス、特定のオブジェクトインスタンスを一意に識別する URI、およびオブジェクトが配置されているリモート処理の部分に対する通信に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e9566-344">A <xref:System.Runtime.Remoting.ObjRef> contains information that describes the <xref:System.Type> and class of the object being marshaled, a URI that uniquely identifies the specific object instance, and communication related information about how to reach the remoting subdivision where the object is located.</span></span>

 <span data-ttu-id="e9566-345">プロキシは、最初に作成されたときに <xref:System.MarshalByRefObject>型になります。</span><span class="sxs-lookup"><span data-stu-id="e9566-345">When first created, the proxy is of type <xref:System.MarshalByRefObject>.</span></span> <span data-ttu-id="e9566-346">この型を別の型にキャストすると、リモート処理インフラストラクチャは、型が不必要に読み込まれないように、最も使用されている型を追跡します。</span><span class="sxs-lookup"><span data-stu-id="e9566-346">As you cast it into different types, the remoting infrastructure keeps track of the most used type to avoid loading the type unnecessarily.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e9566-347"><see cref="T:System.Runtime.Remoting.ObjRef" /> パラメーターで指定した <paramref name="objectRef" /> インスタンスが適切に構成されていません。</span><span class="sxs-lookup"><span data-stu-id="e9566-347">The <see cref="T:System.Runtime.Remoting.ObjRef" /> instance specified in the <paramref name="objectRef" /> parameter is not well-formed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e9566-348">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e9566-348">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span></exception>
        <altmember cref="T:System.Runtime.Remoting.Proxies.RealProxy" />
        <altmember cref="T:System.Runtime.Remoting.ObjRef" />
      </Docs>
    </Member>
  </Members>
</Type>
