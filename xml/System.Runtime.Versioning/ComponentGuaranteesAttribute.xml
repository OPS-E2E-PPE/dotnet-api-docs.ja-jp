<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f6240b9b8f6982e9231dbcf18f0e28464110c14" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73386265" /></Metadata><TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>複数のバージョンにわたる可能性があるコンポーネント、型、または型メンバーの互換性の保証を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> は、コンポーネントおよびクラスライブラリの開発者が、ライブラリのコンシューマーが複数のバージョンで想定できる互換性のレベルを示すために使用されます。 これは、ライブラリまたはコンポーネントの将来のバージョンが既存のクライアントを破壊しないことを保証するレベルを示します。 その後、クライアントは、独自のインターフェイスを設計してバージョン間の安定性を確保するための支援として、<xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> を使用できます。  
  
> [!NOTE]
>  共通言語ランタイム (CLR) では、この属性はどのような方法でも使用されません。 この値は、コンポーネントの作成者の意図を正式に文書化するためにあります。 コンパイル時のツールでは、これらの宣言を使用して、宣言された保証を妨げる可能性のあるコンパイル時エラーを検出することもできます。  
  
## <a name="levels-of-compatibility"></a>互換性のレベル  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> は、<xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 列挙体のメンバーによって表される次の互換性レベルをサポートしています。  
  
-   バージョン間の互換性がありません (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>)。 クライアントは、将来のバージョンが既存のクライアントを破壊することを期待できます。 詳細については、このトピックで後述する「[互換性のない](#None)セクション」を参照してください。  
  
-   サイドバイサイドバージョンとバージョンの互換性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>)。 同じアプリケーションドメインに複数のバージョンのアセンブリが読み込まれると、コンポーネントは動作するようにテストされています。 一般に、将来のバージョンでは互換性が損なわれる可能性があります。 ただし、互換性に影響する変更が行われた場合、古いバージョンは変更されませんが、新しいバージョンと共に存在します。 互換性に影響する変更が加えられた場合に、既存のクライアントが動作するようにするには、side-by-side 実行が想定されています。 詳細については、このトピックで後述する「 [Side-by-side 互換性](#SideBySide)」セクションを参照してください。  
  
-   安定バージョンとバージョン間の互換性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>)。 将来のバージョンではクライアントが破損しないようにする必要があり、サイドバイサイドの実行は必要ありません。 ただし、クライアントが誤って破損している場合は、side-by-side 実行を使用して問題を解決できる可能性があります。 詳細については、「安定した[互換性](#Standard)」セクションを参照してください。  
  
-   バージョン間の互換性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>) を交換します。 将来のバージョンでクライアントが破壊されないように、特別な注意がかかります。 クライアントは、相互に独立して配置されている他のアセンブリとの通信に使用されるインターフェイスのシグネチャでのみ、これらの型を使用する必要があります。 これらの型の1つのバージョンのみが特定のアプリケーションドメインに存在することが想定されています。つまり、クライアントが破損した場合、サイドバイサイド実行で互換性の問題を解決することはできません。 詳細については、「 [Exchange の型の互換性](#Exchange)」を参照してください。  
  
 以下のセクションでは、各レベルの保証の詳細について説明します。  
  
<a name="None"></a>   
### <a name="no-compatibility"></a>互換性なし  
 コンポーネントを <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> としてマークすると、プロバイダーが互換性についての保証を行いません。 クライアントは、公開されたインターフェイスに依存しないようにする必要があります。 このレベルの互換性は、実験的な型、または公開されているものの、常に同時に更新されるコンポーネントのみを対象としている型に役立ちます。 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>、このコンポーネントが外部コンポーネントによって使用されないことを明示的に示します。  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a>サイドバイサイドの互換性  
 コンポーネントを <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> としてマークすると、同じアプリケーションドメインに複数のバージョンのアセンブリが読み込まれるときに、コンポーネントが動作するようにテストされていることを示します。 互換性に影響する変更は、バージョン番号が大きいアセンブリに対して行われた場合に限り許可されます。 以前のバージョンのアセンブリにバインドされているコンポーネントは、古いバージョンにバインドし続けることが想定されています。また、他のコンポーネントを新しいバージョンにバインドすることもできます。 また、以前のバージョンを非破壊的に変更することによって、<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> するように宣言されているコンポーネントを更新することもできます。  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a>安定した互換性  
 型を <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> としてマークすると、その型を複数のバージョン間で安定したままにする必要があることを示します。 ただし、安定した型のサイドバイサイドバージョンが同じアプリケーションドメインに存在する可能性もあります。  
  
 安定型は、高バイナリ互換性バーを維持します。 このため、プロバイダーは、安定した型に重大な変更を加えることを避ける必要があります。 次の種類の変更が許容されます。  
  
-   シリアル化形式が壊れることがない限り、型に対してプライベートインスタンスフィールドの追加または削除を行います。  
  
-   シリアル化できない型をシリアル化可能な型に変更します。 (ただし、シリアル化可能な型をシリアル化できない型に変更することはできません)。  
  
-   メソッドから派生した新しい例外をスローします。  
  
-   メソッドのパフォーマンスの向上。  
  
-   変更がクライアントの大半に悪影響を与えない限り、戻り値の範囲を変更します。  
  
-   業務上の正当度が高く、悪影響を受けるクライアントの数が少ない場合は、深刻なバグを修正します。  
  
 安定したコンポーネントの新しいバージョンは、既存のクライアントを壊すことが想定されていないため、通常は、安定したコンポーネントの1つのバージョンのみがアプリケーションドメインで必要になります。 ただし、これは要件ではありません。これは、安定した型は、すべてのコンポーネントが合意する既知の交換型として使用されないためです。 したがって、安定したコンポーネントの新しいバージョンが誤ってコンポーネントを破損させ、他のコンポーネントが新しいバージョンを必要とする場合は、新旧両方のコンポーネントを読み込むことによって問題を解決できる可能性があります。  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> は、<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>よりもバージョン互換性の保証を強化します。 これは、複数バージョンのコンポーネントの一般的な既定値です。  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> は <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>と組み合わせることができます。これにより、コンポーネントが互換性を損なうことなく、特定のアプリケーションドメインに複数のバージョンが読み込まれた場合に動作するようにテストされます。  
  
 型またはメソッドが <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>としてマークされると、<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>にアップグレードできます。 ただし、<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>にダウングレードすることはできません。  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a>Exchange の型の互換性  
 型を <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> としてマークすると、<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>よりも厳密なバージョン互換性保証が提供されるため、すべての型のうち最も安定したものに適用する必要があります。 これらの型は、すべてのコンポーネント境界で個別に構築されたコンポーネント間のインターチェンジ (すべてのバージョンの CLR または任意のバージョンのコンポーネントまたはアプリケーション) と領域 (1 つのプロセスでのクロスプロセス、クロス CLR) との間で使用することを目的としています。1つの CLR のクロスアプリケーションドメイン)。 交換の種類に重大な変更が加えられた場合は、複数のバージョンの型を読み込むことによって問題を解決することはできません。  
  
 Exchange の種類を変更する必要があるのは、問題が非常に深刻な場合 (深刻なセキュリティの問題など)、または破損の確率が非常に低い場合 (つまり、コードに依存していない可能性があるランダムな方法で動作が既に壊れていた場合) のみです。 Exchange の種類に対して、次の種類の変更を行うことができます。  
  
-   新しいインターフェイス定義の継承を追加します。  
  
-   新しく継承されたインターフェイス定義のメソッドを実装する新しいプライベートメソッドを追加します。  
  
-   新しい静的フィールドを追加します。  
  
-   新しい静的メソッドを追加します。  
  
-   新しい非仮想インスタンスメソッドを追加します。  
  
 次のは、互換性に影響する変更と見なされ、プリミティブ型では使用できません。  
  
-   シリアル化形式の変更 バージョントレラントなシリアル化が必要です。  
  
-   プライベートインスタンスフィールドの追加または削除。 このようなリスクにより、型のシリアル化形式が変更され、リフレクションを使用するクライアントコードが中断されます。  
  
-   型のシリアル化を変更する。 シリアル化できない型をシリアル化可能にすることはできません。その逆も可能です。  
  
-   メソッドからさまざまな例外をスローします。  
  
-   メンバー定義によってこの可能性が発生し、クライアントが不明な値を処理する方法を明確に示す場合を除き、メソッドの戻り値の範囲を変更します。  
  
-   ほとんどのバグを修正します。 型のコンシューマーは、既存の動作に依存します。  
  
 コンポーネント、型、またはメンバーが <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 保証でマークされた後は、<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> または <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>に変更することはできません。  
  
 通常、exchange の型は、パブリックインターフェイスで一般的に使用される基本的な型 (.NET Framework の <xref:System.Int32> や <xref:System.String> など) とインターフェイス (<xref:System.Collections.Generic.IList%601>、<xref:System.Collections.Generic.IEnumerable%601>、<xref:System.IComparable%601>など) です。  
  
 交換の種類がでもマークされている他の種類のみをパブリックに公開<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>互換性。 さらに、交換の種類が変更される可能性がある Windows API の動作に依存できません。  
  
## <a name="component-guarantees-a-summary"></a>コンポーネント保証: 概要  
 次の表は、コンポーネントの特性と使用状況が互換性の保証にどのように影響するかを示しています。  
  
|コンポーネントの特性|Exchange|安定した|サイドバイサイド|なし|  
|-------------------------------|--------------|------------|--------------------|----------|  
|は、独立してバージョンを持つコンポーネント間のインターフェイスで使用できます。|Y|N|N|N|  
|は、個別にバージョン管理されるアセンブリによって (プライベートに) 使用できます。|Y|Y|Y|N|  
|1つのアプリケーションドメインに複数のバージョンを含めることができます。|N|Y|Y|Y|  
|重大な変更を行うことができます|N|N|Y|Y|  
|アセンブリの特定の複数のバージョンをまとめて読み込むことができるようにテストされました。|N|N|Y|N|  
|重大な変更を行うことができます。|N|N|N|Y|  
|安全に非互換性サービスの変更を適切に行うことができます。|Y|Y|Y|Y|  
  
## <a name="applying-the-attribute"></a>属性の適用  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> は、アセンブリ、型、または型のメンバーに適用できます。 そのアプリケーションは階層化されています。 つまり、既定では、アセンブリレベルの属性の <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> プロパティによって定義される保証によって、アセンブリ内のすべての型とそれらの型のすべてのメンバーの保証が定義されます。 同様に、保証が型に適用される場合、既定では、その型の各メンバーにも適用されます。  
  
 この継承された保証は、個々の型および型のメンバーに <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> を適用することによってオーバーライドできます。 ただし、既定値を上書きすることによって保証が弱くなることは保証されません。それを強化することはできません。 たとえば、アセンブリが <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 保証でマークされている場合、その型とメンバーには互換性の保証がありません。また、アセンブリ内の型またはメンバーに適用されるその他の保証はすべて無視されます。  
  
## <a name="testing-the-guarantee"></a>保証のテスト  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> プロパティは、<xref:System.FlagsAttribute> 属性でマークされた <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 列挙体のメンバーを返します。 これは、不明なフラグをマスクすることによって、関心のあるフラグをテストする必要があることを意味します。 たとえば、次の例では、型が <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>としてマークされているかどうかをテストします。  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 次の例では、型が <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> または <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>としてマークされているかどうかをテストします。  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 次の例では、型が <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> としてマークされている (つまり、<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> も <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>も) ことをテストします。  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees">複数のバージョン間で保証されている互換性のレベルを指定する列挙値の 1 つ。</param>
        <summary>ライブラリ、型、またはメンバーの、複数のバージョン間で保証されている互換性のレベルを示す値を使用して、<see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> クラスがインスタンス化されると、`guarantees` パラメーターの値が <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> プロパティに割り当てられます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数のバージョンにわたるライブラリ、型、または型メンバーの保証されている互換性のレベルを示す値を取得します。</summary>
        <value>複数のバージョン間で保証されている互換性のレベルを指定する列挙値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> プロパティの値は、<xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> コンストラクターの `guarantees` パラメーターに対応します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
