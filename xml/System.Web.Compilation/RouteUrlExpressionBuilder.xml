<Type Name="RouteUrlExpressionBuilder" FullName="System.Web.Compilation.RouteUrlExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1af86901524f10c5a8bd7450ec15cdfae82030b" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78778555" /></Metadata><TypeSignature Language="C#" Value="public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteUrlExpressionBuilder extends System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteUrlExpressionBuilder&#xA;Inherits ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteUrlExpressionBuilder : System::Web::Compilation::ExpressionBuilder" />
  <TypeSignature Language="F#" Value="type RouteUrlExpressionBuilder = class&#xA;    inherit ExpressionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Compilation.ExpressionBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionPrefix("Routes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="82a8e-101">指定した URL パラメーター値に対応する URL を作成します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-101">Creates a URL that corresponds to specified URL parameter values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="82a8e-102"><xref:System.Web.Compilation.RouteUrlExpressionBuilder> クラスを使用すると、URL パラメーター値の一覧を指定することによって、サーバーコントロールのプロパティをルートの URL に設定できます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-102">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder> class makes it possible to set the property of a server control to the URL of a route by providing a list of URL parameter values.</span></span>



## Examples
 <span data-ttu-id="82a8e-103">次の例は、ルート用に書式設定された URL でハイパーリンクを生成するマークアップを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="82a8e-103">The following example shows how to create markup that generates a hyperlink with a URL that is formatted for a route.</span></span> <span data-ttu-id="82a8e-104">ルートは、URL パターンとして `http://www.contoso.com/search/{searchterm}` を使用して定義されます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-104">The route is defined by using `http://www.contoso.com/search/{searchterm}` as the URL pattern.</span></span>

```
<asp:HyperLink ID="HyperLink1" runat="server"
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles %>">
  Search for Bicycles
</asp:HyperLink>
```

 <span data-ttu-id="82a8e-105">このハイパーリンク用に生成された URL は `http://www.contoso.com/search/Bicycles`されます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-105">The URL generated for this hyperlink would be `http://www.contoso.com/search/Bicycles`.</span></span>

 <span data-ttu-id="82a8e-106">`RouteUrl` 式に指定された URL パラメーターがルートを一意に識別するには不十分な場合は、ルート名を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="82a8e-106">If the URL parameters provided to the `RouteUrl` expression are not sufficient to uniquely identify a route, you must include the route name.</span></span> <span data-ttu-id="82a8e-107">たとえば、Web アプリケーションに、唯一の URL パラメーターとして `searchterm` を持つ2つのルートがある場合、ルートはルート名を使用して定義する必要があり、ハイパーリンクマークアップは次の例のようになります。</span><span class="sxs-lookup"><span data-stu-id="82a8e-107">For example, if a Web application has two routes with `searchterm` as the sole URL parameter, the routes would have to be defined by using route names, and the hyperlink markup would resemble the following example:</span></span>

```
<asp:HyperLink ID="HyperLink1" runat="server"
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles,
               routename=BasicSearchRoute %>">
  Search for Bicycles
</asp:HyperLink>
```

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="82a8e-108">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="82a8e-108">ASP.NET Routing</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="82a8e-109">方法: ルーティングページの URL パラメーターにアクセスする</span><span class="sxs-lookup"><span data-stu-id="82a8e-109">How to: Access URL Parameters in a Routed Page</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="82a8e-110">ASP.NET 式の概要</span><span class="sxs-lookup"><span data-stu-id="82a8e-110">ASP.NET Expressions Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteUrlExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteUrlExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82a8e-111"><see cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-111">Initializes a new instance of the <see cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="82a8e-112">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="82a8e-112">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="82a8e-113">方法: ルーティングページの URL パラメーターにアクセスする</span><span class="sxs-lookup"><span data-stu-id="82a8e-113">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="82a8e-114">ASP.NET 式の概要</span><span class="sxs-lookup"><span data-stu-id="82a8e-114">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="routeUrlExpressionBuilder.EvaluateExpression (target, entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="82a8e-115">この実装では使用されません。</span><span class="sxs-lookup"><span data-stu-id="82a8e-115">Not used in this implementation.</span></span></param>
        <param name="entry"><span data-ttu-id="82a8e-116">式のバインド先のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="82a8e-116">The property that the expression is bound to.</span></span></param>
        <param name="parsedData"><span data-ttu-id="82a8e-117">この実装では使用されません。</span><span class="sxs-lookup"><span data-stu-id="82a8e-117">Not used in this implementation.</span></span></param>
        <param name="context"><span data-ttu-id="82a8e-118">コントロールまたはページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="82a8e-118">Properties for the control or page.</span></span></param>
        <summary><span data-ttu-id="82a8e-119">指定した URL パラメーター値とルート URL 書式に対応する URL を作成します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-119">Creates a URL that corresponds to specified URL parameter values and to a route URL format.</span></span></summary>
        <returns><span data-ttu-id="82a8e-120">指定した URL パラメーター値と選択されたルートに対応する URL。</span><span class="sxs-lookup"><span data-stu-id="82a8e-120">The URL that corresponds to the specified URL parameter values and to the selected route.</span></span> <span data-ttu-id="82a8e-121">ルートの選択は、各ルート URL パターンを、指定されたパラメーターのリストと照合することで行われます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-121">The route is selected by matching route URL patterns to the specified list of parameters.</span></span> <span data-ttu-id="82a8e-122">指定したパラメーター リストに複数のルートが一致する場合に備えて、ルート名を指定して、選択するルートを示すこともできます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-122">In case more than one route matches a specified list of parameters, a route name can also be specified to indicate which route to select.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="82a8e-123">ASP.NET は、次の形式の式がマークアップで見つかった場合に、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-123">ASP.NET calls this method when an expression of the following form is encountered in markup:</span></span>

 `<%$ RouteUrl: urlparameter=value %>`

 <span data-ttu-id="82a8e-124">このメソッドは、現在の <xref:System.Web.Routing.Route> オブジェクトの指定されたルートキー値に対して適切な URL を生成します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-124">This method generates the appropriate URL for the specified route-key values for the current <xref:System.Web.Routing.Route> object.</span></span> <span data-ttu-id="82a8e-125">このメソッドは、<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="82a8e-125">This method overrides the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span> <span data-ttu-id="82a8e-126">式がバインドされているコントロールへの参照を `entry` パラメーターから取得し、`context` パラメーターから評価される式を取得し、<xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A> メソッドを呼び出して URL を生成します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-126">It gets from the `entry` parameter a reference to the control to which the expression is bound, it gets from the `context` parameter the expression to be evaluated, and it calls the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A> method to generate the URL.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="82a8e-127">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="82a8e-127">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="82a8e-128">方法: ルーティングページの URL パラメーターにアクセスする</span><span class="sxs-lookup"><span data-stu-id="82a8e-128">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="82a8e-129">ASP.NET 式の概要</span><span class="sxs-lookup"><span data-stu-id="82a8e-129">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetCodeExpression : System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; System.CodeDom.CodeExpression" Usage="routeUrlExpressionBuilder.GetCodeExpression (entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry"><span data-ttu-id="82a8e-130">式のバインド先のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="82a8e-130">The property that the expression is bound to.</span></span></param>
        <param name="parsedData"><span data-ttu-id="82a8e-131"><see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" /> によって返される、解析されたデータを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82a8e-131">The object that represents parsed data as returned by <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />.</span></span></param>
        <param name="context"><span data-ttu-id="82a8e-132">コントロールまたはページのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="82a8e-132">Properties for the control or page.</span></span></param>
        <summary><span data-ttu-id="82a8e-133">生成されたページ クラスでプロパティの割り当てに使用されるコード式を返します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-133">Returns a code expression that is used to perform the property assignment in the generated page class.</span></span></summary>
        <returns><span data-ttu-id="82a8e-134">プロパティの割り当てに使用される <see cref="T:System.CodeDom.CodeExpression" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="82a8e-134">A <see cref="T:System.CodeDom.CodeExpression" /> instance that is used in the property assignment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="82a8e-135">このメソッドは、ページまたはコントロールに対して CodeDOM が作成されるときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-135">This method is called when the CodeDOM is created for a page or control.</span></span> <span data-ttu-id="82a8e-136">返される <xref:System.CodeDom.CodeExpression> オブジェクトは、生成されたページクラスのプロパティの割り当てに追加するコード式を表します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-136">The <xref:System.CodeDom.CodeExpression> object that is returned represents the code expression to add to the property assignment in the generated page class.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="82a8e-137">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="82a8e-137">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="82a8e-138">方法: ルーティングページの URL パラメーターにアクセスする</span><span class="sxs-lookup"><span data-stu-id="82a8e-138">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="82a8e-139">ASP.NET 式の概要</span><span class="sxs-lookup"><span data-stu-id="82a8e-139">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public static string GetRouteUrl (System.Web.UI.Control control, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRouteUrl(class System.Web.UI.Control control, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRouteUrl (control As Control, expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRouteUrl(System::Web::UI::Control ^ control, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member GetRouteUrl : System.Web.UI.Control * string -&gt; string" Usage="System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl (control, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="82a8e-140">式のバインド先のコントロール。</span><span class="sxs-lookup"><span data-stu-id="82a8e-140">The control that the expression is bound to.</span></span></param>
        <param name="expression"><span data-ttu-id="82a8e-141">マークアップに指定された式。</span><span class="sxs-lookup"><span data-stu-id="82a8e-141">The expression as specified in markup.</span></span></param>
        <summary><span data-ttu-id="82a8e-142">ルート URL 書式の指定したルート キーに対応する URL を作成します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-142">Creates a URL that corresponds to specified route keys for a route URL format.</span></span></summary>
        <returns><span data-ttu-id="82a8e-143">現在の <see cref="T:System.Web.Routing.Route" /> オブジェクトのルート URL 書式に対応する URL。</span><span class="sxs-lookup"><span data-stu-id="82a8e-143">The URL that corresponds to the route URL format of the current <see cref="T:System.Web.Routing.Route" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="82a8e-144">このメソッドは、<xref:System.Web.Routing.RouteCollection> オブジェクトの <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> メソッドを呼び出すことによって、URL に適切な値を生成します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-144">This method generates the appropriate value for the URL by calling the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> object.</span></span> <span data-ttu-id="82a8e-145">`control` パラメーターから <xref:System.Web.Routing.RequestContext> オブジェクトを取得し、`expression` パラメーターからルート名とルートパラメーターを解析します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-145">It gets the <xref:System.Web.Routing.RequestContext> object from the `control` parameter, and it parses the route name and route parameters from the `expression` parameter.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82a8e-146"><paramref name="control" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82a8e-146">The <paramref name="control" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="82a8e-147">メソッドは、マークアップで指定された式を解析できません。</span><span class="sxs-lookup"><span data-stu-id="82a8e-147">The method was unable to parse the expression that was specified in markup.</span></span> <span data-ttu-id="82a8e-148">詳細については、<see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" /> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="82a8e-148">For more information, see <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="82a8e-149">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="82a8e-149">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="82a8e-150">方法: ルーティングページの URL パラメーターにアクセスする</span><span class="sxs-lookup"><span data-stu-id="82a8e-150">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="82a8e-151">ASP.NET 式の概要</span><span class="sxs-lookup"><span data-stu-id="82a8e-151">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public override bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEvaluate : bool" Usage="System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82a8e-152">コンパイルされないページで式を評価できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-152">Gets a value that indicates whether an expression can be evaluated in a page that is not compiled.</span></span></summary>
        <value><span data-ttu-id="82a8e-153">常に <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="82a8e-153">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="82a8e-154"><xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> プロパティは、<xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> メソッドがクラスに実装されており、コンパイルされていないページの式の値を返すことができるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-154">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> property indicates whether the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> method has been implemented in the class and can return a value for the expression in a page that is not compiled.</span></span> <span data-ttu-id="82a8e-155"><xref:System.Web.Compilation.RouteUrlExpressionBuilder> クラスは、コンパイルされていないページ内の式を評価できます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-155">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder> class can evaluate an expression in a page that is not compiled.</span></span> <span data-ttu-id="82a8e-156">したがって、<xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> プロパティは常に `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-156">Therefore, the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> property always returns `true`.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="82a8e-157">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="82a8e-157">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="82a8e-158">方法: ルーティングページの URL パラメーターにアクセスする</span><span class="sxs-lookup"><span data-stu-id="82a8e-158">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="82a8e-159">ASP.NET 式の概要</span><span class="sxs-lookup"><span data-stu-id="82a8e-159">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParseRouteExpression">
      <MemberSignature Language="C#" Value="public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseRouteExpression(string expression, class System.Web.Routing.RouteValueDictionary routeValues, [out] string&amp; routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseRouteExpression (expression As String, routeValues As RouteValueDictionary, ByRef routeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseRouteExpression(System::String ^ expression, System::Web::Routing::RouteValueDictionary ^ routeValues, [Runtime::InteropServices::Out] System::String ^ % routeName);" />
      <MemberSignature Language="F#" Value="static member TryParseRouteExpression : string * System.Web.Routing.RouteValueDictionary * string -&gt; bool" Usage="System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression (expression, routeValues, routeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="82a8e-160">マークアップに指定された式。</span><span class="sxs-lookup"><span data-stu-id="82a8e-160">The expression as specified in markup.</span></span></param>
        <param name="routeValues"><span data-ttu-id="82a8e-161">ルート キーとそれに関連付けられている値のコレクション。</span><span class="sxs-lookup"><span data-stu-id="82a8e-161">The collection of route keys and their associated values.</span></span></param>
        <param name="routeName"><span data-ttu-id="82a8e-162"><paramref name="expression" /> に <c>RouteName</c> という名前のルート キーが含まれている場合、このメソッドから制御が戻るときに、ルートの名前を表す文字列が格納されます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-162">When this method returns, contains a string that represents the name of the route, if <paramref name="expression" /> contains a route key named <c>RouteName</c>.</span></span> <span data-ttu-id="82a8e-163">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-163">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="82a8e-164">式をルート キーと値のコレクションに解析します。オプションでルート名も取得できます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-164">Parses an expression into a collection of route keys and values, and optionally into a route name.</span></span></summary>
        <returns><span data-ttu-id="82a8e-165">解析が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="82a8e-165"><see langword="true" /> if parsing was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="82a8e-166"><xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> メソッドは、式から先頭および末尾のスペースを除去し、区切り記号としてコンマを使用してキーと値のペアに分割します。</span><span class="sxs-lookup"><span data-stu-id="82a8e-166">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> method strips leading and trailing spaces from the expression, and then splits it into key/value pairs by using commas as delimiters.</span></span> <span data-ttu-id="82a8e-167">`RouteName` という名前のルートキーが見つかった場合、その値は `routeValues`ではなく `routeName` パラメーターに返されます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-167">If the route key named `RouteName` is found, that value is passed back in the `routeName` parameter and not in `routeValues`.</span></span> <span data-ttu-id="82a8e-168">それ以外の場合は、`routeName`に対して `null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-168">Otherwise, `null` is returned for `routeName`.</span></span> <span data-ttu-id="82a8e-169">先頭と末尾のスペースも、個々のキーと値から削除されます。</span><span class="sxs-lookup"><span data-stu-id="82a8e-169">Leading and trailing spaces are also stripped from individual keys and values.</span></span>

 <span data-ttu-id="82a8e-170"><xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> メソッドは、式が1つ以上のキー/値ペアで構成されていない場合に `false` を返します。これは、書式指定*キー*`=`*値*に含まれ、コンマを使用して複数のペアを区切ります。</span><span class="sxs-lookup"><span data-stu-id="82a8e-170">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> method returns `false` if the expression is not composed of at least one key/value pair that is in the format *key*`=`*value*, and that uses commas to separate multiple pairs.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="82a8e-171">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="82a8e-171">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="82a8e-172">方法: ルーティングページの URL パラメーターにアクセスする</span><span class="sxs-lookup"><span data-stu-id="82a8e-172">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="82a8e-173">ASP.NET 式の概要</span><span class="sxs-lookup"><span data-stu-id="82a8e-173">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
