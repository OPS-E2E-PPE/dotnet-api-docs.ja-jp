<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="495c1fc89aa2cf54e97f90adb14adb9b5973520a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78778828" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0ac27-101">ASP.NET プロジェクト内の 1 つ以上の仮想パスからアセンブリをビルドするためのコンテナーを提供します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-101">Provides a container for building an assembly from one or more virtual paths within an ASP.NET project.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac27-102"><xref:System.Web.Compilation.AssemblyBuilder> クラスのインスタンスは <xref:System.Web.Compilation.BuildProvider> クラスメソッドと共に使用して、コンパイルされたアセンブリに1つ以上のファイルをビルドします。</span><span class="sxs-lookup"><span data-stu-id="0ac27-102">Instances of the <xref:System.Web.Compilation.AssemblyBuilder> class are used with <xref:System.Web.Compilation.BuildProvider> class methods to build one or more files into a compiled assembly.</span></span>  
  
 <span data-ttu-id="0ac27-103"><xref:System.Web.Compilation.BuildProvider> クラスは個々のファイルのビルド機能を定義し、<xref:System.Web.Compilation.AssemblyBuilder> クラスは、各 <xref:System.Web.Compilation.BuildProvider> インスタンスによって提供されるソースコードを1つのアセンブリに結合します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-103">The <xref:System.Web.Compilation.BuildProvider> class defines build functionality for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> class combines the source code contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span> <span data-ttu-id="0ac27-104">ASP.NET ビルド環境は、1つまたは複数のファイルからアセンブリを構築するときに <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトを <xref:System.Web.Compilation.BuildProvider> メソッドに渡します。これにより、各 <xref:System.Web.Compilation.BuildProvider> インスタンスは、ファイルのソースコードをアセンブリ全体に投稿できます。</span><span class="sxs-lookup"><span data-stu-id="0ac27-104">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that each <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="0ac27-105">ASP.NET のビルド環境によって、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> プロパティに基づいて、プロジェクト内のファイルに必要な言語とコンパイラが決定されます。</span><span class="sxs-lookup"><span data-stu-id="0ac27-105">The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0ac27-106">ビルド環境は、コンパイラの設定に基づいてファイルをグループ化し、同じコンパイラを必要とするファイルからアセンブリを構築します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-106">The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.</span></span>  
  
 <span data-ttu-id="0ac27-107"><xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> プロパティは、各 <xref:System.Web.Compilation.BuildProvider> 実装によって提供されるソースコードからアセンブリをコンパイルするために ASP.NET ビルド環境が使用する <xref:System.CodeDom.Compiler.CodeDomProvider> の実装を示します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-107">The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.</span></span>  
  
 <span data-ttu-id="0ac27-108"><xref:System.Web.Compilation.BuildProvider> オブジェクトは、<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> メソッドを使用して、CodeDOM グラフの形式でソースコードを提供します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-108">A <xref:System.Web.Compilation.BuildProvider> object contributes source code in the form of a CodeDOM graph using the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span> <span data-ttu-id="0ac27-109"><xref:System.Web.Compilation.BuildProvider> オブジェクトは、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドを使用して、物理ファイルに格納されているソースコードを提供します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-109">A <xref:System.Web.Compilation.BuildProvider> object contributes source code stored in a physical file using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span>  
  
 <span data-ttu-id="0ac27-110">各 <xref:System.Web.Compilation.BuildProvider> オブジェクトが適切な <xref:System.Web.Compilation.AssemblyBuilder> メソッドを使用してソースコードに貢献すると、ASP.NET ビルド環境は、<xref:System.Web.Compilation.AssemblyBuilder> クラスを使用して、収集されたソースコードをアセンブリにコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="0ac27-110">After each <xref:System.Web.Compilation.BuildProvider> object contributes source code using the appropriate <xref:System.Web.Compilation.AssemblyBuilder> methods, the ASP.NET build environment uses the <xref:System.Web.Compilation.AssemblyBuilder> class to compile the collected source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ac27-111">次のコード例は、抽象 <xref:System.Web.Compilation.BuildProvider> 基本クラスから継承する単純なビルドプロバイダーの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="0ac27-111">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="0ac27-112">ビルドプロバイダーは、基本クラスの <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メンバーをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="0ac27-112">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 <span data-ttu-id="0ac27-113"><xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドの実装では、ビルドプロバイダーは、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドを使用して、アセンブリのコンパイル用に生成されたコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-113">In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="0ac27-114">この例には、`SampleClassGenerator` クラスの実装は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="0ac27-114">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="0ac27-115">詳細については、<xref:System.CodeDom.CodeCompileUnit> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0ac27-115">For more information, see <xref:System.CodeDom.CodeCompileUnit>.</span></span>  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="0ac27-116">コード コンパイル単位またはアセンブリ コンパイルに含まれるソース ファイルによって参照されるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="0ac27-116">An assembly referenced by a code compile unit or source file included in the assembly compilation.</span></span></param>
        <summary><span data-ttu-id="0ac27-117">1 つのファイルについて生成されたソース コードが参照するアセンブリを追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-117">Adds an assembly that is referenced by source code generated for a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac27-118"><xref:System.Web.Compilation.BuildProvider> の実装では、入力アセンブリ内の型を参照するソースコードを生成するときに、<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-118">A <xref:System.Web.Compilation.BuildProvider> implementation uses the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method when generating source code that references types within the input assembly.</span></span>  
  
 <span data-ttu-id="0ac27-119">ASP.NET ビルド環境は、<xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> プロパティでビルドプロバイダーを通じて参照できるアセンブリの既定のコレクションを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-119">The ASP.NET build environment initializes the default collection of assemblies available for reference through the build provider in the <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0ac27-120">ビルドプロバイダーによって、追加のアセンブリを参照するソースコードが生成される場合、ビルドプロバイダーは <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> メソッドを使用して追加のアセンブリを追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-120">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="0ac27-121">ASP.NET ビルド環境は、ビルドプロバイダーによって追加された参照アセンブリと参照可能なアセンブリの既定のコレクションの両方を使用して、アセンブリのコンパイル中に外部型を解決します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-121">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="0ac27-122">通常、<xref:System.Web.Compilation.BuildProvider> オブジェクトは、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドの <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトにソースコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-122">Typically, a <xref:System.Web.Compilation.BuildProvider> object adds source code to the <xref:System.Web.Compilation.AssemblyBuilder> object in the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method.</span></span> <span data-ttu-id="0ac27-123">ビルドプロバイダーが外部の型を使用するソースコードを生成する場合、ビルドプロバイダーは <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> メソッドを使用して型のアセンブリを追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-123">If a build provider generates source code that uses an external type, the build provider adds the type's assembly using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0ac27-124"><xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> メソッドを使用して、特定のファイルの種類の <xref:System.Web.Compilation.BuildProvider> インスタンスによって生成されるソースコードで必要な参照アセンブリを追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-124">Use the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method to add a referenced assembly required in source code generated by a <xref:System.Web.Compilation.BuildProvider> instance for a specific file type.</span></span> <span data-ttu-id="0ac27-125">アセンブリをプロジェクト内の複数のファイルの種類に対して参照するように構成するには、[[コンパイル用アセンブリ要素] (ASP.NET 設定スキーマ)](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9)構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-125">Use the [assemblies Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) configuration element to configure an assembly for reference across multiple file types in a project.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCodeCompileUnit (buildProvider As BuildProvider, compileUnit As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><span data-ttu-id="0ac27-126"><paramref name="compileUnit" /> を作成するためのビルド プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="0ac27-126">The build provider generating <paramref name="compileUnit" />.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="0ac27-127">アセンブリのコンパイルに含めるコード コンパイルの単位。</span><span class="sxs-lookup"><span data-stu-id="0ac27-127">The code compile unit to include in the assembly compilation.</span></span></param>
        <summary><span data-ttu-id="0ac27-128">アセンブリのソース コードを CodeDOM グラフの形式で追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-128">Adds source code for the assembly in the form of a CodeDOM graph.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac27-129"><xref:System.Web.Compilation.BuildProvider> の実装は、仮想パスの CodeDOM グラフを生成するときに、<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-129">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method when generating a CodeDOM graph for a virtual path.</span></span> <span data-ttu-id="0ac27-130"><xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> に追加されたソースコードは、アセンブリのコンパイルに含まれています。</span><span class="sxs-lookup"><span data-stu-id="0ac27-130">Source code added with <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> is included in the assembly compilation.</span></span>  
  
 <span data-ttu-id="0ac27-131">通常、ビルドプロバイダーの <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドの実装は、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティを読み取り、内容を解析した後、生成されたソースコードを指定された <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-131">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="0ac27-132">ビルドプロバイダーは、<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> メソッドを使用して、ソースコードを CodeDOM グラフとしてアセンブリに追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-132">The build provider uses the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly.</span></span> <span data-ttu-id="0ac27-133">また、ビルドプロバイダーは、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドを使用して、ソースコードを物理ファイルとしてアセンブリに追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="0ac27-133">Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ac27-134">ソース コードをアセンブリにビルドするためのコンパイラを取得します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-134">Gets the compiler used to build source code into an assembly.</span></span></summary>
        <value><span data-ttu-id="0ac27-135">各ビルド プロバイダーが指定したソース コードをアセンブリにコンパイルするための、読み取り専用 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="0ac27-135">A read-only <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation used for compiling source code contributed by each build provider into an assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac27-136"><xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> プロパティは、各 <xref:System.Web.Compilation.BuildProvider> 実装によって提供されるソースコードからアセンブリをコンパイルするために ASP.NET ビルド環境が使用する <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> の実装を示します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-136">The <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> property indicates the <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> implementation that the ASP.NET build environment uses to compile an assembly from the source code contributed by each <xref:System.Web.Compilation.BuildProvider> implementation.</span></span>  
  
 <span data-ttu-id="0ac27-137">ASP.NET のビルド環境によって、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> プロパティに基づいて、プロジェクト内のファイルに必要な言語とコンパイラが決定されます。</span><span class="sxs-lookup"><span data-stu-id="0ac27-137">The ASP.NET build environment determines the language and compiler required by files within the project, based on the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0ac27-138">ビルド環境は、コンパイラの設定に基づいてファイルをグループ化し、同じコンパイラを必要とするファイルからアセンブリを構築します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-138">The build environment groups files based on their compiler settings and builds an assembly from files that require the same compiler.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCodeFile (buildProvider As BuildProvider) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><span data-ttu-id="0ac27-139">コード ソース ファイルを生成ためのビルド プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="0ac27-139">The build provider generating the code source file.</span></span></param>
        <summary><span data-ttu-id="0ac27-140">ビルド プロバイダーが一時的なソース ファイルを作成して、そのソース ファイルをアセンブリのコンパイルに含めることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="0ac27-140">Allows a build provider to create a temporary source file, and include the source file in the assembly compilation.</span></span></summary>
        <returns><span data-ttu-id="0ac27-141">ソース コードを一時ファイルに書き込むために使用できる、開かれた <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="0ac27-141">An open <see cref="T:System.IO.TextWriter" /> that can be used to write source code to a temporary file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac27-142"><xref:System.Web.Compilation.BuildProvider> の実装は、仮想パスのソースファイルを生成するときに、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-142">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method when generating a source file for a virtual path.</span></span> <span data-ttu-id="0ac27-143"><xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> に追加されたソースコードは、アセンブリのコンパイルに含まれています。</span><span class="sxs-lookup"><span data-stu-id="0ac27-143">Source code added with <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> is included in the assembly compilation.</span></span>  
  
 <span data-ttu-id="0ac27-144">通常、ビルドプロバイダー <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドの実装は、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティを読み取り、内容を解析した後、生成されたソースコードを指定された <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-144">Typically, a build provider <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and then adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="0ac27-145">ビルドプロバイダーは、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドを使用して、ソースコードを物理ファイルとしてアセンブリに追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-145">The build provider uses the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method to add source code as a physical file to the assembly.</span></span> <span data-ttu-id="0ac27-146">また、ビルドプロバイダーは <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> メソッドを使用して、ソースコードを CodeDOM グラフとしてアセンブリに追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="0ac27-146">Alternately, the build provider can use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method to add source code as a CodeDOM graph to the assembly.</span></span>  
  
 <span data-ttu-id="0ac27-147"><xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>を呼び出すと、ビルドプロバイダーは返された <xref:System.IO.TextWriter> オブジェクトを使用してソースファイルの内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0ac27-147">After calling <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>, the build provider writes the source file contents using the returned <xref:System.IO.TextWriter> object.</span></span> <span data-ttu-id="0ac27-148">ソースファイルを作成した後、<xref:System.Web.Compilation.BuildProvider> オブジェクトは、<xref:System.IO.TextWriter.Close%2A> メソッドを使用して <xref:System.IO.TextWriter> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0ac27-148">After writing the source file, the <xref:System.Web.Compilation.BuildProvider> object must use the <xref:System.IO.TextWriter.Close%2A> method to close the <xref:System.IO.TextWriter> object and free associated system resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ac27-149">次のコード例は、抽象 <xref:System.Web.Compilation.BuildProvider> 基本クラスから継承する単純なビルドプロバイダーの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="0ac27-149">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="0ac27-150">ビルドプロバイダーは、基本クラスの <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メンバーをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="0ac27-150">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 <span data-ttu-id="0ac27-151"><xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドの実装では、ビルドプロバイダーは、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドを使用して、アセンブリのコンパイル用に生成されたコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-151">In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="0ac27-152">この例には、`SampleClassGenerator` クラスの実装は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="0ac27-152">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="0ac27-153">詳細については、<xref:System.CodeDom.CodeCompileUnit> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0ac27-153">For more information, see <xref:System.CodeDom.CodeCompileUnit>.</span></span>  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEmbeddedResource (buildProvider As BuildProvider, name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><span data-ttu-id="0ac27-154">リソースを生成するためのビルド プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="0ac27-154">The build provider generating the resource.</span></span></param>
        <param name="name"><span data-ttu-id="0ac27-155">作成するリソース ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="0ac27-155">The name of the resource file to be created.</span></span></param>
        <summary><span data-ttu-id="0ac27-156">ビルド プロバイダーがリソース ファイルを作成して、そのファイルをアセンブリ コンパイルに含めることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="0ac27-156">Allows a build provider to create a resource file to include in the assembly compilation.</span></span></summary>
        <returns><span data-ttu-id="0ac27-157">リソースの書き込みに使用できる、開かれた <see cref="T:System.IO.Stream" />。アセンブリのコンパイルに含まれます。</span><span class="sxs-lookup"><span data-stu-id="0ac27-157">An open <see cref="T:System.IO.Stream" /> that can be used to write resources, which are included in the assembly compilation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac27-158"><xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> メソッドを呼び出した後、<xref:System.Web.Compilation.BuildProvider> オブジェクトは、返された <xref:System.IO.Stream> オブジェクトを使用して、リソースファイルの内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0ac27-158">After calling the <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> method, a <xref:System.Web.Compilation.BuildProvider> object writes the resource file contents using the returned <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="0ac27-159">たとえば、ビルドプロバイダーは、<xref:System.Resources.ResourceWriter> オブジェクトを使用してリソースを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="0ac27-159">For example, the build provider can write the resources using a <xref:System.Resources.ResourceWriter> object.</span></span> <span data-ttu-id="0ac27-160">リソースファイルを作成した後、ビルドプロバイダーは <xref:System.IO.Stream.Close%2A> メソッドを使用して、<xref:System.IO.Stream> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0ac27-160">After writing the resource file, the build provider must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ac27-161"><paramref name="name" /> は有効なファイル名ではありません。</span><span class="sxs-lookup"><span data-stu-id="0ac27-161"><paramref name="name" /> is not a valid file name.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="0ac27-162">生成する型の名前。</span><span class="sxs-lookup"><span data-stu-id="0ac27-162">The name of the type to generate.</span></span></param>
        <summary><span data-ttu-id="0ac27-163">型に対する高速オブジェクトのファクトリ テンプレートを、コンパイル対象アセンブリに挿入します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-163">Inserts a fast object factory template for a type into the compiled assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac27-164"><xref:System.Web.Compilation.BuildProvider> の実装は、型のインスタンスを頻繁に作成するためのパフォーマンスを最適化するために、<xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-164">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> method to optimize performance for frequent creations of type instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension"><span data-ttu-id="0ac27-165">一時ファイルで使用するファイル名の拡張子。</span><span class="sxs-lookup"><span data-stu-id="0ac27-165">The file extension to use for the temporary file.</span></span></param>
        <summary><span data-ttu-id="0ac27-166">一時ファイルのパスを生成します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-166">Generates a temporary file path.</span></span></summary>
        <returns><span data-ttu-id="0ac27-167">指定されたファイル拡張子が付いた一時ファイルへのパス。</span><span class="sxs-lookup"><span data-stu-id="0ac27-167">A path to a temporary file, with the specified file extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac27-168"><xref:System.Web.Compilation.BuildProvider> の実装は、アセンブリがコンパイルされた後に自動的に削除される一時ファイルのパスを取得するために、<xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0ac27-168">A <xref:System.Web.Compilation.BuildProvider> implementation calls the <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> method to get a temporary file path that is deleted automatically after the assembly is compiled.</span></span>  
  
 <span data-ttu-id="0ac27-169"><xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> メソッドは、一意の一時ファイルパスを生成しますが、ファイルを作成しません。</span><span class="sxs-lookup"><span data-stu-id="0ac27-169">The <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> method generates a unique temporary file path, but does not create the file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>
