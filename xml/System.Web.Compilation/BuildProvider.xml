<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55fce9430ce9a4af0cef0a2df5d39778ce395c39" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77104328" /></Metadata><TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET ビルド環境でソース コードを生成するためのプロパティとメソッドのセットを定義します。 このクラスは抽象クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ビルド環境では <xref:System.Web.Compilation.BuildProvider> オブジェクトを使用して、アプリケーション内のさまざまなファイルの種類のソースコードを生成します。 <xref:System.Web.Compilation.BuildProvider> から派生したクラスは、主にファイル、Web ページ、リソース、およびその他のカスタムアイテムのソースコードを提供します。  
  
 通常、<xref:System.Web.Compilation.BuildProvider> クラスのインスタンスを直接作成することはありません。 代わりに、<xref:System.Web.Compilation.BuildProvider>から派生したクラスを実装し、ASP.NET ビルド環境内で使用する <xref:System.Web.Compilation.BuildProvider> の実装を構成します。  
  
 <xref:System.Web.Compilation.BuildProvider> クラスのインスタンスは <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトと共に使用して、コンパイルされたアセンブリに1つ以上のファイルをビルドします。 <xref:System.Web.Compilation.BuildProvider> インスタンスは、個々のファイルに対して適切な言語でソースコードを生成します。また、<xref:System.Web.Compilation.AssemblyBuilder> オブジェクトは、各 <xref:System.Web.Compilation.BuildProvider> インスタンスが提供するソースを1つのアセンブリに結合します。  
  
 ASP.NET ビルド環境では、<xref:System.Web.Compilation.BuildProvider> クラスのインスタンスを使用して、アプリケーション内にファイルを構築します。 <xref:System.Web.Compilation.BuildProvider> クラスの <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティは、作成するファイルのパスを示します。 アプリケーション内の各ファイルのファイル拡張子は、対応するビルドプロバイダーにマップされます。 ASP.NET ビルド環境は、ファイル拡張子に基づいて各ファイルの <xref:System.Web.Compilation.BuildProvider> インスタンスを初期化し、<xref:System.Web.Compilation.BuildProvider> メソッドを使用してファイルのソースコードを生成します。 ASP.NET ビルド環境は、1つ以上のファイルからアセンブリを構築するときに、優先コンパイラ言語とファイルのコンテキストに基づいて <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトを <xref:System.Web.Compilation.BuildProvider> メソッドに渡します。これにより、<xref:System.Web.Compilation.BuildProvider> インスタンスは、ファイルのソースコードをアセンブリ全体に反映できます。  
  
 ASP.NET アプリケーション内のファイルの種類に対するカスタムビルドアクションを定義するには、<xref:System.Web.Compilation.BuildProvider>からクラスを派生させ、ファイルの種類を構築するための派生クラス内のメンバーを実装し、アプリケーション構成ファイル内で対応するファイル拡張子のビルドプロバイダーを構成する必要があります。  
  
 では、サポートされるファイルのファイル拡張子と、ビルドプロバイダーがコードファイル、Web ファイル、リソースファイル、またはすべてのファイルをサポートするかどうかを指定します。 `type` 属性を使用して、ビルドプロバイダーの実装の完全修飾型名を指定します。 <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> クラスを使用して、ビルドプロバイダーを、App_Code ディレクトリ内のファイル、Web コンテンツディレクトリ内のファイル、グローバルまたはローカルのリソース、またはすべてのファイルに適用するかどうかを指定します。 `extension` 属性を使用して、<xref:System.Web.Compilation.BuildProvider> クラスがサポートするファイルを識別するために使用するファイル拡張子を指定します。 <xref:System.Web.Configuration.BuildProviderCollection> クラスを使用して、構成ファイル内のビルドプロバイダーを確認します。 ビルドプロバイダーの構成の詳細については、「[コンパイルのための Buildproviders 要素 (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)」を参照してください。  
  
 カスタムファイルの種類のソースコードを生成するビルドプロバイダーを実装するには、<xref:System.Web.Compilation.BuildProvider>からクラスを派生させ、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドをオーバーライドして、サポートされているファイルの種類のソースコードを生成します。 生成されたソースは、CodeDOM グラフの形式で <xref:System.Web.Compilation.AssemblyBuilder> オブジェクト、または物理ソースコードファイルを表すコンテンツとして追加されます。 ビルドプロバイダーで特定のプログラミング言語が必要な場合は、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティをオーバーライドして、サポートされているプログラミング言語の <xref:System.Web.Compilation.CompilerType> オブジェクトを返します。 ビルドプロバイダーが特定のプログラミング言語を必要としない場合は、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティをオーバーライドしないでください。基本クラスの実装を使用します。これは、ビルドプロバイダーが Visual Basic やC#などの任意の .NET Framework 言語を使用できることを示します。  
  
 Web コンテンツのソースコードを生成するビルドプロバイダーを実装するには、<xref:System.Web.Compilation.BuildProvider> からクラスを派生させ、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> メソッドをオーバーライドして、<xref:System.Web.Compilation.BuildProvider>によって生成されたクラスの <xref:System.Type> を返します。 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドをオーバーライドして、サポートされているファイルによって提供される型のソースコードを生成します。  
  
> [!NOTE]
>  ASP.NET Web サイトでは、カスタマイズされた <xref:System.Web.Compilation.BuildProvider> クラスを web.config ファイルに追加することはできますが、ASP.NET Web アプリケーションプロジェクトでは機能しません。 Web アプリケーションプロジェクトでは、<xref:System.Web.Compilation.BuildProvider> クラスによって生成されるコードをアプリケーションに含めることはできません。 詳細については、「 [ASP.NET Web アプリケーションプロジェクトのプリコンパイルの概要](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、抽象 <xref:System.Web.Compilation.BuildProvider> 基本クラスから継承する単純なビルドプロバイダーの実装を示しています。 ビルドプロバイダーは、基本クラスの <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メンバーをオーバーライドします。 この例には、`SampleClassGenerator` クラスの実装は含まれていません。 詳細については、「<xref:System.CodeDom.CodeCompileUnit> クラスの概要」を参照してください。  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Compilation.BuildProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> クラスは abstract であるため、コンストラクターを使用して <xref:System.Web.Compilation.BuildProvider> のインスタンスを直接作成することはできません。  
  
 <xref:System.Web.Compilation.BuildProvider> クラスから派生する場合は、コンストラクターをオーバーライドして、ビルドプロバイダーの実装のカスタム初期化アクションを実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビルド プロバイダーがカスタム ファイルの種類のソース コードを生成するために使用するコンパイラ タイプを表します。</summary>
        <value>読み取り専用の <see cref="T:System.Web.Compilation.CompilerType" />。仮想パスのソース コードをビルドするためのコード ジェネレーター、コード コンパイラ、およびコンパイラ設定値を表します。 基本クラスでは、<see langword="null" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティを使用して、<xref:System.Web.Compilation.BuildProvider>の実装のソースコードをコンパイルするための設定を指定します。 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティは、ビルドプロバイダーがソースコードの生成とコンパイルに特定のコード言語を必要としない場合に `null` ます。  
  
 ビルドプロバイダーの実装内の <xref:System.Web.Compilation.CompilerType> オブジェクトの値を設定するには、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> または <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> メソッドを使用します。  
  
 <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> プロパティは、ビルドプロバイダーのソースコードを生成およびコンパイルするために使用される <xref:System.CodeDom.Compiler.CodeDomProvider> の実装を指定します。 <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> プロパティは、ソースコードをアセンブリにコンパイルするために使用される設定を定義します。  
  
   
  
## Examples  
 次のコード例は、抽象 <xref:System.Web.Compilation.BuildProvider> 基本クラスから継承する単純なビルドプロバイダーの実装を示しています。 ビルドプロバイダーは、基本クラスの <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メンバーをオーバーライドします。  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">ビルド プロバイダーで生成されたソース コードを参照するアセンブリ ビルダー。</param>
        <summary>ビルド プロバイダーの仮想パスのソース コードを生成し、そのソース コードを指定のアセンブリ ビルダーに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタムファイルの種類のソースコードを生成するビルドプロバイダーを実装するには、<xref:System.Web.Compilation.BuildProvider> クラスからクラスを派生させ、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドをオーバーライドして、サポートされているファイルの種類のソースコードを生成します。  
  
 通常、ビルドプロバイダーの <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 実装は、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティを読み取り、内容を解析し、生成されたソースコードを指定した <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトに追加します。 <xref:System.IO.TextWriter> オブジェクトまたは CodeDOM グラフの形式で、アセンブリにソースコードを投稿できます。 <xref:System.IO.TextWriter> オブジェクトを使用してソースコードをアセンブリに追加するには、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドを使用します。 CodeDOM グラフのソースコードをアセンブリに追加するには、<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> メソッドを使用します。  
  
 ビルドプロバイダーが特定のプログラミング言語でソースコードを生成する場合は、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティをオーバーライドして、サポートされているプログラミング言語の <xref:System.Web.Compilation.CompilerType> オブジェクトを返す必要があります。  
  
   
  
## Examples  
 次のコード例は、抽象 <xref:System.Web.Compilation.BuildProvider> 基本クラスから継承する単純なビルドプロバイダーの実装を示しています。 ビルドプロバイダーは、基本クラスの <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メンバーをオーバーライドします。  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md">動的なソース コードの生成とコンパイル</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">このメソッドから制御が戻った時点で、ソース コードのすべての関連付けられた行番号と行プラグマを格納したディクショナリが含まれます。 このパラメーターは初期化せずに渡されます。</param>
        <summary>生成された CodeDOM グラフのコンテナーを表します。</summary>
        <returns><see cref="T:System.Web.Compilation.BuildProvider" /> インスタンスによって生成される CodeDOM グラフのコンテナー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、Visual Studio で構文の強調表示とデザイナーのサポートを行うために <xref:System.Web.Compilation.ClientBuildManager> クラスを介して使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">ビルド プロバイダーの仮想パスのコンパイル結果。</param>
        <summary>コンパイルしたアセンブリに保存される文字列を生成します。</summary>
        <returns>ビルド環境内に保持される文字列。または、<see langword="null" /> インスタンスが <see cref="T:System.Web.Compilation.BuildProvider" /> を実装しない場合は <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildManager> オブジェクトの <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> メソッドは、入力仮想パスのビルドプロバイダーのインスタンスを作成し、<xref:System.Web.Compilation.BuildProvider> オブジェクトの <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> メソッドを呼び出します。  
  
 基本 <xref:System.Web.Compilation.BuildProvider> クラスは <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> メソッドの `null` を返します。これは <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> が実装されていないことを示します。  
  
 特定のビルドプロバイダーの実装では、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> メソッドの代わりに <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> を実装できます。 <xref:System.Web.Compilation.BuildProvider> オブジェクトは、通常、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> を使用して、仮想パスの <xref:System.Type> オブジェクトを返します。 ただし、<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> メソッドを使用して、<xref:System.Web.Compilation.BuildProvider> オブジェクトが仮想パスから複数の型を生成できることを示すことができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アプリケーション内の既定言語に関するコンパイラの設定値を返します。</summary>
        <returns>アプリケーション内の既定言語に関するコンパイラの設定値を表す <see cref="T:System.Web.Compilation.CompilerType" />。 基本クラスは、アプリケーションの構成ファイルに基づいてコンパイラの既定値を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> メソッドを使用して、ビルドプロバイダーの既定のコンパイラ型を確認します。 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> メソッドを使用して、特定の言語名のビルドプロバイダーで構成されているコンパイラの種類を確認します。  
  
 基本 <xref:System.Web.Compilation.BuildProvider> クラスは、アプリケーション構成ファイルのセクションの `defaultLanguage` 属性値を使用して、既定のコンパイラ型を決定します。 コンパイルセクションに既定の言語設定がない場合、既定のコンパイラの種類は <xref:Microsoft.VisualBasic.VBCodeProvider> 言語プロバイダーを使用して設定されます。  
  
 <xref:System.Web.Compilation.BuildProvider> クラスから派生する場合は、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> を使用して実装内の <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティを設定できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">コード言語の名前。</param>
        <summary>指定された言語に基づいて、ビルド プロバイダーのコンパイラ設定値を返します。</summary>
        <returns>指定された言語に基づくビルド プロバイダーのコンパイラ設定値を表す <see cref="T:System.Web.Compilation.CompilerType" />。 基本クラスは、アプリケーションの構成ファイルに基づいて、その言語の既定コンパイラ設定値を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> メソッドを使用して、ビルドプロバイダーで特定の言語名に対して構成されているコンパイラの種類を確認します。 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> メソッドを使用して、ビルドプロバイダーの既定のコンパイラ型を確認します。  
  
 基本 <xref:System.Web.Compilation.BuildProvider> クラスは、構成ファイルの <xref:System.Web.Configuration.CompilationSection> オブジェクトの <xref:System.Web.Configuration.CompilationSection.Compilers%2A> プロパティの <xref:System.Web.Configuration.Compiler> 要素を使用して、既定のコンパイラ型を決定します。 これは、の要素と構成ファイルのセクションの要素を調べることと同じです。 たとえば、`language` 値 VB の場合、基底クラスメソッドは <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>のインスタンスに対して構成された設定に対応する <xref:System.Web.Compilation.CompilerType> オブジェクトを返します。  
  
 <xref:System.Web.Compilation.BuildProvider> クラスから派生する場合は、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> を使用して、実装でサポートされている言語の <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティ値を設定できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="language" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Web.HttpException"><paramref name="language" /> が、そのビルド プロバイダーに対して構成されているコンパイラと一致しません。</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">ビルド プロバイダーの仮想パスのコンパイル結果。</param>
        <summary>仮想パスからビルド プロバイダーによって生成される型を返します。</summary>
        <returns>仮想パスのビルド プロバイダーによって生成される型。 基本クラスでは、<see langword="null" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .Aspx ファイルなどの Web コンテンツのソースコードを生成するビルドプロバイダーを実装するには、<xref:System.Web.Compilation.BuildProvider> クラスからクラスを派生させ、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> メソッドをオーバーライドして、ビルドプロバイダーによって生成された型を返します。  
  
 ASP.NET ビルドシステムは、各ビルドプロバイダーのファイルをコンパイルし、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> メソッドに渡される <xref:System.CodeDom.Compiler.CompilerResults> オブジェクトを生成します。 通常、ビルドプロバイダーの <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 実装では、入力 `results` オブジェクトの <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> プロパティの <xref:System.Reflection.Assembly.GetType%2A> メソッドを使用して、指定された型を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">ビルド プロバイダーの仮想パスのコンパイル結果。</param>
        <summary>仮想パスがビルドされたときに必要なアクションを示す値を返します。</summary>
        <returns>ASP.NET ビルド環境で仮想パスがビルドされた後に必要なアクションを示す <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> メソッドは、<xref:System.Web.Compilation.BuildProvider> クラスのインスタンスを使用してファイルをビルドし、コンパイルされたアセンブリを読み込むときに、ASP.NET ビルド環境によって使用されます。  
  
 基本 <xref:System.Web.Compilation.BuildProvider> クラスのメソッドは、<xref:System.Web.Compilation.BuildProviderResultFlags.Default> フィールド値を返します。これは、仮想パスが構築されるときに特別な操作が必要ないことを示します。  
  
 <xref:System.Web.Compilation.BuildProvider> クラスから派生する場合、<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> メソッドを実装して、カスタムファイルの種類または仮想パスに対して異なる <xref:System.Web.Compilation.BuildProviderResultFlags> 値を返すことができます。 たとえば、仮想パスの再構築で、含まれている <xref:System.AppDomain> オブジェクトを再読み込みする必要がある場合、<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> メソッドから <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> 列挙値を返すことができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>仮想パスから読み込むためのテキスト リーダーを開きます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のビルド プロバイダー オブジェクトの仮想パスから読み込むためのテキスト リーダーを開きます。</summary>
        <returns><see cref="T:System.IO.TextReader" /> の内容を読み込むために使用できる、開かれた <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返された <xref:System.IO.TextReader> オブジェクトの <xref:System.IO.TextReader.Read%2A> メソッドを使用して、<xref:System.Web.Compilation.BuildProvider> オブジェクトの <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティの内容を読み取ります。  
  
 <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> メソッドを呼び出した後、<xref:System.IO.TextReader.Close%2A> メソッドを使用して、<xref:System.IO.TextReader> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">読み込む仮想パス。</param>
        <summary>指定された仮想パスから読み込むためのテキスト リーダーを開きます。</summary>
        <returns>指定された仮想パスの内容を読み込むために使用できる、開かれた <see cref="T:System.IO.TextReader" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返された <xref:System.IO.TextReader> オブジェクトの <xref:System.IO.TextReader.Read%2A> メソッドを使用して、仮想パスの内容を読み取ります。  
  
 <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> メソッドを呼び出した後、<xref:System.IO.TextReader.Close%2A> メソッドを使用して、<xref:System.IO.TextReader> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>仮想パスから読み込むためのストリームを開きます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のビルド プロバイダー オブジェクトの仮想パスを読み込むためのストリームを開きます。</summary>
        <returns><see cref="T:System.IO.Stream" /> の内容を読み込むために使用できる、開かれた <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返された <xref:System.IO.Stream> オブジェクトの <xref:System.IO.Stream.Read%2A> メソッドを使用して、<xref:System.Web.Compilation.BuildProvider> オブジェクトの仮想パスの内容を読み取ります。  
  
 <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> メソッドを呼び出した後、<xref:System.IO.Stream.Close%2A> メソッドを使用して、<xref:System.IO.Stream> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">読み込む仮想パス。</param>
        <summary>指定された仮想パスから読み込むためのストリームを開きます。</summary>
        <returns>指定された仮想パスの内容を読み込むために使用できる、開かれた <see cref="T:System.IO.Stream" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返された <xref:System.IO.Stream> オブジェクトの <xref:System.IO.Stream.Read%2A> メソッドを使用して、仮想パスの内容を読み取ります。  
  
 <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> メソッドを呼び出した後、<xref:System.IO.Stream.Close%2A> メソッドを使用して、<xref:System.IO.Stream> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="results">コンパイラの結果。</param>
        <summary>派生クラスでオーバーライドされると、コンパイラのエラー メッセージを見直すことができ、より多くの情報を提供するようにメッセージを変更できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常は、このメソッドをオーバーライドして、エラーテキストをユーザーにとってわかりやすくするために、コンパイラエラーを表示する前に変更できるようにします。 これは、特定のエラーのコンテキストがわかっていて、その修正方法についての情報をユーザーに提供できる場合に便利です。 元のコンパイラエラーメッセージは、通常、特定の言語構成要素に固有であり、実際の原因や解決策をユーザーに明らかにすることはできません。  
  
 このエラーにアクセスするには、メソッドに渡された <xref:System.CodeDom.Compiler.CompilerResults> オブジェクトを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビルド プロバイダーが生成するソース コードと共にコンパイルするアセンブリを表します。</summary>
        <value>ビルド プロバイダーが生成するソース コードによって参照されるアセンブリの読み取り専用コレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ビルド環境は、ビルドプロバイダーによって参照できるアセンブリのコレクションを初期化します。 ビルドプロバイダーによって生成されたソースコードは、参照されたアセンブリでパブリック型を使用できます。 参照アセンブリコレクションは、ASP.NET アプリケーションに組み込まれている他のアセンブリと、構成ファイルの要素に一覧表示されているアセンブリで構成されます。  
  
 ビルドプロバイダーによって、追加のアセンブリを参照するソースコードが生成される場合、ビルドプロバイダーは <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> メソッドを使用して追加のアセンブリを追加します。 ASP.NET ビルド環境は、ビルドプロバイダーによって追加された参照アセンブリと参照可能なアセンブリの既定のコレクションの両方を使用して、アセンブリのコンパイル中に外部型を解決します。  
  
 <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> コレクションには、<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> メソッドを使用して他のビルドプロバイダーによって参照されるように追加されたアセンブリは含まれません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="providerType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="extension">ビルド プロバイダーの対象のファイル名拡張子。</param>
        <param name="providerType">ビルド プロバイダー クラス。</param>
        <summary>ビルド プロバイダーを登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、web.config ファイルで定義するのではなく、ビルドプロバイダーを登録するために使用できます。 ビルドプロバイダーの詳細については、「[コンパイルのための <xref:System.Web.Compilation.BuildProvider> クラスと Buildproviders 要素 (ASP.NET Settings スキーマ)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このビルド プロバイダーの実装で構築されるファイルを表します。</summary>
        <value>このビルド プロバイダーがコンパイルするファイルの仮想パスを示す、読み取り専用の文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> オブジェクトの仮想パスは、ビルドプロバイダーによってコンパイルされるファイルへのパスです。 たとえば、カスタムの <xref:System.Web.Compilation.BuildProvider> クラスを構成して、Web サイト内のすべてのファイルを作成し、カスタム拡張機能を使用した場合、web サイトの名前が WebSite1 で、Web サイトに Example. abc という名前のファイルが含まれている場合、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティには `/WebSite1/Example.abc`値が含まれます。  
  
 アプリケーション内の各ファイルのファイル拡張子によって、ファイルの種類、およびファイルの種類に対応するビルドプロバイダーが決まります。 ASP.NET ビルド環境は、ファイルの種類に基づいて各ファイルの <xref:System.Web.Compilation.BuildProvider> オブジェクトを初期化し、<xref:System.Web.Compilation.BuildProvider> メソッドを使用して各ファイルのソースを生成します。  
  
 ビルドプロバイダーの構成の詳細については、「[コンパイルのための Buildproviders 要素 (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビルド プロバイダーがコードを生成する前に構築する必要がある仮想パスのコレクションを表します。</summary>
        <value>ビルド プロバイダーのこのインスタンスが依存する仮想パスを表す文字列から成る、読み取り専用のコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> プロパティは、<xref:System.Web.Compilation.BuildProvider> インスタンスがソースコードを生成する前にコンパイルする必要がある仮想パスのコレクションです。 <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> の仮想パスからのアセンブリは、<xref:System.Web.Compilation.BuildProvider> インスタンスのコンパイルへの参照として追加されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>
