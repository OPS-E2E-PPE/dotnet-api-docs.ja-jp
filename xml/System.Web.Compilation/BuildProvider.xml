<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36cb6a03318709be3e7dd2daf6579dc461fc1c6c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83978824" /></Metadata><TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="840a0-101">ASP.NET ビルド環境でソース コードを生成するためのプロパティとメソッドのセットを定義します。</span><span class="sxs-lookup"><span data-stu-id="840a0-101">Defines a set of properties and methods for generating source code within the ASP.NET build environment.</span></span> <span data-ttu-id="840a0-102">このクラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="840a0-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-103">ASP.NET ビルド環境では <xref:System.Web.Compilation.BuildProvider> オブジェクトを使用して、アプリケーション内のさまざまなファイルの種類のソースコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="840a0-103">The ASP.NET build environment uses <xref:System.Web.Compilation.BuildProvider> objects to generate source code for different file types within an application.</span></span> <span data-ttu-id="840a0-104"><xref:System.Web.Compilation.BuildProvider> から派生したクラスは、主にファイル、Web ページ、リソース、およびその他のカスタムアイテムのソースコードを提供します。</span><span class="sxs-lookup"><span data-stu-id="840a0-104">Classes derived from <xref:System.Web.Compilation.BuildProvider> predominantly provide source code for files, Web pages, resources, and other custom items.</span></span>  
  
 <span data-ttu-id="840a0-105">通常、<xref:System.Web.Compilation.BuildProvider> クラスのインスタンスを直接作成することはありません。</span><span class="sxs-lookup"><span data-stu-id="840a0-105">Typically, you do not create an instance of the <xref:System.Web.Compilation.BuildProvider> class directly.</span></span> <span data-ttu-id="840a0-106">代わりに、<xref:System.Web.Compilation.BuildProvider>から派生したクラスを実装し、ASP.NET ビルド環境内で使用する <xref:System.Web.Compilation.BuildProvider> の実装を構成します。</span><span class="sxs-lookup"><span data-stu-id="840a0-106">Instead, you implement a class that derives from <xref:System.Web.Compilation.BuildProvider>, and configure the <xref:System.Web.Compilation.BuildProvider> implementation for use within the ASP.NET build environment.</span></span>  
  
 <span data-ttu-id="840a0-107"><xref:System.Web.Compilation.BuildProvider> クラスのインスタンスは <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトと共に使用して、コンパイルされたアセンブリに1つ以上のファイルをビルドします。</span><span class="sxs-lookup"><span data-stu-id="840a0-107">Instances of the <xref:System.Web.Compilation.BuildProvider> class are used with <xref:System.Web.Compilation.AssemblyBuilder> objects to build one or more files into a compiled assembly.</span></span> <span data-ttu-id="840a0-108"><xref:System.Web.Compilation.BuildProvider> インスタンスは、個々のファイルに対して適切な言語でソースコードを生成します。また、<xref:System.Web.Compilation.AssemblyBuilder> オブジェクトは、各 <xref:System.Web.Compilation.BuildProvider> インスタンスが提供するソースを1つのアセンブリに結合します。</span><span class="sxs-lookup"><span data-stu-id="840a0-108">A <xref:System.Web.Compilation.BuildProvider> instance generates source code in the appropriate language for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> object combines the source contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span>  
  
 <span data-ttu-id="840a0-109">ASP.NET ビルド環境では、<xref:System.Web.Compilation.BuildProvider> クラスのインスタンスを使用して、アプリケーション内にファイルを構築します。</span><span class="sxs-lookup"><span data-stu-id="840a0-109">The ASP.NET build environment uses instances of the <xref:System.Web.Compilation.BuildProvider> class to build files within an application.</span></span> <span data-ttu-id="840a0-110"><xref:System.Web.Compilation.BuildProvider> クラスの <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティは、作成するファイルのパスを示します。</span><span class="sxs-lookup"><span data-stu-id="840a0-110">The <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property of the <xref:System.Web.Compilation.BuildProvider> class indicates the path of the file to be built.</span></span> <span data-ttu-id="840a0-111">アプリケーション内の各ファイルのファイル拡張子は、対応するビルドプロバイダーにマップされます。</span><span class="sxs-lookup"><span data-stu-id="840a0-111">The file extension of each file within an application is mapped to a corresponding build provider.</span></span> <span data-ttu-id="840a0-112">ASP.NET ビルド環境は、ファイル拡張子に基づいて各ファイルの <xref:System.Web.Compilation.BuildProvider> インスタンスを初期化し、<xref:System.Web.Compilation.BuildProvider> メソッドを使用してファイルのソースコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="840a0-112">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> instance for each file based on the file extension, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source code for the file.</span></span> <span data-ttu-id="840a0-113">ASP.NET ビルド環境は、1つ以上のファイルからアセンブリを構築するときに、優先コンパイラ言語とファイルのコンテキストに基づいて <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトを <xref:System.Web.Compilation.BuildProvider> メソッドに渡します。これにより、<xref:System.Web.Compilation.BuildProvider> インスタンスは、ファイルのソースコードをアセンブリ全体に反映できます。</span><span class="sxs-lookup"><span data-stu-id="840a0-113">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object based on the preferred compiler language and the context of the file to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that the <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="840a0-114">ASP.NET アプリケーション内のファイルの種類に対するカスタムビルドアクションを定義するには、<xref:System.Web.Compilation.BuildProvider>からクラスを派生させ、ファイルの種類を構築するための派生クラス内のメンバーを実装し、アプリケーション構成ファイル内で対応するファイル拡張子のビルドプロバイダーを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="840a0-114">To define custom build actions for a file type within an ASP.NET application, you must derive a class from <xref:System.Web.Compilation.BuildProvider>, implement members within the derived class for building the file type, and configure the build provider for the corresponding file extension within the application configuration file.</span></span>  
  
 <span data-ttu-id="840a0-115">では、サポートされるファイルのファイル拡張子と、ビルドプロバイダーがコードファイル、Web ファイル、リソースファイル、またはすべてのファイルをサポートするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="840a0-115">The  specifies the file extension for supported files, and whether the build provider supports code files, Web files, resource files or all files.</span></span> <span data-ttu-id="840a0-116">`type` 属性を使用して、ビルドプロバイダーの実装の完全修飾型名を指定します。</span><span class="sxs-lookup"><span data-stu-id="840a0-116">Use the `type` attribute to specify the fully qualified type name of the build provider implementation.</span></span> <span data-ttu-id="840a0-117"><xref:System.Web.Compilation.BuildProviderAppliesToAttribute> クラスを使用して、ビルドプロバイダーを、App_Code ディレクトリ内のファイル、Web コンテンツディレクトリ内のファイル、グローバルまたはローカルのリソース、またはすべてのファイルに適用するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="840a0-117">Use the <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> class to specify whether the build provider applies to files in the App_Code directory, to files in a Web content directory, to global or local resources, or to all files.</span></span> <span data-ttu-id="840a0-118">`extension` 属性を使用して、<xref:System.Web.Compilation.BuildProvider> クラスがサポートするファイルを識別するために使用するファイル拡張子を指定します。</span><span class="sxs-lookup"><span data-stu-id="840a0-118">Use the `extension` attribute to specify the file extension used to identify files that the <xref:System.Web.Compilation.BuildProvider> class supports.</span></span> <span data-ttu-id="840a0-119"><xref:System.Web.Configuration.BuildProviderCollection> クラスを使用して、構成ファイル内のビルドプロバイダーを確認します。</span><span class="sxs-lookup"><span data-stu-id="840a0-119">Use the <xref:System.Web.Configuration.BuildProviderCollection> class to examine build providers in a configuration file.</span></span> <span data-ttu-id="840a0-120">ビルドプロバイダーの構成の詳細については、「[コンパイルのための Buildproviders 要素 (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="840a0-120">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 <span data-ttu-id="840a0-121">カスタムファイルの種類のソースコードを生成するビルドプロバイダーを実装するには、<xref:System.Web.Compilation.BuildProvider>からクラスを派生させ、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドをオーバーライドして、サポートされているファイルの種類のソースコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="840a0-121">To implement a build provider that generates source code for a custom file type, derive a class from <xref:System.Web.Compilation.BuildProvider>, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span> <span data-ttu-id="840a0-122">生成されたソースは、CodeDOM グラフの形式で <xref:System.Web.Compilation.AssemblyBuilder> オブジェクト、または物理ソースコードファイルを表すコンテンツとして追加されます。</span><span class="sxs-lookup"><span data-stu-id="840a0-122">The generated source is added to the <xref:System.Web.Compilation.AssemblyBuilder> object in the form of a CodeDOM graph, or as content that represents a physical source code file.</span></span> <span data-ttu-id="840a0-123">ビルドプロバイダーで特定のプログラミング言語が必要な場合は、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティをオーバーライドして、サポートされているプログラミング言語の <xref:System.Web.Compilation.CompilerType> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-123">If the build provider requires a specific programming language, override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span> <span data-ttu-id="840a0-124">ビルドプロバイダーが特定のプログラミング言語を必要としない場合は、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティをオーバーライドしないでください。基本クラスの実装を使用します。これは、ビルドプロバイダーが Visual Basic やなどの任意の .NET Framework 言語を使用できることを示します C# 。</span><span class="sxs-lookup"><span data-stu-id="840a0-124">If the build provider does not require a specific programming language, do not override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property; use the base class implementation, which indicates that the build provider can use any .NET Framework language, such as Visual Basic or C#.</span></span>  
  
 <span data-ttu-id="840a0-125">Web コンテンツのソースコードを生成するビルドプロバイダーを実装するには、<xref:System.Web.Compilation.BuildProvider> からクラスを派生させ、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> メソッドをオーバーライドして、<xref:System.Web.Compilation.BuildProvider>によって生成されたクラスの <xref:System.Type> を返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-125">To implement a build provider that generates source code for Web content, derive a class from <xref:System.Web.Compilation.BuildProvider> and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the <xref:System.Type> for the class generated by <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="840a0-126"><xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドをオーバーライドして、サポートされているファイルによって提供される型のソースコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="840a0-126">Override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the type provided by the supported file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="840a0-127">ASP.NET Web サイトでは、カスタマイズされた <xref:System.Web.Compilation.BuildProvider> クラスを web.config ファイルに追加することはできますが、ASP.NET Web アプリケーションプロジェクトでは機能しません。</span><span class="sxs-lookup"><span data-stu-id="840a0-127">Adding a customized <xref:System.Web.Compilation.BuildProvider> class to the Web.config file works in an ASP.NET Web site but does not work in an ASP.NET Web application project.</span></span> <span data-ttu-id="840a0-128">Web アプリケーションプロジェクトでは、<xref:System.Web.Compilation.BuildProvider> クラスによって生成されるコードをアプリケーションに含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="840a0-128">In a Web application project, the code that is generated by the <xref:System.Web.Compilation.BuildProvider> class cannot be included in the application.</span></span> <span data-ttu-id="840a0-129">詳細については、「 [ASP.NET Web アプリケーションプロジェクトのプリコンパイルの概要](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="840a0-129">For more information, see [ASP.NET Web Application Project Precompilation Overview](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="840a0-130">次のコード例は、抽象 <xref:System.Web.Compilation.BuildProvider> 基本クラスから継承する単純なビルドプロバイダーの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="840a0-130">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="840a0-131">ビルドプロバイダーは、基本クラスの <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メンバーをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="840a0-131">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span> <span data-ttu-id="840a0-132">この例には、`SampleClassGenerator` クラスの実装は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="840a0-132">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="840a0-133">詳細については、「<xref:System.CodeDom.CodeCompileUnit> クラスの概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="840a0-133">For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="840a0-134"><see cref="T:System.Web.Compilation.BuildProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="840a0-134">Initializes a new instance of the <see cref="T:System.Web.Compilation.BuildProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-135"><xref:System.Web.Compilation.BuildProvider> クラスは abstract であるため、コンストラクターを使用して <xref:System.Web.Compilation.BuildProvider> のインスタンスを直接作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="840a0-135">Because the <xref:System.Web.Compilation.BuildProvider> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.BuildProvider> directly using the constructor.</span></span>  
  
 <span data-ttu-id="840a0-136"><xref:System.Web.Compilation.BuildProvider> クラスから派生する場合は、コンストラクターをオーバーライドして、ビルドプロバイダーの実装のカスタム初期化アクションを実装します。</span><span class="sxs-lookup"><span data-stu-id="840a0-136">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, override the constructor to implement custom initialization actions for your build provider implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="840a0-137">ビルド プロバイダーがカスタム ファイルの種類のソース コードを生成するために使用するコンパイラ タイプを表します。</span><span class="sxs-lookup"><span data-stu-id="840a0-137">Represents the compiler type used by a build provider to generate source code for a custom file type.</span></span></summary>
        <value><span data-ttu-id="840a0-138">読み取り専用の <see cref="T:System.Web.Compilation.CompilerType" />。仮想パスのソース コードをビルドするためのコード ジェネレーター、コード コンパイラ、およびコンパイラ設定値を表します。</span><span class="sxs-lookup"><span data-stu-id="840a0-138">A read-only <see cref="T:System.Web.Compilation.CompilerType" /> representing the code generator, code compiler, and compiler settings used to build source code for the virtual path.</span></span> <span data-ttu-id="840a0-139">基本クラスでは、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="840a0-139">The base class returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-140"><xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティを使用して、<xref:System.Web.Compilation.BuildProvider>の実装のソースコードをコンパイルするための設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="840a0-140">Use the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to provide the settings for compiling source code for an implementation of <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="840a0-141"><xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティは、ビルドプロバイダーがソースコードの生成とコンパイルに特定のコード言語を必要としない場合に `null` ます。</span><span class="sxs-lookup"><span data-stu-id="840a0-141">The <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property is `null` if the build provider does not require a specific code language for generating and compiling source code.</span></span>  
  
 <span data-ttu-id="840a0-142">ビルドプロバイダーの実装内の <xref:System.Web.Compilation.CompilerType> オブジェクトの値を設定するには、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> または <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="840a0-142">To set the value for a <xref:System.Web.Compilation.CompilerType> object within a build provider implementation, use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> or <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method.</span></span>  
  
 <span data-ttu-id="840a0-143"><xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> プロパティは、ビルドプロバイダーのソースコードを生成およびコンパイルするために使用される <xref:System.CodeDom.Compiler.CodeDomProvider> の実装を指定します。</span><span class="sxs-lookup"><span data-stu-id="840a0-143">The <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> property specifies the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that is used to generate and compile source code for a build provider.</span></span> <span data-ttu-id="840a0-144"><xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> プロパティは、ソースコードをアセンブリにコンパイルするために使用される設定を定義します。</span><span class="sxs-lookup"><span data-stu-id="840a0-144">The <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> property defines the settings that are used to compile the source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="840a0-145">次のコード例は、抽象 <xref:System.Web.Compilation.BuildProvider> 基本クラスから継承する単純なビルドプロバイダーの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="840a0-145">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="840a0-146">ビルドプロバイダーは、基本クラスの <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メンバーをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="840a0-146">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCode (assemblyBuilder As AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder"><span data-ttu-id="840a0-147">ビルド プロバイダーで生成されたソース コードを参照するアセンブリ ビルダー。</span><span class="sxs-lookup"><span data-stu-id="840a0-147">The assembly builder that references the source code generated by the build provider.</span></span></param>
        <summary><span data-ttu-id="840a0-148">ビルド プロバイダーの仮想パスのソース コードを生成し、そのソース コードを指定のアセンブリ ビルダーに追加します。</span><span class="sxs-lookup"><span data-stu-id="840a0-148">Generates source code for the virtual path of the build provider, and adds the source code to a specified assembly builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-149">カスタムファイルの種類のソースコードを生成するビルドプロバイダーを実装するには、<xref:System.Web.Compilation.BuildProvider> クラスからクラスを派生させ、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドをオーバーライドして、サポートされているファイルの種類のソースコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="840a0-149">To implement a build provider that generates source code for a custom file type, derive a class from the <xref:System.Web.Compilation.BuildProvider> class, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span>  
  
 <span data-ttu-id="840a0-150">通常、ビルドプロバイダーの <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 実装は、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティを読み取り、内容を解析し、生成されたソースコードを指定した <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="840a0-150">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="840a0-151"><xref:System.IO.TextWriter> オブジェクトまたは CodeDOM グラフの形式で、アセンブリにソースコードを投稿できます。</span><span class="sxs-lookup"><span data-stu-id="840a0-151">You can contribute source code to the assembly in the form of a <xref:System.IO.TextWriter> object or a CodeDOM graph.</span></span> <span data-ttu-id="840a0-152"><xref:System.IO.TextWriter> オブジェクトを使用してソースコードをアセンブリに追加するには、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="840a0-152">To add source code to the assembly through a <xref:System.IO.TextWriter> object, use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="840a0-153">CodeDOM グラフのソースコードをアセンブリに追加するには、<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="840a0-153">To add source code in a CodeDOM graph to the assembly, use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span>  
  
 <span data-ttu-id="840a0-154">ビルドプロバイダーが特定のプログラミング言語でソースコードを生成する場合は、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティをオーバーライドして、サポートされているプログラミング言語の <xref:System.Web.Compilation.CompilerType> オブジェクトを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="840a0-154">If the build provider generates source code in a specific programming language, you must override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="840a0-155">次のコード例は、抽象 <xref:System.Web.Compilation.BuildProvider> 基本クラスから継承する単純なビルドプロバイダーの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="840a0-155">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="840a0-156">ビルドプロバイダーは、基本クラスの <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メンバーをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="840a0-156">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="840a0-157">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="840a0-157">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit : IDictionary -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable"><span data-ttu-id="840a0-158">このメソッドから制御が戻った時点で、ソース コードのすべての関連付けられた行番号と行プラグマを格納したディクショナリが含まれます。</span><span class="sxs-lookup"><span data-stu-id="840a0-158">When this method returns, contains a dictionary that contains all associated line numbers and line pragmas of the source code.</span></span> <span data-ttu-id="840a0-159">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="840a0-159">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="840a0-160">生成された CodeDOM グラフのコンテナーを表します。</span><span class="sxs-lookup"><span data-stu-id="840a0-160">Represents the container for the generated CodeDOM graph.</span></span></summary>
        <returns><span data-ttu-id="840a0-161"><see cref="T:System.Web.Compilation.BuildProvider" /> インスタンスによって生成される CodeDOM グラフのコンテナー。</span><span class="sxs-lookup"><span data-stu-id="840a0-161">The container for the CodeDOM graph that is generated by the <see cref="T:System.Web.Compilation.BuildProvider" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-162">このメソッドは、Visual Studio で構文の強調表示とデザイナーのサポートを行うために <xref:System.Web.Compilation.ClientBuildManager> クラスを介して使用できます。</span><span class="sxs-lookup"><span data-stu-id="840a0-162">This method can be used through the <xref:System.Web.Compilation.ClientBuildManager> class for syntax highlighting and designer support in Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="840a0-163">ビルド プロバイダーの仮想パスのコンパイル結果。</span><span class="sxs-lookup"><span data-stu-id="840a0-163">The compilation results for the build provider's virtual path.</span></span></param>
        <summary><span data-ttu-id="840a0-164">コンパイルしたアセンブリに保存される文字列を生成します。</span><span class="sxs-lookup"><span data-stu-id="840a0-164">Generates a string to be persisted in the compiled assembly.</span></span></summary>
        <returns><span data-ttu-id="840a0-165">ビルド環境内に保持される文字列。または、<see cref="T:System.Web.Compilation.BuildProvider" /> インスタンスが <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" /> を実装しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="840a0-165">A string to be persisted in the build environment, or <see langword="null" /> if the <see cref="T:System.Web.Compilation.BuildProvider" /> instance does not implement <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-166"><xref:System.Web.Compilation.BuildManager> オブジェクトの <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> メソッドは、入力仮想パスのビルドプロバイダーのインスタンスを作成し、<xref:System.Web.Compilation.BuildProvider> オブジェクトの <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="840a0-166">The <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> method of a <xref:System.Web.Compilation.BuildManager> object creates an instance of a build provider for an input virtual path, and calls the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method on the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="840a0-167">基本 <xref:System.Web.Compilation.BuildProvider> クラスは <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> メソッドの `null` を返します。これは <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> が実装されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="840a0-167">The base <xref:System.Web.Compilation.BuildProvider> class returns `null` for the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method, indicating that <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> is not implemented.</span></span>  
  
 <span data-ttu-id="840a0-168">特定のビルドプロバイダーの実装では、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> メソッドの代わりに <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> を実装できます。</span><span class="sxs-lookup"><span data-stu-id="840a0-168">Certain build provider implementations can implement <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> in place of the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="840a0-169"><xref:System.Web.Compilation.BuildProvider> オブジェクトは、通常、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> を使用して、仮想パスの <xref:System.Type> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-169">A <xref:System.Web.Compilation.BuildProvider> object typically uses <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> to return a <xref:System.Type> object for a virtual path.</span></span> <span data-ttu-id="840a0-170">ただし、<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> メソッドを使用して、<xref:System.Web.Compilation.BuildProvider> オブジェクトが仮想パスから複数の型を生成できることを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="840a0-170">However, the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method can be used to indicate that a <xref:System.Web.Compilation.BuildProvider> object can generate multiple types from a virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="840a0-171">アプリケーション内の既定言語に関するコンパイラの設定値を返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-171">Returns the compiler settings for the default language in the application.</span></span></summary>
        <returns><span data-ttu-id="840a0-172">アプリケーション内の既定言語に関するコンパイラの設定値を表す <see cref="T:System.Web.Compilation.CompilerType" />。</span><span class="sxs-lookup"><span data-stu-id="840a0-172">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the default language in the application.</span></span> <span data-ttu-id="840a0-173">基本クラスは、アプリケーションの構成ファイルに基づいてコンパイラの既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-173">The base class returns the default compiler based on the application configuration file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-174"><xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> メソッドを使用して、ビルドプロバイダーの既定のコンパイラ型を確認します。</span><span class="sxs-lookup"><span data-stu-id="840a0-174">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span> <span data-ttu-id="840a0-175"><xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> メソッドを使用して、特定の言語名のビルドプロバイダーで構成されているコンパイラの種類を確認します。</span><span class="sxs-lookup"><span data-stu-id="840a0-175">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in a build provider for a specific language name.</span></span>  
  
 <span data-ttu-id="840a0-176">基本 <xref:System.Web.Compilation.BuildProvider> クラスは、アプリケーション構成ファイルのセクションの `defaultLanguage` 属性値を使用して、既定のコンパイラ型を決定します。</span><span class="sxs-lookup"><span data-stu-id="840a0-176">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the `defaultLanguage` attribute value in the  section of the application configuration file.</span></span> <span data-ttu-id="840a0-177">コンパイルセクションに既定の言語設定がない場合、既定のコンパイラの種類は <xref:Microsoft.VisualBasic.VBCodeProvider> 言語プロバイダーを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="840a0-177">If there is no default language setting in the compilation section, the default compiler type is set using the <xref:Microsoft.VisualBasic.VBCodeProvider> language provider.</span></span>  
  
 <span data-ttu-id="840a0-178"><xref:System.Web.Compilation.BuildProvider> クラスから派生する場合は、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> を使用して実装内の <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティを設定できます。</span><span class="sxs-lookup"><span data-stu-id="840a0-178">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property within your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language"><span data-ttu-id="840a0-179">コード言語の名前。</span><span class="sxs-lookup"><span data-stu-id="840a0-179">A code language name.</span></span></param>
        <summary><span data-ttu-id="840a0-180">指定された言語に基づいて、ビルド プロバイダーのコンパイラ設定値を返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-180">Returns the compiler settings for the build provider based on the specified language.</span></span></summary>
        <returns><span data-ttu-id="840a0-181">指定された言語に基づくビルド プロバイダーのコンパイラ設定値を表す <see cref="T:System.Web.Compilation.CompilerType" />。</span><span class="sxs-lookup"><span data-stu-id="840a0-181">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the build provider based on the specified language.</span></span> <span data-ttu-id="840a0-182">基本クラスは、アプリケーションの構成ファイルに基づいて、その言語の既定コンパイラ設定値を返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-182">The base class returns the default compiler settings for the language based on the application configuration file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-183"><xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> メソッドを使用して、ビルドプロバイダーで特定の言語名に対して構成されているコンパイラの種類を確認します。</span><span class="sxs-lookup"><span data-stu-id="840a0-183">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in the build provider for a specific language name.</span></span> <span data-ttu-id="840a0-184"><xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> メソッドを使用して、ビルドプロバイダーの既定のコンパイラ型を確認します。</span><span class="sxs-lookup"><span data-stu-id="840a0-184">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span>  
  
 <span data-ttu-id="840a0-185">基本 <xref:System.Web.Compilation.BuildProvider> クラスは、構成ファイルの <xref:System.Web.Configuration.CompilationSection> オブジェクトの <xref:System.Web.Configuration.CompilationSection.Compilers%2A> プロパティの <xref:System.Web.Configuration.Compiler> 要素を使用して、既定のコンパイラ型を決定します。</span><span class="sxs-lookup"><span data-stu-id="840a0-185">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the <xref:System.Web.Configuration.Compiler> elements in the <xref:System.Web.Configuration.CompilationSection.Compilers%2A> property of the <xref:System.Web.Configuration.CompilationSection> object for the configuration file.</span></span> <span data-ttu-id="840a0-186">これは、の要素と構成ファイルのセクションの要素を調べることと同じです。</span><span class="sxs-lookup"><span data-stu-id="840a0-186">This is equivalent to examining the  elements in the  and the  elements in the  sections of the configuration file.</span></span> <span data-ttu-id="840a0-187">たとえば、`language` 値 VB の場合、基底クラスメソッドは <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>のインスタンスに対して構成された設定に対応する <xref:System.Web.Compilation.CompilerType> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-187">For example, for the `language` value VB, the base class method returns a <xref:System.Web.Compilation.CompilerType> object that corresponds to the configured settings for an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="840a0-188"><xref:System.Web.Compilation.BuildProvider> クラスから派生する場合は、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> を使用して、実装でサポートされている言語の <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> プロパティ値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="840a0-188">When you derive from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property value for the language supported by your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="840a0-189"><paramref name="language" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="840a0-189"><paramref name="language" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="840a0-190"><paramref name="language" /> が、そのビルド プロバイダーに対して構成されているコンパイラと一致しません。</span><span class="sxs-lookup"><span data-stu-id="840a0-190"><paramref name="language" /> does not match a configured compiler for the build provider.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="840a0-191">ビルド プロバイダーの仮想パスのコンパイル結果。</span><span class="sxs-lookup"><span data-stu-id="840a0-191">The compilation results for the build provider's virtual path.</span></span></param>
        <summary><span data-ttu-id="840a0-192">仮想パスからビルド プロバイダーによって生成される型を返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-192">Returns a type generated by the build provider from the virtual path.</span></span></summary>
        <returns><span data-ttu-id="840a0-193">仮想パスのビルド プロバイダーによって生成される型。</span><span class="sxs-lookup"><span data-stu-id="840a0-193">The type that is generated by the build provider for the virtual path.</span></span> <span data-ttu-id="840a0-194">基本クラスでは、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="840a0-194">The base class returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-195">.Aspx ファイルなどの Web コンテンツのソースコードを生成するビルドプロバイダーを実装するには、<xref:System.Web.Compilation.BuildProvider> クラスからクラスを派生させ、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> メソッドをオーバーライドして、ビルドプロバイダーによって生成された型を返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-195">To implement a build provider that generates source code for Web content such as .aspx files, derive a class from the <xref:System.Web.Compilation.BuildProvider> class and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the type generated by the build provider.</span></span>  
  
 <span data-ttu-id="840a0-196">ASP.NET ビルドシステムは、各ビルドプロバイダーのファイルをコンパイルし、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> メソッドに渡される <xref:System.CodeDom.Compiler.CompilerResults> オブジェクトを生成します。</span><span class="sxs-lookup"><span data-stu-id="840a0-196">The ASP.NET build system compiles files for each build provider, and generates a <xref:System.CodeDom.Compiler.CompilerResults> object, which is passed to the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="840a0-197">通常、ビルドプロバイダーの <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 実装では、入力 `results` オブジェクトの <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> プロパティの <xref:System.Reflection.Assembly.GetType%2A> メソッドを使用して、指定された型を返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-197">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementation uses the <xref:System.Reflection.Assembly.GetType%2A> method on the <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> property of the input `results` object to return the provided type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="840a0-198">ビルド プロバイダーの仮想パスのコンパイル結果。</span><span class="sxs-lookup"><span data-stu-id="840a0-198">The compilation results for the build provider's virtual path.</span></span></param>
        <summary><span data-ttu-id="840a0-199">仮想パスがビルドされたときに必要なアクションを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="840a0-199">Returns a value indicating actions required when a virtual path is built.</span></span></summary>
        <returns><span data-ttu-id="840a0-200">ASP.NET ビルド環境で仮想パスがビルドされた後に必要なアクションを示す <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> の値。</span><span class="sxs-lookup"><span data-stu-id="840a0-200">A <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> value indicating actions required after the virtual path is built within the ASP.NET build environment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-201"><xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> メソッドは、<xref:System.Web.Compilation.BuildProvider> クラスのインスタンスを使用してファイルをビルドし、コンパイルされたアセンブリを読み込むときに、ASP.NET ビルド環境によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="840a0-201">The <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method is used by the ASP.NET build environment when using instances of the <xref:System.Web.Compilation.BuildProvider> class to build files and load the compiled assemblies.</span></span>  
  
 <span data-ttu-id="840a0-202">基本 <xref:System.Web.Compilation.BuildProvider> クラスのメソッドは、<xref:System.Web.Compilation.BuildProviderResultFlags.Default> フィールド値を返します。これは、仮想パスが構築されるときに特別な操作が必要ないことを示します。</span><span class="sxs-lookup"><span data-stu-id="840a0-202">The base <xref:System.Web.Compilation.BuildProvider> class method returns the <xref:System.Web.Compilation.BuildProviderResultFlags.Default> field value, indicating that no special action is required when the virtual path is built.</span></span>  
  
 <span data-ttu-id="840a0-203"><xref:System.Web.Compilation.BuildProvider> クラスから派生する場合、<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> メソッドを実装して、カスタムファイルの種類または仮想パスに対して異なる <xref:System.Web.Compilation.BuildProviderResultFlags> 値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="840a0-203">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can implement the <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method to return a different <xref:System.Web.Compilation.BuildProviderResultFlags> value for your custom file type or virtual path.</span></span> <span data-ttu-id="840a0-204">たとえば、仮想パスの再構築で、含まれている <xref:System.AppDomain> オブジェクトを再読み込みする必要がある場合、<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> メソッドから <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> 列挙値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="840a0-204">For example, if a rebuild of your virtual path requires the containing <xref:System.AppDomain> object to be reloaded, you can return the <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> enumeration value from your <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="840a0-205">仮想パスから読み込むためのテキスト リーダーを開きます。</span><span class="sxs-lookup"><span data-stu-id="840a0-205">Opens a text reader for reading from a virtual path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="840a0-206">現在のビルド プロバイダー オブジェクトの仮想パスから読み込むためのテキスト リーダーを開きます。</span><span class="sxs-lookup"><span data-stu-id="840a0-206">Opens a text reader for reading from the virtual path of the current build provider object.</span></span></summary>
        <returns><span data-ttu-id="840a0-207"><see cref="T:System.IO.TextReader" /> の内容を読み込むために使用できる、開かれた <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />。</span><span class="sxs-lookup"><span data-stu-id="840a0-207">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-208">返された <xref:System.IO.TextReader> オブジェクトの <xref:System.IO.TextReader.Read%2A> メソッドを使用して、<xref:System.Web.Compilation.BuildProvider> オブジェクトの <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティの内容を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="840a0-208">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property for a <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="840a0-209"><xref:System.Web.Compilation.BuildProvider.OpenReader%2A> メソッドを呼び出した後、<xref:System.IO.TextReader.Close%2A> メソッドを使用して、<xref:System.IO.TextReader> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="840a0-209">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="840a0-210">読み込む仮想パス。</span><span class="sxs-lookup"><span data-stu-id="840a0-210">The virtual path to read.</span></span></param>
        <summary><span data-ttu-id="840a0-211">指定された仮想パスから読み込むためのテキスト リーダーを開きます。</span><span class="sxs-lookup"><span data-stu-id="840a0-211">Opens a text reader for reading from a specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="840a0-212">指定された仮想パスの内容を読み込むために使用できる、開かれた <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="840a0-212">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the specified virtual path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-213">返された <xref:System.IO.TextReader> オブジェクトの <xref:System.IO.TextReader.Read%2A> メソッドを使用して、仮想パスの内容を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="840a0-213">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="840a0-214"><xref:System.Web.Compilation.BuildProvider.OpenReader%2A> メソッドを呼び出した後、<xref:System.IO.TextReader.Close%2A> メソッドを使用して、<xref:System.IO.TextReader> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="840a0-214">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="840a0-215">仮想パスから読み込むためのストリームを開きます。</span><span class="sxs-lookup"><span data-stu-id="840a0-215">Opens a stream for reading from a virtual path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="840a0-216">現在のビルド プロバイダー オブジェクトの仮想パスを読み込むためのストリームを開きます。</span><span class="sxs-lookup"><span data-stu-id="840a0-216">Opens a stream for reading the virtual path of the current build provider object.</span></span></summary>
        <returns><span data-ttu-id="840a0-217"><see cref="T:System.IO.Stream" /> の内容を読み込むために使用できる、開かれた <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />。</span><span class="sxs-lookup"><span data-stu-id="840a0-217">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-218">返された <xref:System.IO.Stream> オブジェクトの <xref:System.IO.Stream.Read%2A> メソッドを使用して、<xref:System.Web.Compilation.BuildProvider> オブジェクトの仮想パスの内容を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="840a0-218">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path for the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="840a0-219"><xref:System.Web.Compilation.BuildProvider.OpenStream%2A> メソッドを呼び出した後、<xref:System.IO.Stream.Close%2A> メソッドを使用して、<xref:System.IO.Stream> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="840a0-219">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="840a0-220">読み込む仮想パス。</span><span class="sxs-lookup"><span data-stu-id="840a0-220">The virtual path to read.</span></span></param>
        <summary><span data-ttu-id="840a0-221">指定された仮想パスから読み込むためのストリームを開きます。</span><span class="sxs-lookup"><span data-stu-id="840a0-221">Opens a stream for reading from a specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="840a0-222">指定された仮想パスの内容を読み込むために使用できる、開かれた <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="840a0-222">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the specified virtual path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-223">返された <xref:System.IO.Stream> オブジェクトの <xref:System.IO.Stream.Read%2A> メソッドを使用して、仮想パスの内容を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="840a0-223">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="840a0-224"><xref:System.Web.Compilation.BuildProvider.OpenStream%2A> メソッドを呼び出した後、<xref:System.IO.Stream.Close%2A> メソッドを使用して、<xref:System.IO.Stream> オブジェクトを閉じ、関連付けられているシステムリソースを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="840a0-224">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="840a0-225">コンパイラの結果。</span><span class="sxs-lookup"><span data-stu-id="840a0-225">Compiler results.</span></span></param>
        <summary><span data-ttu-id="840a0-226">派生クラスでオーバーライドされると、コンパイラのエラー メッセージを見直すことができ、より多くの情報を提供するようにメッセージを変更できます。</span><span class="sxs-lookup"><span data-stu-id="840a0-226">When overridden in a derived class, enables you to review compiler error messages so that you can modify them to provide more information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-227">通常は、このメソッドをオーバーライドして、エラーテキストをユーザーにとってわかりやすくするために、コンパイラエラーを表示する前に変更できるようにします。</span><span class="sxs-lookup"><span data-stu-id="840a0-227">You typically override this method so that you can modify compiler errors before they are displayed in order to make the error text more helpful to the user.</span></span> <span data-ttu-id="840a0-228">これは、特定のエラーのコンテキストがわかっていて、その修正方法についての情報をユーザーに提供できる場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="840a0-228">This is useful in scenarios where you know the context of certain errors and can provide information to the user about how to fix them.</span></span> <span data-ttu-id="840a0-229">元のコンパイラエラーメッセージは、通常、特定の言語構成要素に固有であり、実際の原因や解決策をユーザーに明らかにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="840a0-229">The original compiler error message is usually specific to a particular language construct and might not make the real cause or solution obvious to the user.</span></span>  
  
 <span data-ttu-id="840a0-230">このエラーにアクセスするには、メソッドに渡された <xref:System.CodeDom.Compiler.CompilerResults> オブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="840a0-230">You can access the errors by using the <xref:System.CodeDom.Compiler.CompilerResults> object that is passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="840a0-231">ビルド プロバイダーが生成するソース コードと共にコンパイルするアセンブリを表します。</span><span class="sxs-lookup"><span data-stu-id="840a0-231">Represents the assemblies to compile with the source generated by the build provider.</span></span></summary>
        <value><span data-ttu-id="840a0-232">ビルド プロバイダーが生成するソース コードによって参照されるアセンブリの読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="840a0-232">A read-only collection of assemblies that can be referenced by the source code generated by the build provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-233">ASP.NET ビルド環境は、ビルドプロバイダーによって参照できるアセンブリのコレクションを初期化します。</span><span class="sxs-lookup"><span data-stu-id="840a0-233">The ASP.NET build environment initializes the collection of assemblies that are available for reference by the build provider.</span></span> <span data-ttu-id="840a0-234">ビルドプロバイダーによって生成されたソースコードは、参照されたアセンブリでパブリック型を使用できます。</span><span class="sxs-lookup"><span data-stu-id="840a0-234">The source code generated by a build provider can use public types in the referenced assemblies.</span></span> <span data-ttu-id="840a0-235">参照アセンブリコレクションは、ASP.NET アプリケーションに組み込まれている他のアセンブリと、構成ファイルの要素に一覧表示されているアセンブリで構成されます。</span><span class="sxs-lookup"><span data-stu-id="840a0-235">The referenced assembly collection consists of other assemblies built in the ASP.NET application, and assemblies listed in the  element in the configuration file.</span></span>  
  
 <span data-ttu-id="840a0-236">ビルドプロバイダーによって、追加のアセンブリを参照するソースコードが生成される場合、ビルドプロバイダーは <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> メソッドを使用して追加のアセンブリを追加します。</span><span class="sxs-lookup"><span data-stu-id="840a0-236">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="840a0-237">ASP.NET ビルド環境は、ビルドプロバイダーによって追加された参照アセンブリと参照可能なアセンブリの既定のコレクションの両方を使用して、アセンブリのコンパイル中に外部型を解決します。</span><span class="sxs-lookup"><span data-stu-id="840a0-237">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="840a0-238"><xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> コレクションには、<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> メソッドを使用して他のビルドプロバイダーによって参照されるように追加されたアセンブリは含まれません。</span><span class="sxs-lookup"><span data-stu-id="840a0-238">The <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> collection does not include assemblies that are added for reference by other build providers through the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="providerType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="extension"><span data-ttu-id="840a0-239">ビルド プロバイダーの対象のファイル名拡張子。</span><span class="sxs-lookup"><span data-stu-id="840a0-239">The file-name extension that the build provider is for.</span></span></param>
        <param name="providerType"><span data-ttu-id="840a0-240">ビルド プロバイダー クラス。</span><span class="sxs-lookup"><span data-stu-id="840a0-240">The build provider class.</span></span></param>
        <summary><span data-ttu-id="840a0-241">ビルド プロバイダーを登録します。</span><span class="sxs-lookup"><span data-stu-id="840a0-241">Registers a build provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-242">このメソッドは、web.config ファイルで定義するのではなく、ビルドプロバイダーを登録するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="840a0-242">You can use this method to register build providers instead of defining them in the Web.config file.</span></span> <span data-ttu-id="840a0-243">ビルドプロバイダーの詳細については、「[コンパイルのための <xref:System.Web.Compilation.BuildProvider> クラスと Buildproviders 要素 (ASP.NET Settings スキーマ)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="840a0-243">For more information about build providers, see the <xref:System.Web.Compilation.BuildProvider> class and [buildProviders Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="840a0-244">このビルド プロバイダーの実装で構築されるファイルを表します。</span><span class="sxs-lookup"><span data-stu-id="840a0-244">Represents the file to be built by this build provider implementation.</span></span></summary>
        <value><span data-ttu-id="840a0-245">このビルド プロバイダーがコンパイルするファイルの仮想パスを示す、読み取り専用の文字列。</span><span class="sxs-lookup"><span data-stu-id="840a0-245">A read-only string that specifies the virtual path of a file to be compiled by this build provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-246"><xref:System.Web.Compilation.BuildProvider> オブジェクトの仮想パスは、ビルドプロバイダーによってコンパイルされるファイルへのパスです。</span><span class="sxs-lookup"><span data-stu-id="840a0-246">The virtual path of a <xref:System.Web.Compilation.BuildProvider> object is the path to the file that is being compiled by the build provider.</span></span> <span data-ttu-id="840a0-247">たとえば、カスタムの <xref:System.Web.Compilation.BuildProvider> クラスを構成して、Web サイト内のすべてのファイルを作成し、カスタム拡張機能を使用した場合、web サイトの名前が WebSite1 で、Web サイトに Example. abc という名前のファイルが含まれている場合、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティには `/WebSite1/Example.abc`値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="840a0-247">For example, if you have configured a custom <xref:System.Web.Compilation.BuildProvider> class to build all files in the Web site with the custom extension of .abc, if your Web site is named WebSite1, and the Web site contains a file named Example.abc, the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property contains the value `/WebSite1/Example.abc`.</span></span>  
  
 <span data-ttu-id="840a0-248">アプリケーション内の各ファイルのファイル拡張子によって、ファイルの種類、およびファイルの種類に対応するビルドプロバイダーが決まります。</span><span class="sxs-lookup"><span data-stu-id="840a0-248">The file extension of each file within the application determines the file type, and the corresponding build provider for the file type.</span></span> <span data-ttu-id="840a0-249">ASP.NET ビルド環境は、ファイルの種類に基づいて各ファイルの <xref:System.Web.Compilation.BuildProvider> オブジェクトを初期化し、<xref:System.Web.Compilation.BuildProvider> メソッドを使用して各ファイルのソースを生成します。</span><span class="sxs-lookup"><span data-stu-id="840a0-249">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> object for each file based on the file type, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source for each file.</span></span>  
  
 <span data-ttu-id="840a0-250">ビルドプロバイダーの構成の詳細については、「[コンパイルのための Buildproviders 要素 (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="840a0-250">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="840a0-251">ビルド プロバイダーがコードを生成する前に構築する必要がある仮想パスのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="840a0-251">Represents a collection of virtual paths that must be built before the build provider generates code.</span></span></summary>
        <value><span data-ttu-id="840a0-252">ビルド プロバイダーのこのインスタンスが依存する仮想パスを表す文字列から成る、読み取り専用のコレクション。</span><span class="sxs-lookup"><span data-stu-id="840a0-252">A read-only collection of strings, representing the virtual paths that this instance of the build provider is dependent on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="840a0-253"><xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> プロパティは、<xref:System.Web.Compilation.BuildProvider> インスタンスがソースコードを生成する前にコンパイルする必要がある仮想パスのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="840a0-253">The <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> property is a collection of virtual paths that must be compiled before the <xref:System.Web.Compilation.BuildProvider> instance generates source code.</span></span> <span data-ttu-id="840a0-254"><xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> の仮想パスからのアセンブリは、<xref:System.Web.Compilation.BuildProvider> インスタンスのコンパイルへの参照として追加されます。</span><span class="sxs-lookup"><span data-stu-id="840a0-254">The assemblies from the virtual paths in <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> are added as references to the compilation for the <xref:System.Web.Compilation.BuildProvider> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>
