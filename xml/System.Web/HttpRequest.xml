<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44aad8811f39318c9ca616f9db2f8a9f3a467ad3" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77105563" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6fc0b-101">Web 要求中にクライアントから送信された HTTP 値を ASP.NET で読み取ることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-102"><xref:System.Web.HttpRequest> クラスのメソッドとプロパティは、<xref:System.Web.HttpApplication>、<xref:System.Web.HttpContext>、<xref:System.Web.UI.Page>、および <xref:System.Web.UI.UserControl> クラスの `Request` プロパティを通じて公開されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>

 <span data-ttu-id="6fc0b-103"><xref:System.Web.HttpRequest.QueryString%2A>、<xref:System.Web.HttpRequest.Form%2A>、<xref:System.Web.HttpRequest.Cookies%2A>、または <xref:System.Web.HttpRequest.ServerVariables%2A> コレクションからのデータにアクセスするには、`Request["key"]`プロパティの例に示すように、<xref:System.Web.HttpRequest.QueryString%2A> を記述します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>

> [!NOTE]
>  <span data-ttu-id="6fc0b-104"><xref:System.Web.HttpRequest> クラスメンバーの Unicode サポートには、IIS バージョン6.0 以降が必要です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>



## Examples
 <span data-ttu-id="6fc0b-105">次の例では、<xref:System.Web.UI.Page> クラスの <xref:System.Web.UI.Page.Request%2A> プロパティを使用して、現在の要求の <xref:System.Web.HttpRequest> インスタンスにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>

 <span data-ttu-id="6fc0b-106"><xref:System.Web.HttpRequest.QueryString%2A>、<xref:System.Web.HttpRequest.Form%2A>、<xref:System.Web.HttpRequest.Cookies%2A>、または <xref:System.Web.HttpRequest.ServerVariables%2A> コレクションからのデータにアクセスするために、簡略化された構文を使用できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="6fc0b-107">`Request["key"]`を作成できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-107">You can write `Request["key"]`.</span></span>

 <span data-ttu-id="6fc0b-108">最初の例は、ページの読み込み時にクエリ文字列値を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-108">The first example shows how to retrieve a query string value when loading a page.</span></span>

```csharp
public partial class AddToCart : Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        string rawId = Request["ProductID"];
        int productId;
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))
        {
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())
            {
                usersShoppingCart.AddToCart(productId);
            }
        }
        else
        {
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");
        }
        Response.Redirect("ShoppingCart.aspx");
    }
}
```

```vb
Public Class AddToCart
    Inherits Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
        Dim rawId = Request("ProductID")
        Dim productId As Integer
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then
            Using usersShoppingCart As New ShoppingCartActions()
                usersShoppingCart.AddToCart(productId)
            End Using

        Else
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")
        End If
        Response.Redirect("ShoppingCart.aspx")
    End Sub
End Class
```

 <span data-ttu-id="6fc0b-109">次の例では、要求が認証されているかどうかを確認し、生の URL を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>

```csharp
public partial class RestrictedPage : Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Request.IsAuthenticated)
        {
            var rawUrl = Request.RawUrl;
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));
        }
    }
}
```

```vb
Public Class RestrictedPage
    Inherits Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
        If Not Request.IsAuthenticated Then
            Dim rawUrl = Request.RawUrl
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))
        End If
    End Sub
End Class
```

 <span data-ttu-id="6fc0b-110">このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://go.microsoft.com/fwlink/?LinkID=191455)できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkID=191455).</span></span>

 <span data-ttu-id="6fc0b-111">この例では、<xref:System.IO.StreamWriter> クラスを使用して、いくつかの <xref:System.Web.HttpRequest> クラスのプロパティの値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="6fc0b-112">文字列型のプロパティの場合、値はファイルに書き込まれるときに HTML エンコードされます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="6fc0b-113">コレクションを表すプロパティはループ処理され、そこに含まれる各キーと値のペアがファイルに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="6fc0b-114">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="6fc0b-115">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="6fc0b-116">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-116">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequest : string * string * string -&gt; System.Web.HttpRequest" Usage="new System.Web.HttpRequest (filename, url, queryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="6fc0b-117">要求に関連付けられたファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-117">The name of the file associated with the request.</span></span></param>
        <param name="url"><span data-ttu-id="6fc0b-118">現在の要求の URL に関する情報。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-118">The information regarding the URL of the current request.</span></span></param>
        <param name="queryString"><span data-ttu-id="6fc0b-119">要求と共に送信されるクエリ文字列全体 (<c>'?'</c> の後の部分すべて)。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span></span></param>
        <summary><span data-ttu-id="6fc0b-120"><see cref="T:System.Web.HttpRequest" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-121"><xref:System.Web.HttpRequest> クラスの独自のインスタンスを作成する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="6fc0b-122"><xref:System.Web.HttpRequest> クラスのメソッドとプロパティは、<xref:System.Web.HttpApplication>、<xref:System.Web.HttpContext>、<xref:System.Web.UI.Page>、および <xref:System.Web.UI.UserControl> クラスの `Request` プロパティを通じて公開されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6fc0b-123">基になっている TCP 接続を強制的に終了します。未処理の I/O は失敗します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span></span> <span data-ttu-id="6fc0b-124">悪意のある HTTP クライアントによる攻撃に対してこのメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-124">You might use this method in response to an attack by a malicious HTTP client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-125">このメソッドはスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-125">This method is thread-safe.</span></span> <span data-ttu-id="6fc0b-126">どのスレッドも、いつでも呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-126">Any thread may call it at any time.</span></span>

 <span data-ttu-id="6fc0b-127">このメソッドは統合モードでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="6fc0b-128">クラシックモードで起動すると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="6fc0b-129">パイプラインモードを決定するには、<xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Web.HttpRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-130">クライアントにサポートされている MIME で使用できる型の文字列配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-130">Gets a string array of client-supported MIME accept types.</span></span></summary>
        <value><span data-ttu-id="6fc0b-131">クライアントにサポートされている MIME で使用できる型の文字列配列。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-131">A string array of client-supported MIME accept types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-132">次のコード例では、<xref:System.Web.HttpRequest.AcceptTypes%2A> プロパティによって返された複数の値をオブジェクト変数にキャプチャし、それぞれの値の数と名前を HTTP 出力の個別の行に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each value to a separate line of HTTP output.</span></span>

 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousID : string" Usage="System.Web.HttpRequest.AnonymousID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-133">存在する場合は、ユーザーの匿名 ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-133">Gets the anonymous identifier for the user, if present.</span></span></summary>
        <value><span data-ttu-id="6fc0b-134">現在の匿名ユーザーの ID を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-134">A string representing the current anonymous user identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-135"><xref:System.Web.HttpRequest.AnonymousID%2A> プロパティは、有効期間が長い一意の識別子を認証されていないユーザーに割り当てます。これを使用すると、`Session` オブジェクトにデータを格納しなくても、ユーザーの追跡やプロファイルプロパティの割り当てを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="6fc0b-136">既定では、<xref:System.Web.HttpRequest.AnonymousID%2A> プロパティは cookie を使用して追跡されますが、匿名 id 構成セクションの <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> 属性が <xref:System.Web.HttpCookieMode.UseUri>、<xref:System.Web.HttpCookieMode.UseDeviceProfile>、または <xref:System.Web.HttpCookieMode.AutoDetect> 値に設定されている場合は、URI を使用するように設定できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="6fc0b-137">匿名ユーザーが認証された場合などに、cookie を使用しない場合は、明示的にクリアする必要があります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>

 <span data-ttu-id="6fc0b-138">匿名 id は、認証されていないエンティティを識別する必要がある場合や、承認が必要な場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="6fc0b-139">詳細については、「 [AnonymousIdentification 要素 (ASP.NET Settings スキーマ)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100)) 」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100))</span></span>



## Examples
 <span data-ttu-id="6fc0b-140">次の例では、global.asax ファイルで <xref:System.Web.Security.AnonymousIdentificationModule.Creating> イベントを処理することによって、<xref:System.Web.HttpRequest.AnonymousID%2A> プロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="6fc0b-141">この例には、次の2つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-141">This example has two parts:</span></span>

-   <span data-ttu-id="6fc0b-142"><xref:System.Web.Security.AnonymousIdentificationModule.Creating> イベントを処理する global.asax ファイル内のメソッド。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>

-   <span data-ttu-id="6fc0b-143">Web フォームページ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-143">A Web Forms page.</span></span>

 <span data-ttu-id="6fc0b-144">コード例の最初の部分では、global.asax ファイルの <xref:System.Web.Security.AnonymousIdentificationModule.Creating> イベントを処理することによって <xref:System.Web.HttpRequest.AnonymousID%2A> プロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="6fc0b-145">`AnonymousIdentification_Creating` という名前のメソッドは、匿名 ID が作成されるときに <xref:System.Web.HttpRequest.AnonymousID%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>

 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]

 <span data-ttu-id="6fc0b-146">コード例の2番目の部分では、前の例で `AnonymousIdentification_Creating` イベントハンドラーによって作成された新しい <xref:System.Web.HttpRequest.AnonymousID%2A> を表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100)"><span data-ttu-id="6fc0b-147">anonymousIdentification 要素 (ASP.NET 設定スキーマ)</span><span class="sxs-lookup"><span data-stu-id="6fc0b-147">anonymousIdentification Element (ASP.NET Settings Schema)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.HttpRequest.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-148">サーバーの ASP.NET アプリケーションの仮想アプリケーション ルート パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-148">Gets the ASP.NET application's virtual application root path on the server.</span></span></summary>
        <value><span data-ttu-id="6fc0b-149">現在のアプリケーションの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-149">The virtual path of the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-150">このプロパティを使用して、ルートディレクトリにないページまたは Web ユーザーコントロールからのアプリケーションルートを基準とした URL を作成します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-150">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="6fc0b-151">これにより、ディレクトリ構造のさまざまなレベルに存在するページと共有コントロールは、同じコードを使用して、アプリケーション内の固定された場所にあるリソースにリンクできます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-151">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>



## Examples
 <span data-ttu-id="6fc0b-152">次の例では、<xref:System.IO.StreamWriter.Write%2A> メソッドを使用して HTML エンコードを行い、<xref:System.Web.HttpRequest.ApplicationPath%2A> プロパティの値をテキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-152">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="6fc0b-153">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-153">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="6fc0b-154">`sw`という名前の <xref:System.IO.StreamWriter> オブジェクトが存在することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-154">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]

 <span data-ttu-id="6fc0b-155">次の例では、<xref:System.Web.HttpRequest.ApplicationPath%2A> プロパティを使用して、アプリケーション内の固定位置にあるリソースへのパスをプログラムで作成します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-155">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="6fc0b-156">リソースを参照するページは、リソースと同じディレクトリに配置されている必要はありません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-156">The page that references the resource does not have to be located in the same directory as the resource.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]

 <span data-ttu-id="6fc0b-157">この例を WebSite1 という名前の Web アプリケーションで実行すると、`/WebSite1` が <xref:System.Web.HttpRequest.ApplicationPath%2A> プロパティの値として表示され、`/WebSite1/images/Image1.gif` がイメージの完全なパスとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-157">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeCurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-158">アプリケーション ルートの仮想パスを取得し、チルダ (\~) 表記 ("\~/page.aspx" など) を使用した、アプリケーション ルートの相対パスにします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-158">Gets the virtual path of the application root and makes it relative by using the tilde (\~) notation for the application root (as in "\~/page.aspx").</span></span></summary>
        <value><span data-ttu-id="6fc0b-159">現在の要求に対応するアプリケーション ルートの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-159">The virtual path of the application root for the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-160">このプロパティを使用して、アプリケーションが場所を変更した場合でも同じままになる URL 情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-160">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="6fc0b-161">これにより、同じ URL マッピングコードをテスト環境と最終的な配置環境で使用したり、異なるドメインの Web アプリケーションのコピーで使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-161">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>



## Examples
 <span data-ttu-id="6fc0b-162">次の例では、<xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Image> コントロールの URL を、ページと同じディレクトリ内のイメージに設定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-162">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="6fc0b-163">このページをディレクトリ構造のさまざまなレベルで実行し、結果として得られる <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> のプロパティ値を確認します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-163">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]

 <span data-ttu-id="6fc0b-164">次の例では、<xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> プロパティを使用して、ページの現在のパスに基づいて、リソースへのパスをプログラムで設定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-164">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberSignature Language="F#" Value="member this.BinaryRead : int -&gt; byte[]" Usage="httpRequest.BinaryRead count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="6fc0b-165">読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-165">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="6fc0b-166">現在の入力ストリームから、指定したバイト数のバイナリ読み取りを実行します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-166">Performs a binary read of a specified number of bytes from the current input stream.</span></span></summary>
        <returns><span data-ttu-id="6fc0b-167">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-167">A byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-168"><xref:System.Web.HttpRequest.BinaryRead%2A> メソッドは、ASP との互換性のために用意されています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-168">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6fc0b-169"><paramref name="count" /> は 0 です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-169"><paramref name="count" /> is 0.</span></span>

<span data-ttu-id="6fc0b-170">または</span><span class="sxs-lookup"><span data-stu-id="6fc0b-170">-or-</span></span>

 <span data-ttu-id="6fc0b-171"><paramref name="count" /> は使用可能なバイト数を超えています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-171"><paramref name="count" /> is greater than the number of bytes available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities with get, set" Usage="System.Web.HttpRequest.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-172">要求を実行中のクライアントのブラウザーの性能に関する情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-172">Gets or sets information about the requesting client's browser capabilities.</span></span></summary>
        <value><span data-ttu-id="6fc0b-173">クライアントのブラウザーの性能を一覧表示する <see cref="T:System.Web.HttpBrowserCapabilities" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-173">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-174">次のコード例では、HTML ページでブラウザーの機能の一覧をクライアントに送り返します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-174">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>

 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)"><span data-ttu-id="6fc0b-175">ASP.NET サーバーコントロールとブラウザー機能</span><span class="sxs-lookup"><span data-stu-id="6fc0b-175">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Web.HttpClientCertificate" Usage="System.Web.HttpRequest.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-176">現在、要求しているクライアントのセキュリティ証明書を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-176">Gets the current request's client security certificate.</span></span></summary>
        <value><span data-ttu-id="6fc0b-177">クライアントのセキュリティ証明書の設定に関する情報を格納している <see cref="T:System.Web.HttpClientCertificate" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-177">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-178">次のコード例では、クライアントの証明書設定を HTML ページでクライアントに送り返します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-178">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>

 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-179">エンティティ本体の文字セットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-179">Gets or sets the character set of the entity-body.</span></span></summary>
        <value><span data-ttu-id="6fc0b-180">クライアントの文字セットを表す <see cref="T:System.Text.Encoding" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-180">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-181">既定のコンテンツエンコードは、構成ファイルの[グローバリゼーション要素 (ASP.NET 設定スキーマ)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100))で指定できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-181">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100)) of a configuration file.</span></span> <span data-ttu-id="6fc0b-182">コンテンツのエンコードもクライアントによって指定されている場合は、既定の構成設定が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-182">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>



## Examples
 <span data-ttu-id="6fc0b-183">次のコード例では、現在の HTTP エンコーディングの説明を表す値を文字列変数に代入します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-183">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>

 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-184">クライアントから送信されたコンテンツの長さをバイト単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-184">Specifies the length, in bytes, of content sent by the client.</span></span></summary>
        <value><span data-ttu-id="6fc0b-185">クライアントから送信されたコンテンツの長さ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-185">The length, in bytes, of content sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-186">次のコード例では、受信要求のコンテンツ長を表す値を整数変数に代入します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-186">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>

 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-187">受信要求で使用する MIME の Content-Type を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-187">Gets or sets the MIME content type of the incoming request.</span></span></summary>
        <value><span data-ttu-id="6fc0b-188">受信要求の MIME コンテンツ タイプを表す文字列 ("text/html" など)。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-188">A string representing the MIME content type of the incoming request, for example, "text/html".</span></span> <span data-ttu-id="6fc0b-189">このほかに、一般的な MIME タイプとしては "audio.wav"、"image/gif"、"application/pdf" などがあります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-189">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-190">次のコード例では、受信要求のコンテンツタイプを表す値を文字列変数に代入します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-190">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>

 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]

 <span data-ttu-id="6fc0b-191">次の例は、このコードによって生成される可能性がある出力を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-191">The following example shows output that might be produced by this code.</span></span>

 `GET`

 `127.0.0.1`

 `127.0.0.1`

 `GET`

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-192">クライアントから送信されたクッキーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-192">Gets a collection of cookies sent by the client.</span></span></summary>
        <value><span data-ttu-id="6fc0b-193">クライアントのクッキー変数を表す <see cref="T:System.Web.HttpCookieCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-193">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-194">ASP.NET には、2つの組み込みクッキーコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-194">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="6fc0b-195"><xref:System.Web.HttpRequest> の <xref:System.Web.HttpRequest.Cookies%2A> コレクションを通じてアクセスされるコレクションには、クライアントが `Cookie` ヘッダーでサーバーに送信する cookie が含まれています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-195">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="6fc0b-196"><xref:System.Web.HttpResponse> の <xref:System.Web.HttpResponse.Cookies%2A> コレクションを通じてアクセスされるコレクションには、サーバー上で作成され `Set-Cookie` ヘッダーでクライアントに送信される新しいクッキーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-196">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>

> [!NOTE]
>  <span data-ttu-id="6fc0b-197"><xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> コレクションを使用して cookie を追加した後、応答がクライアントに送信されていない場合でも、<xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> コレクションでクッキーをすぐに使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-197">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>



## Examples
 <span data-ttu-id="6fc0b-198">次のコード例では、クライアントから送信されたすべての cookie をループ処理し、各 cookie の名前、有効期限、セキュリティパラメーター、および値を HTTP 出力に送信します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-198">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>

 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-199">現在の要求の仮想パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-199">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="6fc0b-200">現在の要求の仮想パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-200">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> は、現在実行中のページハンドラーへのファイルパスを返します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="6fc0b-202"><xref:System.Web.HttpServerUtility.Execute%2A> メソッドと <xref:System.Web.HttpServerUtility.Transfer%2A> メソッドを使用したリダイレクトのシナリオでは、<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> プロパティによってリダイレクトされたページへのパスが返されます (子ページ)。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-202">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="6fc0b-203">ただし、クライアントが別のページにリダイレクトされた場合、<xref:System.Web.HttpRequest.FilePath%2A> プロパティは元のページへのパスを返します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-203">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>



## Examples
 <span data-ttu-id="6fc0b-204">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-204">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-205">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-205">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePathExtension : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-206"><see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> プロパティで指定されているファイル名の拡張子を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-206">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></summary>
        <value><span data-ttu-id="6fc0b-207"><see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> プロパティで指定されているファイル名の拡張子。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-207">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Web.HttpRequest.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-208">現在の要求の仮想パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-208">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="6fc0b-209">現在の要求の仮想パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-209">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-210"><xref:System.Web.HttpRequest.FilePath%2A> プロパティには、<xref:System.Web.HttpRequest.PathInfo%2A> トレーラーは含まれません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-210">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="6fc0b-211">たとえば、URL `http://www.contoso.com/virdir/page.html/tail`の場合、<xref:System.Web.HttpRequest.FilePath%2A> の値は/virdir/page.html です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-211">For example, for the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>



## Examples
 <span data-ttu-id="6fc0b-212">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.FilePath%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-212">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-213">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-213">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollection" Usage="System.Web.HttpRequest.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-214">マルチパート MIME 形式でクライアントによってアップロードされたファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-214">Gets the collection of files uploaded by the client, in multipart MIME format.</span></span></summary>
        <value><span data-ttu-id="6fc0b-215">クライアントによってアップロードされたファイルのコレクションを表す <see cref="T:System.Web.HttpFileCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-215">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span></span> <span data-ttu-id="6fc0b-216"><see cref="T:System.Web.HttpFileCollection" /> オブジェクトの項目は <see cref="T:System.Web.HttpPostedFile" /> 型です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-216">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-217">ファイルコレクションは、HTTP 要求 `Content-Type` 値が "マルチパート/フォーム-データ" の場合にのみ設定されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-217">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>



## Examples
 <span data-ttu-id="6fc0b-218">次のコード例では、<xref:System.Web.HttpRequest.Files%2A> コレクション内のすべてのファイルの名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-218">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>

 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpRequest.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-219">現在の入力ストリームを読み取るときに使用するフィルターを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-219">Gets or sets the filter to use when reading the current input stream.</span></span></summary>
        <value><span data-ttu-id="6fc0b-220">フィルターとして使用される <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-220">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-221">次のコード例では、`QQQ1` と、<xref:System.Web.HttpRequest.InputStream%2A>をフィルター処理する `QQQ2` の2つの新しいクラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-221">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="6fc0b-222">アプリケーション内のすべての ASP.NET Web ページに対するすべての入力がフィルター処理されるように、クラスを ASP.NET アプリケーションのディレクトリにある global.asax ファイルに配置します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-222">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="6fc0b-223">指定された <see cref="T:System.IO.Stream" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-223">The specified <see cref="T:System.IO.Stream" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-224">フォーム変数のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-224">Gets a collection of form variables.</span></span></summary>
        <value><span data-ttu-id="6fc0b-225">フォーム変数のコレクションを表す <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-225">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-226"><xref:System.Web.HttpRequest.Form%2A> プロパティは、HTTP 要求 `Content-Type` の値が "application/url エンコード" または "マルチパート/フォーム-データ" の場合に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-226">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>



## Examples
 <span data-ttu-id="6fc0b-227">次の例は、ブラウザーからポストされたフォームコレクション内の値を読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-227">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="6fc0b-228">コレクション内の各名前と値のペアは、フォームのコントロールとその値を表します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-228">Each name/value pair in the collection represents a control in the form and its value.</span></span>

 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferedInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferedInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6fc0b-229">受信 HTTP エンティティ本体を読み取るために使用できる <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-229">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="6fc0b-230">受信 HTTP エンティティ本体を読み取るために使用できる <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-230">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-231">このメソッドは <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> と同じですが、<xref:System.Web.HttpRequest.Form%2A>、<xref:System.Web.HttpRequest.Files%2A>、および <xref:System.Web.HttpRequest.InputStream%2A> の各プロパティを設定するために ASP.NET によって使用される内部ストレージに読み取られるバイトもコピーされる点が異なります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-231">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="6fc0b-232">この情報が保持されるため、ASP.NET Web フォーム ページ (.aspx ファイル) などのダウンストリーム コードは正常に実行されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-232">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="6fc0b-233">これは、<xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> メソッドには該当しません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-233">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="6fc0b-234">要求のエンティティ本体は、既に読み込まれ、解析されています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-234">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="6fc0b-235">エンティティ本体を読み込んで解析するプロパティの例は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-235">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span>

<span data-ttu-id="6fc0b-236">-   <see cref="P:System.Web.HttpRequest.Form" /> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-236">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>

<span data-ttu-id="6fc0b-237">-   <see cref="P:System.Web.HttpRequest.Files" /> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-237">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>

<span data-ttu-id="6fc0b-238">-   <see cref="P:System.Web.HttpRequest.InputStream" /> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-238">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>

<span data-ttu-id="6fc0b-239">-   <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> メソッド。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-239">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span></span>

<span data-ttu-id="6fc0b-240">この例外を回避するには、<see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> メソッドを最初に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-240">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="6fc0b-241">この例外は、エンティティ本体の読み取り中にクライアントが切断された場合にもスローされます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-241">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6fc0b-242">受信 HTTP エンティティ本体を読み取るために使用できる <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-242">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6fc0b-243">受信 HTTP エンティティ本体を読み取るために使用できる <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-243">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="6fc0b-244">受信 HTTP エンティティ本体を読み取るために使用できる <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-244">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-245">このメソッドは、<xref:System.Web.HttpRequest.InputStream%2A> プロパティを使用する代わりに使用できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-245">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="6fc0b-246"><xref:System.Web.HttpRequest.InputStream%2A> プロパティは、<xref:System.IO.Stream> オブジェクトを返す前に要求全体が受信されるまで待機します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-246">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="6fc0b-247">これに対し、<xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> メソッドは、<xref:System.IO.Stream> オブジェクトを直ちに返します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-247">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="6fc0b-248">メソッドを使用して、本文の完全な内容を受信する前に、エンティティ本体の処理を開始できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-248">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>

 <span data-ttu-id="6fc0b-249">エンティティ本体 (または、要求および受信されたもののほとんど) は、<xref:System.IO.Stream.Read%2A> メソッドなどのメソッドを呼び出すことによって、このメソッドによって返されたオブジェクトを使用してストリームを読み取る場合にのみ返されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-249">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="6fc0b-250"><xref:System.IO.Stream.Read%2A> メソッドのパラメーターを使用して、読み取るエンティティ本体の量を指定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-250">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>

 <span data-ttu-id="6fc0b-251">このメソッドから ASP.NET によって返される <xref:System.IO.Stream> オブジェクトは、同期と非同期の両方の読み取りメソッドをサポートします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-251">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="6fc0b-252"><xref:System.IO.Stream> オブジェクトは、<xref:System.IO.Stream.BeginRead%2A> メソッドと <xref:System.IO.Stream.EndRead%2A> メソッドの両方を実装します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-252">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="6fc0b-253">非同期メソッドを使用すると、要求エンティティをチャンク単位で非同期に読み取ることができ、ASP.NET では非同期読み取りループの各反復処理の間で現在のスレッドが解放されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-253">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>

 <span data-ttu-id="6fc0b-254">このメソッドは、要求が大きなファイルをアップロードするときに、アップロードが完了する前にファイルの内容へのアクセスを開始する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-254">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="6fc0b-255">ただし、エンティティ本体のすべての処理を引き継ぐ場合にのみ、この方法を使用してください。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-255">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="6fc0b-256">つまり、.aspx ページからこのメソッドを使用することはできません。これは、.aspx ページが実行されるときに、エンティティ本体が既に読み取られているためです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-256">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="6fc0b-257">要求のエンティティ本体は、既に読み込まれ、解析されています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-257">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="6fc0b-258">エンティティ本体を読み込んで解析するプロパティの例は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-258">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span>

-   <see cref="P:System.Web.HttpRequest.Form" />

-   <see cref="P:System.Web.HttpRequest.InputStream" />

-   <see cref="P:System.Web.HttpRequest.Files" />

-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />

<span data-ttu-id="6fc0b-259">この例外を回避するには、<see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> メソッドを最初に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-259">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="6fc0b-260">この例外は、エンティティ本体の読み取り中にクライアントが切断された場合にもスローされます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-260">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : bool -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream disableMaxRequestLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength"><span data-ttu-id="6fc0b-261">要求の期間の制限を無効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-261"><see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6fc0b-262">受信 HTTP エンティティ本体を読み取るために使用できる <see cref="T:System.IO.Stream" /> オブジェクトを取得し、オプションで <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> プロパティに設定した要求の期間の制限を無効にします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-262">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span></span></summary>
        <returns><span data-ttu-id="6fc0b-263">受信 HTTP エンティティ本体を読み取るために使用できる <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-263">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-264">このメソッドの詳細については、「<xref:System.Web.HttpRequest.GetBufferlessInputStream> のオーバーロード」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-264">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="6fc0b-265">要求のエンティティ本体は、既に読み込まれ、解析されています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-265">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="6fc0b-266">エンティティ本体を読み込んで解析するプロパティの例は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-266">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span>

<span data-ttu-id="6fc0b-267">-   <see cref="P:System.Web.HttpRequest.Form" /> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-267">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>

<span data-ttu-id="6fc0b-268">-   <see cref="P:System.Web.HttpRequest.Files" /> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-268">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>

<span data-ttu-id="6fc0b-269">-   <see cref="P:System.Web.HttpRequest.InputStream" /> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-269">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>

<span data-ttu-id="6fc0b-270">-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> メソッド。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-270">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span></span>

<span data-ttu-id="6fc0b-271">この例外を回避するには、<see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> メソッドを最初に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-271">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="6fc0b-272">この例外は、エンティティ本体の読み取り中にクライアントが切断された場合にもスローされます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-272">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-273">HTTP ヘッダーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-273">Gets a collection of HTTP headers.</span></span></summary>
        <value><span data-ttu-id="6fc0b-274">ヘッダーの <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-274">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-275">使用可能なすべてのヘッダーの一覧については、W3C Web サイトの「 [Request Header Fields (要求ヘッダーフィールド](https://go.microsoft.com/fwlink/?LinkId=73147))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-275">For a listing of all possible headers, see [Request Header Fields](https://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>



## Examples
 <span data-ttu-id="6fc0b-276">次のコード例では、HTTP 要求のすべてのヘッダーの名前と値を表示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-276">The following code example displays the names and values of all headers in the HTTP request.</span></span>

 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="System.Web.HttpRequest.HttpChannelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-277">現在の <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> インスタンスの <see cref="T:System.Web.HttpWorkerRequest" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-277">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></summary>
        <value><span data-ttu-id="6fc0b-278">現在の <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> インスタンスの <see cref="T:System.Web.HttpWorkerRequest" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-278">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="6fc0b-279">現在の <see cref="T:System.Web.HttpWorkerRequest" /> オブジェクトが、<see langword="System.Web.Hosting.IIS7WorkerRequest" /> オブジェクトまたは <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-279">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Web.HttpRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-280">クライアントによって使用される HTTP データ転送メソッド (<see langword="GET" />、<see langword="POST" />、<see langword="HEAD" /> など) を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-280">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="6fc0b-281">クライアントによって使用される HTTP データの転送方法。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-281">The HTTP data transfer method used by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-282">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.HttpMethod%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-282">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-283">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-283">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]

 <span data-ttu-id="6fc0b-284">次の例は、このコードによって生成される出力を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-284">The following example shows output that is produced by this code.</span></span>

 `GET`

 `127.0.0.1`

 `127.0.0.1`

 `GET`

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-285">受信 HTTP エンティティ本体の内容を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-285">Gets the contents of the incoming HTTP entity body.</span></span></summary>
        <value><span data-ttu-id="6fc0b-286">受信 HTTP コンテンツ本体の内容を表す <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-286">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-287">次のコード例では、<xref:System.Web.HttpRequest.InputStream%2A> の内容を文字列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-287">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>

 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6fc0b-288">HTTP 要求エンティティ本体をメモリに挿入する IIS のメソッドのマネージド ラッパーを提供します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-288">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-289"><xref:System.Web.HttpRequest.InsertEntityBody%2A> メソッドのオーバーロードは、IIS 7 `IHttpRequest::InsertEntityBody` メソッドへのマネージアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-289">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="6fc0b-290">IIS メソッドは、HTTP 要求エンティティ本体 (クライアントからポストされたデータ) をメモリに挿入します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-290">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="6fc0b-291">これは、IIS が読み取り後に要求エンティティのコピーを保持しないため便利です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-291">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="6fc0b-292"><xref:System.Web.HttpRequest.InsertEntityBody%2A> メソッドは、HTTP 要求エンティティデータのコピーを作成し、追加のカスタム処理のために IIS で使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-292">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>

> [!NOTE]
>  <span data-ttu-id="6fc0b-293"><xref:System.Web.HttpRequest.InsertEntityBody%2A> メソッドのオーバーロードは、iis 7.0 で `IHttpRequest::InsertEntityBody` メソッドが追加されたため、IIS 7.0 以降でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-293">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : unit -&gt; unit" Usage="httpRequest.InsertEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6fc0b-294">HTTP 要求エンティティ本体のコピーを IIS に提供します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-294">Provides IIS with a copy of the HTTP request entity body.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-295">IIS は、読み取り後の要求のコピーを保持しません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-295">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="6fc0b-296">そのため、HTTP 要求のハンドラーだけが要求エンティティを読み取るようにすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-296">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>

 <span data-ttu-id="6fc0b-297"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> メソッドのオーバーロードは、以前に ASP.NET によって読み取られた場合に、要求エンティティのコピーを IIS に提供します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-297">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="6fc0b-298">このメソッドオーバーロードは、ASP.NET がエンティティ要求を読み取り、既存の要求データを再利用する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-298">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="6fc0b-299">IIS 7.0 より前バージョンの IIS で、メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-299">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="6fc0b-300">ホストされた環境での運用に使用します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-300">For operating in a hosted environment.</span></span> <span data-ttu-id="6fc0b-301">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="6fc0b-302">関連付けられた列挙型: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="6fc0b-302">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : byte[] * int * int -&gt; unit" Usage="httpRequest.InsertEntityBody (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="6fc0b-303">要求エンティティ データが格納されている配列。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-303">An array that contains the request entity data.</span></span></param>
        <param name="offset"><span data-ttu-id="6fc0b-304">要求エンティティ データの格納を開始する、<paramref name="buffer" /> 内の、インデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-304">The zero-based position in <paramref name="buffer" /> at which to begin storing the request entity data.</span></span></param>
        <param name="count"><span data-ttu-id="6fc0b-305"><paramref name="buffer" /> 配列に読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-305">The number of bytes to read into the <paramref name="buffer" /> array.</span></span></param>
        <summary><span data-ttu-id="6fc0b-306">HTTP 要求エンティティ本体のコピーおよび要求エンティティ オブジェクトについての情報を IIS に提供します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-306">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-307">IIS は、読み取り後の要求のコピーを保持しません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-307">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="6fc0b-308">そのため、HTTP 要求のハンドラーだけが要求エンティティを読み取るようにすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-308">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>

 <span data-ttu-id="6fc0b-309"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> メソッドのオーバーロードは、別のエンティティ本体をメモリに挿入するなど、カスタム処理を実行する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-309">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="6fc0b-310">IIS 7.0 より前バージョンの IIS で、メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-310">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6fc0b-311"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-311"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6fc0b-312"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-312"><paramref name="offset" /> or <paramref name="count" /> is a negative value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6fc0b-313"><paramref name="count" /> 値を仮定すると、<paramref name="buffer" /> の項目数が <paramref name="offset" /> 内の使用可能な領域を超えています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-313">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="6fc0b-314">ホストされた環境で使用します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-314">for operating in a hosted environment.</span></span> <span data-ttu-id="6fc0b-315">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-315">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="6fc0b-316">関連付けられた列挙型: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="6fc0b-316">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.HttpRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-317">要求が認証されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-317">Gets a value indicating whether the request has been authenticated.</span></span></summary>
        <value><span data-ttu-id="6fc0b-318">要求が認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-318"><see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-319">次のコード例では、<xref:System.Web.HttpRequest.IsAuthenticated%2A> プロパティを使用して、現在の要求が認証されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-319">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="6fc0b-320">認証されていない場合、要求は別のページにリダイレクトされ、ユーザーは Web アプリケーションに資格情報を入力できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-320">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="6fc0b-321">これは、アプリケーションの既定のページで使用される一般的な方法です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-321">This is a common technique used in the default page for an application.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Web.HttpRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-322">要求がローカル コンピューターから送信されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-322">Gets a value indicating whether the request is from the local computer.</span></span></summary>
        <value><span data-ttu-id="6fc0b-323">要求がローカル コンピューターから送信された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-323"><see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-324"><xref:System.Web.HttpRequest.IsLocal%2A> プロパティは、要求の発信元の IP アドレスが127.0.0.1 の場合、または要求の IP アドレスがサーバーの IP アドレスと同じである場合に `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-324">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Web.HttpRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-325">セキュリティ設定されたソケットを HTTP 接続で使用しているかどうか (つまり、HTTPS かどうか) を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-325">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span></span></summary>
        <value><span data-ttu-id="6fc0b-326">接続に SSL を使用する場合は<see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-326"><see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-327">次のコード例では、<xref:System.Web.HttpRequest.IsSecureConnection%2A> プロパティが false に設定されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-327">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="6fc0b-328">値がの場合、<xref:System.Web.HttpResponse.SuppressContent%2A> プロパティは true に設定され、応答の送信を停止します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-328">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>

 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.HttpRequest.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="6fc0b-329">取得するコレクション メンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-329">The name of the collection member to get.</span></span></param>
        <summary><span data-ttu-id="6fc0b-330"><see cref="P:System.Web.HttpRequest.QueryString" />、<see cref="P:System.Web.HttpRequest.Form" />、<see cref="P:System.Web.HttpRequest.Cookies" />、または <see cref="P:System.Web.HttpRequest.ServerVariables" /> の各コレクションから指定したオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-330">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span></span></summary>
        <value><span data-ttu-id="6fc0b-331"><see cref="P:System.Web.HttpRequest.QueryString" /> パラメーターで指定された <see cref="P:System.Web.HttpRequest.Form" />、<see cref="P:System.Web.HttpRequest.Cookies" />、<see cref="P:System.Web.HttpRequest.ServerVariables" />、または <paramref name="key" /> コレクションのメンバー。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-331">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span></span> <span data-ttu-id="6fc0b-332">指定した <paramref name="key" /> が見つからない場合は <see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-332">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogonUserIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Web.HttpRequest.LogonUserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-333">現在のユーザーに対する <see cref="T:System.Security.Principal.WindowsIdentity" /> の種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-333">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span></span></summary>
        <value><span data-ttu-id="6fc0b-334">現在の Microsoft Internet Information Services (IIS) の認証設定に対応する <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-334">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-335"><xref:System.Web.HttpRequest.LogonUserIdentity%2A> プロパティは、現在接続しているユーザーの <xref:System.Security.Principal.WindowsIdentity> オブジェクトのプロパティとメソッドを Microsoft インターネットインフォメーションサービス (IIS) に公開します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-335">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="6fc0b-336"><xref:System.Web.HttpRequest.LogonUserIdentity%2A> によって公開される <xref:System.Security.Principal.WindowsIdentity> クラスのインスタンスは、IIS 要求トークンを追跡し、ASP.NET 内で処理されている現在の HTTP 要求に対してこのトークンに簡単にアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-336">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="6fc0b-337"><xref:System.Security.Principal.WindowsIdentity> クラスのインスタンスは自動的に作成されるので、メソッドとプロパティにアクセスするために構築する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-337">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>



## Examples
 <span data-ttu-id="6fc0b-338">次のコード例は、現在のユーザーの <xref:System.Web.HttpRequest.LogonUserIdentity%2A> プロパティを取得し、各項目の値をテキストファイルに書き出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-338">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="6fc0b-339">このコードは、フォームの `ACTION` 属性で参照される ASP.NET ページに配置します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-339">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6fc0b-340">Web アプリケーションは IIS 7 統合モードで実行されていて、<see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> イベントはまだ発生していません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-340">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapImageCoordinates : string -&gt; int[]" Usage="httpRequest.MapImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="6fc0b-341">フォーム イメージ マップの名前。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-341">The name of the form image map.</span></span></param>
        <summary><span data-ttu-id="6fc0b-342">インカミング イメージ フィールド フォーム パラメーターを、該当する x 座標値および y 座標値に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-342">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span></span></summary>
        <returns><span data-ttu-id="6fc0b-343">整数の 2 次元配列。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-343">A two-dimensional array of integers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6fc0b-344">要求された URL の仮想パスを、現在の要求に対するサーバー上の物理パスに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-344">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpRequest.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="6fc0b-345">現在の要求の仮想パス (絶対パスまたは相対パス)。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-345">The virtual path (absolute or relative) for the current request.</span></span></param>
        <summary><span data-ttu-id="6fc0b-346">指定された仮想パスを物理パスに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-346">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="6fc0b-347"><paramref name="virtualPath" /> で指定されたサーバー上の物理パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-347">The physical path on the server specified by <paramref name="virtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!CAUTION]
>  <span data-ttu-id="6fc0b-348"><xref:System.Web.HttpRequest.MapPath%2A> プロパティには、ホスティング環境に関する機密情報が含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-348">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="6fc0b-349">戻り値は、ユーザーに表示されません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-349">The return value should not be displayed to users.</span></span>



## Examples
 <span data-ttu-id="6fc0b-350">次のコード例では、<xref:System.Web.HttpRequest.MapPath%2A> メソッドを使用して、仮想パスをサーバー上の完全に修飾された物理パスに変換します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-350">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="6fc0b-351">この例には、次の2つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-351">This example has two parts:</span></span>

-   <span data-ttu-id="6fc0b-352">.Aspx ページにより、パスがマップされ、ファイルが読み取られ、読み取り操作の結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-352">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>

-   <span data-ttu-id="6fc0b-353">`UpperCaseFilterStream`クラス。このクラスは、このクラスを通じて渡されるすべての文字を大文字に変更します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-353">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>

 <span data-ttu-id="6fc0b-354">この例の最初の部分では、<xref:System.Web.HttpRequest.MapPath%2A> メソッドを使用して、仮想パスを完全に修飾された物理パスに変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-354">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="6fc0b-355">この物理パスは、ファイルの内容を取得する <xref:System.IO.StreamReader> オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-355">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="6fc0b-356">次に、<xref:System.Web.HttpResponse.Write%2A> メソッドを呼び出して、ページ上のファイルの内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-356">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="6fc0b-357"><xref:System.Web.HttpResponse.Filter%2A> プロパティは、ページに表示されるテキストをすべて大文字にするフィルターを応答ストリームにアタッチするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-357">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]

 <span data-ttu-id="6fc0b-358">この例の2番目の部分は、<xref:System.IO.Stream> から継承し、ストリーム内のすべての文字を大文字に変換するクラスを示しています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-358">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="6fc0b-359">このコードをアプリケーションの `App_Code` フォルダーに配置します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-359">Put this code in the `App_Code` folder for your application.</span></span>

 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="6fc0b-360">要求に対して <see cref="T:System.Web.HttpContext" /> オブジェクトが定義されていません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-360">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string * string * bool -&gt; string" Usage="httpRequest.MapPath (virtualPath, baseVirtualDir, allowCrossAppMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="6fc0b-361">現在の要求の仮想パス (絶対パスまたは相対パス)。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-361">The virtual path (absolute or relative) for the current request.</span></span></param>
        <param name="baseVirtualDir"><span data-ttu-id="6fc0b-362">相対解決に使用される仮想ベース ディレクトリ パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-362">The virtual base directory path used for relative resolution.</span></span></param>
        <param name="allowCrossAppMapping"><span data-ttu-id="6fc0b-363"><see langword="true" /> が別のアプリケーションに所属できることを示す場合は <paramref name="virtualPath" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-363"><see langword="true" /> to indicate that <paramref name="virtualPath" /> may belong to another application; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6fc0b-364">指定された仮想パスを物理パスに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-364">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="6fc0b-365">サーバー上の物理パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-365">The physical path on the server.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!CAUTION]
>  <span data-ttu-id="6fc0b-366"><xref:System.Web.HttpRequest.MapPath%2A> プロパティには、ホスティング環境に関する機密情報が含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-366">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="6fc0b-367">戻り値は、ユーザーに表示されません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-367">The return value should not be displayed to users.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="6fc0b-368"><paramref name="allowCrossMapping" /> は <see langword="false" />。<paramref name="virtualPath" /> は別のアプリケーションに属します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-368"><paramref name="allowCrossMapping" /> is <see langword="false" /> and <paramref name="virtualPath" /> belongs to another application.</span></span>

<span data-ttu-id="6fc0b-369">または</span><span class="sxs-lookup"><span data-stu-id="6fc0b-369">-or-</span></span>

<span data-ttu-id="6fc0b-370">要求に対して <see cref="T:System.Web.HttpContext" /> オブジェクトが定義されていません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-370">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapRawImageCoordinates : string -&gt; double[]" Usage="httpRequest.MapRawImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="6fc0b-371">イメージ フィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-371">The name of the image field.</span></span></param>
        <summary><span data-ttu-id="6fc0b-372">着信イメージ フィールド フォーム パラメーターを、適切な x 座標値および y 座標値にマップします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-372">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span></span></summary>
        <returns><span data-ttu-id="6fc0b-373">x および y 座標値。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-373">The x and y coordinate values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-374"><see cref="P:System.Web.HttpRequest.QueryString" />、<see cref="P:System.Web.HttpRequest.Form" />、<see cref="P:System.Web.HttpRequest.Cookies" />、および <see cref="P:System.Web.HttpRequest.ServerVariables" /> の各項目が組み合わされたコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-374">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span></span></summary>
        <value><span data-ttu-id="6fc0b-375"><see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-375">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-376">名前と値のペアは、次の順序でコレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-376">Name-value pairs are added to the collection in the following order:</span></span>

1.  <span data-ttu-id="6fc0b-377">クエリ文字列パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-377">Query-string parameters.</span></span>

2.  <span data-ttu-id="6fc0b-378">フォームフィールド。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-378">Form fields.</span></span>

3.  <span data-ttu-id="6fc0b-379">Cookie.</span><span class="sxs-lookup"><span data-stu-id="6fc0b-379">Cookies.</span></span>

4.  <span data-ttu-id="6fc0b-380">サーバー変数。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-380">Server variables.</span></span>



## Examples
 <span data-ttu-id="6fc0b-381">次のコード例は、ページの <xref:System.Web.HttpRequest.Params%2A> プロパティをループ処理する方法と、各キーと値のペアを表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-381">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.HttpRequest.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-382">現在の要求の仮想パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-382">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="6fc0b-383">現在の要求の仮想パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-383">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-384"><xref:System.Web.HttpRequest.Path%2A> は、<xref:System.Web.HttpRequest.FilePath%2A> と <xref:System.Web.HttpRequest.PathInfo%2A> トレーラーを連結したものです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-384">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="6fc0b-385">たとえば、URL `http://www.contoso.com/virdir/page.html/tail`の場合、<xref:System.Web.HttpRequest.Path%2A> は/virdir/page.html/tail. になります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-385">For example, for the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>



## Examples
 <span data-ttu-id="6fc0b-386">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.Path%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-386">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-387">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-387">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.HttpRequest.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-388">URL 拡張子付きリソースの追加パス情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-388">Gets the additional path information for a resource with a URL extension.</span></span></summary>
        <value><span data-ttu-id="6fc0b-389">リソースの追加パス情報。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-389">The additional path information for a resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-390">URL `http://www.contoso.com/virdir/page.html/tail`の場合、<xref:System.Web.HttpRequest.PathInfo%2A> 値は/tail です。です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-390">For the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>



## Examples
 <span data-ttu-id="6fc0b-391">次のコード例では、<xref:System.Web.HttpRequest.PathInfo%2A> プロパティに空の文字列が含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-391">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="6fc0b-392">存在する場合、<xref:System.IO.StreamWriter.Write%2A> メソッドはこれを示す文字列をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-392">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="6fc0b-393">そうでない場合は、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドによって <xref:System.Web.HttpRequest.PathInfo%2A> プロパティの値が HTML エンコードされ、<xref:System.IO.TextWriter.WriteLine%2A> メソッドによって、エンコードされた値がファイルに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-393">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-394">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-394">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalApplicationPath : string" Usage="System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-395">現在実行しているサーバー アプリケーションのルート ディレクトリの物理ファイル システム パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-395">Gets the physical file system path of the currently executing server application's root directory.</span></span></summary>
        <value><span data-ttu-id="6fc0b-396">現在のアプリケーションのルート ディレクトリのファイル システム パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-396">The file system path of the current application's root directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-397">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-397">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-398">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-398">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalPath : string" Usage="System.Web.HttpRequest.PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-399">要求された URL に一致する物理ファイル システム パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-399">Gets the physical file system path corresponding to the requested URL.</span></span></summary>
        <value><span data-ttu-id="6fc0b-400">現在の要求のファイル システム パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-400">The file system path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-401"><xref:System.Web.HttpServerUtility.Execute%2A> と <xref:System.Web.HttpServerUtility.Transfer%2A>を使用したリダイレクトのシナリオでは、<xref:System.Web.HttpRequest.PhysicalPath%2A> プロパティによって元のページへのパスが返されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-401">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="6fc0b-402">現在実行中のページの物理パスを検索するには、<xref:System.Web.HttpRequest.MapPath%2A> メソッドを <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> プロパティとして設定された入力引数と共に使用します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-402">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>



## Examples
 <span data-ttu-id="6fc0b-403">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.PhysicalPath%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-403">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-404">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-404">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-405">HTTP クエリ文字列変数のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-405">Gets the collection of HTTP query string variables.</span></span></summary>
        <value><span data-ttu-id="6fc0b-406">クライアントから送信されたクエリ文字列変数。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-406">The query string variables sent by the client.</span></span> <span data-ttu-id="6fc0b-407">URL デコードされたキーと値。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-407">Keys and values are URL-decoded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-408">次のコード例では、"fullname" という名前のクエリ文字列変数の値を取得する2つの方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-408">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="6fc0b-409">どちらの場合も、URL が `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`場合、返される値は "Fadi Fakhouri" です。これは、`%20` が空白文字に URL でデコードされるためです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-409">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="6fc0b-410">URL に `fullname` クエリ文字列 ID がない場合、返される値は `null`になります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-410">If the URL doesn't have a `fullname` query string ID, the returned value would be `null`.</span></span>

 <span data-ttu-id="6fc0b-411">コードの1行目では、クエリ文字列内でのみキー "fullname" が検索されます。2行目では、すべての HTTP 要求コレクションで "fullname" というキーが検索されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-411">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="6fc0b-412">2行目の詳細については、「<xref:System.Web.HttpRequest.Item%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-412">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>

```csharp
string fullname1 = Request.QueryString["fullname"];
string fullname2 = Request["fullname"];

```

```vb
Dim fullname1 As String = Request.QueryString("fullname")
Dim fullname2 As String = Request("fullname")
```

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.HttpRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-413">現在の要求の生の URL を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-413">Gets the raw URL of the current request.</span></span></summary>
        <value><span data-ttu-id="6fc0b-414">現在の要求の生の URL。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-414">The raw URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-415">未加工の URL は、ドメイン情報の後の URL の一部として定義されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-415">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="6fc0b-416">URL 文字列 `http://www.contoso.com/articles/recent.aspx`では、生の URL は/articles/recent.aspx. です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-416">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="6fc0b-417">未加工の URL にクエリ文字列が含まれている場合は、その文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-417">The raw URL includes the query string, if present.</span></span>



## Examples
 <span data-ttu-id="6fc0b-418">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.RawUrl%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-418">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-419">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-419">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadEntityBodyMode : System.Web.ReadEntityBodyMode" Usage="System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-420">要求エンティティ本体が読み取られたかどうかおよび読み取った方法 (読み取られた場合) を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-420">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span></span></summary>
        <value><span data-ttu-id="6fc0b-421">要求エンティティ本体がどのように読み取られたか、または読み取られていないことを示す値。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-421">The value that indicates how the request entity body was read, or that it has not been read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-422">このメソッドは、エンティティ本体が既に読み取られていて、互換性のないメソッドを使用して読み取りを試行した場合にスローされる例外を回避するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-422">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="6fc0b-423">エンティティ本体を読み取るメソッドとプロパティには、次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-423">Methods and properties that read the entity body include the following:</span></span>

-   <span data-ttu-id="6fc0b-424"><xref:System.Web.HttpRequest.Form%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-424">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>

-   <span data-ttu-id="6fc0b-425"><xref:System.Web.HttpRequest.Files%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-425">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>

-   <span data-ttu-id="6fc0b-426"><xref:System.Web.HttpRequest.InputStream%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-426">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>

-   <span data-ttu-id="6fc0b-427"><xref:System.Web.HttpRequest.GetBufferedInputStream%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-427">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>

-   <span data-ttu-id="6fc0b-428"><xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-428">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; }" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestContext As RequestContext" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); };" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext" Usage="System.Web.HttpRequest.RequestContext" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext with get, set" Usage="System.Web.HttpRequest.RequestContext" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-429">現在の要求の <see cref="T:System.Web.Routing.RequestContext" /> インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-429">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span></summary>
        <value><span data-ttu-id="6fc0b-430">現在の要求の <see cref="T:System.Web.Routing.RequestContext" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-430">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span> <span data-ttu-id="6fc0b-431">非ルーティング要求の場合、返される <see cref="T:System.Web.Routing.RequestContext" /> オブジェクトは空です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-431">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-432">このプロパティは、現在の要求に対する <xref:System.Web.Routing.RouteData> オブジェクトへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-432">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="6fc0b-433">ASP.NET ルーティングの詳細については、「」を参照してください。[ASP.NET ルーティング](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-433">For more information about ASP.NET routing, see.[ASP.NET Routing](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="6fc0b-434">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="6fc0b-434">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="6fc0b-435">方法: ルーティングページの URL パラメーターにアクセスする</span><span class="sxs-lookup"><span data-stu-id="6fc0b-435">How to: Access URL Parameters in a Routed Page</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.Web.HttpRequest.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-436">クライアントによって使用される HTTP データ転送メソッド (<see langword="GET" /> または <see langword="POST" />) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-436">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="6fc0b-437">クライアントから送信される HTTP 呼び出し型を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-437">A string representing the HTTP invocation type sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-438">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.RequestType%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-438">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-439">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-439">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string * bool -&gt; unit" Usage="httpRequest.SaveAs (filename, includeHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="6fc0b-440">物理ドライブ パス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-440">The physical drive path.</span></span></param>
        <param name="includeHeaders"><span data-ttu-id="6fc0b-441">HTTP ヘッダーをディスクに保存するかどうかを指定するブール値。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-441">A Boolean value specifying whether an HTTP header should be saved to disk.</span></span></param>
        <summary><span data-ttu-id="6fc0b-442">HTTP 要求をディスクに保存します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-442">Saves an HTTP request to disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-443">要求コンテキストをディスクに保存すると、デバッグに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-443">Saving the request context to disk can be useful in debugging.</span></span>



## Examples
 <span data-ttu-id="6fc0b-444">次のコード例では、ページが読み込まれるときに <xref:System.Web.HttpRequest.SaveAs%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-444">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="6fc0b-445">この呼び出しは、ASP.NET process id に書き込みアクセス許可が付与されているディレクトリにテキストファイルとして要求を保存すること、および要求に含まれるすべてのヘッダー情報がファイルに含まれることを指定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-445">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="6fc0b-446"><see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> の <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> プロパティが <see langword="true" /> に設定されていますが、<paramref name="filename" /> が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-446">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVariables : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.ServerVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-447">Web サーバー変数のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-447">Gets a collection of Web server variables.</span></span></summary>
        <value><span data-ttu-id="6fc0b-448">サーバー変数の <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-448">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-449">IIS でサポートされているサーバー変数の一覧については、「 [Iis サーバー変数](https://go.microsoft.com/fwlink/?LinkId=52471)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-449">For a list of server variables supported by IIS, see [IIS Server Variables](https://go.microsoft.com/fwlink/?LinkId=52471).</span></span>



## Examples
 <span data-ttu-id="6fc0b-450">次のコード例では、すべての名前付きサーバー変数の名前と値を表示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-450">The following code example displays the names and values of all named server variables.</span></span>

 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TimedOutToken : System.Threading.CancellationToken" Usage="System.Web.HttpRequest.TimedOutToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-451">要求がタイムアウトするとトリップされる <see cref="T:System.Threading.CancellationToken" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-451">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span></span></summary>
        <value><span data-ttu-id="6fc0b-452">キャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-452">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-453">タイムアウト期間は、web.config ファイルで指定することも (<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>を参照)、プログラムによって指定することもできます (<xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-453">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="6fc0b-454">タイムアウト期間は、要求が届いた時点から計測されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-454">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="6fc0b-455">既定のタイムアウトである110秒が有効な場合、キャンセルトークンは、要求の処理が開始されてから110秒以内にトリップされます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-455">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="6fc0b-456"><xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> プロパティの値を変更できます。このトークンがまだトリップしていない限り、新しいタイムアウト値が尊重されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-456">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>

 <span data-ttu-id="6fc0b-457">現在、トークンには15秒の粒度しか指定できません。つまり、タイムアウト値が110秒の場合、要求の処理が開始された後、110 ~ 125 秒の間にトークンがトリップします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-457">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="6fc0b-458">粒度は将来変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-458">The granularity may change in the future.</span></span>

 <span data-ttu-id="6fc0b-459">このプロパティはスレッドセーフですが、使用に関する制限があります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-459">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="6fc0b-460">詳細については、<xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-460">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="6fc0b-461">Websocket 要求の処理が開始されている場合、このプロパティは意味がありません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-461">This property is meaningless if WebSockets request processing has started.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TlsTokenBindingInfo : System.Web.ITlsTokenBindingInfo" Usage="System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-462">TLS トークンのバインド情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-462">Gets the TLS token binding information.</span></span> <span data-ttu-id="6fc0b-463">このプロパティによりアプリケーションは、強化された認証のために受信 HTTP 要求からトークンの情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-463">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span></span></summary>
        <value><span data-ttu-id="6fc0b-464">現在の接続のバインド トークンです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-464">The binding token for the current connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-465">このプロパティは、非 windows10 プラットフォームで `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-465">This property returns `null` on non-windows10 platforms.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalBytes : int" Usage="System.Web.HttpRequest.TotalBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-466">現在の入力ストリームのバイト数を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-466">Gets the number of bytes in the current input stream.</span></span></summary>
        <value><span data-ttu-id="6fc0b-467">入力ストリームのバイト数。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-467">The number of bytes in the input stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-468">次のコード例では、<xref:System.Web.HttpRequest.TotalBytes%2A> プロパティの値が1000バイトを超えているかどうかを判断し、その情報をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-468">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unvalidated : System.Web.UnvalidatedRequestValues" Usage="System.Web.HttpRequest.Unvalidated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-469">要求の検証をトリガーせずに HTTP 要求値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-469">Gets the HTTP request values without triggering request validation.</span></span></summary>
        <value><span data-ttu-id="6fc0b-470">要求の検証を使用してチェックされていない HTTP 要求値。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-470">The HTTP request values that have not been checked using request validation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-471">要求の検証では、クロスサイトスクリプティング攻撃の可能性を示す可能性がある HTML マークアップとスクリプトを確認します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-471">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="6fc0b-472">既定では、すべての値は、要求の検証を使用してチェックされます。また、マークアップまたはスクリプトが含まれている値がある場合、ASP.NET は <xref:System.Web.HttpRequestValidationException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-472">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="6fc0b-473">要求にマークアップが含まれていることが予想される場合 (たとえば、ユーザーがマークアップを含むコンテンツを投稿することを許可している場合)、要求の生の値を取得する必要がある場合は、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-473">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="6fc0b-474">このプロパティを使用する場合は、クロスサイトスクリプティング攻撃を受ける可能性があるかどうか、手動でデータを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-474">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.HttpRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-475">現在の要求の URL に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-475">Gets information about the URL of the current request.</span></span></summary>
        <value><span data-ttu-id="6fc0b-476">現在の要求の URL を格納している <see cref="T:System.Uri" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-476">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-477">次のコード例では、現在の要求の <xref:System.Uri> オブジェクトをオブジェクト変数に割り当て、URL オブジェクトの2つのプロパティの値を HTTP 出力に表示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-477">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>

 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Web.HttpRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-478">現在の URL にリンクされている、クライアントが前回要求した URL に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-478">Gets information about the URL of the client's previous request that linked to the current URL.</span></span></summary>
        <value><span data-ttu-id="6fc0b-479"><see cref="T:System.Uri" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-479">A <see cref="T:System.Uri" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-480">次のコード例では、クライアントを現在のアプリケーションに対して参照している URL の2つのプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-480">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>

 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="6fc0b-481">HTTP <see langword="Referer" /> 要求ヘッダーの形式が正しくなく、<see cref="T:System.Uri" /> オブジェクトに変換することはできません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-481">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.HttpRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-482">提供されているクライアント ブラウザーの生のユーザー エージェント文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-482">Gets the raw user agent string of the client browser that has been provided.</span></span> <span data-ttu-id="6fc0b-483">null も指定できる点にご注意ください。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-483">Please note it may be null.</span></span></summary>
        <value><span data-ttu-id="6fc0b-484">クライアント ブラウザーの生のユーザー エージェント文字列。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-484">The raw user agent string of the client browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-485">次のコード例では、要求元のブラウザーの型識別を文字列変数に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-485">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>

 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)"><span data-ttu-id="6fc0b-486">ASP.NET サーバーコントロールとブラウザー機能</span><span class="sxs-lookup"><span data-stu-id="6fc0b-486">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.HttpRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-487">リモート クライアントの IP ホスト アドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-487">Gets the IP host address of the remote client.</span></span></summary>
        <value><span data-ttu-id="6fc0b-488">リモート クライアントの IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-488">The IP address of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-489">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.UserHostAddress%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-489">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-490">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-490">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Web.HttpRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-491">リモート クライアントの DNS 名を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-491">Gets the DNS name of the remote client.</span></span></summary>
        <value><span data-ttu-id="6fc0b-492">リモート クライアントの DNS 名。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-492">The DNS name of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-493">次のコード例では、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用して、<xref:System.Web.HttpRequest.UserHostName%2A> プロパティの値を HTML エンコードし、<xref:System.IO.TextWriter.WriteLine%2A> メソッドを使用して、エンコードされた値をファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-493">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="6fc0b-494">このコード例は、<xref:System.Web.HttpRequest> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-494">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Web.HttpRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fc0b-495">クライアントの言語設定の並べ替えられた文字列配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-495">Gets a sorted string array of client language preferences.</span></span></summary>
        <value><span data-ttu-id="6fc0b-496">クライアント言語設定の並べ替えられた文字列配列。空の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-496">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="6fc0b-497">次のコード例では、<xref:System.Web.HttpRequest.UserLanguages%2A> プロパティによって返された複数の値を文字列配列にキャプチャし、各言語名を HTTP 出力の個別の行に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-497">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>

 <span data-ttu-id="6fc0b-498">言語名はブラウザーによって提供され、すべての使用可能なコードを明確に一覧表示することはできません。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-498">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="6fc0b-499">通常、これらは、言語の2文字のコード、ハイフン、およびカルチャの2文字のコードで構成されます。たとえば、米国英語の場合は "en-us"、カナダフランス語の場合は "fr-fr" になります。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-499">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>

 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : unit -&gt; unit" Usage="httpRequest.ValidateInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6fc0b-500"><see cref="P:System.Web.HttpRequest.Cookies" />、<see cref="P:System.Web.HttpRequest.Form" />、および <see cref="P:System.Web.HttpRequest.QueryString" /> の各プロパティを通じてアクセスするコレクションに対して検証を実行します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-500">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="6fc0b-501"><xref:System.Web.HttpRequest> クラスは、入力検証フラグを使用して、<xref:System.Web.HttpRequest.Cookies%2A>、<xref:System.Web.HttpRequest.Form%2A>、および <xref:System.Web.HttpRequest.QueryString%2A> プロパティを通じてアクセスされる要求コレクションに対して検証を実行するかどうかを追跡します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-501">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="6fc0b-502"><xref:System.Web.HttpRequest.ValidateInput%2A> メソッドは、<xref:System.Web.HttpRequest.Cookies%2A>、<xref:System.Web.HttpRequest.Form%2A>、または <xref:System.Web.HttpRequest.QueryString%2A> プロパティの get アクセサーが呼び出されると、入力の検証が実行されるように、これらのフラグを設定します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-502">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="6fc0b-503">検証は、すべての入力データをハードコーディングされた危険なデータのリストと比較することによって機能します。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-503">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>

 <span data-ttu-id="6fc0b-504">ページディレクティブまたは構成によって検証機能が有効になっている場合、このメソッドはページの `ProcessRequest` 処理フェーズ中に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-504">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="6fc0b-505">検証機能が有効になっていない場合は、コードから <xref:System.Web.HttpRequest.ValidateInput%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-505">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException"><span data-ttu-id="6fc0b-506">危険性の高いデータがクライアントから受信されました。</span><span class="sxs-lookup"><span data-stu-id="6fc0b-506">Potentially dangerous data was received from the client.</span></span></exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>
