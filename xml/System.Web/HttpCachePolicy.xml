<Type Name="HttpCachePolicy" FullName="System.Web.HttpCachePolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="646f5f267fa6e756edc16748616ece1b686bdeb3" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73398954" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCachePolicy sealed" />
  <TypeSignature Language="F#" Value="type HttpCachePolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>キャッシュ固有の HTTP ヘッダーを設定し、ASP.NET ページの出力キャッシュを制御するためのメソッドを含みます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTTP ヘッダーとキャッシュの制御に関する背景情報については、「RFC 2616: ハイパーテキスト転送プロトコル--HTTP/1.1」を参照してください。これは、 [World Wide Web コンソーシアム (W3C) の Web サイト](https://go.microsoft.com/fwlink/?linkid=37125)で入手できます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddValidationCallback">
      <MemberSignature Language="C#" Value="public void AddValidationCallback (System.Web.HttpCacheValidateHandler handler, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationCallback(class System.Web.HttpCacheValidateHandler handler, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidationCallback (handler As HttpCacheValidateHandler, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationCallback(System::Web::HttpCacheValidateHandler ^ handler, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.AddValidationCallback : System.Web.HttpCacheValidateHandler * obj -&gt; unit" Usage="httpCachePolicy.AddValidationCallback (handler, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.HttpCacheValidateHandler" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handler"><see cref="T:System.Web.HttpCacheValidateHandler" /> 値。</param>
        <param name="data">ユーザーが指定した、<see cref="M:System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)" /> デリゲートに戻される任意のデータ。</param>
        <summary>現在の応答の検証コールバックを登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> メソッドは、応答が出力キャッシュによってクライアントに返される前に、キャッシュ内でプログラムを使用して応答をチェックするメカニズムを提供します。  
  
 Web サーバーキャッシュから応答が提供される前に、すべての登録済みハンドラーに対してクエリを実行し、リソースの有効性を確認します。 キャッシュされた応答が無効であることを示すフラグがハンドラーによって設定されている場合、エントリは無効としてマークされ、キャッシュから expelled されます。 この場合、または、キャッシュされた応答がこの要求に対して無視されることを示すハンドラーがある場合、要求はキャッシュミスであるかのように処理されます。  
  
 <xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、クエリ文字列値に基づいて要求を検証するデリゲートを追加する方法を示します。  
  
 [!code-aspx-csharp[Cache Validation Callback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache validation callback/CS/ValidationCallbackcs.aspx#1)]
 [!code-aspx-vb[Cache Validation Callback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache validation callback/VB/ValidationCallbackvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定された <paramref name="handler" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendCacheExtension">
      <MemberSignature Language="C#" Value="public void AppendCacheExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendCacheExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.AppendCacheExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendCacheExtension (extension As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendCacheExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.AppendCacheExtension : string -&gt; unit" Usage="httpCachePolicy.AppendCacheExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension"><see langword="Cache-Control" /> ヘッダーに追加するテキスト。</param>
        <summary>指定したテキストを <see langword="Cache-Control" /> HTTP ヘッダーに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ブラウザーがキャッシュ制御ディレクティブまたは拡張機能を認識しない場合、ブラウザーは認識されていない用語を無視する必要があります。 詳細については、「RFC 2616: ハイパーテキスト転送プロトコル--HTTP/1.1」を参照してください。これは、 [World Wide Web コンソーシアム (W3C) の Web サイト](https://go.microsoft.com/fwlink/?linkid=37125)で入手できます。  
  
 <xref:System.Web.HttpCachePolicy.AppendCacheExtension%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、Internet Explorer でサポートされているキャッシュ制御拡張機能の使用方法を示しています。 サーバーは、コンテンツが1時間 (`pre-check=3600`) に変更されないことをブラウザーに示し、ローカルキャッシュから直接コンテンツを取得するように指示します。 ただし、コンテンツがサーバーによって変更され、15分 (`post-check= 900`) 以内にユーザーによってページが1時間に要求された場合、ブラウザーにはローカルキャッシュ内の情報が表示されますが、バックグラウンドチェックとオプションのフェッチも実行されます。サーバー上の新しいコンテンツ。  
  
 [!code-csharp[Classic HttpCachePolicy.AppendCacheExtension Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.AppendCacheExtension Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.AppendCacheExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.AppendCacheExtension Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="extension" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCacheability">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheability GetCacheability ();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.HttpCacheability GetCacheability() cil managed" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetCacheability" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCacheability () As HttpCacheability" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCacheability GetCacheability();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.GetCacheability : unit -&gt; System.Web.HttpCacheability" Usage="httpCachePolicy.GetCacheability " FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheability</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キャッシュ制御のディレクティブを取得します。</summary>
        <returns>キャッシュ制御のディレクティブ。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheExtensions">
      <MemberSignature Language="C#" Value="public string GetCacheExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCacheExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetCacheExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCacheExtensions () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCacheExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetCacheExtensions : unit -&gt; string" Usage="httpCachePolicy.GetCacheExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キャッシュ拡張を取得します。</summary>
        <returns>キャッシュ拡張。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetETag">
      <MemberSignature Language="C#" Value="public string GetETag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetETag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetETag" />
      <MemberSignature Language="VB.NET" Value="Public Function GetETag () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetETag();" />
      <MemberSignature Language="F#" Value="member this.GetETag : unit -&gt; string" Usage="httpCachePolicy.GetETag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ETag を取得します。</summary>
        <returns>ETag。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetETagFromFileDependencies">
      <MemberSignature Language="C#" Value="public bool GetETagFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetETagFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetETagFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetETagFromFileDependencies () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetETagFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.GetETagFromFileDependencies : unit -&gt; bool" Usage="httpCachePolicy.GetETagFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ハンドラーのファイルの依存関係のタイムスタンプに基づいて <see langword="ETag" /> ヘッダーが設定されているかどうかを示すステータスを取得します。</summary>
        <returns>ハンドラーのファイルの依存関係のタイムスタンプに基づいて <see langword="ETag" /> ヘッダーが設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpires">
      <MemberSignature Language="C#" Value="public DateTime GetExpires ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetExpires() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetExpires" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpires () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetExpires();" />
      <MemberSignature Language="F#" Value="member this.GetExpires : unit -&gt; DateTime" Usage="httpCachePolicy.GetExpires " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>期限切れのヘッダーを取得します。</summary>
        <returns>期限切れのヘッダー。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIgnoreRangeRequests">
      <MemberSignature Language="C#" Value="public bool GetIgnoreRangeRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIgnoreRangeRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetIgnoreRangeRequests" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIgnoreRangeRequests () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIgnoreRangeRequests();" />
      <MemberSignature Language="F#" Value="member this.GetIgnoreRangeRequests : unit -&gt; bool" Usage="httpCachePolicy.GetIgnoreRangeRequests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>無視する範囲の要求のステータスを取得します。</summary>
        <returns>範囲の要求が無視されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastModifiedFromFileDependencies">
      <MemberSignature Language="C#" Value="public bool GetLastModifiedFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetLastModifiedFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetLastModifiedFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastModifiedFromFileDependencies () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetLastModifiedFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.GetLastModifiedFromFileDependencies : unit -&gt; bool" Usage="httpCachePolicy.GetLastModifiedFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ハンドラーのファイルの依存関係のタイムスタンプの基とする Last-Modified ヘッダー設定の状態を取得します。</summary>
        <returns>ハンドラーのファイルの依存関係のタイムスタンプの基とする Last-Modified ヘッダーが設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan GetMaxAge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetMaxAge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetMaxAge" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMaxAge () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetMaxAge();" />
      <MemberSignature Language="F#" Value="member this.GetMaxAge : unit -&gt; TimeSpan" Usage="httpCachePolicy.GetMaxAge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キャッシュ制御の最長期間を取得します。</summary>
        <returns>キャッシュ制御の最長期間。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNoServerCaching">
      <MemberSignature Language="C#" Value="public bool GetNoServerCaching ();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetNoServerCaching() cil managed" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetNoServerCaching" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNoServerCaching () As Boolean" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetNoServerCaching();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.GetNoServerCaching : unit -&gt; bool" Usage="httpCachePolicy.GetNoServerCaching " FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の応答に対して、サーバーのキャッシュの状態を取得します。</summary>
        <returns>現在の応答に対して、サーバーのキャッシュが停止している場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNoStore">
      <MemberSignature Language="C#" Value="public bool GetNoStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetNoStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetNoStore" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNoStore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetNoStore();" />
      <MemberSignature Language="F#" Value="member this.GetNoStore : unit -&gt; bool" Usage="httpCachePolicy.GetNoStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ストアの状態を取得します。</summary>
        <returns>ストアが設定されていない場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNoTransforms">
      <MemberSignature Language="C#" Value="public bool GetNoTransforms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetNoTransforms() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetNoTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNoTransforms () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetNoTransforms();" />
      <MemberSignature Language="F#" Value="member this.GetNoTransforms : unit -&gt; bool" Usage="httpCachePolicy.GetNoTransforms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>HTTP 無変換ディレクティブの状態を取得します。</summary>
        <returns>HTTP 無変換ディレクティブが設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cache-control HTTP ヘッダーの送信を有効にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOmitVaryStar">
      <MemberSignature Language="C#" Value="public int GetOmitVaryStar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOmitVaryStar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetOmitVaryStar" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOmitVaryStar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOmitVaryStar();" />
      <MemberSignature Language="F#" Value="member this.GetOmitVaryStar : unit -&gt; int" Usage="httpCachePolicy.GetOmitVaryStar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see langword="vary:*" /> ヘッダーのステータスを取得します。</summary>
        <returns><see langword="vary:*" /> ヘッダーが省略されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyMaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan GetProxyMaxAge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetProxyMaxAge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetProxyMaxAge" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxyMaxAge () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetProxyMaxAge();" />
      <MemberSignature Language="F#" Value="member this.GetProxyMaxAge : unit -&gt; TimeSpan" Usage="httpCachePolicy.GetProxyMaxAge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>次の HTTP Cache-Control を取得します。Proxy Max Age。</summary>
        <returns>HTTP Cache-Control: Proxy Max Age。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRevalidation">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheRevalidation GetRevalidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.HttpCacheRevalidation GetRevalidation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetRevalidation" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRevalidation () As HttpCacheRevalidation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCacheRevalidation GetRevalidation();" />
      <MemberSignature Language="F#" Value="member this.GetRevalidation : unit -&gt; System.Web.HttpCacheRevalidation" Usage="httpCachePolicy.GetRevalidation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheRevalidation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>must-revalidate または proxy-revalidate ディレクティブを反映する Cache-Control: ヘッダーを取得します。</summary>
        <returns>must-revalidate または proxy-revalidate ディレクティブを反映する Cache-Control: ヘッダー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、このメソッドを使用して明示的に有効にしない限り、これらのディレクティブのいずれも送信されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime GetUtcLastModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetUtcLastModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetUtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUtcLastModified () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetUtcLastModified();" />
      <MemberSignature Language="F#" Value="member this.GetUtcLastModified : unit -&gt; DateTime" Usage="httpCachePolicy.GetUtcLastModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>世界協定時刻 (UTC) の <see langword="Last-Modified" /> HTTP ヘッダーの値を取得します。</summary>
        <returns><see langword="Last-Modified" /> HTTP ヘッダーの値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVaryByCustom">
      <MemberSignature Language="C#" Value="public string GetVaryByCustom ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetVaryByCustom() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetVaryByCustom" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVaryByCustom () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetVaryByCustom();" />
      <MemberSignature Language="F#" Value="member this.GetVaryByCustom : unit -&gt; string" Usage="httpCachePolicy.GetVaryByCustom " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>HTTP キャッシュを変更するために使用するカスタム文字列を取得します。</summary>
        <returns>HTTP キャッシュを変更するためのカスタム文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSlidingExpiration">
      <MemberSignature Language="C#" Value="public bool HasSlidingExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasSlidingExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.HasSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSlidingExpiration () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasSlidingExpiration();" />
      <MemberSignature Language="F#" Value="member this.HasSlidingExpiration : unit -&gt; bool" Usage="httpCachePolicy.HasSlidingExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キャッシュにスライディング有効期限ポリシーがあるかどうかを指定する値を取得します。</summary>
        <returns>キャッシュにスライディング有効期限ポリシーがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified ();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsModified() cil managed" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.IsModified" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function IsModified () As Boolean" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsModified();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.IsModified : unit -&gt; bool" Usage="httpCachePolicy.IsModified " FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>HTTP キャッシュが変更されたかどうかを指定する値を取得します。</summary>
        <returns>キャッシュが変更された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidUntilExpires">
      <MemberSignature Language="C#" Value="public bool IsValidUntilExpires ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValidUntilExpires() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.IsValidUntilExpires" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidUntilExpires () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidUntilExpires();" />
      <MemberSignature Language="F#" Value="member this.IsValidUntilExpires : unit -&gt; bool" Usage="httpCachePolicy.IsValidUntilExpires " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クライアントから送信された、キャッシュを無効にする HTTP <see langword="Cache-Control" /> ヘッダーを ASP.NET キャッシュで無視するかどうかを指定する値を取得します。</summary>
        <returns>クライアントから送信された HTTP <see langword="Cache-Control" /> ヘッダーを ASP.NET キャッシュで無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllowResponseInBrowserHistory">
      <MemberSignature Language="C#" Value="public void SetAllowResponseInBrowserHistory (bool allow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllowResponseInBrowserHistory(bool allow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllowResponseInBrowserHistory (allow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllowResponseInBrowserHistory(bool allow);" />
      <MemberSignature Language="F#" Value="member this.SetAllowResponseInBrowserHistory : bool -&gt; unit" Usage="httpCachePolicy.SetAllowResponseInBrowserHistory allow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allow">応答を履歴フォルダーに格納するようクライアントのブラウザーに指示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
        <summary><paramref name="allow" /> パラメーターが <see langword="true" /> の場合、サーバーの <see cref="T:System.Web.HttpCacheability" /> の設定に関係なく、クライアント ブラウザーの履歴キャッシュに応答を格納できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCacheability> が <xref:System.Web.HttpCacheability.NoCache> または <xref:System.Web.HttpCacheability.ServerAndNoCache> に設定されている場合、既定では `Expires` HTTP ヘッダーは-1 に設定されます。これにより、クライアントは、履歴フォルダーに応答をキャッシュしないように指示します。そのため、[戻る] ボタンと [進む] ボタンを使用すると、クライアントは毎回新しいバージョンの応答を要求します。 この動作をオーバーライドするには、`allow` パラメーターを `true`に設定して <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> メソッドを呼び出します。  
  
 <xref:System.Web.HttpCacheability> が <xref:System.Web.HttpCacheability.NoCache> または <xref:System.Web.HttpCacheability.ServerAndNoCache>以外の値に設定されている場合は、いずれかの `allow` 値を使用して <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> メソッドを呼び出すと効果がありません。  
  
 <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> メソッドをオーバーライドして、応答をカスタム <xref:System.Web.HttpCachePolicy>の履歴に格納するようにクライアントに指示する方法を示しています。  
  
 [!code-aspx-csharp[HttpCachePolicySetAllowResponseInBrowserHistory#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicySetAllowResponseInBrowserHistory/CS/httpcachepolicy_setallowresponseinbrowserhistorycs.aspx#1)]
 [!code-aspx-vb[HttpCachePolicySetAllowResponseInBrowserHistory#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicySetAllowResponseInBrowserHistory/VB/httpcachepolicy_setallowresponseinbrowserhistoryvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCacheability">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see langword="Cache-Control" /> HTTP ヘッダーを設定します。 <see langword="Cache-Control" /> HTTP ヘッダーは、ドキュメントをネットワーク上でキャッシュする方法を制御します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCacheability">
      <MemberSignature Language="C#" Value="public void SetCacheability (System.Web.HttpCacheability cacheability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheability(valuetype System.Web.HttpCacheability cacheability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheability (cacheability As HttpCacheability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheability(System::Web::HttpCacheability cacheability);" />
      <MemberSignature Language="F#" Value="member this.SetCacheability : System.Web.HttpCacheability -&gt; unit" Usage="httpCachePolicy.SetCacheability cacheability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheability" Type="System.Web.HttpCacheability" />
      </Parameters>
      <Docs>
        <param name="cacheability"><see cref="T:System.Web.HttpCacheability" /> 列挙値。</param>
        <summary><see langword="Cache-Control" /> ヘッダーに <see cref="T:System.Web.HttpCacheability" /> 値のいずれかを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetCacheability%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、`Cache-Control` ヘッダーを `no-cache`の列挙値に設定する方法を示しています。  
  
 [!code-csharp[Classic HttpCachePolicy.SetCacheability Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetCacheability Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="cacheability" /> は列挙値のいずれでもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetCacheability">
      <MemberSignature Language="C#" Value="public void SetCacheability (System.Web.HttpCacheability cacheability, string field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheability(valuetype System.Web.HttpCacheability cacheability, string field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheability (cacheability As HttpCacheability, field As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheability(System::Web::HttpCacheability cacheability, System::String ^ field);" />
      <MemberSignature Language="F#" Value="member this.SetCacheability : System.Web.HttpCacheability * string -&gt; unit" Usage="httpCachePolicy.SetCacheability (cacheability, field)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheability" Type="System.Web.HttpCacheability" />
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheability">ヘッダーに設定する <see cref="T:System.Web.HttpCacheability" /> 列挙値。</param>
        <param name="field">ヘッダーに追加するキャッシュ制御ヘッダーの拡張文字列。</param>
        <summary><see langword="Cache-Control" /> ヘッダーに <see cref="T:System.Web.HttpCacheability" /> 値のいずれかを設定し、ディレクティブに拡張文字列を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フィールド名の拡張子は、`private` または `no-cache` ディレクティブと共に使用する場合にのみ有効です。 詳細については、「RFC 2616: ハイパーテキスト転送プロトコル--HTTP/1.1」を参照してください。これは、 [World Wide Web コンソーシアム (W3C) の Web サイト](https://go.microsoft.com/fwlink/?linkid=37125)で入手できます。  
  
 互換性のないディレクティブと拡張機能を組み合わせた場合、このメソッドは無効な引数例外をスローします。  
  
 <xref:System.Web.HttpCachePolicy.SetCacheability%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、`Cache-Control` ヘッダーを列挙値 `private` に設定し、cache-control 拡張機能を追加する方法を示しています。 変更されたディレクティブは、共有されていないキャッシュに加えて、"DEV" という名前のコミュニティのメンバーだけが共有するキャッシュは、応答をキャッシュする可能性があることを意味します。  
  
 [!code-csharp[Classic HttpCachePolicy.SetCacheability1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetCacheability1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="field" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cacheability" /> が、<see cref="F:System.Web.HttpCacheability.Private" /> でも <see cref="F:System.Web.HttpCacheability.NoCache" /> でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetETag">
      <MemberSignature Language="C#" Value="public void SetETag (string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetETag(string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetETag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetETag (etag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetETag(System::String ^ etag);" />
      <MemberSignature Language="F#" Value="member this.SetETag : string -&gt; unit" Usage="httpCachePolicy.SetETag etag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="etag"><see langword="ETag" /> ヘッダーで使用するテキスト。</param>
        <summary><see langword="ETag" /> HTTP ヘッダーを、指定した文字列に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ETag` ヘッダーは、ドキュメントの特定のバージョンを表す一意の識別子です。 クライアントでキャッシュされたコンテンツを再要求しないように検証するために使用されます。 `ETag` ヘッダーが設定されると、それ以降の設定の試行は失敗し、例外がスローされます。  
  
 <xref:System.Web.HttpCachePolicy.SetETag%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、`ETag` ヘッダーをカスタム値に設定する方法を示しています。  
  
 [!code-csharp[Classic HttpCachePolicy.SetETag Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETag Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetETag Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETag Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="etag" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException"><see langword="ETag" /> ヘッダーが既に設定されています。  
  
- または - 
<see cref="M:System.Web.HttpCachePolicy.SetETagFromFileDependencies" /> が既に呼び出されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetETagFromFileDependencies">
      <MemberSignature Language="C#" Value="public void SetETagFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetETagFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetETagFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetETagFromFileDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetETagFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.SetETagFromFileDependencies : unit -&gt; unit" Usage="httpCachePolicy.SetETagFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ハンドラーのファイル依存関係のタイムスタンプに基づいて <see langword="ETag" /> HTTP ヘッダーを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> メソッドは、ハンドラーが依存しているすべてのファイルの最後に変更されたタイムスタンプを取得して `ETag` ヘッダーを設定し、すべてのファイル名とタイムスタンプを1つの文字列に結合し、その文字列をと @no_ して使用される1つのダイジェストにハッシュします。_t_2_ .`ETag`  
  
 <xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、`ETag` ヘッダーを設定する方法を示しています。  
  
 [!code-csharp[Classic HttpCachePolicy.SetETagFromFileDependencies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETagFromFileDependencies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetETagFromFileDependencies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETagFromFileDependencies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see langword="ETag" /> ヘッダーは既に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetExpires(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExpires (date As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExpires(DateTime date);" />
      <MemberSignature Language="F#" Value="member this.SetExpires : DateTime -&gt; unit" Usage="httpCachePolicy.SetExpires date" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date"><see langword="Expires" /> ヘッダーに設定する <see cref="T:System.DateTime" /> 値 (絶対時間)。</param>
        <summary><see langword="Expires" /> HTTP ヘッダーを絶対日時に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有効期限が昇順の原則に違反している場合、このメソッドは失敗します。  
  
   
  
## Examples  
 有効期限を 6:00 P.M. に設定する方法を次のコード例に示します。 現在の有効期限日の現地時刻。  
  
 [!code-csharp[Classic HttpCachePolicy.SetExpires Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetExpires Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetExpires Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetExpires Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastModified">
      <MemberSignature Language="C#" Value="public void SetLastModified (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLastModified(valuetype System.DateTime date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastModified (date As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastModified(DateTime date);" />
      <MemberSignature Language="F#" Value="member this.SetLastModified : DateTime -&gt; unit" Usage="httpCachePolicy.SetLastModified date" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date"><see langword="Last-Modified" /> ヘッダーの新しい <see cref="T:System.DateTime" /> 値です。</param>
        <summary><see langword="Last-Modified" /> HTTP ヘッダーの値を、提供された <see cref="T:System.DateTime" /> の値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Last-Modified` HTTP ヘッダーは、ドキュメントが最後に変更された日時を示す `DateTime` 値を使用してドキュメントにスタンプします。  
  
 キャッシュの昇順階層に違反すると、このメソッドは失敗します。  
  
 <xref:System.Web.HttpCachePolicy.SetLastModified%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、`Last-Modified` ヘッダーを新しい日付に設定する方法を示しています。  
  
 [!code-csharp[Classic HttpCachePolicy.SetLastModified Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModified Example/cs/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetLastModified Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="date" /> は現在の <see langword="DateTime" /> よりも後です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLastModifiedFromFileDependencies">
      <MemberSignature Language="C#" Value="public void SetLastModifiedFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLastModifiedFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastModifiedFromFileDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastModifiedFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.SetLastModifiedFromFileDependencies : unit -&gt; unit" Usage="httpCachePolicy.SetLastModifiedFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ハンドラーのファイル依存関係のタイムスタンプに基づいて <see langword="Last-Modified" /> HTTP ヘッダーを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A> メソッドを使用して `Last-Modified` ヘッダーを設定する方法を示しています。  
  
 [!code-csharp[Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxAge">
      <MemberSignature Language="C#" Value="public void SetMaxAge (TimeSpan delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMaxAge(valuetype System.TimeSpan delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetMaxAge(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMaxAge (delta As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMaxAge(TimeSpan delta);" />
      <MemberSignature Language="F#" Value="member this.SetMaxAge : TimeSpan -&gt; unit" Usage="httpCachePolicy.SetMaxAge delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delta"><see langword="Cache" /> - <see langword="Control: max-age" /> ヘッダーを設定するために使用する期間。</param>
        <summary>指定した期間に基づいて <see langword="Cache-Control: max-age" /> HTTP ヘッダーを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Max-age` は、ドキュメントが古くなっていると見なされるまでの最大絶対時間です。  
  
 <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> メソッドはスライド式有効期限を使用しないため、有効期限が昇順の原則に違反すると失敗します。  
  
 <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
> [!NOTE]
>  <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> メソッドが繰り返し呼び出された場合、2回目以降の呼び出しでは、最大有効期間の値のみを減らすことができます。  
  
   
  
## Examples  
 次のコード例では、`Cache-Control: max-age` ヘッダーを0時間、30分、および0秒に設定する方法を示します。  
  
 [!code-csharp[Classic HttpCachePolicy.SetMaxAge Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetMaxAge Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetMaxAge Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetMaxAge Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="delta" /> が 0 未満か、1 年を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetNoServerCaching">
      <MemberSignature Language="C#" Value="public void SetNoServerCaching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoServerCaching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetNoServerCaching" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoServerCaching ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoServerCaching();" />
      <MemberSignature Language="F#" Value="member this.SetNoServerCaching : unit -&gt; unit" Usage="httpCachePolicy.SetNoServerCaching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の応答に対して、送信元サーバーによるすべてのキャッシュを停止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 配信元サーバー上のドキュメントのキャッシュを明示的に拒否します。 設定すると、ドキュメントに対するすべての要求が完全に処理されます。 このメソッドが呼び出されると、現在の応答に対してキャッシュを再度有効にすることはできません。  
  
 <xref:System.Web.HttpCachePolicy.SetNoServerCaching%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、応答の残りの部分で出力キャッシュを無効にする方法を示しています。  
  
 [!code-csharp[Classic HttpCachePolicy.SetNoServerCaching Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoServerCaching Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetNoServerCaching Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoServerCaching Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoStore">
      <MemberSignature Language="C#" Value="public void SetNoStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetNoStore" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoStore ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoStore();" />
      <MemberSignature Language="F#" Value="member this.SetNoStore : unit -&gt; unit" Usage="httpCachePolicy.SetNoStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see langword="Cache-Control: no-store" /> HTTP ヘッダーを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Web.HttpCachePolicy> クラスの <xref:System.Web.HttpCachePolicy.SetNoStore%2A> メソッドを使用して、応答を履歴に格納しないようにクライアントに指示する方法を示しています。  
  
 [!code-aspx-csharp[HttpCachePolicySetNoStore#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicySetNoStore/CS/httpcachepolicy_setnostorecs.aspx#1)]
 [!code-aspx-vb[HttpCachePolicySetNoStore#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicySetNoStore/VB/httpcachepolicy_setnostorevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoTransforms">
      <MemberSignature Language="C#" Value="public void SetNoTransforms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoTransforms() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetNoTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoTransforms ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoTransforms();" />
      <MemberSignature Language="F#" Value="member this.SetNoTransforms : unit -&gt; unit" Usage="httpCachePolicy.SetNoTransforms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see langword="Cache-Control: no-transform" /> HTTP ヘッダーを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Cache-Control: no-transform` HTTP ヘッダーは、ドキュメントを変更しないようにネットワークキャッシュアプリケーションに指示します。  
  
 `Cache-Control: no-transform` HTTP ヘッダーは、`Content-Encoding`、`Content-Range`、または `Content-Type` ヘッダーによって指定されたヘッダー値 (エンティティ本体を含む) がダウンストリームプロキシサーバーによって変更されるのを防ぎます。 たとえば、プロキシを使用して GIF イメージを PNG に変換することはできません。  
  
 キャッシュに関する他の制限と同様に、<xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> を呼び出すと、<xref:System.Web.HttpCachePolicy> インターフェイスを介して `Cache-Control: no-transform` HTTP ヘッダーを無効にすることはできません。  
  
 <xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、`Cache-Control: no-transform` ディレクティブを現在の応答と共に送信する方法を示しています。  
  
 [!code-csharp[Classic HttpCachePolicy.SetNoTransforms Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoTransforms Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetNoTransforms Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoTransforms Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOmitVaryStar">
      <MemberSignature Language="C#" Value="public void SetOmitVaryStar (bool omit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOmitVaryStar(bool omit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOmitVaryStar (omit As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOmitVaryStar(bool omit);" />
      <MemberSignature Language="F#" Value="member this.SetOmitVaryStar : bool -&gt; unit" Usage="httpCachePolicy.SetOmitVaryStar omit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="omit" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="omit"><see cref="T:System.Web.HttpCachePolicy" /> が <see cref="P:System.Web.HttpCachePolicy.VaryByHeaders" /> プロパティに * 値を使用しないよう指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>パラメーターによって応答が変更される場合に、応答に <see langword="vary:*" /> ヘッダーを含めるかどうかを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、キャッシュされた応答がパラメーターによって異なる場合に、出力 ached が送信応答に `vary:*` ヘッダーを追加できないようにすることができます。 これは、クライアントがクエリ文字列によってキャッシュを異なる場合に便利です。ほとんどのクライアントは、`vary:*` ヘッダーを必要とせずに、クエリ文字列によって自動的に変化するためです。  
  
> [!NOTE]
>  `vary:*` ヘッダーを使用すると、すべてのクライアントキャッシュを無効にすることができます。  
  
 これは、<xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> プロパティに影響を与える便利な方法です。 メソッドに `true` を渡すと、<xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> プロパティの * 値を無視するように <xref:System.Web.HttpCachePolicy> に指示されます。  
  
 <xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProxyMaxAge">
      <MemberSignature Language="C#" Value="public void SetProxyMaxAge (TimeSpan delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProxyMaxAge(valuetype System.TimeSpan delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetProxyMaxAge(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProxyMaxAge (delta As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProxyMaxAge(TimeSpan delta);" />
      <MemberSignature Language="F#" Value="member this.SetProxyMaxAge : TimeSpan -&gt; unit" Usage="httpCachePolicy.SetProxyMaxAge delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delta"><see langword="Cache-Control: s-maxage" /> ヘッダーを設定するために使用する期間。</param>
        <summary>指定した期間に基づいて <see langword="Cache-Control: s-maxage" /> HTTP ヘッダーを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> メソッドはスライド式有効期限を使用しないため、有効期限が昇順の原則に違反すると失敗します。  
  
 <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、`Cache-Control: s-maxage` ヘッダーを0時間、30分、および0秒に設定する方法を示します。  
  
 [!code-csharp[Classic HttpCachePolicy.SetProxyMaxAge Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetProxyMaxAge Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetProxyMaxAge Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetProxyMaxAge Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="delta" /> が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetRevalidation">
      <MemberSignature Language="C#" Value="public void SetRevalidation (System.Web.HttpCacheRevalidation revalidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRevalidation(valuetype System.Web.HttpCacheRevalidation revalidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetRevalidation(System.Web.HttpCacheRevalidation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRevalidation (revalidation As HttpCacheRevalidation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRevalidation(System::Web::HttpCacheRevalidation revalidation);" />
      <MemberSignature Language="F#" Value="member this.SetRevalidation : System.Web.HttpCacheRevalidation -&gt; unit" Usage="httpCachePolicy.SetRevalidation revalidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="revalidation" Type="System.Web.HttpCacheRevalidation" />
      </Parameters>
      <Docs>
        <param name="revalidation"><see langword="Cache-Control" /> ヘッダーに設定する <see cref="T:System.Web.HttpCacheRevalidation" /> 列挙値。</param>
        <summary>提供された列挙値に基づいて、<see langword="Cache-Control" /> HTTP ヘッダーを <see langword="must-revalidate" /> ディレクティブ、または <see langword="proxy-revalidate" /> ディレクティブのいずれかに設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定値は <xref:System.Web.HttpCacheRevalidation.None>に相当しますが、このメソッドによって明示的に指定されていない限り、ヘッダーにはいずれのディレクティブも送信されません。  
  
 <xref:System.Web.HttpCachePolicy.SetRevalidation%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、キャッシュの再有効化を <xref:System.Web.HttpCacheRevalidation.AllCaches>に設定する方法を示しています。  
  
 [!code-csharp[Classic HttpCachePolicy.SetRevalidation Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetRevalidation Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetRevalidation Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetRevalidation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="revalidation" /> は列挙値のいずれでもありません。</exception>
        <altmember cref="T:System.Web.HttpCacheRevalidation" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool slide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool slide) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSlidingExpiration (slide As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSlidingExpiration(bool slide);" />
      <MemberSignature Language="F#" Value="member this.SetSlidingExpiration : bool -&gt; unit" Usage="httpCachePolicy.SetSlidingExpiration slide" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slide" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="slide"><see langword="true" /> または <see langword="false" />。</param>
        <summary>キャッシュの有効期限を絶対から変化に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キャッシュの有効期限がスライディングに設定されている場合、`Cache-Control` HTTP ヘッダーは各応答で更新されます。 この有効期限モードは、現在の時刻を基準とするすべての出力セットに有効期限ヘッダーを追加する IIS 構成オプションと同じです。  
  
 スライド式の有効期限を明示的に off (`false`) に設定した場合、その設定は維持され、スライド式有効期限を有効にしようとすると、警告が表示されなくなります。 このメソッドは、HTTP ヘッダーに直接マップされません。 これは、後続のモジュールまたはワーカー要求で、配信元サーバーキャッシュポリシーを設定するために使用されます。  
  
 <xref:System.Web.HttpCachePolicy.SetSlidingExpiration%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、スライド式有効期限を `true`に設定する方法を示しています。  
  
 [!code-csharp[Classic HttpCachePolicy.SetSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidUntilExpires">
      <MemberSignature Language="C#" Value="public void SetValidUntilExpires (bool validUntilExpires);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValidUntilExpires(bool validUntilExpires) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetValidUntilExpires(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValidUntilExpires (validUntilExpires As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValidUntilExpires(bool validUntilExpires);" />
      <MemberSignature Language="F#" Value="member this.SetValidUntilExpires : bool -&gt; unit" Usage="httpCachePolicy.SetValidUntilExpires validUntilExpires" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validUntilExpires" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validUntilExpires">キャッシュが <see langword="true" /> 無効化ヘッダーを無視する場合は <see langword="Cache-Control" />。それ以外の場合は <see langword="false" />。</param>
        <summary>クライアントから送信された、キャッシュを無効にする HTTP <see langword="Cache-Control" /> ヘッダーを ASP.NET キャッシュで無視するかどうかを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> メソッドは、高レベルの `<%@ OutputCache … %>` ページディレクティブが使用されるときに、自動的に `true` するように設定されます。  
  
 このメソッドは、ページビューを更新するときに HTTP キャッシュ無効化ヘッダーを Web サーバーに送信し、キャッシュからページを削除することによって、いくつかのブラウザーによって提供されます。 `validUntilExpires` パラメーターが `true`場合、ASP.NET はキャッシュの無効化ヘッダーを無視し、ページは有効期限が切れるまでキャッシュに残ります。  
  
 <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> メソッドを使用して、クライアントによって送信されるキャッシュ無効化ヘッダーをすべて無視するように指示する方法を示します。  
  
 [!code-aspx-csharp[HttpCachePolicy_SetValidUntilExpires#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicy_SetValidUntilExpires/CS/httpcachepolicy_setvaliduntilexpirescs.aspx#1)]
 [!code-aspx-vb[HttpCachePolicy_SetValidUntilExpires#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicy_SetValidUntilExpires/VB/httpcachepolicy_setvaliduntilexpiresvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string custom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string custom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetVaryByCustom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVaryByCustom (custom As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVaryByCustom(System::String ^ custom);" />
      <MemberSignature Language="F#" Value="member this.SetVaryByCustom : string -&gt; unit" Usage="httpCachePolicy.SetVaryByCustom custom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="custom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="custom">キャッシュされている出力の変更に使用するテキスト文字列。</param>
        <summary>キャッシュされている出力応答の変更に使用するカスタム テキスト文字列を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetVaryByCustom%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、カスタムの vary 文字列を "Accept-Charset" に設定する方法を示しています。これにより、元のサーバーのキャッシュは、ブラウザーの `Accept-Charset` ヘッダーに応じて、キャッシュされた応答の1つを選択します。  
  
 [!code-csharp[Classic HttpCachePolicy.SetVaryByCustom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetVaryByCustom Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetVaryByCustom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetVaryByCustom Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="custom" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Web.HttpCachePolicy.SetVaryByCustom(System.String)" /> メソッドは既に呼び出されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="UtcTimestampCreated">
      <MemberSignature Language="C#" Value="public DateTime UtcTimestampCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcTimestampCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.UtcTimestampCreated" />
      <MemberSignature Language="VB.NET" Value="Public Property UtcTimestampCreated As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcTimestampCreated { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.UtcTimestampCreated : DateTime with get, set" Usage="System.Web.HttpCachePolicy.UtcTimestampCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.HttpCachePolicy" /> の協定世界時 (UTC) のタイムスタンプを取得または設定します。</summary>
        <value><see cref="T:System.DateTime" /> の <see cref="T:System.Web.HttpCachePolicy" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByContentEncodings">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.VaryByContentEncodings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByContentEncodings As HttpCacheVaryByContentEncodings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByContentEncodings ^ VaryByContentEncodings { System::Web::HttpCacheVaryByContentEncodings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByContentEncodings : System.Web.HttpCacheVaryByContentEncodings" Usage="System.Web.HttpCachePolicy.VaryByContentEncodings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByContentEncodings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>出力キャッシュの変更に使用する <see langword="Content-Encoding" /> ヘッダーのリストを取得します。</summary>
        <value>キャッシュされた応答を選択するために使用される <see langword="Content-Encoding" /> ヘッダーを指定するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> プロパティは、によって出力キャッシュを変更するための圧縮スキームを表すコンテンツエンコードヘッダーの一覧を返します。 動的に圧縮された応答をキャッシュすることは、リソースの最初の要求時に、圧縮コストが1回だけ発生することを意味します。  
  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> プロパティは、動的に圧縮されるさまざまなコンテンツエンコーディングに対してキャッシュされた応答を処理する方法を決定するために、要求の `Accept-Encoding` ヘッダーと共に使用されます。 Accept Encoding ヘッダーには、クライアントが圧縮解除できるエンコーディングが一覧表示されます。  
  
 コンテンツエンコーディングによって異なるキャッシュを設定すると、`Accept-Encoding` ヘッダーの値によって応答が間接的に変更されます。 要求が処理されると、`Accept-Encoding` ヘッダーが確認され、最初に許容されるエンコーディングが識別され、次のいずれかの操作を実行するために使用されます。  
  
-   一致するエンコーディングが <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> リストにあり、キャッシュされた応答が存在する場合は、キャッシュされた応答が送信されます。  
  
-   一致するエンコーディングが <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> リストにあり、キャッシュされた応答が存在しない場合は、応答が生成され、キャッシュに挿入されます。  
  
-   一致するエンコードが <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> リストに見つからない場合、キャッシュはエンコードされていない応答 (id 応答とも呼ばれる) を検索します。 エンコードされていない応答が見つかった場合は、送信されます。 それ以外の場合は、新しいエンコードされていない応答が生成され、送信されて、キャッシュに格納されます。  
  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> プロパティの詳細については、「RFC 2616: ハイパーテキスト転送プロトコル--HTTP/1.1」を参照してください。これは、 [W3C (World Wide Web コンソーシアム) Web サイト](https://go.microsoft.com/fwlink/?linkid=37125)で入手できます。 コンテンツエンコーディングの詳細については、セクション14の「ヘッダーフィールドの定義」を参照してください。  
  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> プロパティを設定するには、 [@ OutputCache](https://msdn.microsoft.com/library/28a9e101-fb44-4198-9cb6-b8a52312fec2)ディレクティブの `VaryByContentEncodings` 属性を使用します。 また、web.config ファイルの[Outputcacheprofile](https://msdn.microsoft.com/library/6df16c27-207d-4b52-9a6e-b3a541222b3d)要素にキャッシュプロファイルを追加することもできます。  
  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
   
  
## Examples  
 次の例では、出力キャッシュからページを処理するために、動的に圧縮された応答を有効にする方法を示します。 許容されるエンコーディングは "gzip" であり、 [@ OutputCache](https://msdn.microsoft.com/library/28a9e101-fb44-4198-9cb6-b8a52312fec2)ディレクティブの `VaryByContentEncodings` 属性を使用して設定されます。 ページをホストしている Web サーバーで動的圧縮が有効になっていない場合、出力キャッシュには、指定されたコンテンツエンコーディングに基づくキャッシュされた応答がありません。  
  
 [!code-aspx-csharp[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/VB/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.ContentEncoding" />
        <altmember cref="T:System.Web.HttpCacheVaryByContentEncodings" />
      </Docs>
    </Member>
    <Member MemberName="VaryByHeaders">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByHeaders VaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByHeaders VaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.VaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByHeaders As HttpCacheVaryByHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByHeaders ^ VaryByHeaders { System::Web::HttpCacheVaryByHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByHeaders : System.Web.HttpCacheVaryByHeaders" Usage="System.Web.HttpCachePolicy.VaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュ出力の変更に使用されるすべての HTTP ヘッダーの一覧を取得します。</summary>
        <value>キャッシュされた応答を選択するために使用する HTTP ヘッダーを指定する <see cref="T:System.Web.HttpCacheVaryByHeaders" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キャッシュされた項目に複数の異なるヘッダーがある場合は、HTTP ヘッダーの種類ごとに、要求されたドキュメントの別のバージョンをキャッシュから取得できます。  
  
 <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)" />
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.VaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByParams As HttpCacheVaryByParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByParams ^ VaryByParams { System::Web::HttpCacheVaryByParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParams : System.Web.HttpCacheVaryByParams" Usage="System.Web.HttpCachePolicy.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP <see langword="GET" /> または HTTP <see langword="POST" /> によって受信された、キャッシュに影響するパラメーターの一覧を取得します。</summary>
        <value>キャッシュされた応答を選択するために使用するキャッシュ制御ヘッダーを指定する <see cref="T:System.Web.HttpCacheVaryByParams" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求されたドキュメントの個別のバージョンは、<xref:System.Web.HttpCachePolicy.VaryByParams%2A> コレクション内の名前付きパラメーターごとにキャッシュから取得できます。  
  
 <xref:System.Web.HttpCachePolicy.VaryByParams%2A> は .NET Framework バージョン3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>
