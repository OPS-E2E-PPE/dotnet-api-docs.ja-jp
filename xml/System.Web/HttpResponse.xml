<Type Name="HttpResponse" FullName="System.Web.HttpResponse">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9107f5d6488ee6167f6ba9ccbfefca02b9f561f" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73398861" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpResponse" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpResponse" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpResponse sealed" />
  <TypeSignature Language="F#" Value="type HttpResponse = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="51a62-101">ASP.NET 操作からの HTTP 応答情報をカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="51a62-101">Encapsulates HTTP-response information from an ASP.NET operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-102"><xref:System.Web.HttpResponse> クラスのメソッドとプロパティは、<xref:System.Web.HttpApplication>、<xref:System.Web.HttpContext>、<xref:System.Web.UI.Page>、および <xref:System.Web.UI.UserControl> クラスの <xref:System.Web.HttpApplication.Response%2A> プロパティを通じて公開されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-102">The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the <xref:System.Web.HttpApplication.Response%2A> property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="51a62-103"><xref:System.Web.HttpResponse> クラスの次のメソッドは、ポストバックシナリオでのみサポートされており、非同期ポストバックシナリオではサポートされません。</span><span class="sxs-lookup"><span data-stu-id="51a62-103">The following methods of the <xref:System.Web.HttpResponse> class are supported only in post back scenarios and not in asynchronous post back scenarios:</span></span>  
  
-   <xref:System.Web.HttpResponse.BinaryWrite%2A>  
  
-   <xref:System.Web.HttpResponse.Clear%2A>  
  
-   <xref:System.Web.HttpResponse.ClearContent%2A>  
  
-   <xref:System.Web.HttpResponse.ClearHeaders%2A>  
  
-   <xref:System.Web.HttpResponse.Close%2A>  
  
-   <xref:System.Web.HttpResponse.End%2A>  
  
-   <xref:System.Web.HttpResponse.Flush%2A>  
  
-   <xref:System.Web.HttpResponse.TransmitFile%2A>  
  
-   <xref:System.Web.HttpResponse.Write%2A>  
  
-   <xref:System.Web.HttpResponse.WriteFile%2A>  
  
-   <xref:System.Web.HttpResponse.WriteSubstitution%2A>  
  
 <span data-ttu-id="51a62-104">ページ全体をポストバックで更新するのではなく、<xref:System.Web.UI.UpdatePanel> コントロールを使用してページの選択した領域を更新すると、部分ページ更新が有効になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-104">Partial-page updates are enabled when you use <xref:System.Web.UI.UpdatePanel> controls to update selected regions of a page instead of updating the whole page with a post back.</span></span> <span data-ttu-id="51a62-105">詳細については、「 [UpdatePanel コントロールの概要](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)」および「[部分ページレンダリングの概要](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-105">For more information, see [UpdatePanel Control Overview](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) and [Partial-Page Rendering Overview](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-106">次の例では、ページが要求されたときに、3つの重なり合う四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="51a62-106">The following example draws three overlapping rectangles when the page is requested.</span></span> <span data-ttu-id="51a62-107">このコードでは、最初に <xref:System.Web.HttpResponse.ContentType%2A> プロパティを image/jpeg に設定します。これにより、ページ全体が JPEG イメージとしてレンダリングされます。</span><span class="sxs-lookup"><span data-stu-id="51a62-107">The code begins by setting the <xref:System.Web.HttpResponse.ContentType%2A> property to image/jpeg, so that the entire page will be rendered as a JPEG image.</span></span> <span data-ttu-id="51a62-108">次に、このコードは <xref:System.Web.HttpResponse.Clear%2A> メソッドを呼び出して、この応答と共に余分なコンテンツが送信されないようにします。</span><span class="sxs-lookup"><span data-stu-id="51a62-108">The code then calls the <xref:System.Web.HttpResponse.Clear%2A> method to ensure that no extraneous content is sent with this response.</span></span> <span data-ttu-id="51a62-109">次に、コードは <xref:System.Web.HttpResponse.BufferOutput%2A> プロパティを true に設定して、要求元のクライアントに送信される前にページが完全に処理されるようにします。</span><span class="sxs-lookup"><span data-stu-id="51a62-109">Next, the code sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the page is completely processed before it is sent to the requesting client.</span></span> <span data-ttu-id="51a62-110">その後、四角形の描画に使用する2つのオブジェクト (<xref:System.Drawing.Bitmap> と <xref:System.Drawing.Graphics> オブジェクト) が作成されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-110">Two objects used to draw the rectangles are then created: a <xref:System.Drawing.Bitmap> and a <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="51a62-111">ページで作成された変数は、四角形と、最大の四角形の内側に表示される文字列を描画するための座標として使用されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-111">The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.</span></span>  
  
 <span data-ttu-id="51a62-112">3つの四角形とその中に表示される文字列が描画されると、<xref:System.Drawing.Bitmap> は、<xref:System.Web.HttpResponse.OutputStream%2A> プロパティに関連付けられた <xref:System.IO.Stream> オブジェクトに保存され、その形式は JPEG に設定されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-112">When the three rectangles and the string that appears inside them are drawn, the <xref:System.Drawing.Bitmap> is saved to the <xref:System.IO.Stream> object that is associated with the <xref:System.Web.HttpResponse.OutputStream%2A> property and its format is set to JPEG.</span></span> <span data-ttu-id="51a62-113">このコードは、<xref:System.Drawing.Image.Dispose%2A> と <xref:System.Drawing.Graphics.Dispose%2A> メソッドを呼び出して、2つの描画オブジェクトで使用されるリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="51a62-113">The code calls the <xref:System.Drawing.Image.Dispose%2A> and <xref:System.Drawing.Graphics.Dispose%2A> methods to release the resources used by the two drawing objects.</span></span> <span data-ttu-id="51a62-114">最後に、このコードは <xref:System.Web.HttpResponse.Flush%2A> メソッドを呼び出して、バッファリングされた応答を要求側のクライアントに送信します。</span><span class="sxs-lookup"><span data-stu-id="51a62-114">Lastly, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the buffered response to the requesting client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51a62-115">コードでは、<xref:System.Web.HttpResponse> オブジェクトは `Response`キーワードによって参照されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-115">In code, the <xref:System.Web.HttpResponse> object is referred to by the keyword `Response`.</span></span> <span data-ttu-id="51a62-116">たとえば、`Response.Clear()` は <xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType> メソッドを参照します。</span><span class="sxs-lookup"><span data-stu-id="51a62-116">For example, `Response.Clear()` refers to the <xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="51a62-117"><xref:System.Web.UI.Page> クラスには、<xref:System.Web.HttpResponse>の現在のインスタンスを公開する <xref:System.Web.UI.Page.Response%2A> という名前のプロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="51a62-117">The <xref:System.Web.UI.Page> class has a property that is named <xref:System.Web.UI.Page.Response%2A> that exposes the current instance of <xref:System.Web.HttpResponse>.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpResponse (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpResponse(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpResponse : System.IO.TextWriter -&gt; System.Web.HttpResponse" Usage="new System.Web.HttpResponse writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="51a62-118">カスタム HTTP 出力を有効にする <see cref="T:System.IO.TextWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-118">A <see cref="T:System.IO.TextWriter" /> object that enables custom HTTP output.</span></span></param>
        <summary><span data-ttu-id="51a62-119"><see cref="T:System.Web.HttpResponse" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="51a62-119">Initializes a new instance of the <see cref="T:System.Web.HttpResponse" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-120">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-120">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="51a62-121"><xref:System.Web.HttpResponse> クラスのメソッドとプロパティは、ASP.NET の組み込み <xref:System.Web.HttpContext.Response%2A> オブジェクトを介して公開されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-121">The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the intrinsic <xref:System.Web.HttpContext.Response%2A> object in ASP.NET.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCacheDependency">
      <MemberSignature Language="C#" Value="public void AddCacheDependency (params System.Web.Caching.CacheDependency[] dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheDependency(class System.Web.Caching.CacheDependency[] dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheDependency (ParamArray dependencies As CacheDependency())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheDependency(... cli::array &lt;System::Web::Caching::CacheDependency ^&gt; ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.AddCacheDependency : System.Web.Caching.CacheDependency[] -&gt; unit" Usage="httpResponse.AddCacheDependency dependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dependencies"><span data-ttu-id="51a62-122">アプリケーション依存関係のリストに追加するファイル、キャッシュ キー、または <see cref="T:System.Web.Caching.CacheDependency" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-122">A file, cache key, or <see cref="T:System.Web.Caching.CacheDependency" /> to add to the list of application dependencies.</span></span></param>
        <summary><span data-ttu-id="51a62-123">応答が出力キャッシュに格納されていて、指定した依存関係が変化した場合、キャッシュ依存関係のセットを応答に関連付け、応答を効率的に無効化します。</span><span class="sxs-lookup"><span data-stu-id="51a62-123">Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-124"><xref:System.Web.HttpResponse.AddCacheDependency%2A> メソッドを使用すると、キャッシュされた応答と <xref:System.Web.Caching.CacheDependency> オブジェクトの間に依存関係を作成できます。</span><span class="sxs-lookup"><span data-stu-id="51a62-124">The <xref:System.Web.HttpResponse.AddCacheDependency%2A> method allows dependencies to be created between cached responses and a <xref:System.Web.Caching.CacheDependency> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-125">次の例は、<xref:System.Web.HttpResponse.AddCacheDependency%2A> メソッドと <xref:System.Web.Caching.CacheDependency> オブジェクトを使用して、キャッシュの依存関係を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-125">The following example demonstrates how to create a cache dependency by using the <xref:System.Web.HttpResponse.AddCacheDependency%2A> method and a <xref:System.Web.Caching.CacheDependency> object.</span></span>  
  
 [!code-aspx-csharp[HttpResponse.AddCacheDependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpResponse.AddCacheDependency/CS/httpresponse.addcachedependency_cs.aspx#1)]
 [!code-aspx-vb[HttpResponse.AddCacheDependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpResponse.AddCacheDependency/VB/httpresponse.addcachedependency_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-126"><paramref name="dependencies" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-126">The <paramref name="dependencies" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-127">キャッシュされた応答が既に作成された後、キャッシュ処理パイプラインでこのメソッドが呼び出されたのが遅すぎました。</span><span class="sxs-lookup"><span data-stu-id="51a62-127">This method was called too late in the cache processing pipeline, after the cached response was already created.</span></span></exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)"><span data-ttu-id="51a62-128">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="51a62-128">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCacheItemDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-129">キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</span><span class="sxs-lookup"><span data-stu-id="51a62-129">Makes the validity of a cached response dependent on other items in the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependencies(class System.Collections.ArrayList cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependencies (cacheKeys As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependencies(System::Collections::ArrayList ^ cacheKeys);" />
      <MemberSignature Language="F#" Value="member this.AddCacheItemDependencies : System.Collections.ArrayList -&gt; unit" Usage="httpResponse.AddCacheItemDependencies cacheKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="cacheKeys"><span data-ttu-id="51a62-130">現在のキャッシュされた応答が依存しているアイテムのキーを格納する <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-130">The <see cref="T:System.Collections.ArrayList" /> that contains the keys of the items that the current cached response is dependent upon.</span></span></param>
        <summary><span data-ttu-id="51a62-131">キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</span><span class="sxs-lookup"><span data-stu-id="51a62-131">Makes the validity of a cached response dependent on other items in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-132">`cacheKeys` パラメーターで参照されている項目がキャッシュから削除されると、現在の項目のキャッシュされた応答が無効になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-132">When the items referred to in the `cacheKeys` parameter are removed from the cache, the cached response of the current item is not valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-133">次の例では、出力がキャッシュされている ASP.NET ページを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-133">The following example demonstrates how to use an ASP.NET page that is output cached.</span></span> <span data-ttu-id="51a62-134">ページのコードは、<xref:System.Web.Caching.Cache> オブジェクトに格納されている項目に関連付けられているキーの <xref:System.Collections.ArrayList> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="51a62-134">The code for the page creates an <xref:System.Collections.ArrayList> object of keys that are associated with items that are stored in the <xref:System.Web.Caching.Cache> object.</span></span> <span data-ttu-id="51a62-135">次に、コードは、<xref:System.Web.HttpResponse.AddCacheItemDependencies%2A> メソッドの呼び出しでパラメーターとして <xref:System.Collections.ArrayList> を渡します。</span><span class="sxs-lookup"><span data-stu-id="51a62-135">Next, the code passes the <xref:System.Collections.ArrayList> as the parameter in a call to the <xref:System.Web.HttpResponse.AddCacheItemDependencies%2A> method.</span></span> <span data-ttu-id="51a62-136">これにより、<xref:System.Collections.ArrayList> で指定されているいずれかのファイルが変更された場合に、出力のキャッシュされた応答が無効になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-136">This makes the output cached response not valid, if any of the files specified in the <xref:System.Collections.ArrayList> change.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/cacheitemsdepscs.aspx#5)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/cacheitemsdepsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)"><span data-ttu-id="51a62-137">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="51a62-137">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependencies (string[] cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependencies(string[] cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependencies (cacheKeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependencies(cli::array &lt;System::String ^&gt; ^ cacheKeys);" />
      <MemberSignature Language="F#" Value="member this.AddCacheItemDependencies : string[] -&gt; unit" Usage="httpResponse.AddCacheItemDependencies cacheKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.String[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cacheKeys"><span data-ttu-id="51a62-138">キャッシュされた応答が依存するアイテム キーの配列。</span><span class="sxs-lookup"><span data-stu-id="51a62-138">An array of item keys that the cached response is dependent upon.</span></span></param>
        <summary><span data-ttu-id="51a62-139">キャッシュ内の他のアイテムに依存するキャッシュされたアイテムを有効にします。</span><span class="sxs-lookup"><span data-stu-id="51a62-139">Makes the validity of a cached item dependent on another item in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-140">`cacheKey`のいずれかがキャッシュから削除されると、現在の項目のキャッシュされた応答は無効になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-140">When any of the `cacheKey`s are removed from the cache, the cached response of the current item is invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)"><span data-ttu-id="51a62-141">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="51a62-141">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependency">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependency (string cacheKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependency(string cacheKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependency (cacheKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependency(System::String ^ cacheKey);" />
      <MemberSignature Language="F#" Value="member this.AddCacheItemDependency : string -&gt; unit" Usage="httpResponse.AddCacheItemDependency cacheKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheKey"><span data-ttu-id="51a62-142">キャッシュされた応答が依存するアイテムのキー。</span><span class="sxs-lookup"><span data-stu-id="51a62-142">The key of the item that the cached response is dependent upon.</span></span></param>
        <summary><span data-ttu-id="51a62-143">キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</span><span class="sxs-lookup"><span data-stu-id="51a62-143">Makes the validity of a cached response dependent on another item in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-144">`cacheKey` パラメーターに対応する項目がキャッシュから削除されると、現在の項目のキャッシュされた応答は無効になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-144">When the item corresponding to the `cacheKey` parameter is removed from the cache, the cached response of the current item is invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-145">次の例は、出力がキャッシュされている ASP.NET ユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="51a62-145">The following example is an ASP.NET user control that is output cached.</span></span> <span data-ttu-id="51a62-146">コントロールのコードは、パラメーターとして渡された <xref:System.Web.Caching.Cache> オブジェクトに格納されている項目のキーを使用して、<xref:System.Web.HttpResponse.AddCacheItemDependency%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51a62-146">The code for the control calls the <xref:System.Web.HttpResponse.AddCacheItemDependency%2A> method with the key of an item stored in the <xref:System.Web.Caching.Cache> object passed as its parameter.</span></span> <span data-ttu-id="51a62-147">項目がキャッシュに存在しない場合、出力キャッシュに格納されていたコントロールの応答は無効になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-147">If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated.</span></span> <span data-ttu-id="51a62-148">これは、後続の要求では、コントロールの応答の新しいバージョンが出力キャッシュに追加されることを意味します。</span><span class="sxs-lookup"><span data-stu-id="51a62-148">This means that on the subsequent request, a new version of the control's response will be added to the output cache.</span></span>  
  
 <span data-ttu-id="51a62-149">次に、コードは、`bookData` キーに関連付けられている項目が `Cache` オブジェクトに格納されているかどうかをチェックし、結果に応じて2行のテキストのいずれかを表示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-149">Next, the code checks whether an item associated with a `bookData` key is stored in the `Cache` object, and displays one of two lines of text dependent upon the result.</span></span> <span data-ttu-id="51a62-150">次に、このコードでは、`dgBooks`という名前の <xref:System.Web.UI.WebControls.DataGrid> コントロールの <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> プロパティを、カスタム `DataHelper` クラスの共有 `GetBookData` メソッドを呼び出して設定し、<xref:System.Web.UI.WebControls.DataGrid> メソッドを使用して <xref:System.Web.UI.Control.DataBind%2A> を設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-150">Then, the code sets the <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property of a <xref:System.Web.UI.WebControls.DataGrid> control, which is named `dgBooks`, with a call to a custom `DataHelper` class' shared `GetBookData` method, and populates the <xref:System.Web.UI.WebControls.DataGrid> with the <xref:System.Web.UI.Control.DataBind%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/bookscs.ascx#3)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/booksvb.ascx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)"><span data-ttu-id="51a62-151">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="51a62-151">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddFileDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-152">ファイル名のグループを、現在の応答が依存しているファイル名のコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-152">Adds a group of file names to the collection of file names on which the current response is dependent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public void AddFileDependencies (System.Collections.ArrayList filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependencies(class System.Collections.ArrayList filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependencies (filenames As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependencies(System::Collections::ArrayList ^ filenames);" />
      <MemberSignature Language="F#" Value="member this.AddFileDependencies : System.Collections.ArrayList -&gt; unit" Usage="httpResponse.AddFileDependencies filenames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="51a62-153">追加するファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="51a62-153">The collection of files to add.</span></span></param>
        <summary><span data-ttu-id="51a62-154">ファイル名のグループを、現在の応答が依存しているファイル名のコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-154">Adds a group of file names to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-155">次の例は、出力がキャッシュされている ASP.NET ページです。</span><span class="sxs-lookup"><span data-stu-id="51a62-155">The following example is an ASP.NET page that is output cached.</span></span> <span data-ttu-id="51a62-156">ページのコードにより、ファイルパスの <xref:System.Collections.ArrayList> が作成され、<xref:System.Web.HttpResponse.AddFileDependencies%2A> メソッドの呼び出しでパラメーターとして <xref:System.Collections.ArrayList> が渡されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-156">The code for the page creates an <xref:System.Collections.ArrayList> of file paths, and then passes the <xref:System.Collections.ArrayList> as the parameter in a call to the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method.</span></span> <span data-ttu-id="51a62-157">これにより、<xref:System.Collections.ArrayList> で指定されたいずれかのファイルが変更された場合に、出力のキャッシュされた応答が無効になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-157">This makes the output cached response invalid if any of the files specified in the <xref:System.Collections.ArrayList> changes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/responsefiledepscs.aspx#6)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/responsefiledepsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)"><span data-ttu-id="51a62-158">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="51a62-158">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public void AddFileDependencies (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependencies(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependencies (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependencies(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberSignature Language="F#" Value="member this.AddFileDependencies : string[] -&gt; unit" Usage="httpResponse.AddFileDependencies filenames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="51a62-159">追加するファイルの配列。</span><span class="sxs-lookup"><span data-stu-id="51a62-159">An array of files to add.</span></span></param>
        <summary><span data-ttu-id="51a62-160">ファイル名の配列を、現在の応答が依存しているファイル名のコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-160">Adds an array of file names to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-161">次の例では、ファイル名の配列を <xref:System.Web.HttpResponse.AddFileDependencies%2A> ファイルの依存関係の一覧に追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-161">The following example adds an array of file names to the <xref:System.Web.HttpResponse.AddFileDependencies%2A> file dependency list.</span></span> <span data-ttu-id="51a62-162">ファイルが変更されると、キャッシュされた応答は無効になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-162">If the files changes, the cached response is invalidated.</span></span>  
  
 [!code-aspx-csharp[Response.AddFileDependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Response.AddFileDependency/CS/addfiledependency_cs.aspx#1)]
 [!code-aspx-vb[Response.AddFileDependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Response.AddFileDependency/VB/addfiledependency_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)"><span data-ttu-id="51a62-163">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="51a62-163">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependency">
      <MemberSignature Language="C#" Value="public void AddFileDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependency(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependency (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependency(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.AddFileDependency : string -&gt; unit" Usage="httpResponse.AddFileDependency filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="51a62-164">追加するファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-164">The name of the file to add.</span></span></param>
        <summary><span data-ttu-id="51a62-165">現在の応答が依存しているファイル名のコレクションに、ファイル名を 1 つ追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-165">Adds a single file name to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-166"><xref:System.Web.HttpResponse.AddFileDependency%2A> メソッドを使用してファイルの依存関係を追加する場合は、出力キャッシュもプログラムまたは宣言によって指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-166">When you use the <xref:System.Web.HttpResponse.AddFileDependency%2A> method to add a file dependency, you must also specify output caching programmatically or declaratively.</span></span> <span data-ttu-id="51a62-167">たとえば、出力キャッシュを宣言によって指定するには、 [@ OutputCache](https://msdn.microsoft.com/library/28a9e101-fb44-4198-9cb6-b8a52312fec2)ディレクティブを使用します。</span><span class="sxs-lookup"><span data-stu-id="51a62-167">For example, to specify output caching declaratively, use the [@ OutputCache](https://msdn.microsoft.com/library/28a9e101-fb44-4198-9cb6-b8a52312fec2) directive.</span></span> <span data-ttu-id="51a62-168">詳細については、「[方法: ファイルの依存関係があるページ出力をキャッシュする](https://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-168">For more information, see [How to: Cache Page Output with File Dependencies](https://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-169">次の例では、<xref:System.Web.HttpResponse.AddFileDependency%2A> ファイルの依存関係の一覧に1つのファイル名を追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-169">The following example shows how to add a single file name to the <xref:System.Web.HttpResponse.AddFileDependency%2A> file dependency list.</span></span> <span data-ttu-id="51a62-170">ファイルが変更されると、キャッシュされた応答は無効になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-170">If the file changes, the cached response is invalidated.</span></span>  
  
 [!code-csharp[Classic HttpResponse.AddFileDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AddFileDependency Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AddFileDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AddFileDependency Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b(v=vs.100)"><span data-ttu-id="51a62-171">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="51a62-171">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public void AddHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHeader(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHeader : string * string -&gt; unit" Usage="httpResponse.AddHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="51a62-172"><paramref name="value" /> を追加する対象となる HTTP ヘッダーの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-172">The name of the HTTP header to add <paramref name="value" /> to.</span></span></param>
        <param name="value"><span data-ttu-id="51a62-173">ヘッダーに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="51a62-173">The string to add to the header.</span></span></param>
        <summary><span data-ttu-id="51a62-174">HTTP ヘッダーを出力ストリームに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-174">Adds an HTTP header to the output stream.</span></span> <span data-ttu-id="51a62-175"><see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /> は、ASP の旧バージョンとの互換性のために提供されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-175"><see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /> is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-176"><xref:System.Web.HttpResponse.AddHeader%2A> は <xref:System.Web.HttpResponse.AppendHeader%2A> と同じであり、ASP の旧バージョンとの互換性のためだけに用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-176"><xref:System.Web.HttpResponse.AddHeader%2A> is the same as <xref:System.Web.HttpResponse.AppendHeader%2A> and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="51a62-177">ASP.NET では、<xref:System.Web.HttpResponse.AppendHeader%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="51a62-177">With ASP.NET, use <xref:System.Web.HttpResponse.AppendHeader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnSendingHeaders">
      <MemberSignature Language="C#" Value="public System.Web.ISubscriptionToken AddOnSendingHeaders (Action&lt;System.Web.HttpContext&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.ISubscriptionToken AddOnSendingHeaders(class System.Action`1&lt;class System.Web.HttpContext&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOnSendingHeaders (callback As Action(Of HttpContext)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::ISubscriptionToken ^ AddOnSendingHeaders(Action&lt;System::Web::HttpContext ^&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.AddOnSendingHeaders : Action&lt;System.Web.HttpContext&gt; -&gt; System.Web.ISubscriptionToken" Usage="httpResponse.AddOnSendingHeaders callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContext&gt;" Index="0" FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="51a62-178">コールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="51a62-178">The callback method.</span></span></param>
        <summary><span data-ttu-id="51a62-179">この要求に対応する応答ヘッダーを送信する直前に、ASP.NET ランタイムが呼び出すコールバックを登録します。</span><span class="sxs-lookup"><span data-stu-id="51a62-179">Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</span></span></summary>
        <returns><span data-ttu-id="51a62-180">OnSendingHeaders 疑似イベントへのサブスクリプションを表す <see cref="T:System.Web.ISubscriptionToken" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-180">An <see cref="T:System.Web.ISubscriptionToken" /> object that represents the subscription to the OnSendingHeaders pseudo-event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="51a62-181">ネイティブモジュールが最初に応答をフラッシュする場合、使うメソッドは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="51a62-181">The AddOnSendingHeaders method is not invoked if the native module flushes the response first.</span></span>  
  
 <span data-ttu-id="51a62-182">擬似イベント OnSendingHeaders は、アプリケーションごとのサブスクリプションではなく、要求ごとのサブスクリプションであるという点で、IHttpModule レベルのパイプラインイベントとは異なります。</span><span class="sxs-lookup"><span data-stu-id="51a62-182">The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription.</span></span> <span data-ttu-id="51a62-183">この目的は、コールバックが応答ステータスコードを変更したり、応答の cookie またはヘッダーを設定したりする可能性があることです。</span><span class="sxs-lookup"><span data-stu-id="51a62-183">The intent is that the callback may modify the response status code or may set a response cookie or header.</span></span> <span data-ttu-id="51a62-184">その他の使用上の注意事項と注意事項:</span><span class="sxs-lookup"><span data-stu-id="51a62-184">Other usage notes and caveats:</span></span>  
  
-   <span data-ttu-id="51a62-185">このメソッドは、IIS が統合パイプラインモードパイプラインで実行されていて、現在の要求に対して応答ヘッダーがまだ送信されていない場合にのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="51a62-185">This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.</span></span>  
  
-   <span data-ttu-id="51a62-186">ASP.NET ランタイムは、コールバックが呼び出されるスレッドについては何も保証しません。</span><span class="sxs-lookup"><span data-stu-id="51a62-186">The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on.</span></span> <span data-ttu-id="51a62-187">たとえば、バックグラウンドフラッシュが実行されている場合、コールバックはバックグラウンドスレッドで同期的に呼び出されることがあります。</span><span class="sxs-lookup"><span data-stu-id="51a62-187">For example, the callback may be invoked synchronously in a background thread if a background flush is being performed.</span></span> <span data-ttu-id="51a62-188"><xref:System.Web.HttpContext.Current%2A> は、このようなスレッドで使用できるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="51a62-188"><xref:System.Web.HttpContext.Current%2A> is not guaranteed to be available in such a thread.</span></span>  
  
-   <span data-ttu-id="51a62-189">コールバックは、応答エンティティ本体を操作するメソッドを呼び出さないでください。または、その結果、フラッシュされます。</span><span class="sxs-lookup"><span data-stu-id="51a62-189">The callback must not call any method that manipulates the response entity body or that results in a flush.</span></span> <span data-ttu-id="51a62-190">たとえば、コールバックは <xref:System.Web.HttpResponse.Redirect%2A>を呼び出すことはできません。このメソッドは応答エンティティ本体を操作する可能性があるためです。</span><span class="sxs-lookup"><span data-stu-id="51a62-190">For example, the callback must not call <xref:System.Web.HttpResponse.Redirect%2A>, as that method may manipulate the response entity body.</span></span>  
  
-   <span data-ttu-id="51a62-191">コールバックには、実行時間の短い同期コードのみを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-191">The callback must contain only short-running synchronous code.</span></span> <span data-ttu-id="51a62-192">非同期操作を呼び出そうとするか、このような操作を待機すると、デッドロックが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-192">Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.</span></span>  
  
-   <span data-ttu-id="51a62-193">コールバックで例外をスローすることはできません。それ以外の場合、動作は定義されません。</span><span class="sxs-lookup"><span data-stu-id="51a62-193">The callback must not throw an exception; otherwise behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendCookie">
      <MemberSignature Language="C#" Value="public void AppendCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.AppendCookie : System.Web.HttpCookie -&gt; unit" Usage="httpResponse.AppendCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="51a62-194">出力ストリームに追加する <see cref="T:System.Web.HttpCookie" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-194">The <see cref="T:System.Web.HttpCookie" /> to add to the output stream.</span></span></param>
        <summary><span data-ttu-id="51a62-195">HTTP クッキーを組み込みクッキー コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-195">Adds an HTTP cookie to the intrinsic cookie collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-196">次の例では、`LastVisit`という名前の新しい cookie を作成し、クッキーの値を現在の日付と時刻に設定し、クッキーを現在の cookie コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-196">The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection.</span></span> <span data-ttu-id="51a62-197">Cookie コレクション内のすべての cookie は、HTTP 出力ストリームを含む `Set-Cookie` ヘッダー内のクライアントに送信されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-197">All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.AppendCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AppendCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AppendCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AppendCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-198">HTTP ヘッダーが送信された後にクッキーが追加されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-198">A cookie is appended after the HTTP headers have been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendHeader">
      <MemberSignature Language="C#" Value="public void AppendHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendHeader(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AppendHeader : string * string -&gt; unit" Usage="httpResponse.AppendHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="51a62-199">出力ストリームに追加する HTTP ヘッダーの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-199">The name of the HTTP header to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="51a62-200">ヘッダーに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="51a62-200">The string to append to the header.</span></span></param>
        <summary><span data-ttu-id="51a62-201">HTTP ヘッダーを出力ストリームに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-201">Adds an HTTP header to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-202"><xref:System.Web.HttpResponse.AppendHeader%2A> メソッドを使用してキャッシュ固有のヘッダーを送信し、同時にキャッシュオブジェクトモデル (<xref:System.Web.HttpResponse.Cache%2A>) を使用してキャッシュポリシーを設定する場合、キャッシュに関連する HTTP 応答ヘッダー (`Cache-Control`、`Expires`、`Last-Modified`、`Pragma`キャッシュオブジェクトモデルが使用されている場合、、、`Vary`) が削除される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-202">If you use the <xref:System.Web.HttpResponse.AppendHeader%2A> method to send cache-specific headers and at the same time use the cache object model (<xref:System.Web.HttpResponse.Cache%2A>) to set cache policy, HTTP response headers that pertain to caching (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, and `Vary`) might be deleted when the cache object model is used.</span></span> <span data-ttu-id="51a62-203">この動作により、ASP.NET は最も制限の厳しい設定を維持できます。</span><span class="sxs-lookup"><span data-stu-id="51a62-203">This behavior enables ASP.NET to maintain the most restrictive settings.</span></span> <span data-ttu-id="51a62-204">たとえば、ユーザーコントロールを含むページについて考えてみます。</span><span class="sxs-lookup"><span data-stu-id="51a62-204">For example, consider a page that includes user controls.</span></span> <span data-ttu-id="51a62-205">これらのコントロールのキャッシュポリシーが競合している場合は、最も制限の厳しいキャッシュポリシーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-205">If those controls have conflicting cache policies, the most restrictive cache policy will be used.</span></span> <span data-ttu-id="51a62-206">1つのユーザーコントロールがヘッダー "`Cache-Control: Public`" を設定し、別のユーザーコントロールが <xref:System.Web.HttpCachePolicy.SetCacheability%2A>の呼び出しによってより制限の厳しいヘッダー "`Cache-Control: Private`" を設定した場合、"`Cache-Control: Private`" ヘッダーが応答と共に送信されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-206">If one user control sets the header "`Cache-Control: Public`" and another user control sets the more restrictive header "`Cache-Control: Private`" via calls to <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, then the "`Cache-Control: Private`" header will be sent with the response.</span></span>  
  
 <span data-ttu-id="51a62-207">標準の HTTP/1.1 ヘッダーの一覧については、World Wide Web コンソーシアム (W3C) Web サイトの「[ハイパーテキスト転送プロトコル--HTTP/1.1](https://go.microsoft.com/fwlink/?LinkID=73147)仕様」のセクション14「ヘッダーフィールド定義」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-207">For a list of standard HTTP/1.1 headers, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](https://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-208">次の例では、<xref:System.Web.HttpResponse.AppendHeader%2A> メソッドを呼び出して、要求元のクライアントに送信される <xref:System.Web.HttpResponse> オブジェクトにカスタムヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-208">The following example calls the <xref:System.Web.HttpResponse.AppendHeader%2A> method to add a custom header to the <xref:System.Web.HttpResponse> object sent to the requesting client.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.AppendHeader_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.AppendHeader_Example/CS/responseappendheader.cs.aspx#1)]
 [!code-vb[System.Web.HttpResponse.AppendHeader_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.AppendHeader_Example/VB/responseappendheader.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-209">HTTP ヘッダーが送信された後にヘッダーが追加されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-209">The header is appended after the HTTP headers have been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendToLog">
      <MemberSignature Language="C#" Value="public void AppendToLog (string param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendToLog(string param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendToLog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendToLog (param As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendToLog(System::String ^ param);" />
      <MemberSignature Language="F#" Value="member this.AppendToLog : string -&gt; unit" Usage="httpResponse.AppendToLog param" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="param"><span data-ttu-id="51a62-210">ログ ファイルに追加するテキスト。</span><span class="sxs-lookup"><span data-stu-id="51a62-210">The text to add to the log file.</span></span></param>
        <summary><span data-ttu-id="51a62-211">カスタム ログ情報をインターネット インフォメーション サービス (IIS: Internet Information Services) ログ ファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-211">Adds custom log information to the Internet Information Services (IIS) log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-212">指定した文字列がログファイルに記録されるようにするには、まず、IIS で利用状況をログに記録するサイトの **[拡張ログのプロパティ]** ダイアログボックスの **[URI クエリ]** オプションを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-212">To allow for the specified string to be recorded in the log file, you first must enable the **URI Query** option of the **Extended Logging Properties** dialog box for the site that you want to log activity for in IIS.</span></span>  
  
 <span data-ttu-id="51a62-213">IIS 6.0 で拡張ログをカスタマイズするには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-213">To customize extended logging in IIS 6.0, follow these steps:</span></span>  
  
1.  <span data-ttu-id="51a62-214">IIS マネージャーで、ローカルコンピューター ノードを展開し、Web または FTP サイト フォルダーを展開します。次に、Web または FTP サイトを右クリックし、**プロパティ** をクリックします。</span><span class="sxs-lookup"><span data-stu-id="51a62-214">In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click **Properties**.</span></span>  
  
2.  <span data-ttu-id="51a62-215">**[Web または FTP サイト]** タブをクリックし、**[ログを有効にする]** チェックボックスをオンにします (まだ選択されていない場合)。</span><span class="sxs-lookup"><span data-stu-id="51a62-215">Click the **Web or FTP Site** tab, and then select the **Enable logging** check box (if it is not already selected).</span></span>  
  
3.  <span data-ttu-id="51a62-216">**[アクティブなログの形式]** ボックスで、**[W3C 拡張ログファイルの形式]** をクリックします。</span><span class="sxs-lookup"><span data-stu-id="51a62-216">In the **Active log format** box, click **W3C Extended Log File Format**.</span></span>  
  
4.  <span data-ttu-id="51a62-217">**[プロパティ]** をクリックします。</span><span class="sxs-lookup"><span data-stu-id="51a62-217">Click **Properties**.</span></span>  
  
5.  <span data-ttu-id="51a62-218">**[詳細設定]** タブをクリックし、ログに記録するプロパティを選択して、**[OK]** をクリックします。</span><span class="sxs-lookup"><span data-stu-id="51a62-218">Click the **Advanced** tab, select the properties that you want to log, and then click **OK**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-219">次の例では、ログに文字列を追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-219">The following example shows how to append a string to the log.</span></span>  
  
 [!code-csharp[Classic HttpResponse.AppendToLog Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AppendToLog Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AppendToLog Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AppendToLog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=36829"><span data-ttu-id="51a62-220">Windows Server 2003 製品ヘルプ</span><span class="sxs-lookup"><span data-stu-id="51a62-220">Windows Server 2003 Product Help</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplyAppPathModifier">
      <MemberSignature Language="C#" Value="public string ApplyAppPathModifier (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ApplyAppPathModifier(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyAppPathModifier (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ApplyAppPathModifier(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.ApplyAppPathModifier : string -&gt; string" Usage="httpResponse.ApplyAppPathModifier virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="51a62-221">リソースへの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="51a62-221">The virtual path to a resource.</span></span></param>
        <summary><span data-ttu-id="51a62-222">セッションが <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> セッション状態を使用している場合に、セッション ID を仮想パスに追加し、その ID を組み合わせたパスを返します。</span><span class="sxs-lookup"><span data-stu-id="51a62-222">Adds a session ID to the virtual path if the session is using <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state and returns the combined path.</span></span> <span data-ttu-id="51a62-223"><see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> セッション状態が使用されていない場合、<see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> は元の仮想パスを返します。</span><span class="sxs-lookup"><span data-stu-id="51a62-223">If <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state is not used, <see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> returns the original virtual path.</span></span></summary>
        <returns><span data-ttu-id="51a62-224">セッション ID が挿入された <paramref name="virtualPath" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-224">The <paramref name="virtualPath" /> with the session ID inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-225"><xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> は、絶対 HREFs を構築するために、cookie なしのセッションでのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-225"><xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> is used only with cookieless sessions to construct absolute HREFs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-226">次の例では、`urlConverted`という名前の文字列変数を宣言し、<xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> メソッド呼び出しの結果に設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-226">The following example declares a string variable named `urlConverted`, and sets it to the result of an <xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> method call.</span></span> <span data-ttu-id="51a62-227">次に、コードは変数の値を <xref:System.Web.UI.WebControls.HyperLink> コントロールの <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> プロパティに渡します。</span><span class="sxs-lookup"><span data-stu-id="51a62-227">The code then passes the variable's value to a <xref:System.Web.UI.WebControls.HyperLink> control's <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/responseapppathmodifiercs.aspx#5)]
 [!code-vb[System.Web.HttpResponse_Sample5#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/responseapppathmodifiervb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginFlush(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginFlush (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginFlush(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginFlush : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpResponse.BeginFlush (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="51a62-228">コールバック オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-228">The callback object.</span></span></param>
        <param name="state"><span data-ttu-id="51a62-229">応答状態。</span><span class="sxs-lookup"><span data-stu-id="51a62-229">The response state.</span></span></param>
        <summary><span data-ttu-id="51a62-230">現在バッファリングされているすべての応答をクライアントへ送信します。</span><span class="sxs-lookup"><span data-stu-id="51a62-230">Sends the currently buffered response to the client.</span></span></summary>
        <returns><span data-ttu-id="51a62-231">非同期の結果オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-231">The asynchronous result object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-232">基になる <xref:System.Web.HttpWorkerRequest> オブジェクトが非同期フラッシュ操作をサポートしていて、このメソッドが非同期モジュールイベントまたは非同期ハンドラーから呼び出された場合、フラッシュ操作は非同期的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-232">If the underlying <xref:System.Web.HttpWorkerRequest> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously.</span></span> <span data-ttu-id="51a62-233">それ以外の場合、フラッシュ操作は同期的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-233">Otherwise, the flush operation is performed synchronously.</span></span> <span data-ttu-id="51a62-234">非同期フラッシュは、IIS 6.0 以降でサポートされています。</span><span class="sxs-lookup"><span data-stu-id="51a62-234">Asynchronous flush is supported for IIS 6.0 and later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-235">この応答は既に完了しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-235">The response is already completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinaryWrite">
      <MemberSignature Language="C#" Value="public void BinaryWrite (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BinaryWrite(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub BinaryWrite (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BinaryWrite(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.BinaryWrite : byte[] -&gt; unit" Usage="httpResponse.BinaryWrite buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="51a62-236">出力ストリームに書き込むバイト。</span><span class="sxs-lookup"><span data-stu-id="51a62-236">The bytes to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="51a62-237">HTTP 出力ストリームにバイナリ文字の文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-237">Writes a string of binary characters to the HTTP output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-238">次の例では、テキストファイルをバッファーに読み込み、そのバッファーを HTTP 出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-238">The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.BinaryWrite Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.BinaryWrite Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.BinaryWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.BinaryWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : bool with get, set" Usage="System.Web.HttpResponse.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-239">応答全体の処理が完了した後に、出力をバッファリングしてから送信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-239">Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.</span></span></summary>
        <value><span data-ttu-id="51a62-240">クライアントへの出力をバッファリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-240"><see langword="true" /> if the output to client is buffered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-241"><xref:System.Web.HttpResponse.Buffer%2A> プロパティは、<xref:System.Web.HttpResponse.BufferOutput%2A> プロパティを優先するように非推奨とされており、ASP の旧バージョンとの互換性のためだけに用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-241">The <xref:System.Web.HttpResponse.Buffer%2A> property has been deprecated in favor of the <xref:System.Web.HttpResponse.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="51a62-242">ASP.NET では、<xref:System.Web.HttpResponse.BufferOutput%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="51a62-242">With ASP.NET, use <xref:System.Web.HttpResponse.BufferOutput%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferOutput">
      <MemberSignature Language="C#" Value="public bool BufferOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferOutput" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.BufferOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BufferOutput : bool with get, set" Usage="System.Web.HttpResponse.BufferOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-243">ページ全体の処理が完了した後に、出力をバッファリングしてから送信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-243">Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.</span></span></summary>
        <value><span data-ttu-id="51a62-244">クライアントへの出力がバッファリングされる場合は <see langword="true" /> します。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-244"><see langword="true" /> if the output to client is buffered; otherwise <see langword="false" />.</span></span> <span data-ttu-id="51a62-245">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-245">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-246">次の例では、応答の <xref:System.Web.HttpResponse.ContentType%2A> プロパティを image/jpeg に設定し、<xref:System.Web.HttpResponse.Clear%2A> メソッドを呼び出して応答に添付されている可能性のあるその他のコンテンツを削除してから、<xref:System.Web.HttpResponse.BufferOutput%2A> プロパティを true に設定して、ページ全体が処理されるようにします。すべてのコンテンツは、要求元のクライアントに送信されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-246">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the entire page will be processed before any content is sent to the requesting client.</span></span>  
  
 <span data-ttu-id="51a62-247">完全な例については、<xref:System.Web.HttpResponse> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-247">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.HttpCachePolicy Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCachePolicy Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As HttpCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCachePolicy ^ Cache { System::Web::HttpCachePolicy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.HttpCachePolicy" Usage="System.Web.HttpResponse.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-248">Web ページのキャッシュ ポリシー (expiration time 句、privacy settings 句、および vary 句) を取得します。</span><span class="sxs-lookup"><span data-stu-id="51a62-248">Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.</span></span></summary>
        <value><span data-ttu-id="51a62-249">現在の応答のキャッシュ ポリシーに関する情報を格納する <see cref="T:System.Web.HttpCachePolicy" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-249">An <see cref="T:System.Web.HttpCachePolicy" /> object that contains information about the caching policy of the current response.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-250">次の例では、現在のキャッシュポリシーのプロパティを HTTP 出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-250">The following example writes properties of the current cache policy to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Cache Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cache Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cache Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cache Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheControl">
      <MemberSignature Language="C#" Value="public string CacheControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.CacheControl" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CacheControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheControl : string with get, set" Usage="System.Web.HttpResponse.CacheControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-251"><see langword="Cache-Control" /> 列挙値の 1 つに一致する <see cref="T:System.Web.HttpCacheability" /> HTTP ヘッダーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-251">Gets or sets the <see langword="Cache-Control" /> HTTP header that matches one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</span></span></summary>
        <value><span data-ttu-id="51a62-252"><see cref="T:System.Web.HttpCacheability" /> 列挙値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="51a62-252">A string representation of the <see cref="T:System.Web.HttpCacheability" /> enumeration value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-253">`Private`、`Public`、および `No-Cache` の値は文字列であり、引用符 ("") で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-253">The values for `Private`, `Public`, and `No-Cache` are strings and must be enclosed in quotation marks (" ").</span></span> <span data-ttu-id="51a62-254"><xref:System.Web.HttpResponse.CacheControl%2A> プロパティが <xref:System.Web.HttpCacheability> 列挙値のいずれとも一致しない値に設定されている場合、<xref:System.ArgumentException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="51a62-254">If the <xref:System.Web.HttpResponse.CacheControl%2A> property is set to a value that does not match one of the <xref:System.Web.HttpCacheability> enumeration values, then an <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="51a62-255"><xref:System.Web.HttpResponse.CacheControl%2A> プロパティが設定されていない場合、応答のキャッシュを <xref:System.Web.HttpCacheability.NoCache>に設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-255">If the <xref:System.Web.HttpResponse.CacheControl%2A> property is not set, the cacheability of the response is set to <xref:System.Web.HttpCacheability.NoCache>.</span></span>  
  
 <span data-ttu-id="51a62-256">`CacheControl`、<xref:System.Web.HttpResponse.Expires%2A>、および <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> の各プロパティは非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="51a62-256">The `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> properties have been deprecated.</span></span> <span data-ttu-id="51a62-257">代わりに、インターネットインフォメーションサービス (IIS) 出力キャッシュとクライアントキャッシュを制御するために、<xref:System.Web.HttpResponse.Cache%2A> 組み込みオブジェクトを介して <xref:System.Web.HttpCachePolicy> クラスのメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="51a62-257">Instead, the methods of the <xref:System.Web.HttpCachePolicy> class are available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51a62-258">文字列値セットが、<see cref="T:System.Web.HttpCacheability" /> 列挙値の 1 つに一致しません。</span><span class="sxs-lookup"><span data-stu-id="51a62-258">The string value set does not match one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public string Charset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Charset" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Charset" />
      <MemberSignature Language="VB.NET" Value="Public Property Charset As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Charset { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Charset : string with get, set" Usage="System.Web.HttpResponse.Charset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-259">出力ストリームの HTTP 文字セットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-259">Gets or sets the HTTP character set of the output stream.</span></span></summary>
        <value><span data-ttu-id="51a62-260">出力ストリームの HTTP 文字セット。</span><span class="sxs-lookup"><span data-stu-id="51a62-260">The HTTP character set of the output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-261">HTTP `Content-Type` ヘッダーを非表示にするには、`Charset` プロパティを `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-261">The `Charset` property can be set to `null` to suppress the HTTP `Content-Type` header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-262">次の例では、出力ストリームの文字セットが中央ヨーロッパ言語 (ISO) であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="51a62-262">The following example checks whether the character set of the output stream is Central European (ISO).</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.Charset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Charset/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.Charset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Charset/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-263">ヘッダーが送信された後に <see langword="Charset" /> プロパティが設定されました。</span><span class="sxs-lookup"><span data-stu-id="51a62-263">The <see langword="Charset" /> property was set after headers were sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpResponse.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51a62-264">すべての内容出力をバッファー ストリームから削除します。</span><span class="sxs-lookup"><span data-stu-id="51a62-264">Clears all content output from the buffer stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-265"><xref:System.Web.HttpResponse.Clear%2A> メソッドは、ヘッダー情報をクリアしません。</span><span class="sxs-lookup"><span data-stu-id="51a62-265">The <xref:System.Web.HttpResponse.Clear%2A> method does not clear header information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-266">次の例では、応答の <xref:System.Web.HttpResponse.ContentType%2A> プロパティを image/jpeg に設定し、<xref:System.Web.HttpResponse.Clear%2A> メソッドを呼び出して応答に添付されている可能性のあるその他のコンテンツを削除してから、<xref:System.Web.HttpResponse.BufferOutput%2A> プロパティを true に設定して、ページ全体が処理されるようにします。すべてのコンテンツは、要求元のクライアントに送信されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-266">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.</span></span>  
  
 <span data-ttu-id="51a62-267">完全な例については、<xref:System.Web.HttpResponse> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-267">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.ClearHeaders" />
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberSignature Language="F#" Value="member this.ClearContent : unit -&gt; unit" Usage="httpResponse.ClearContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51a62-268">すべての内容出力をバッファー ストリームから削除します。</span><span class="sxs-lookup"><span data-stu-id="51a62-268">Clears all content output from the buffer stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-269"><xref:System.Web.HttpResponse.ClearContent%2A> メソッドは、ヘッダー情報をクリアしません。</span><span class="sxs-lookup"><span data-stu-id="51a62-269">The <xref:System.Web.HttpResponse.ClearContent%2A> method does not clear header information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-270">次の例では、バッファーストリームからすべてのコンテンツを削除します。</span><span class="sxs-lookup"><span data-stu-id="51a62-270">The following example clears all content from the buffer stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.ClearContent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.ClearContent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.ClearContent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.ClearContent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.ClearHeaders" />
      </Docs>
    </Member>
    <Member MemberName="ClearHeaders">
      <MemberSignature Language="C#" Value="public void ClearHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ClearHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHeaders ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHeaders();" />
      <MemberSignature Language="F#" Value="member this.ClearHeaders : unit -&gt; unit" Usage="httpResponse.ClearHeaders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51a62-271">バッファー ストリームからすべてのヘッダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="51a62-271">Clears all headers from the buffer stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-272">次の例では、<xref:System.Web.HttpResponse.ClearHeaders%2A> メソッドを呼び出して、現在の応答と共にヘッダーが送信されないようにしています。</span><span class="sxs-lookup"><span data-stu-id="51a62-272">The following example calls the <xref:System.Web.HttpResponse.ClearHeaders%2A> method to ensure that no headers are sent with the current response.</span></span> <span data-ttu-id="51a62-273">この手法は、ASP.NET 応答が JPEG ファイルなどのイメージを生成している場合に特に重要になります。</span><span class="sxs-lookup"><span data-stu-id="51a62-273">This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file.</span></span> <span data-ttu-id="51a62-274">この例では、<xref:System.Web.HttpResponse.ContentType%2A> プロパティが image/jpeg に設定されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-274">In this example the <xref:System.Web.HttpResponse.ContentType%2A> property is set to image/jpeg.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponseclearheaderscs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Sample5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponseclearheadersvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-275">HTTP ヘッダーが送信された後にヘッダーが削除されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-275">Headers are cleared after the HTTP headers have been sent.</span></span></exception>
        <altmember cref="M:System.Web.HttpResponse.ClearContent" />
      </Docs>
    </Member>
    <Member MemberName="ClientDisconnectedToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken ClientDisconnectedToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken ClientDisconnectedToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ClientDisconnectedToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientDisconnectedToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken ClientDisconnectedToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientDisconnectedToken : System.Threading.CancellationToken" Usage="System.Web.HttpResponse.ClientDisconnectedToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-276">クライアントの接続が切断されるとトリップされる <see cref="T:System.Threading.CancellationToken" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="51a62-276">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when the client disconnects.</span></span></summary>
        <value><span data-ttu-id="51a62-277">キャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="51a62-277">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-278">この API はスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="51a62-278">This API is thread-safe.</span></span> <span data-ttu-id="51a62-279">ただし、キャンセルトークンの使用方法にはいくつかの制限があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-279">However, there are some restrictions on how the cancellation token should be used.</span></span> <span data-ttu-id="51a62-280">誤って使用すると、競合状態、デッドロック、またはその他の予期しない動作につながる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-280">Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior.</span></span> <span data-ttu-id="51a62-281">次のガイドラインに留意してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-281">Keep in mind the following guidelines:</span></span>  
  
-   <span data-ttu-id="51a62-282">ASP.NET は要求の最後にキャンセルトークンを破棄するので、この API を1つの要求の範囲外に呼び出さないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="51a62-282">Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request.</span></span> <span data-ttu-id="51a62-283">破棄される前に、トークンが取り消された状態に遷移することは保証されません。</span><span class="sxs-lookup"><span data-stu-id="51a62-283">There is no guarantee that the token will ever transition to a canceled state before it is disposed.</span></span> <span data-ttu-id="51a62-284">たとえば、クライアントが切断されていない状態で要求が終了した場合、トークンは最初にキャンセルされることなく破棄されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-284">For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.</span></span>  
  
-   <span data-ttu-id="51a62-285">非同期通知の目的が無効になり、デッドロックが発生する可能性があるため、<xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType>で待機しないでください。</span><span class="sxs-lookup"><span data-stu-id="51a62-285">Do not wait on the <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.</span></span>  
  
-   <span data-ttu-id="51a62-286">元の <xref:System.Threading.SynchronizationContext> オブジェクトでコールバックを呼び出す <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> オーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="51a62-286">Do not call the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> overloads which invoke the callback on the original <xref:System.Threading.SynchronizationContext> object.</span></span>  
  
-   <span data-ttu-id="51a62-287"><xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> メソッドに提供されるコールバック内から <xref:System.Web.HttpContext> オブジェクトまたはその他のスレッドセーフでない ASP.NET 組み込みオブジェクトを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="51a62-287">Do not use the <xref:System.Web.HttpContext> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="51a62-288">コールバックは、他の ASP.NET またはアプリケーションコードと同時に実行されている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-288">The callback may be running concurrently with other ASP.NET or application code.</span></span>  
  
-   <span data-ttu-id="51a62-289">コールバックメソッドを短時間で実行し、非ブロッキングにします。</span><span class="sxs-lookup"><span data-stu-id="51a62-289">Keep the callback methods short-running and non-blocking.</span></span>  
  
-   <span data-ttu-id="51a62-290">コールバックメソッド内から例外がスローされないように、すべての作業を行います。</span><span class="sxs-lookup"><span data-stu-id="51a62-290">Make every effort to avoid throwing exceptions from within the callback methods.</span></span>  
  
 <span data-ttu-id="51a62-291">このプロパティは、インターネットインフォメーションサービス (IIS) 7.5 以降の統合モードでのみサポートされています。</span><span class="sxs-lookup"><span data-stu-id="51a62-291">This property is only supported in Internet Information Service (IIS) 7.5 or higher in integrated mode.</span></span> <span data-ttu-id="51a62-292">適切な IIS バージョンまたはパイプラインモードを使用せずに呼び出すと、<xref:System.PlatformNotSupportedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="51a62-292">If you invoke it without the right IIS version or pipeline mode, a <xref:System.PlatformNotSupportedException> is thrown.</span></span> <span data-ttu-id="51a62-293">IIS のバージョンを確認するには、<xref:System.Web.HttpRuntime.IISVersion%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="51a62-293">To determine the IIS version, use <xref:System.Web.HttpRuntime.IISVersion%2A>.</span></span> <span data-ttu-id="51a62-294">パイプラインモードを決定するには、<xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="51a62-294">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpResponse.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51a62-295">クライアントへのソケット接続を閉じます。</span><span class="sxs-lookup"><span data-stu-id="51a62-295">Closes the socket connection to a client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-296">このメソッドは、クライアントへの接続を突然終了します。通常の HTTP 要求処理を目的としたものではありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-296">This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing.</span></span> <span data-ttu-id="51a62-297">メソッドはリセットパケットをクライアントに送信します。これにより、サーバー、クライアント、またはその間のどこかにバッファーされている応答データが削除される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-297">The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.</span></span>  
  
 <span data-ttu-id="51a62-298">ただし、通常は、<xref:System.Web.HttpApplication.EndRequest> イベントに進んでクライアントに応答を送信する場合は、代わりに <xref:System.Web.HttpApplication.CompleteRequest%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-298">However, typically you should call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead if you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpResponse.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-299">出力ストリームの HTTP 文字セットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-299">Gets or sets the HTTP character set of the output stream.</span></span></summary>
        <value><span data-ttu-id="51a62-300">現在の応答の文字セットに関する情報を格納している <see cref="T:System.Text.Encoding" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-300">A <see cref="T:System.Text.Encoding" /> object that contains information about the character set of the current response.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-301">既定の `ContentEncoding` は、ASP.NET 構成ファイルの[グローバリゼーション要素 (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)セクションに指定できます。</span><span class="sxs-lookup"><span data-stu-id="51a62-301">Default `ContentEncoding` can be specified in an ASP.NET configuration file in the [globalization Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) section.</span></span> <span data-ttu-id="51a62-302">クライアントによって <xref:System.Web.HttpResponse.ContentEncoding%2A> が指定されている場合は、既定の構成設定が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="51a62-302">If <xref:System.Web.HttpResponse.ContentEncoding%2A> is specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-303">次の例では、文字セットエンコーディングの記述を、ユーザーが判読できる形式で出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-303">The following example writes a human-readable description of the character set encoding to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-304"><see cref="P:System.Web.HttpResponse.ContentEncoding" /> を <see langword="null" /> に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-304">Attempted to set <see cref="P:System.Web.HttpResponse.ContentEncoding" /> to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpResponse.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-305">出力ストリームの HTTP MIME タイプを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-305">Gets or sets the HTTP MIME type of the output stream.</span></span></summary>
        <value><span data-ttu-id="51a62-306">出力ストリームの HTTP MIME タイプ。</span><span class="sxs-lookup"><span data-stu-id="51a62-306">The HTTP MIME type of the output stream.</span></span> <span data-ttu-id="51a62-307">既定値は "<see langword="text/html" />" です。</span><span class="sxs-lookup"><span data-stu-id="51a62-307">The default value is "<see langword="text/html" />".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-308">次の例では、応答の <xref:System.Web.HttpResponse.ContentType%2A> プロパティを image/jpeg に設定し、<xref:System.Web.HttpResponse.Clear%2A> メソッドを呼び出して応答に添付されている可能性のあるその他のコンテンツを削除してから、<xref:System.Web.HttpResponse.BufferOutput%2A> プロパティを true に設定して、ページ全体が処理されるようにします。すべてのコンテンツは、要求元のクライアントに送信されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-308">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.</span></span>  
  
 <span data-ttu-id="51a62-309">完全な例については、<xref:System.Web.HttpResponse> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-309">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-310"><see cref="P:System.Web.HttpResponse.ContentType" /> プロパティが <see langword="null" /> に設定されている。</span><span class="sxs-lookup"><span data-stu-id="51a62-310">The <see cref="P:System.Web.HttpResponse.ContentType" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpResponse.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-311">応答のクッキー コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="51a62-311">Gets the response cookie collection.</span></span></summary>
        <value><span data-ttu-id="51a62-312">応答のクッキー コレクション。</span><span class="sxs-lookup"><span data-stu-id="51a62-312">The response cookie collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-313">ASP.NET には、2つの組み込みクッキーコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="51a62-313">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="51a62-314"><xref:System.Web.HttpRequest> の <xref:System.Web.HttpRequest.Cookies%2A> コレクションを通じてアクセスされるコレクションには、クライアントが `Cookie` ヘッダーでサーバーに送信する cookie が含まれています。</span><span class="sxs-lookup"><span data-stu-id="51a62-314">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="51a62-315"><xref:System.Web.HttpResponse> の <xref:System.Web.HttpResponse.Cookies%2A> コレクションを通じてアクセスされるコレクションには、サーバー上で作成され `Set-Cookie` ヘッダーでクライアントに送信される新しいクッキーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="51a62-315">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
 <span data-ttu-id="51a62-316"><xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> コレクションを使用して cookie を追加した後、応答がクライアントに送信されていない場合でも、<xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> コレクションでクッキーをすぐに使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="51a62-316">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-317">次の例では、`LastVisit`という名前の新しい cookie を作成し、クッキーの値を現在の日付と時刻に設定し、クッキーを現在の cookie コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-317">The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection.</span></span> <span data-ttu-id="51a62-318">Cookie コレクション内のすべての cookie は、HTTP 出力ストリームを含む `Set-Cookie` ヘッダー内のクライアントに送信されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-318">All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableKernelCache">
      <MemberSignature Language="C#" Value="public void DisableKernelCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableKernelCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.DisableKernelCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableKernelCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableKernelCache();" />
      <MemberSignature Language="F#" Value="member this.DisableKernelCache : unit -&gt; unit" Usage="httpResponse.DisableKernelCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51a62-319">現在の応答に対するカーネル キャッシュを無効にします。</span><span class="sxs-lookup"><span data-stu-id="51a62-319">Disables kernel caching for the current response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-320">カーネルキャッシュがサポートされていない場合、このメソッドによる影響はありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-320">If kernel caching is not supported, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableUserCache">
      <MemberSignature Language="C#" Value="public void DisableUserCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableUserCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.DisableUserCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableUserCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableUserCache();" />
      <MemberSignature Language="F#" Value="member this.DisableUserCache : unit -&gt; unit" Usage="httpResponse.DisableUserCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51a62-321">この応答に対する IIS ユーザー モードのキャッシュを無効にします。</span><span class="sxs-lookup"><span data-stu-id="51a62-321">Disables IIS user-mode caching for this response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-322">IIS ユーザーモードキャッシュがサポートされていない場合、このメソッドは何もアクションを実行せずに制御を戻します。</span><span class="sxs-lookup"><span data-stu-id="51a62-322">If IIS user-mode caching is not supported, this method returns without performing any action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void End() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.End" />
      <MemberSignature Language="VB.NET" Value="Public Sub End ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void End();" />
      <MemberSignature Language="F#" Value="member this.End : unit -&gt; unit" Usage="httpResponse.End " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51a62-323">現在バッファリングされているすべての出力をクライアントへ送信し、ページの実行を停止して、<see cref="E:System.Web.HttpApplication.EndRequest" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="51a62-323">Sends all currently buffered output to the client, stops execution of the page, and raises the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-324">このメソッドは、ASP との互換性を確保するためだけに提供されています。つまり、ASP.NET の前にある COM ベースの Web プログラミングテクノロジとの互換性を確保するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-324">This method is provided only for compatibility with ASP - that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET.</span></span> <span data-ttu-id="51a62-325"><xref:System.Web.HttpApplication.EndRequest> イベントに進んでクライアントに応答を送信する場合は、通常、代わりに <xref:System.Web.HttpApplication.CompleteRequest%2A> を呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="51a62-325">If you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client, it is usually preferable to call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead.</span></span>  
  
 <span data-ttu-id="51a62-326">ASP の `End` メソッドの動作を模倣するために、このメソッドは <xref:System.Threading.ThreadAbortException> の例外を発生させようとします。</span><span class="sxs-lookup"><span data-stu-id="51a62-326">To mimic the behavior of the `End` method in ASP, this method tries to raise a <xref:System.Threading.ThreadAbortException> exception.</span></span> <span data-ttu-id="51a62-327">この試行が成功すると、呼び出し元のスレッドは中止され、サイトのパフォーマンスに悪影響を及ぼす可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-327">If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance.</span></span> <span data-ttu-id="51a62-328">この場合、<xref:System.Web.HttpResponse.End%2A> メソッドの呼び出しの後にコードが実行されることはありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-328">In that case, no code after the call to the <xref:System.Web.HttpResponse.End%2A> method is executed.</span></span>  
  
 <span data-ttu-id="51a62-329"><xref:System.Web.HttpResponse.End%2A> メソッドが <xref:System.Threading.ThreadAbortException>を発生させることができない場合は、代わりに応答バイトをクライアントにフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="51a62-329">If the <xref:System.Web.HttpResponse.End%2A> method is not able to raise a <xref:System.Threading.ThreadAbortException>, it instead flushes the response bytes to the client.</span></span> <span data-ttu-id="51a62-330">これは同期的に行われるため、サイトのパフォーマンスに悪影響を及ぼすこともあります。</span><span class="sxs-lookup"><span data-stu-id="51a62-330">It does this synchronously, which can also be detrimental to your site's performance.</span></span>  
  
 <span data-ttu-id="51a62-331">どちらの場合も (<xref:System.Threading.ThreadAbortException> 例外が正常に発生したかどうかにかかわらず)、応答パイプラインは <xref:System.Web.HttpApplication.EndRequest> イベントに進みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-331">In either case (whether or not a <xref:System.Threading.ThreadAbortException> exception is successfully raised), the response pipeline jumps ahead to the <xref:System.Web.HttpApplication.EndRequest> event.</span></span>  
  
 <span data-ttu-id="51a62-332"><xref:System.Web.HttpApplication.CompleteRequest%2A> メソッドは例外を発生させず、<xref:System.Web.HttpApplication.CompleteRequest%2A> メソッドの呼び出しの後のコードが実行される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-332">The <xref:System.Web.HttpApplication.CompleteRequest%2A> method does not raise an exception, and code after the call to the <xref:System.Web.HttpApplication.CompleteRequest%2A> method might be executed.</span></span> <span data-ttu-id="51a62-333">今後のコードの実行を回避し、<xref:System.Web.HttpResponse.End%2A> のパフォーマンス低下が許容される場合は、<xref:System.Web.HttpApplication.CompleteRequest%2A>ではなく <xref:System.Web.HttpResponse.End%2A> を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="51a62-333">If your intention is to avoid execution of subsequent code, and if the performance penalty of <xref:System.Web.HttpResponse.End%2A> is acceptable, you can call <xref:System.Web.HttpResponse.End%2A> instead of <xref:System.Web.HttpApplication.CompleteRequest%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadAbortException"><span data-ttu-id="51a62-334"><see cref="M:System.Web.HttpResponse.End" /> の呼び出しは、現在の要求を終了しました。</span><span class="sxs-lookup"><span data-stu-id="51a62-334">The call to <see cref="M:System.Web.HttpResponse.End" /> has terminated the current request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public void EndFlush (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndFlush(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndFlush (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndFlush(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndFlush : IAsyncResult -&gt; unit" Usage="httpResponse.EndFlush asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="51a62-335">非同期の結果オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-335">The asynchronous result object.</span></span></param>
        <summary><span data-ttu-id="51a62-336">非同期のフラッシュ操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="51a62-336">Completes an asynchronous flush operation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-337">非同期フラッシュはサポートされていません。<paramref name="asyncResult" /> パラメーターは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-337">Asynchronous flush is not supported and the <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51a62-338">非同期フラッシュはサポートされていません。<paramref name="asyncResult" /> パラメーターは <c>FlushAsyncResult</c> オブジェクトにキャストできません。</span><span class="sxs-lookup"><span data-stu-id="51a62-338">Asynchronous flush is not supported and the <paramref name="asyncResult" /> parameter cannot be cast to a <c>FlushAsyncResult</c> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public int Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Expires { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Expires : int with get, set" Usage="System.Web.HttpResponse.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-339">ブラウザーでキャッシュされたページの有効期限が切れるまでの時間を分単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-339">Gets or sets the number of minutes before a page cached on a browser expires.</span></span> <span data-ttu-id="51a62-340">有効期限が切れる前にユーザーが同じページに戻った場合、キャッシュされたバージョンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-340">If the user returns to the same page before it expires, the cached version is displayed.</span></span> <span data-ttu-id="51a62-341"><see cref="P:System.Web.HttpResponse.Expires" /> は、ASP の旧バージョンとの互換性のために提供されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-341"><see cref="P:System.Web.HttpResponse.Expires" /> is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <value><span data-ttu-id="51a62-342">ページの有効期限が切れるまでの分単位の時間。</span><span class="sxs-lookup"><span data-stu-id="51a62-342">The number of minutes before the page expires.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-343">`Expires`、<xref:System.Web.HttpResponse.ExpiresAbsolute%2A>、および <xref:System.Web.HttpResponse.CacheControl%2A> の各プロパティは、<xref:System.Web.HttpResponse.Cache%2A> (IIS) 出力キャッシュとクライアントキャッシュを制御するためにインターネットインフォメーションサービス組み込みオブジェクトを介して使用できる <xref:System.Web.HttpCachePolicy> クラスのメソッドを優先するため、非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="51a62-343">The `Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresAbsolute">
      <MemberSignature Language="C#" Value="public DateTime ExpiresAbsolute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpiresAbsolute" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ExpiresAbsolute" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpiresAbsolute As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpiresAbsolute { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.ExpiresAbsolute : DateTime with get, set" Usage="System.Web.HttpResponse.ExpiresAbsolute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-344">キャッシュされた情報をキャッシュから削除する絶対日時を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-344">Gets or sets the absolute date and time at which to remove cached information from the cache.</span></span> <span data-ttu-id="51a62-345"><see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /> は、ASP の旧バージョンとの互換性のために提供されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-345"><see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /> is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <value><span data-ttu-id="51a62-346">ページの有効期限が切れる日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="51a62-346">The date and time at which the page expires.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-347">`ExpiresAbsolute`、<xref:System.Web.HttpResponse.Expires%2A>、および <xref:System.Web.HttpResponse.CacheControl%2A> の各プロパティは、<xref:System.Web.HttpResponse.Cache%2A> (IIS) 出力キャッシュとクライアントキャッシュを制御するためにインターネットインフォメーションサービス組み込みオブジェクトを介して使用できる <xref:System.Web.HttpCachePolicy> クラスのメソッドを優先するため、非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="51a62-347">The `ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpResponse.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-348">伝送する前に HTTP エンティティ本体を変更するために使用される、ラッピング フィルター オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-348">Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.</span></span></summary>
        <value><span data-ttu-id="51a62-349">出力フィルターとして機能する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-349">The <see cref="T:System.IO.Stream" /> object that acts as the output filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-350">`Stream` オブジェクトを作成し、<xref:System.Web.HttpResponse.Filter%2A> プロパティを `Stream` オブジェクトに設定すると、<xref:System.Web.HttpResponse.Write%2A> によって送信されたすべての HTTP 出力がフィルターを通過します。</span><span class="sxs-lookup"><span data-stu-id="51a62-350">When you create a `Stream` object and set the <xref:System.Web.HttpResponse.Filter%2A> property to the `Stream` object, all HTTP output sent by <xref:System.Web.HttpResponse.Write%2A> passes through the filter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-351">次の例は、<xref:System.Web.HttpResponse.Filter%2A> プロパティを `UpperCaseFilter` クラスの新しいインスタンスに設定する ASP.NET ページです。これは、それを通過するすべてのテキストを大文字に変換するカスタム <xref:System.IO.Stream> クラスです。</span><span class="sxs-lookup"><span data-stu-id="51a62-351">The following example is an ASP.NET page that sets the <xref:System.Web.HttpResponse.Filter%2A> property to a new instance of the `UpperCaseFilter` class, a custom <xref:System.IO.Stream> class that converts all text that passes through it to uppercase.</span></span> <span data-ttu-id="51a62-352">要求に関する情報がテキストファイルに保存され、<xref:System.Web.HttpResponse.Filter%2A> プロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-352">The information about the request is saved to a text file, and then the <xref:System.Web.HttpResponse.Filter%2A> property is set.</span></span> <span data-ttu-id="51a62-353">応答フィルターが配置された後、コードは <xref:System.Web.HttpRequest.MapPath%2A> メソッドを呼び出して、応答のコンテンツのソースとして機能する `TestFile.txt` という名前のテキストファイルへの絶対パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="51a62-353">After the response filter is in place, the code calls the <xref:System.Web.HttpRequest.MapPath%2A> method to get the absolute path to a text file named `TestFile.txt` that serves as the source for the content of the response.</span></span> <span data-ttu-id="51a62-354">次に、テキストファイルを最初から最後まで読み取るための新しい <xref:System.IO.StreamReader> オブジェクトを作成し、<xref:System.Web.HttpResponse.Write%2A> メソッドを呼び出して、ページ上のファイルの内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-354">The code then creates a new <xref:System.IO.StreamReader> object to read the text file from beginning to end, and then calls the <xref:System.Web.HttpResponse.Write%2A> method to display the content of the file on the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-355">このエンティティではフィルター処理を実行できません。</span><span class="sxs-lookup"><span data-stu-id="51a62-355">Filtering is not allowed with the entity.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="httpResponse.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51a62-356">現在バッファリングされているすべての出力をクライアントへ送信します。</span><span class="sxs-lookup"><span data-stu-id="51a62-356">Sends all currently buffered output to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-357">現在バッファリングされているすべての出力を強制的にクライアントに送信します。</span><span class="sxs-lookup"><span data-stu-id="51a62-357">Forces all currently buffered output to be sent to the client.</span></span> <span data-ttu-id="51a62-358"><xref:System.Web.HttpResponse.Flush%2A> メソッドは、要求の処理中に複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="51a62-358">The <xref:System.Web.HttpResponse.Flush%2A> method can be called multiple times during request processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-359">次の例では、<xref:System.Drawing.Graphics.Save%2A> メソッドを呼び出して、<xref:System.Drawing.Bitmap> オブジェクトを <xref:System.Web.HttpResponse.OutputStream%2A> プロパティに保存し、画像を JPEG 形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="51a62-359">The following example calls the <xref:System.Drawing.Graphics.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property and converts the image to the JPEG format.</span></span> <span data-ttu-id="51a62-360">次に、このコードは <xref:System.Drawing.Bitmap> オブジェクトと <xref:System.Drawing.Graphics> オブジェクトの `Dispose` メソッドを呼び出して、使用していたリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="51a62-360">The code then calls the `Dispose` method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using.</span></span> <span data-ttu-id="51a62-361">次に、<xref:System.Web.HttpResponse.Flush%2A> メソッドを呼び出して、要求元のクライアントに応答の内容を送信します。</span><span class="sxs-lookup"><span data-stu-id="51a62-361">It then calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.</span></span>  
  
 <span data-ttu-id="51a62-362">完全な例については、<xref:System.Web.HttpResponse> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-362">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-363">応答が送信された後にキャッシュがフラッシュされています。</span><span class="sxs-lookup"><span data-stu-id="51a62-363">The cache is flushed after the response has been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="httpResponse.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51a62-364">現在バッファリングされているすべての出力をクライアントへ非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="51a62-364">Asynchronously sends all currently buffered output to the client.</span></span></summary>
        <returns><span data-ttu-id="51a62-365">非同期操作を表す <see cref="T:System.Threading.Tasks.Task" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-365">A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeaderEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeaderEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.HeaderEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ HeaderEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpResponse.HeaderEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-366">現在のヘッダー出力ストリームのエンコーディングを表す <see cref="T:System.Text.Encoding" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-366">Gets or sets an <see cref="T:System.Text.Encoding" /> object that represents the encoding for the current header output stream.</span></span></summary>
        <value><span data-ttu-id="51a62-367">現在のヘッダーの文字セットに関する情報が格納されている <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-367">An <see cref="T:System.Text.Encoding" /> that contains information about the character set for the current header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-368"><xref:System.Web.HttpResponse.HeaderEncoding%2A> プロパティを使用すると、<xref:System.Text.ASCIIEncoding>、<xref:System.Text.UnicodeEncoding>、<xref:System.Text.UTF7Encoding>、または <xref:System.Text.UTF8Encoding> オブジェクトを使用して、応答ヘッダーの <xref:System.Text.Encoding> オブジェクトを無効にしたり、変更したりできます。</span><span class="sxs-lookup"><span data-stu-id="51a62-368">The <xref:System.Web.HttpResponse.HeaderEncoding%2A> property gives you the ability to disable or change the <xref:System.Text.Encoding> object on a response header by using the <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, or <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="51a62-369">既定のエンコーディング値は <xref:System.Text.UTF8Encoding> クラスです。</span><span class="sxs-lookup"><span data-stu-id="51a62-369">The default encoding value is the <xref:System.Text.UTF8Encoding> class.</span></span>  
  
 <span data-ttu-id="51a62-370"><xref:System.Web.HttpResponse.HeaderEncoding%2A> プロパティの種類を変更することにより、特定の悪意のある攻撃のリスクを高めたり、応答ヘッダーを介して機密データを送信したりする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-370">By changing the type of the <xref:System.Web.HttpResponse.HeaderEncoding%2A> property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header.</span></span> <span data-ttu-id="51a62-371">ヘッダーインジェクション攻撃を回避するには、応答の <xref:System.Web.HttpResponse.HeaderEncoding%2A> プロパティを既定の設定にしておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-371">Header injection attacks can be avoided, in part, by leaving the <xref:System.Web.HttpResponse.HeaderEncoding%2A> property of a response to the default setting.</span></span> <span data-ttu-id="51a62-372">脆弱なアプリケーションに対する攻撃は、応答ヘッダーの一部として、委任されたデータをエコーバックすることがあります。</span><span class="sxs-lookup"><span data-stu-id="51a62-372">An attack against a vulnerable application could echo back entrusted data as part of a response header.</span></span> <span data-ttu-id="51a62-373">ヘッダー内の継続行の要件によって <xref:System.Web.HttpResponse.HeaderEncoding%2A> が無効になっている場合、または信頼されていないデータの結果に基づいてヘッダーが作成されている場合は、応答ストリームに送信する前にヘッダーデータを検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-373">If the <xref:System.Web.HttpResponse.HeaderEncoding%2A> is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-374">エンコーディング値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-374">The encoding value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-375">エンコーディング値は <see cref="P:System.Text.Encoding.Unicode" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-375">The encoding value is <see cref="P:System.Text.Encoding.Unicode" />.</span></span>  
  
<span data-ttu-id="51a62-376">- または -</span><span class="sxs-lookup"><span data-stu-id="51a62-376">-or-</span></span> 
<span data-ttu-id="51a62-377">ヘッダーは既に送信されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-377">The headers have already been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpResponse.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-378">応答ヘッダーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="51a62-378">Gets the collection of response headers.</span></span></summary>
        <value><span data-ttu-id="51a62-379">応答ヘッダーの <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-379">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of response headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-380"><xref:System.Web.HttpResponse.Headers%2A> プロパティは、[!INCLUDE[iisver](~/includes/iisver-md.md)] 統合パイプラインモードと、少なくとも 3.0 .NET Framework でのみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="51a62-380">The <xref:System.Web.HttpResponse.Headers%2A> property is only supported with the [!INCLUDE[iisver](~/includes/iisver-md.md)] integrated pipeline mode and at least the .NET Framework 3.0.</span></span> <span data-ttu-id="51a62-381"><xref:System.Web.HttpResponse.Headers%2A> プロパティにアクセスしようとしたときに、これら2つの条件のいずれかが満たされていない場合、<xref:System.PlatformNotSupportedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="51a62-381">When you try to access the <xref:System.Web.HttpResponse.Headers%2A> property and either of these two conditions is not met, a <xref:System.PlatformNotSupportedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="51a62-382">操作には、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプライン モードと、少なくとも .NET Framework バージョン 3.0 が必要です。</span><span class="sxs-lookup"><span data-stu-id="51a62-382">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=86952"><span data-ttu-id="51a62-383">IIS 7.0 への ASP.NET アプリケーションのアップグレード: IIS 7.0 統合モードとクラシックモードの違い</span><span class="sxs-lookup"><span data-stu-id="51a62-383">Upgrading ASP.NET Applications to IIS 7.0: Differences between IIS 7.0 Integrated Mode and Classic mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HeadersWritten">
      <MemberSignature Language="C#" Value="public bool HeadersWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HeadersWritten" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.HeadersWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeadersWritten As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HeadersWritten { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HeadersWritten : bool" Usage="System.Web.HttpResponse.HeadersWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-384">応答ヘッダーが既に作成されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="51a62-384">Gets a value indicating whether the response headers have been written.</span></span></summary>
        <value><span data-ttu-id="51a62-385">応答ヘッダーが書き込まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-385"><see langword="true" /> if the response headers have been written; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public bool IsClientConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClientConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.IsClientConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClientConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClientConnected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClientConnected : bool" Usage="System.Web.HttpResponse.IsClientConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-386">クライアントがサーバーにまだ接続されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="51a62-386">Gets a value indicating whether the client is still connected to the server.</span></span></summary>
        <value><span data-ttu-id="51a62-387">クライアントが現在接続されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-387"><see langword="true" /> if the client is currently connected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-388"><xref:System.Web.HttpResponse.IsClientConnected%2A> プロパティは、次の条件に該当する場合に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="51a62-388">The <xref:System.Web.HttpResponse.IsClientConnected%2A> property returns `false` when the following conditions are true:</span></span>  
  
-   <span data-ttu-id="51a62-389">クライアントへの接続が終了されました。</span><span class="sxs-lookup"><span data-stu-id="51a62-389">The connection to the client was terminated.</span></span> <span data-ttu-id="51a62-390">これは、<xref:System.Web.HttpResponse.Close%2A> メソッドが呼び出された場合、またはクライアントが Web ページの実行を停止した場合、または別のページを参照した場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-390">This can occur if the <xref:System.Web.HttpResponse.Close%2A> method was invoked, or if the client stopped execution of the Web page or browsed to another page.</span></span>  
  
-   <span data-ttu-id="51a62-391">要求を処理している <xref:System.Web.HttpWorkerRequest> オブジェクトが `null` か、または <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> メソッドが `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="51a62-391">The <xref:System.Web.HttpWorkerRequest> object that is handling the request is `null` or the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> method returns `false`.</span></span> <span data-ttu-id="51a62-392">カスタム <xref:System.Web.HttpWorkerRequest> オブジェクトが要求を処理する場合、<xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> メソッドはカスタム条件に基づいて設定される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-392">If a custom <xref:System.Web.HttpWorkerRequest> object handles the request, then the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> method might be set based on custom criteria.</span></span> <span data-ttu-id="51a62-393">たとえば、カスタムワーカー要求では、一定期間後にタイムアウトが強制される場合があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-393">For example, the custom worker request might force a time-out after a period of time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-394">次の例では、<xref:System.Web.HttpResponse.IsClientConnected%2A> プロパティを使用して、ページを要求しているクライアントがサーバーに接続されたままであるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="51a62-394">The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server.</span></span> <span data-ttu-id="51a62-395"><xref:System.Web.HttpResponse.IsClientConnected%2A> が true の場合、コードは <xref:System.Web.HttpResponse.Redirect%2A> メソッドを呼び出し、クライアントは別のページを表示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-395">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page.</span></span> <span data-ttu-id="51a62-396"><xref:System.Web.HttpResponse.IsClientConnected%2A> が false の場合、コードは <xref:System.Web.HttpResponse.End%2A> メソッドを呼び出し、すべてのページ処理が終了します。</span><span class="sxs-lookup"><span data-stu-id="51a62-396">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page1cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequestBeingRedirected">
      <MemberSignature Language="C#" Value="public bool IsRequestBeingRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequestBeingRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.IsRequestBeingRedirected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequestBeingRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequestBeingRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequestBeingRedirected : bool" Usage="System.Web.HttpResponse.IsRequestBeingRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-397">クライアントが新しい場所へ転送されている最中かどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="51a62-397">Gets a Boolean value indicating whether the client is being transferred to a new location.</span></span></summary>
        <value><span data-ttu-id="51a62-398">Location 応答ヘッダーの値が現在の場所と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-398"><see langword="true" /> if the value of the location response header is different than the current location; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-399"><xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A> プロパティを <xref:System.Web.HttpResponse.RedirectLocation%2A> プロパティと共に使用して、HTTP `Location` ヘッダー内のクライアントに送信される絶対 URI が現在の URI と異なっているかどうか、および転送される新しい目的の URI がどのようなものであるかをテストします。</span><span class="sxs-lookup"><span data-stu-id="51a62-399">Use the <xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A> property with the <xref:System.Web.HttpResponse.RedirectLocation%2A> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP `Location` header is different than the current URI and what the new intended URI that is being transferred to will be.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Output { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Output" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Output" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Output As TextWriter" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Output : System.IO.TextWriter" Usage="System.Web.HttpResponse.Output" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Output { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property Output As TextWriter" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Output : System.IO.TextWriter with get, set" Usage="System.Web.HttpResponse.Output" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-400">発信 HTTP 応答ストリームへのテキストの出力を有効にします。</span><span class="sxs-lookup"><span data-stu-id="51a62-400">Enables output of text to the outgoing HTTP response stream.</span></span></summary>
        <value><span data-ttu-id="51a62-401">クライアントへのカスタム出力を有効にする <see cref="T:System.IO.TextWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-401">A <see cref="T:System.IO.TextWriter" /> object that enables custom output to the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-402">次の例は、<xref:System.Web.UI.WebControls.TextBox.TextMode%2A> プロパティが <xref:System.Web.UI.WebControls.TextBoxMode.MultiLine>に設定されている <xref:System.Web.UI.WebControls.TextBox> コントロールを含む、ASP.NET ページです。</span><span class="sxs-lookup"><span data-stu-id="51a62-402">The following example is an ASP.NET page that contains a <xref:System.Web.UI.WebControls.TextBox> control that has its <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> property set to <xref:System.Web.UI.WebControls.TextBoxMode.MultiLine>.</span></span> <span data-ttu-id="51a62-403">ページのコードは、ユーザーが <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>に入力したテキストを受け取り、<xref:System.Web.HttpServerUtility.HtmlEncode%2A> メソッドを使用して HTML エンコードし、<xref:System.Web.HttpResponse.Output%2A> プロパティを使用してエンコードされた文字列をページに表示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-403">The page's code takes the text that a user enters in the <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>, uses the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method to HTML encode it, and the <xref:System.Web.HttpResponse.Output%2A> property to display the encoded string to the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse.Output_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Output_Sample/CS/responseoutputcs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse.Output_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Output_Sample/VB/responseoutputvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.OutputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ OutputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputStream : System.IO.Stream" Usage="System.Web.HttpResponse.OutputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-404">発信 HTTP コンテンツ本体へのバイナリ出力を有効にします。</span><span class="sxs-lookup"><span data-stu-id="51a62-404">Enables binary output to the outgoing HTTP content body.</span></span></summary>
        <value><span data-ttu-id="51a62-405">発信 HTTP コンテンツ本体の生の内容を表す IO <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-405">An IO <see cref="T:System.IO.Stream" /> representing the raw contents of the outgoing HTTP content body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-406">.NET Framework バージョン2.0 以降では、<xref:System.Web.HttpResponse.OutputStream%2A> プロパティによって返される IO ストリームの <xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> メソッドを使用すると、次の例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-406">Starting with the .NET Framework version 2.0, when you use the <xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method of the IO stream returned by the <xref:System.Web.HttpResponse.OutputStream%2A> property, the following exceptions might be thrown:</span></span>  
  
-   <span data-ttu-id="51a62-407"><xref:System.ArgumentOutOfRangeException>、`offset` または `count` パラメーターが負の場合、または `buffer` パラメーターの長さから `offset` パラメーターを引いた値が0以下の場合に指定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-407"><xref:System.ArgumentOutOfRangeException>, if the `offset` or `count` parameter is negative or if the `buffer` parameter's length minus the `offset` parameter is less than or equal to zero.</span></span>  
  
-   <span data-ttu-id="51a62-408">`buffer` パラメーターが `null`場合は <xref:System.ArgumentNullException>。</span><span class="sxs-lookup"><span data-stu-id="51a62-408"><xref:System.ArgumentNullException>, if the `buffer` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-409">次の例では、<xref:System.Drawing.Image.Save%2A> メソッドを呼び出して、<xref:System.Drawing.Bitmap> オブジェクトを <xref:System.Web.HttpResponse.OutputStream%2A> プロパティに保存し、画像を JPEG 形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="51a62-409">The following example calls the <xref:System.Drawing.Image.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property, and converts the image to the JPEG format.</span></span> <span data-ttu-id="51a62-410">次に、コードは、<xref:System.Drawing.Bitmap> オブジェクトと <xref:System.Drawing.Graphics> オブジェクトの Dispose メソッドを呼び出して、使用していたリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="51a62-410">The code then calls the Dispose method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using.</span></span> <span data-ttu-id="51a62-411">最後に、このコードは <xref:System.Web.HttpResponse.Flush%2A> メソッドを呼び出して、要求元のクライアントに応答の内容を送信します。</span><span class="sxs-lookup"><span data-stu-id="51a62-411">Finally, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.</span></span>  
  
 <span data-ttu-id="51a62-412">完全な例については、<xref:System.Web.HttpResponse> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-412">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-413"><paramref name="OutputStream" /> が使用できません。</span><span class="sxs-lookup"><span data-stu-id="51a62-413"><paramref name="OutputStream" /> is not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pics">
      <MemberSignature Language="C#" Value="public void Pics (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pics(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Pics(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pics (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pics(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Pics : string -&gt; unit" Usage="httpResponse.Pics value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51a62-414"><see langword="PICS-Label" /> ヘッダーに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="51a62-414">The string to add to the <see langword="PICS-Label" /> header.</span></span></param>
        <summary><span data-ttu-id="51a62-415">HTTP <see langword="PICS-Label" /> ヘッダーを出力ストリームに追加します。</span><span class="sxs-lookup"><span data-stu-id="51a62-415">Appends a HTTP <see langword="PICS-Label" /> header to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-416">インターネットコンテンツの選択用プラットフォーム (PICS) は、コンテンツのラベル付けに使用される W3C (World Wide Web コンソーシアム) 標準です。</span><span class="sxs-lookup"><span data-stu-id="51a62-416">Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling.</span></span> <span data-ttu-id="51a62-417">PICS は基本的に、評価システムを作成するための言語です。</span><span class="sxs-lookup"><span data-stu-id="51a62-417">PICS is essentially a language for creating a ratings system.</span></span>  
  
 <span data-ttu-id="51a62-418">任意の値を PICS ラベルにすることができます。ASP.NET では、ラベルは検証されません。</span><span class="sxs-lookup"><span data-stu-id="51a62-418">Any value can be a PICS label; ASP.NET does not validate the label.</span></span> <span data-ttu-id="51a62-419">文字列の最大長は255文字です。</span><span class="sxs-lookup"><span data-stu-id="51a62-419">The maximum length of the string is 255 characters.</span></span> <span data-ttu-id="51a62-420">PICS 標準と構文の詳細については、 [World Wide Web コンソーシアム](https://go.microsoft.com/fwlink/?LinkID=37125)Web サイトを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-420">For more information about PICS standards and syntax, see the [World Wide Web Consortium](https://go.microsoft.com/fwlink/?LinkID=37125) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-421">次の例は、画像を表示する ASP.NET ページです。</span><span class="sxs-lookup"><span data-stu-id="51a62-421">The following example is an ASP.NET page that displays an image.</span></span> <span data-ttu-id="51a62-422">ページコードは <xref:System.Web.HttpResponse.Pics%2A> メソッドを呼び出して、応答の HTTP `PICS-Label` ヘッダーを設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-422">The page code calls the <xref:System.Web.HttpResponse.Pics%2A> method to set the HTTP `PICS-Label` header for the response.</span></span> <span data-ttu-id="51a62-423"><xref:System.Web.HttpResponse.Pics%2A> メソッドにパラメーターとして渡される文字列は、インターネットコンテンツ評価の関連付け (ICRA) Web サイトから生成された評価ラベルを表します。</span><span class="sxs-lookup"><span data-stu-id="51a62-423">The string that is passed as the parameter to the <xref:System.Web.HttpResponse.Pics%2A> method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page2cs.aspx#2)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PushPromise">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-424">promise オブジェクトを昇格させます。</span><span class="sxs-lookup"><span data-stu-id="51a62-424">Promotes a promised object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public void PushPromise (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushPromise(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.PushPromise(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushPromise (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushPromise(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.PushPromise : string -&gt; unit" Usage="httpResponse.PushPromise path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="51a62-425">プッシュ要求の URL です。</span><span class="sxs-lookup"><span data-stu-id="51a62-425">The URL of the push request.</span></span> <span data-ttu-id="51a62-426">サーバーがクライアントにプッシュする相対リソースの仮想パスになります。</span><span class="sxs-lookup"><span data-stu-id="51a62-426">It should be the virtual path of the relative resource that the server wants to push to the client.</span></span></param>
        <summary><span data-ttu-id="51a62-427">この API は、プッシュ promise を HTTP 2.0 クライアントに送信するアプリケーションをサポートするためのものです。</span><span class="sxs-lookup"><span data-stu-id="51a62-427">This API is to support applications sending push promises to HTTP 2.0 clients.</span></span> <span data-ttu-id="51a62-428">Http2 サーバー プッシュに関する詳細は、「<see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2: Server Push (HTTP/2 仕様セクション 8.2: サーバー プッシュ)</see>」にあります。</span><span class="sxs-lookup"><span data-stu-id="51a62-428">You can find more details regarding to Http2 server push at <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2: Server Push</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-429">PushPromise は非決定的であり、アプリケーションはそれに依存するロジックを持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="51a62-429">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="51a62-430">その唯一の目的は、場合によってはパフォーマンス上の利点です。</span><span class="sxs-lookup"><span data-stu-id="51a62-430">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="51a62-431">多くの条件 (プロトコルおよび実装) によって、がプッシュ要求を完全に無視することがあります。</span><span class="sxs-lookup"><span data-stu-id="51a62-431">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="51a62-432">期待は、火災および忘れることに基づいています。</span><span class="sxs-lookup"><span data-stu-id="51a62-432">The expectation is based on fire-and-forget.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushPromise(string path, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushPromise (path As String, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushPromise(System::String ^ path, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberSignature Language="F#" Value="member this.PushPromise : string * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="httpResponse.PushPromise (path, method, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" Index="2" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="51a62-433">プッシュ要求の URL です。</span><span class="sxs-lookup"><span data-stu-id="51a62-433">The URL of the push request.</span></span> <span data-ttu-id="51a62-434">サーバーがクライアントにプッシュする相対リソースの仮想パスになります。</span><span class="sxs-lookup"><span data-stu-id="51a62-434">It should be the virtual path of the relative resource that the server wants to push to the client.</span></span></param>
        <param name="method"><span data-ttu-id="51a62-435">プッシュ要求で使用される http 要求メソッド。</span><span class="sxs-lookup"><span data-stu-id="51a62-435">Http request method that would be used by the push request.</span></span></param>
        <param name="headers"><span data-ttu-id="51a62-436">プッシュ要求で使用される http 要求ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="51a62-436">Http request header that would be used by the push request.</span></span></param>
        <summary><span data-ttu-id="51a62-437">この API は、プッシュ promise を HTTP 2.0 クライアントに送信するアプリケーションをサポートするためのものです。</span><span class="sxs-lookup"><span data-stu-id="51a62-437">This API is to support applications sending push promises to HTTP 2.0 clients.</span></span> <span data-ttu-id="51a62-438">Http2 サーバー プッシュに関する詳細は、「<see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2: Server Push (HTTP/2 仕様セクション 8.2: サーバー プッシュ)</see>」にあります。</span><span class="sxs-lookup"><span data-stu-id="51a62-438">You can find more details regarding to Http2 server push at <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2: Server Push</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-439">PushPromise は非決定的であり、アプリケーションはそれに依存するロジックを持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="51a62-439">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="51a62-440">その唯一の目的は、場合によってはパフォーマンス上の利点です。</span><span class="sxs-lookup"><span data-stu-id="51a62-440">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="51a62-441">多くの条件 (プロトコルおよび実装) によって、がプッシュ要求を完全に無視することがあります。</span><span class="sxs-lookup"><span data-stu-id="51a62-441">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="51a62-442">期待は、火災および忘れることに基づいています。</span><span class="sxs-lookup"><span data-stu-id="51a62-442">The expectation is based on fire-and-forget.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Redirect">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-443">クライアントを新しい URL にリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="51a62-443">Redirects a client to a new URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Redirect(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redirect (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redirect(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Redirect : string -&gt; unit" Usage="httpResponse.Redirect url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="51a62-444">対象となる位置。</span><span class="sxs-lookup"><span data-stu-id="51a62-444">The target location.</span></span> <span data-ttu-id="51a62-445">アプリケーションの相対仮想パスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="51a62-445">This may be an application-relative virtual path.</span></span></param>
        <summary><span data-ttu-id="51a62-446">新しい URL に要求をリダイレクトして、新しい URL を指定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-446">Redirects a request to a new URL and specifies the new URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-447"><xref:System.Web.HttpResponse.Redirect%2A> を呼び出すことは、2番目のパラメーターを `true`に設定して <xref:System.Web.HttpResponse.Redirect%2A> を呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-447">Calling <xref:System.Web.HttpResponse.Redirect%2A> is equivalent to calling <xref:System.Web.HttpResponse.Redirect%2A> with the second parameter set to `true`.</span></span>  
  
 <span data-ttu-id="51a62-448"><xref:System.Web.HttpResponse.Redirect%2A> は、完了時に <xref:System.Threading.ThreadAbortException> 例外をスローする <xref:System.Web.HttpResponse.End%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51a62-448"><xref:System.Web.HttpResponse.Redirect%2A> calls <xref:System.Web.HttpResponse.End%2A> which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span> <span data-ttu-id="51a62-449">この例外は、Web アプリケーションのパフォーマンスに悪影響を及ぼします。</span><span class="sxs-lookup"><span data-stu-id="51a62-449">This exception has a detrimental effect on Web application performance.</span></span> <span data-ttu-id="51a62-450">したがって、このオーバーロードの代わりに <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> オーバーロードを使用して `endResponse` パラメーターの `false` を渡し、<xref:System.Web.HttpApplication.CompleteRequest%2A> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="51a62-450">Therefore, we recommend that instead of this overload you use the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> overload and pass `false` for the `endResponse` parameter, and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method.</span></span> <span data-ttu-id="51a62-451">詳細については、<xref:System.Web.HttpResponse.End%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-451">For more information, see the <xref:System.Web.HttpResponse.End%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51a62-452">モバイルページのみの場合、アプリケーションが cookie なしのセッションに依存しているか、cookie 以外のセッションを必要とするモバイルデバイスからの要求を受信する可能性があります。パスでチルダ (\~) を使用すると、新しいセッションが作成され、セッションデータが失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-452">For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (\~) in a path can result in creating a new session and potentially losing session data.</span></span> <span data-ttu-id="51a62-453">"\~/path" などのパスを使用してモバイルコントロールのプロパティを設定するには、プロパティに割り当てる前に <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "\~/path" を使用してパスを解決します。</span><span class="sxs-lookup"><span data-stu-id="51a62-453">To set a property on a mobile control with a path such as "\~/path", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "\~/path" before assigning it to the property.</span></span>  
  
 <span data-ttu-id="51a62-454">ASP.NET は、302 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-454">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span> <span data-ttu-id="51a62-455">別のページに制御を転送する別の方法として、<xref:System.Web.HttpServerUtility.Transfer%2A> 方法があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-455">An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="51a62-456"><xref:System.Web.HttpServerUtility.Transfer%2A> メソッドは、通常、クライアントへのラウンドトリップが発生しないため、より効率的です。</span><span class="sxs-lookup"><span data-stu-id="51a62-456">The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client.</span></span> <span data-ttu-id="51a62-457">詳細については、「[方法: ユーザーを別のページにリダイレクト](https://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-457">For more information, see [How to: Redirect Users to Another Page](https://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-458">次の例では、別の Web サイトへの無条件リダイレクトを強制的に実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-458">The following example forces an unconditional redirection to another Web site.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Redirect Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Redirect Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Redirect Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Redirect Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-459">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-459">A redirection is attempted after the HTTP headers have been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redirect (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redirect(System::String ^ url, bool endResponse);" />
      <MemberSignature Language="F#" Value="member this.Redirect : string * bool -&gt; unit" Usage="httpResponse.Redirect (url, endResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="51a62-460">リダイレクト先の場所。</span><span class="sxs-lookup"><span data-stu-id="51a62-460">The location of the target.</span></span></param>
        <param name="endResponse"><span data-ttu-id="51a62-461">現在のページの実行を終了するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-461">Indicates whether execution of the current page should terminate.</span></span></param>
        <summary><span data-ttu-id="51a62-462">クライアントを新しい URL にリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="51a62-462">Redirects a client to a new URL.</span></span> <span data-ttu-id="51a62-463">新しい URL を指定し、さらに現在のページの実行を終了するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-463">Specifies the new URL and whether execution of the current page should terminate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-464">ターゲットの場所に対して絶対 URL (`http://www.contoso.com/default.aspx`など) や相対 URL (default.aspx など) を指定できますが、一部のブラウザーでは相対 URL が拒否される場合があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-464">An absolute URL (for example, `http://www.contoso.com/default.aspx`) or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.</span></span>  
  
 <span data-ttu-id="51a62-465">ページハンドラーでこのメソッドを使用して1つのページの要求を終了し、別のページの新しい要求を開始するには、`endResponse` を `false` に設定し、<xref:System.Web.HttpApplication.CompleteRequest%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51a62-465">When you use this method in a page handler to terminate a request for one page and start a new request for another page, set `endResponse` to `false` and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method.</span></span> <span data-ttu-id="51a62-466">`endResponse` パラメーターに `true` を指定した場合、このメソッドは元の要求の <xref:System.Web.HttpResponse.End%2A> メソッドを呼び出します。このメソッドは、完了時に <xref:System.Threading.ThreadAbortException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="51a62-466">If you specify `true` for the `endResponse` parameter, this method calls the <xref:System.Web.HttpResponse.End%2A> method for the original request, which throws a <xref:System.Threading.ThreadAbortException> exception when it completes.</span></span> <span data-ttu-id="51a62-467">この例外は、Web アプリケーションのパフォーマンスに悪影響を及ぼします。そのため、`endResponse` パラメーターに `false` を渡すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="51a62-467">This exception has a detrimental effect on Web application performance, which is why passing `false` for the `endResponse` parameter is recommended.</span></span> <span data-ttu-id="51a62-468">詳細については、<xref:System.Web.HttpResponse.End%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-468">For more information, see the <xref:System.Web.HttpResponse.End%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51a62-469">モバイルページでは、アプリケーションが cookie なしのセッションに依存している場合、または cookie なしのセッションを必要とするモバイルデバイスからの要求を受信する場合、パスでチルダ (\~) を使用すると、新しいセッションを作成し、セッションデータが失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-469">For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (\~) in a path can create a new session and potentially lose session data.</span></span> <span data-ttu-id="51a62-470">"\~/path" などのパスを使用してモバイルコントロールのプロパティを設定するには、プロパティに割り当てる前に <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "\~/path" を使用してパスを解決します。</span><span class="sxs-lookup"><span data-stu-id="51a62-470">To set a property on a mobile control with a path such as "\~/path", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "\~/path" before assigning it to the property.</span></span>  
  
 <span data-ttu-id="51a62-471">ASP.NET は、302 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-471">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span> <span data-ttu-id="51a62-472">別のページに制御を転送する別の方法として、<xref:System.Web.HttpServerUtility.Transfer%2A> 方法があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-472">An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="51a62-473"><xref:System.Web.HttpServerUtility.Transfer%2A> メソッドは、通常、クライアントへのラウンドトリップが発生しないため、より効率的です。</span><span class="sxs-lookup"><span data-stu-id="51a62-473">The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client.</span></span> <span data-ttu-id="51a62-474">詳細については、「[方法: ユーザーを別のページにリダイレクト](https://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-474">For more information, see [How to: Redirect Users to Another Page](https://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-475">次の例では、<xref:System.Web.HttpResponse.IsClientConnected%2A> プロパティを使用して、ページを要求しているクライアントがサーバーに接続されたままであるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="51a62-475">The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server.</span></span> <span data-ttu-id="51a62-476"><xref:System.Web.HttpResponse.IsClientConnected%2A> が true の場合、コードは <xref:System.Web.HttpResponse.Redirect%2A> メソッドを呼び出し、クライアントは別のページを表示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-476">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page.</span></span> <span data-ttu-id="51a62-477"><xref:System.Web.HttpResponse.IsClientConnected%2A> が false の場合、コードは <xref:System.Web.HttpResponse.End%2A> メソッドを呼び出し、すべてのページ処理が終了します。</span><span class="sxs-lookup"><span data-stu-id="51a62-477">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page1cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-478"><paramref name="url" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51a62-478"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51a62-479"><paramref name="url" /> に改行文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="51a62-479"><paramref name="url" /> contains a newline character.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-480">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-480">A redirection is attempted after the HTTP headers have been sent.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="51a62-481">ページ要求がコールバックの結果となっています。</span><span class="sxs-lookup"><span data-stu-id="51a62-481">The page request is the result of a callback.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectLocation">
      <MemberSignature Language="C#" Value="public string RedirectLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedirectLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.RedirectLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RedirectLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectLocation : string with get, set" Usage="System.Web.HttpResponse.RedirectLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-482">HTTP <see langword="Location" /> ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-482">Gets or sets the value of the HTTP <see langword="Location" /> header.</span></span></summary>
        <value><span data-ttu-id="51a62-483">HTTP <see langword="Location" /> ヘッダーのクライアントに送信される絶対 URI。</span><span class="sxs-lookup"><span data-stu-id="51a62-483">The absolute URI that is transmitted to the client in the HTTP <see langword="Location" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-484">次の例は、HTTP 301 応答コードを使用して永続的なリダイレクトをコードするときに、このプロパティを使用してリダイレクト URL を指定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-484">The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.</span></span>  
  
```csharp  
Response.StatusCode = 301;  
Response.Status = "301 Moved Permanently";  
Response.RedirectLocation = "http://www.newurl.com ";  
Response.End();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-485">HTTP ヘッダーは既に書き込まれています。</span><span class="sxs-lookup"><span data-stu-id="51a62-485">The HTTP headers have already been written.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectPermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-486">要求された URL から指定された URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-486">Performs a permanent redirection from a requested URL to a specified URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public void RedirectPermanent (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectPermanent(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectPermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectPermanent (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectPermanent(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RedirectPermanent : string -&gt; unit" Usage="httpResponse.RedirectPermanent url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="51a62-487">要求のリダイレクト先の場所。</span><span class="sxs-lookup"><span data-stu-id="51a62-487">The location to redirect the request to.</span></span></param>
        <summary><span data-ttu-id="51a62-488">要求された URL から指定された URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-488">Performs a permanent redirection from the requested URL to the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-489"><xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> メソッドのオーバーロードでは、応答に 301 HTTP 状態コードが提供され、要求をリダイレクトする URL が含まれます。</span><span class="sxs-lookup"><span data-stu-id="51a62-489">The <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="51a62-490">301 HTTP 状態コードは、HTTP 応答の標準コードです。</span><span class="sxs-lookup"><span data-stu-id="51a62-490">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="51a62-491">これは永続的なリダイレクトが存在し、リダイレクトの場所を提供することを示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-491">It indicates that a permanent redirection exists, and it provides the redirection location.</span></span>  
  
 <span data-ttu-id="51a62-492"><xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> メソッドのオーバーロードを呼び出すと、応答が終了します。</span><span class="sxs-lookup"><span data-stu-id="51a62-492">Calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> method overload terminates the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-493"><paramref name="url" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51a62-493"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51a62-494"><paramref name="url" /> に改行文字 (<c>\n</c>) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="51a62-494"><paramref name="url" /> includes a newline character (<c>\n</c>).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public void RedirectPermanent (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectPermanent(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectPermanent (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectPermanent(System::String ^ url, bool endResponse);" />
      <MemberSignature Language="F#" Value="member this.RedirectPermanent : string * bool -&gt; unit" Usage="httpResponse.RedirectPermanent (url, endResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endResponse" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="51a62-495">要求のリダイレクト先の場所。</span><span class="sxs-lookup"><span data-stu-id="51a62-495">The location to redirect the request to.</span></span></param>
        <param name="endResponse"><span data-ttu-id="51a62-496">応答を終了する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-496"><see langword="true" /> to terminate the response; otherwise <see langword="false" />.</span></span> <span data-ttu-id="51a62-497">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-497">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="51a62-498">要求された URL から指定された URL への永続的なリダイレクトを実行し、応答を完了するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="51a62-498">Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-499"><xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> メソッドのオーバーロードでは、応答に 301 HTTP 状態コードが提供され、要求をリダイレクトする URL が含まれます。</span><span class="sxs-lookup"><span data-stu-id="51a62-499">The <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="51a62-500">このメソッドオーバーロードには、リダイレクトの実行後に応答を終了するか、完了するかを指定するオプションも用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-500">This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed.</span></span> <span data-ttu-id="51a62-501">301 HTTP 状態コードは、HTTP 応答の標準コードです。</span><span class="sxs-lookup"><span data-stu-id="51a62-501">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="51a62-502">これは永続的なリダイレクトが存在し、リダイレクトの場所を提供することを示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-502">It indicates that a permanent redirection exists, and it provides the redirection location.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-503"><paramref name="url" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51a62-503"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51a62-504"><paramref name="url" /> に改行文字 (<c>\n</c>) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="51a62-504"><paramref name="url" /> includes a newline character (<c>\n</c>).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-505">ルートのパラメーター値とルート名の両方またはいずれかを使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="51a62-505">Redirects a request to a new URL by using route parameter values, a route name, or both.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : obj -&gt; unit" Usage="httpResponse.RedirectToRoute routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="51a62-506">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="51a62-506">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="51a62-507">ルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="51a62-507">Redirects a request to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-508">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-508">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-509">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-509">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-510">このメソッドは、`routeValues` で渡されたオブジェクトを、<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> コンストラクターを使用して <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="51a62-510">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="51a62-511">次に、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドを呼び出して URL を決定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-511">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="51a62-512">ASP.NET は、302 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-512">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-513">次の例は、このメソッドを呼び出して、`productid` と `category`という名前のパラメーターを持つルートにリダイレクトする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-513">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoute(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-514">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-514">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-515">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-515">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-516">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-516">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : string -&gt; unit" Usage="httpResponse.RedirectToRoute routeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="51a62-517">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-517">The name of the route.</span></span></param>
        <summary><span data-ttu-id="51a62-518">ルート名を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="51a62-518">Redirects a request to a new URL by using a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-519">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-519">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-520">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-520">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-521">このメソッドは、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドを使用して、`routeName` で渡されたルート名を URL に変換します。</span><span class="sxs-lookup"><span data-stu-id="51a62-521">This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="51a62-522">ASP.NET は、302 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-522">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-523">次の例は、このメソッドを呼び出して、`Products`という名前のルートにリダイレクトする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-523">The following example shows how to call this method to redirect to a route that is named `Products`.</span></span>  
  
```vb  
Response.RedirectToRoute("Products")  
```  
  
```csharp  
Response.RedirectToRoute("Products");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-524">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-524">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-525">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-525">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-526">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-526">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponse.RedirectToRoute routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="51a62-527">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="51a62-527">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="51a62-528">ルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="51a62-528">Redirects a request to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-529">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-529">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-530">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-530">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-531">このメソッドは、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドを呼び出して URL を決定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-531">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>  
  
 <span data-ttu-id="51a62-532">ASP.NET は、302 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-532">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-533">次の例は、このメソッドを呼び出して、`productid` と `category`という名前のパラメーターを持つルートにリダイレクトする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-533">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoute(  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-534">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-534">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-535">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-535">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-536">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-536">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : string * obj -&gt; unit" Usage="httpResponse.RedirectToRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeValues" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="51a62-537">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-537">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="51a62-538">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="51a62-538">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="51a62-539">ルートのパラメーター値とルート名を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="51a62-539">Redirects a request to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-540">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-540">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-541">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-541">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-542">このメソッドは、`routeValues` で渡されたオブジェクトを、<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> コンストラクターを使用して <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="51a62-542">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="51a62-543">次に、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドを呼び出して URL を決定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-543">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="51a62-544">ASP.NET は、302 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-544">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-545">次の例では、このメソッドを呼び出して、`Product` という名前のルートにリダイレクトし、`productid` と `category`という名前のパラメーターを持つようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-545">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoute("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-546">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-546">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-547">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-547">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-548">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-548">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : string * System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponse.RedirectToRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="51a62-549">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-549">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="51a62-550">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="51a62-550">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="51a62-551">ルートのパラメーター値とルート名を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="51a62-551">Redirects a request to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-552">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-552">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-553">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-553">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-554">URL を確認するために、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-554">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is called to determine the URL.</span></span>  
  
 <span data-ttu-id="51a62-555">ASP.NET は、302 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-555">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-556">次の例では、このメソッドを呼び出して、`Product` という名前のルートにリダイレクトし、`productid` と `category`という名前のパラメーターを持つようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-556">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoute("Product",  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-557">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-557">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-558">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-558">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-559">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-559">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoutePermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-560">ルートのパラメーター値とルート名の両方またはいずれかを使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-560">Performs a permanent redirection from a requested URL to a new URL by using route parameter values, a route name, or both.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : obj -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="51a62-561">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="51a62-561">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="51a62-562">ルートのパラメーター値を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-562">Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-563">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-563">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-564">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-564">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-565">このメソッドは、`routeValues` で渡されたオブジェクトを、<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> コンストラクターを使用して <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="51a62-565">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="51a62-566">次に、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドを呼び出して URL を決定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-566">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="51a62-567">ASP.NET は、301 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-567">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-568">次の例は、このメソッドを呼び出して、`productid` と `category`という名前のパラメーターを持つルートにリダイレクトする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-568">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-569">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-569">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-570">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-570">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-571">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-571">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : string -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent routeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="51a62-572">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-572">The name of the route.</span></span></param>
        <summary><span data-ttu-id="51a62-573">ルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-573">Performs a permanent redirection from a requested URL to a new URL by using a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-574">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-574">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-575">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-575">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-576">このメソッドは、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドを使用して、`routeName` で渡されたルート名を URL に変換します。</span><span class="sxs-lookup"><span data-stu-id="51a62-576">This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="51a62-577">ASP.NET は、301 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-577">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-578">次の例は、このメソッドを呼び出して、`Products`という名前のルートにリダイレクトする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-578">The following example shows how to call this method to redirect to a route that is named `Products`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent("Products")  
```  
  
```csharp  
Response.RedirectToRoutePermanent("Products");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-579">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-579">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-580">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-580">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-581">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-581">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="51a62-582">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="51a62-582">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="51a62-583">ルートのパラメーター値を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-583">Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-584">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-584">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-585">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-585">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-586">このメソッドは、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドを呼び出して URL を決定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-586">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>  
  
 <span data-ttu-id="51a62-587">ASP.NET は、301 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-587">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-588">次の例は、このメソッドを呼び出して、`productid` と `category`という名前のパラメーターを持つルートにリダイレクトする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-588">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent(  
  new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-589">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-589">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-590">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-590">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-591">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-591">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : string * obj -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeValues" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="51a62-592">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-592">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="51a62-593">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="51a62-593">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="51a62-594">新しい URL に対応するルートのパラメーター値とルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-594">Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-595">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-595">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-596">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.RedirectPermanent%2A> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-596">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%2A> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-597">このメソッドは、`routeValues` で渡されたオブジェクトを、<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> コンストラクターを使用して <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="51a62-597">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="51a62-598">次に、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドを呼び出して URL を決定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-598">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="51a62-599">ASP.NET は、301 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-599">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-600">次の例では、このメソッドを呼び出して、`Product` という名前のルートにリダイレクトし、`productid` と `category`という名前のパラメーターを持つようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-600">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-601">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-601">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-602">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-602">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-603">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-603">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : string * System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="51a62-604">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-604">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="51a62-605">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="51a62-605">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="51a62-606">ルートのパラメーター値とルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-606">Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-607">このメソッドは、コーディングの便宜を実現するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-607">This method is provided for coding convenience.</span></span> <span data-ttu-id="51a62-608">これは、2番目のパラメーターを `false`に設定して <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="51a62-608">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="51a62-609">このメソッドは、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> メソッドを呼び出して URL を決定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-609">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>  
  
 <span data-ttu-id="51a62-610">ASP.NET は、301 HTTP 状態コードを返すことによってリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="51a62-610">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-611">次の例では、このメソッドを呼び出して、`Product` という名前のルートにリダイレクトし、`productid` と `category`という名前のパラメーターを持つようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-611">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent("Product",  
  new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51a62-612">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-612">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-613">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="51a62-613">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="51a62-614">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="51a62-614">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveOutputCacheItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-615">既定の出力キャッシュ プロバイダーを使用して、出力キャッシュからキャッシュされたアイテムを削除します。</span><span class="sxs-lookup"><span data-stu-id="51a62-615">Removes cached items from the output cache by using the default output-cache provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public static void RemoveOutputCacheItem (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveOutputCacheItem(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveOutputCacheItem (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveOutputCacheItem(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member RemoveOutputCacheItem : string -&gt; unit" Usage="System.Web.HttpResponse.RemoveOutputCacheItem path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="51a62-616">キャッシュから削除されるアイテムへの仮想絶対パス。</span><span class="sxs-lookup"><span data-stu-id="51a62-616">The virtual absolute path to the items that are removed from the cache.</span></span></param>
        <summary><span data-ttu-id="51a62-617">既定の出力キャッシュ プロバイダーに関連付けられているキャッシュされたアイテムをすべてキャッシュから削除します。</span><span class="sxs-lookup"><span data-stu-id="51a62-617">Removes from the cache all cached items that are associated with the default output-cache provider.</span></span> <span data-ttu-id="51a62-618">これは静的メソッドです。</span><span class="sxs-lookup"><span data-stu-id="51a62-618">This method is static.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-619">既定の出力キャッシュプロバイダーに関連付けられている出力キャッシュ項目を削除するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51a62-619">Call this method to remove output-cache items that are associated with the default output-cache provider.</span></span> <span data-ttu-id="51a62-620"><xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> メソッドを呼び出して、Web サイト構成ファイルで指定されているカスタム出力キャッシュプロバイダーに関連付けられている出力キャッシュ項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="51a62-620">Call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-621"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51a62-621"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51a62-622"><paramref name="path" /> が絶対仮想パスではありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-622"><paramref name="path" /> is not an absolute virtual path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public static void RemoveOutputCacheItem (string path, string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveOutputCacheItem(string path, string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveOutputCacheItem (path As String, providerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveOutputCacheItem(System::String ^ path, System::String ^ providerName);" />
      <MemberSignature Language="F#" Value="static member RemoveOutputCacheItem : string * string -&gt; unit" Usage="System.Web.HttpResponse.RemoveOutputCacheItem (path, providerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="providerName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="51a62-623">キャッシュから削除されるアイテムへの絶対仮想パス。</span><span class="sxs-lookup"><span data-stu-id="51a62-623">The virtual absolute path of the items that are removed from the cache.</span></span></param>
        <param name="providerName"><span data-ttu-id="51a62-624">指定されたパスに関連付けられている出力キャッシュの成果物を削除するのに使用されるプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="51a62-624">The provider that is used to remove the output-cache artifacts that are associated with the specified path.</span></span></param>
        <summary><span data-ttu-id="51a62-625">指定された出力キャッシュ プロバイダーを使用して、指定されたパスに関連付けられている出力キャッシュ アイテムをすべて削除します。</span><span class="sxs-lookup"><span data-stu-id="51a62-625">Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-626">Web サイト構成ファイルで指定されているカスタム出力キャッシュプロバイダーに関連付けられている出力キャッシュ項目を削除するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51a62-626">Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file.</span></span> <span data-ttu-id="51a62-627">既定の出力キャッシュプロバイダーに関連付けられている出力キャッシュ項目を削除するには、<xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> メソッドのオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51a62-627">To remove output-cache items that are associated with the default output-cache provider, call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-628"><paramref name="path" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="51a62-628"><paramref name="path" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51a62-629"><paramref name="path" /> に無効なパスが指定されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-629"><paramref name="path" /> is an invalid path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public void SetCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.SetCookie : System.Web.HttpCookie -&gt; unit" Usage="httpResponse.SetCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="51a62-630">更新するコレクションに存在するクッキー。</span><span class="sxs-lookup"><span data-stu-id="51a62-630">The cookie in the collection to be updated.</span></span></param>
        <summary><span data-ttu-id="51a62-631"><b>HttpResponse.SetCookie</b> メソッドは内部でのみ使用されるため、コードで呼び出すべきではありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-631">Because the <b>HttpResponse.SetCookie</b> method is intended for internal use only, you should not call it in your code.</span></span> <span data-ttu-id="51a62-632">代わりに、次の例に示すように <b>HttpResponse.Cookies.Set</b> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="51a62-632">Instead, you can call the <b>HttpResponse.Cookies.Set</b> method, as the following example shows.</span></span><br /> <span data-ttu-id="51a62-633">クッキー コレクションの既存のクッキーを更新します。</span><span class="sxs-lookup"><span data-stu-id="51a62-633">Updates an existing cookie in the cookie collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-634">次の例では、既存の cookie の値を更新します。</span><span class="sxs-lookup"><span data-stu-id="51a62-634">The following example updates the value of an existing cookie.</span></span>  
  
 [!code-csharp[Classic HttpResponse.SetCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.SetCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.SetCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.SetCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-635">HTTP ヘッダーが送信された後にクッキーの設定が試みられました。</span><span class="sxs-lookup"><span data-stu-id="51a62-635">Attempted to set the cookie after the HTTP headers were sent.</span></span></exception>
        <altmember cref="F:System.Net.HttpRequestHeader.Cookie" />
        <altmember cref="T:System.Web.HttpCookie" />
        <altmember cref="T:System.Web.HttpCookieMode" />
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public string Status { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Status" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Status" />
      <MemberSignature Language="VB.NET" Value="Public Property Status As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Status { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Status : string with get, set" Usage="System.Web.HttpResponse.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-636">クライアントに返される <see langword="Status" /> ラインを設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-636">Sets the <see langword="Status" /> line that is returned to the client.</span></span></summary>
        <value><span data-ttu-id="51a62-637">ステータス コードを設定すると、HTTP 出力のステータスを記述する文字列がクライアントへ返されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-637">Setting the status code causes a string describing the status of the HTTP output to be returned to the client.</span></span> <span data-ttu-id="51a62-638">既定値は 200 (OK) です。</span><span class="sxs-lookup"><span data-stu-id="51a62-638">The default value is 200 (OK).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-639"><xref:System.Web.HttpResponse.Status%2A> は <xref:System.Web.HttpResponse.StatusDescription%2A> を優先するように非推奨とされており、ASP の旧バージョンとの互換性のためだけに提供されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-639"><xref:System.Web.HttpResponse.Status%2A> has been deprecated in favor of <xref:System.Web.HttpResponse.StatusDescription%2A> and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="51a62-640">ASP.NET では、代わりに <xref:System.Web.HttpResponse.StatusDescription%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="51a62-640">With ASP.NET, use <xref:System.Web.HttpResponse.StatusDescription%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-641">ステータスが、無効なステータス コードに設定されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-641">Status is set to an invalid status code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public int StatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.StatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StatusCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StatusCode : int with get, set" Usage="System.Web.HttpResponse.StatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-642">クライアントへ返される出力の HTTP ステータス コードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-642">Gets or sets the HTTP status code of the output returned to the client.</span></span></summary>
        <value><span data-ttu-id="51a62-643">クライアントへ返される HTTP 出力のステータスを表す整数。</span><span class="sxs-lookup"><span data-stu-id="51a62-643">An Integer representing the status of the HTTP output returned to the client.</span></span> <span data-ttu-id="51a62-644">既定値は 200 (OK) です。</span><span class="sxs-lookup"><span data-stu-id="51a62-644">The default value is 200 (OK).</span></span> <span data-ttu-id="51a62-645">有効なステータスコードの一覧については、「 <see href="/windows/win32/winhttp/http-status-codes">HTTP 状態コード</see>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-645">For a listing of valid status codes, see <see href="/windows/win32/winhttp/http-status-codes">HTTP Status Codes</see>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-646">次の例では、出力ストリームの状態コードを確認します。</span><span class="sxs-lookup"><span data-stu-id="51a62-646">The following example checks the status code of the output stream.</span></span> <span data-ttu-id="51a62-647">ステータスコードが200と等しくない場合は、追加のコードが実行されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-647">If the status code is not equal to 200, additional code is executed.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.StatusCode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.StatusCode/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.StatusCode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.StatusCode/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-648">HTTP ヘッダーが送信された後に、<see cref="P:System.Web.HttpResponse.StatusCode" /> が設定されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-648"><see cref="P:System.Web.HttpResponse.StatusCode" /> is set after the HTTP headers have been sent.</span></span></exception>
        <altmember cref="P:System.Web.HttpResponse.SubStatusCode" />
      </Docs>
    </Member>
    <Member MemberName="StatusDescription">
      <MemberSignature Language="C#" Value="public string StatusDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.StatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StatusDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StatusDescription : string with get, set" Usage="System.Web.HttpResponse.StatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-649">クライアントへ返される出力の HTTP ステータス文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-649">Gets or sets the HTTP status string of the output returned to the client.</span></span></summary>
        <value><span data-ttu-id="51a62-650">クライアントへ返される HTTP 出力のステータスを記述する文字列。</span><span class="sxs-lookup"><span data-stu-id="51a62-650">A string that describes the status of the HTTP output returned to the client.</span></span> <span data-ttu-id="51a62-651">既定値は "OK" です。</span><span class="sxs-lookup"><span data-stu-id="51a62-651">The default value is "OK".</span></span> <span data-ttu-id="51a62-652">有効なステータスコードの一覧については、「 [Http 状態コード](https://go.microsoft.com/fwlink/?LinkId=73157)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-652">For a listing of valid status codes, see [Http Status Codes](https://go.microsoft.com/fwlink/?LinkId=73157).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-653">次の例では、出力ストリームのステータス文字列をチェックします。</span><span class="sxs-lookup"><span data-stu-id="51a62-653">The following example checks the status string of the output stream.</span></span> <span data-ttu-id="51a62-654">状態が "OK" に等しくない場合は、追加のコードが実行されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-654">If the status is not equal to "OK", additional code is executed.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.StatusDescription#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.StatusDescription/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.StatusDescription#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.StatusDescription/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-655">HTTP ヘッダーが送信された後に、<paramref name="StatusDescription" /> が設定されています。</span><span class="sxs-lookup"><span data-stu-id="51a62-655"><paramref name="StatusDescription" /> is set after the HTTP headers have been sent.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="51a62-656">選択した値の長さが 512 を超えています。</span><span class="sxs-lookup"><span data-stu-id="51a62-656">The selected value has a length greater than 512.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubStatusCode">
      <MemberSignature Language="C#" Value="public int SubStatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubStatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SubStatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property SubStatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubStatusCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SubStatusCode : int with get, set" Usage="System.Web.HttpResponse.SubStatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-657">応答のステータス コードを修飾する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-657">Gets or sets a value qualifying the status code of the response.</span></span></summary>
        <value><span data-ttu-id="51a62-658">[!INCLUDE[iisver](~/includes/iisver-md.md)] のサブステータス コードを表す整数の値。</span><span class="sxs-lookup"><span data-stu-id="51a62-658">An integer value that represents the [!INCLUDE[iisver](~/includes/iisver-md.md)] sub status code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-659"><xref:System.Web.HttpResponse.SubStatusCode%2A> プロパティは、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプラインモードと、少なくとも .NET Framework バージョン3.0 でのみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="51a62-659">The <xref:System.Web.HttpResponse.SubStatusCode%2A> property is only supported with the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span> <span data-ttu-id="51a62-660"><xref:System.Web.HttpResponse.SubStatusCode%2A> のプロパティを設定すると、失敗した要求のトレースが構成されている場合に、状態が ログに記録 [!INCLUDE[iisver](~/includes/iisver-md.md)] ます。</span><span class="sxs-lookup"><span data-stu-id="51a62-660">When you set the <xref:System.Web.HttpResponse.SubStatusCode%2A> property, the status is logged on [!INCLUDE[iisver](~/includes/iisver-md.md)] if failed-request tracing is configured.</span></span> <span data-ttu-id="51a62-661">トレースが構成されているかどうかに関係なく、このコードは要求に対する最終的な応答の一部として送信されることはありません。</span><span class="sxs-lookup"><span data-stu-id="51a62-661">Independent of whether tracing is configured, the code is never sent as part of the final response to the request.</span></span> <span data-ttu-id="51a62-662">詳細については、「 [IIS 7.0 で失敗した要求トレースを使用した失敗した要求のトラブルシューティング](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-662">For more information, see [Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-663">次の例では、<xref:System.Web.HttpApplication.PostAuthenticateRequest> イベントの <xref:System.Web.HttpApplication> インスタンスのイベントハンドラーの <xref:System.Web.HttpResponse.SubStatusCode%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-663">The following example sets the <xref:System.Web.HttpResponse.SubStatusCode%2A> property in an event handler for the <xref:System.Web.HttpApplication> instance of the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event.</span></span> <span data-ttu-id="51a62-664">コードファイルを Web アプリケーションの App_Code フォルダーに配置し、モジュールを登録するように web.config ファイルを構成します。</span><span class="sxs-lookup"><span data-stu-id="51a62-664">Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module.</span></span> <span data-ttu-id="51a62-665">詳細については、「[チュートリアル: カスタム HTTP モジュールの作成と登録](https://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-665">For more information, see [Walkthrough: Creating and Registering a Custom HTTP Module](https://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453).</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.SubStatusCode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.SubStatusCode/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.SubStatusCode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.SubStatusCode/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="51a62-666">操作には、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプライン モードと、少なくとも .NET Framework バージョン 3.0 が必要です。</span><span class="sxs-lookup"><span data-stu-id="51a62-666">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-667">すべての HTTP ヘッダーが送信された後に、ステータス コードが設定されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-667">The status code is set after all HTTP headers have been sent.</span></span></exception>
        <altmember cref="P:System.Web.HttpResponse.StatusCode" />
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncFlush">
      <MemberSignature Language="C#" Value="public bool SupportsAsyncFlush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncFlush" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SupportsAsyncFlush" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsAsyncFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsAsyncFlush { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAsyncFlush : bool" Usage="System.Web.HttpResponse.SupportsAsyncFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-668">接続が非同期のフラッシュ操作をサポートするかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="51a62-668">Gets a value that indicates whether the connection supports asynchronous flush operations.</span></span></summary>
        <value><span data-ttu-id="51a62-669">接続が非同期フラッシュ操作をサポートするかどうかを <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="51a62-669"><see langword="true" /> if the connection supports asynchronous flush operations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-670">このプロパティは、<xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType> プロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="51a62-670">This property returns the value of the <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressContent">
      <MemberSignature Language="C#" Value="public bool SuppressContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressContent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressContent : bool with get, set" Usage="System.Web.HttpResponse.SuppressContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-671">HTTP コンテンツをクライアントに送信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-671">Gets or sets a value indicating whether to send HTTP content to the client.</span></span></summary>
        <value><span data-ttu-id="51a62-672">出力しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-672"><see langword="true" /> to suppress output; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-673">次の例では、<xref:System.Web.HttpRequest.IsSecureConnection%2A> プロパティが false に設定されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="51a62-673">The following example checks whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="51a62-674">値がの場合、<xref:System.Web.HttpResponse.SuppressContent%2A> プロパティは true に設定され、応答の送信を停止します。</span><span class="sxs-lookup"><span data-stu-id="51a62-674">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressDefaultCacheControlHeader">
      <MemberSignature Language="C#" Value="public bool SuppressDefaultCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressDefaultCacheControlHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressDefaultCacheControlHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressDefaultCacheControlHeader : bool with get, set" Usage="System.Web.HttpResponse.SuppressDefaultCacheControlHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-675">現在の HTTP 応答に対して既定の <c>Cache Control: private</c> ヘッダーを抑制するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-675">Gets or sets a value indicating whether to suppress the default <c>Cache Control: private</c> header for the current HTTP response.</span></span></summary>
        <value><span data-ttu-id="51a62-676">現在の HTTP 応答の既定の<c>Cache Control: private</c>ヘッダーを非表示にするには、<see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="51a62-676"><see langword="true" /> to suppress the default <c>Cache Control: private</c> header for the current HTTP response; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-677">既定では、この応答に明示的なキャッシュポリシーが指定されていない限り、ASP.NET は `Cache-Control: private` 応答ヘッダーを送信します。</span><span class="sxs-lookup"><span data-stu-id="51a62-677">By default, ASP.NET sends a `Cache-Control: private` response header unless an explicit cache policy has been specified for this response.</span></span> <span data-ttu-id="51a62-678">このプロパティを使用すると、要求ごとにこの既定の応答ヘッダーを抑制できます。</span><span class="sxs-lookup"><span data-stu-id="51a62-678">This property allows suppressing this default response header on a per-request basis.</span></span> <span data-ttu-id="51a62-679">[HttpRuntime 要素 (ASP.NET Settings schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)または[outputCache 要素 (ASP.NET Settings schema)](https://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee)で <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> を設定することによって、アプリケーション全体に対してヘッダーを抑制することもできます。</span><span class="sxs-lookup"><span data-stu-id="51a62-679">The header can still be suppressed for the entire application by setting <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> in [httpRuntime Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) or [outputCache Element for caching (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee).</span></span>  
  
 <span data-ttu-id="51a62-680">既定の `Cache-Control: private` ヘッダーを非表示にする場合は注意してください。プロキシなどの中継局は、既定では、このヘッダーがない応答をキャッシュ可能として扱うことができます。</span><span class="sxs-lookup"><span data-stu-id="51a62-680">Use caution when suppressing the default `Cache-Control: private` header, as proxies and other intermediaries may treat responses without this header as cacheable by default.</span></span> <span data-ttu-id="51a62-681">この処理により、機密情報が誤ってキャッシュされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-681">This treatment can lead to the inadvertent caching of sensitive information.</span></span> <span data-ttu-id="51a62-682">詳細については[、RFC 2616、Sec. 13.4](https://tools.ietf.org/html/rfc2616)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-682">See [RFC 2616, Sec. 13.4](https://tools.ietf.org/html/rfc2616) for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressFormsAuthenticationRedirect">
      <MemberSignature Language="C#" Value="public bool SuppressFormsAuthenticationRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressFormsAuthenticationRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressFormsAuthenticationRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressFormsAuthenticationRedirect : bool with get, set" Usage="System.Web.HttpResponse.SuppressFormsAuthenticationRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-683">ログイン ページへのフォーム認証のリダイレクトを抑制する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-683">Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</span></span></summary>
        <value><span data-ttu-id="51a62-684">フォーム認証のリダイレクトを抑制する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-684"><see langword="true" /> if forms authentication redirection should be suppressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-685">既定では、フォーム認証は、ログインページにリダイレクトするために HTTP 401 ステータスコードを302に変換します。</span><span class="sxs-lookup"><span data-stu-id="51a62-685">By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page.</span></span> <span data-ttu-id="51a62-686">これは、認証が成功しても承認に失敗した場合や、現在の要求が AJAX または web サービス要求の場合など、特定のクラスのエラーには適していません。</span><span class="sxs-lookup"><span data-stu-id="51a62-686">This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request.</span></span> <span data-ttu-id="51a62-687">このプロパティは、リダイレクト動作を抑制し、元のステータスコードをクライアントに送信する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="51a62-687">This property provides a way to suppress the redirect behavior and send the original status code to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransmitFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-688">指定されたファイル ディレクトリを、メモリにバッファリングせずに、HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-688">Writes the specified file directly to an HTTP response output stream without buffering it in memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public void TransmitFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransmitFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.TransmitFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransmitFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransmitFile(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.TransmitFile : string -&gt; unit" Usage="httpResponse.TransmitFile filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="51a62-689">HTTP 出力に書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-689">The name of the file to write to the HTTP output.</span></span></param>
        <summary><span data-ttu-id="51a62-690">指定されたファイル ディレクトリを、メモリにバッファリングせずに、HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-690">Writes the specified file directly to an HTTP response output stream, without buffering it in memory.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-691"><paramref name="filename" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-691">The <paramref name="filename" /> parameter is <see langword="null" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public void TransmitFile (string filename, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransmitFile(string filename, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransmitFile (filename As String, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransmitFile(System::String ^ filename, long offset, long length);" />
      <MemberSignature Language="F#" Value="member this.TransmitFile : string * int64 * int64 -&gt; unit" Usage="httpResponse.TransmitFile (filename, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Int64" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="51a62-692">HTTP 出力に書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-692">The name of the file to write to the HTTP output.</span></span></param>
        <param name="offset"><span data-ttu-id="51a62-693">HTTP 出力への書き出しを始める、ファイル内の位置。</span><span class="sxs-lookup"><span data-stu-id="51a62-693">The position in the file to begin to write to the HTTP output.</span></span></param>
        <param name="length"><span data-ttu-id="51a62-694">送信されるバイト数。</span><span class="sxs-lookup"><span data-stu-id="51a62-694">The number of bytes to be transmitted.</span></span></param>
        <summary><span data-ttu-id="51a62-695">指定したファイル ディレクトリの一部を、メモリにバッファリングせずに、HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-695">Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-696">`offset` パラメーターとして0を指定し、`length` パラメーターとして-1 を指定した場合、ファイル全体が送信されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-696">If you specify 0 as the `offset` parameter and -1 as the `length` parameter, the whole file is sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-697"><paramref name="offset" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="51a62-697">The <paramref name="offset" /> parameter is less than zero.</span></span>  
  
<span data-ttu-id="51a62-698">- または -</span><span class="sxs-lookup"><span data-stu-id="51a62-698">-or-</span></span> 
<span data-ttu-id="51a62-699"><paramref name="length" /> パラメーターが -1 未満。</span><span class="sxs-lookup"><span data-stu-id="51a62-699">The <paramref name="length" /> parameter is less than -1.</span></span>  
  
<span data-ttu-id="51a62-700">- または -</span><span class="sxs-lookup"><span data-stu-id="51a62-700">-or-</span></span> 
<span data-ttu-id="51a62-701"><paramref name="length" /> パラメーターが、ファイルに含まれるバイト数からオフセットを引いた値よりも大きいバイト数を指定しています。</span><span class="sxs-lookup"><span data-stu-id="51a62-701">The <paramref name="length" /> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="51a62-702">アウト プロセス ワーカー要求はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="51a62-702">The out-of-process worker request is not supported.</span></span>  
  
<span data-ttu-id="51a62-703">- または -</span><span class="sxs-lookup"><span data-stu-id="51a62-703">-or-</span></span> 
<span data-ttu-id="51a62-704">応答が <see cref="T:System.Web.HttpWriter" /> オブジェクトを使用していません。</span><span class="sxs-lookup"><span data-stu-id="51a62-704">The response is not using an <see cref="T:System.Web.HttpWriter" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51a62-705"><paramref name="offset" /> パラメーターがゼロ未満かファイル サイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="51a62-705">The <paramref name="offset" /> parameter is less than zero or greater than the file size.</span></span>  
  
<span data-ttu-id="51a62-706">- または -</span><span class="sxs-lookup"><span data-stu-id="51a62-706">-or-</span></span> 
<span data-ttu-id="51a62-707"><paramref name="length" /> パラメーターが -1 未満か、<paramref name="offset" /> パラメーターとファイル サイズを加算した値を超えています。</span><span class="sxs-lookup"><span data-stu-id="51a62-707">The <paramref name="length" /> parameter is less than -1 or greater than the value of the <paramref name="offset" /> parameter plus the file size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrySkipIisCustomErrors">
      <MemberSignature Language="C#" Value="public bool TrySkipIisCustomErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrySkipIisCustomErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.TrySkipIisCustomErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property TrySkipIisCustomErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrySkipIisCustomErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TrySkipIisCustomErrors : bool with get, set" Usage="System.Web.HttpResponse.TrySkipIisCustomErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51a62-708">[!INCLUDE[iisver](~/includes/iisver-md.md)] カスタム エラーが無効かどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="51a62-708">Gets or sets a value that specifies whether [!INCLUDE[iisver](~/includes/iisver-md.md)] custom errors are disabled.</span></span></summary>
        <value><span data-ttu-id="51a62-709">IIS カスタム エラーが無効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-709"><see langword="true" /> to disable IIS custom errors; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-710"><xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> プロパティは、アプリケーションが IIS 7.0 以降でホストされている場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-710">The <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property is used only when your application is hosted in IIS 7.0 and later.</span></span> <span data-ttu-id="51a62-711">クラシックモードで実行している場合、<xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> プロパティの既定値は `true`です。</span><span class="sxs-lookup"><span data-stu-id="51a62-711">When running in Classic mode, the <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property default value is `true`.</span></span> <span data-ttu-id="51a62-712">統合モードで実行する場合、<xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> プロパティの既定値は `false`です。</span><span class="sxs-lookup"><span data-stu-id="51a62-712">When running in Integrated mode, the <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property default value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-713">情報を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-713">Writes information to an HTTP response output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(char ch);" />
      <MemberSignature Language="F#" Value="member this.Write : char -&gt; unit" Usage="httpResponse.Write ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="51a62-714">HTTP 出力ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="51a62-714">The character to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="51a62-715">文字を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-715">Writes a character to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-716">次の例では、Write メソッドを使用して ASP.NET ページに書き込まれる一連の定数を作成します。</span><span class="sxs-lookup"><span data-stu-id="51a62-716">The following example creates a series of constants that are written to an ASP.NET page using the Write method.</span></span> <span data-ttu-id="51a62-717">このコードでは、このバージョンの Write メソッドを呼び出して、個々の文字定数をページに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-717">The code calls this version of the Write method to write individual character constants to the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample5#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsewritecharscs.aspx#4)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample5#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsewritecharsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Write : obj -&gt; unit" Usage="httpResponse.Write obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="51a62-718">HTTP 出力ストリームに書き込む <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="51a62-718">The <see cref="T:System.Object" /> to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="51a62-719"><see cref="T:System.Object" /> を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-719">Writes an <see cref="T:System.Object" /> to an HTTP response stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="httpResponse.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="51a62-720">HTTP 出力ストリームに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="51a62-720">The string to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="51a62-721">文字列を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-721">Writes a string to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-722">動的に生成された HTML ページでは、Web クライアントから受信した入力がクライアントから受信されたときやクライアントに送信されたときに検証されない場合、セキュリティ上のリスクが生じる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-722">Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client.</span></span> <span data-ttu-id="51a62-723">Web サイトに送信された入力に埋め込まれた悪意のあるスクリプトは、後からクライアントに書き戻される可能性がありますが、信頼されたソースから送信されるように見えます。</span><span class="sxs-lookup"><span data-stu-id="51a62-723">Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source.</span></span> <span data-ttu-id="51a62-724">このセキュリティリスクは、クロスサイトスクリプティング攻撃と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="51a62-724">This security risk is referred to as a cross-site scripting attack.</span></span> <span data-ttu-id="51a62-725">クライアントから受信したデータは、サイトからクライアントブラウザーに送信されるときに常に検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-725">You should always validate data that is received from a client when it will be transmitted from your site to client browsers.</span></span>  
  
 <span data-ttu-id="51a62-726">さらに、入力として受信したデータを HTML として書き出す場合は、<xref:System.Web.HttpServerUtility.HtmlEncode%2A> や <xref:System.Web.HttpServerUtility.UrlEncode%2A> などの手法を使用してエンコードして、悪意のあるスクリプトが実行されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-726">Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <xref:System.Web.HttpServerUtility.HtmlEncode%2A> or <xref:System.Web.HttpServerUtility.UrlEncode%2A> to prevent malicious script from executing.</span></span> <span data-ttu-id="51a62-727">この手法は、受信時に検証されなかったデータに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="51a62-727">This technique is useful for data that was not validated when it was received.</span></span>  
  
 <span data-ttu-id="51a62-728">データをエンコードまたはフィルター選択する場合は、Web ページに対して文字セットを指定する必要があります。これにより、フィルターが、そのセットに属していないバイトシーケンス (英数字以外のシーケンスなど) を識別および削除できるようになります。また、悪意のあるスクリプトがに埋め込まれる可能性もあります。もらう.</span><span class="sxs-lookup"><span data-stu-id="51a62-728">When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.</span></span>  
  
 <span data-ttu-id="51a62-729">クロスサイトスクリプティング攻撃の詳細については、 [Microsoft サポート技術](https://go.microsoft.com/fwlink/?LinkID=37115)情報の Web サイトの記事 Q252985 「クロスサイトスクリプトのセキュリティに関する問題を回避する方法」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-729">For more information about cross-site scripting attacks, see article Q252985, "How to Prevent Cross-Site Scripting Security Issues" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?LinkID=37115) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-730">次の例では、クライアントの名前をクライアントのブラウザーにエコーバックします。</span><span class="sxs-lookup"><span data-stu-id="51a62-730">The following example echoes the client's name back to the client's browser.</span></span> <span data-ttu-id="51a62-731"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> メソッドは、悪意のあるスクリプトと、`UserName` 入力フィールドで送信された無効な文字を除去します。</span><span class="sxs-lookup"><span data-stu-id="51a62-731">The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method strips any malicious script and invalid characters that may have been submitted in the `UserName` input field.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.Write#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Write/CS/systemwebhttpresponsewrite.cs#1)]
 [!code-vb[System.Web.HttpResponse.Write#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Write/vb/systemwebhttpresponsewrite.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.Write : char[] * int * int -&gt; unit" Usage="httpResponse.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="51a62-732">書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="51a62-732">The character array to write.</span></span></param>
        <param name="index"><span data-ttu-id="51a62-733">書き込みを開始する文字配列内の位置。</span><span class="sxs-lookup"><span data-stu-id="51a62-733">The position in the character array where writing starts.</span></span></param>
        <param name="count"><span data-ttu-id="51a62-734">書き込む文字数。書き込みは、<paramref name="index" /> から開始されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-734">The number of characters to write, beginning at <paramref name="index" />.</span></span></param>
        <summary><span data-ttu-id="51a62-735">文字配列を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-735">Writes an array of characters to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51a62-736">次の例では、Write メソッドを使用して ASP.NET ページに書き込まれる一連の定数を作成します。</span><span class="sxs-lookup"><span data-stu-id="51a62-736">The following example creates a series of constants that are written to an ASP.NET page using the Write method.</span></span> <span data-ttu-id="51a62-737">このコードでは、このバージョンの Write メソッドを呼び出して、個々の文字定数をページに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-737">The code calls this version of the Write method to write individual character constants to the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample5#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsewritecharscs.aspx#4)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample5#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsewritecharsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51a62-738">指定したファイルを HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-738">Writes the specified file directly to an HTTP response output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.WriteFile : string -&gt; unit" Usage="httpResponse.WriteFile filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="51a62-739">HTTP 出力に書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-739">The name of the file to write to the HTTP output.</span></span></param>
        <summary><span data-ttu-id="51a62-740">指定されたファイルの内容を、ファイル ブロックとして HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-740">Writes the contents of the specified file directly to an HTTP response output stream as a file block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-741">このメソッドが大きいファイルで使用されている場合、メソッドを呼び出すと例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-741">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="51a62-742">この方法で使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</span><span class="sxs-lookup"><span data-stu-id="51a62-742">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="51a62-743">詳細については、 [Microsoft サポート技術](https://go.microsoft.com/fwlink/?linkid=149903)情報の Web サイトの記事812406「PRB: Response. WriteFile は大きなファイルをダウンロードできません」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-743">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-744">次の例では、`Login.txt` という名前のテキストファイル (リテラル HTML テキストと入力コントロールを含む場合があります) のすべての内容を、出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-744">The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-745"><paramref name="filename" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-745">The <paramref name="filename" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename, bool readIntoMemory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename, bool readIntoMemory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String, readIntoMemory As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename, bool readIntoMemory);" />
      <MemberSignature Language="F#" Value="member this.WriteFile : string * bool -&gt; unit" Usage="httpResponse.WriteFile (filename, readIntoMemory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="readIntoMemory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="51a62-746">メモリ ブロックに書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-746">The name of the file to write into a memory block.</span></span></param>
        <param name="readIntoMemory"><span data-ttu-id="51a62-747">ファイルがメモリ ブロックに書き込まれるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="51a62-747">Indicates whether the file will be written into a memory block.</span></span></param>
        <summary><span data-ttu-id="51a62-748">指定されたファイルの内容を、メモリ ブロックとして HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-748">Writes the contents of the specified file directly to an HTTP response output stream as a memory block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-749">このメソッドが大きいファイルで使用されている場合、メソッドを呼び出すと例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-749">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="51a62-750">この方法で使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</span><span class="sxs-lookup"><span data-stu-id="51a62-750">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="51a62-751">詳細については、 [Microsoft サポート技術](https://go.microsoft.com/fwlink/?linkid=149903)情報の Web サイトの記事812406「PRB: Response. WriteFile は大きなファイルをダウンロードできません」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-751">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-752">次の例では、ファイルをメモリに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-752">The following example writes a file to memory.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-753"><paramref name="filename" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-753">The <paramref name="filename" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (IntPtr fileHandle, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(native int fileHandle, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (fileHandle As IntPtr, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(IntPtr fileHandle, long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.WriteFile : nativeint * int64 * int64 -&gt; unit" Usage="httpResponse.WriteFile (fileHandle, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileHandle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileHandle"><span data-ttu-id="51a62-754">HTTP 出力ストリームに書き込むファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="51a62-754">The file handle of the file to write to the HTTP output stream.</span></span></param>
        <param name="offset"><span data-ttu-id="51a62-755">書き込みを開始するファイル内のバイト位置。</span><span class="sxs-lookup"><span data-stu-id="51a62-755">The byte position in the file where writing will start.</span></span></param>
        <param name="size"><span data-ttu-id="51a62-756">出力ストリームに書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="51a62-756">The number of bytes to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="51a62-757">指定したファイルを HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-757">Writes the specified file directly to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-758">このメソッドが大きいファイルで使用されている場合、メソッドを呼び出すと例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-758">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="51a62-759">この方法で使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</span><span class="sxs-lookup"><span data-stu-id="51a62-759">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="51a62-760">詳細については、 [Microsoft サポート技術](https://go.microsoft.com/fwlink/?linkid=149903)情報の Web サイトの記事812406「PRB: Response. WriteFile は大きなファイルをダウンロードできません」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-760">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-761">次の例では、`Login.txt` という名前のテキストファイル (リテラル HTML テキストと入力コントロールを含む場合があります) のすべての内容を、出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-761">The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile3 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-762"><paramref name="fileHandler" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="51a62-762"><paramref name="fileHandler" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-763"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="51a62-763"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="51a62-764">- または -</span><span class="sxs-lookup"><span data-stu-id="51a62-764">-or-</span></span> 
 <span data-ttu-id="51a62-765"><paramref name="size" /> は、ファイル サイズから <paramref name="offset" /> を引いた値を超えています。</span><span class="sxs-lookup"><span data-stu-id="51a62-765"><paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename, long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.WriteFile : string * int64 * int64 -&gt; unit" Usage="httpResponse.WriteFile (filename, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="51a62-766">HTTP 出力ストリームに書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="51a62-766">The name of the file to write to the HTTP output stream.</span></span></param>
        <param name="offset"><span data-ttu-id="51a62-767">書き込みを開始するファイル内のバイト位置。</span><span class="sxs-lookup"><span data-stu-id="51a62-767">The byte position in the file where writing will start.</span></span></param>
        <param name="size"><span data-ttu-id="51a62-768">出力ストリームに書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="51a62-768">The number of bytes to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="51a62-769">指定したファイルを HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-769">Writes the specified file directly to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-770">このメソッドが大きいファイルで使用されている場合、メソッドを呼び出すと例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="51a62-770">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="51a62-771">この方法で使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</span><span class="sxs-lookup"><span data-stu-id="51a62-771">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="51a62-772">詳細については、 [Microsoft サポート技術](https://go.microsoft.com/fwlink/?linkid=149903)情報の Web サイトの記事812406「PRB: Response. WriteFile は大きなファイルをダウンロードできません」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-772">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a62-773">次の例では、`Login.txt` という名前のテキストファイル (リテラルテキストおよび HTML 入力コントロールを含む可能性があります) のすべての内容を、出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="51a62-773">The following example writes all the contents of a text file named `Login.txt` (which might contain literal text and HTML input controls) directly to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile2 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="51a62-774"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="51a62-774"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="51a62-775">- または -</span><span class="sxs-lookup"><span data-stu-id="51a62-775">-or-</span></span> 
 <span data-ttu-id="51a62-776"><paramref name="size" /> は、ファイル サイズから <paramref name="offset" /> を引いた値を超えています。</span><span class="sxs-lookup"><span data-stu-id="51a62-776"><paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51a62-777"><paramref name="filename" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="51a62-777">The <paramref name="filename" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubstitution">
      <MemberSignature Language="C#" Value="public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSubstitution(class System.Web.HttpResponseSubstitutionCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSubstitution (callback As HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSubstitution(System::Web::HttpResponseSubstitutionCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.WriteSubstitution : System.Web.HttpResponseSubstitutionCallback -&gt; unit" Usage="httpResponse.WriteSubstitution callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpResponseSubstitutionCallback" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="51a62-778">置換するメソッド、ユーザー コントロール、またはオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="51a62-778">The method, user control, or object to substitute.</span></span></param>
        <summary><span data-ttu-id="51a62-779">応答置換ブロックを応答に挿入できます。これにより、出力キャッシュされた応答の指定された応答領域を動的に生成できます。</span><span class="sxs-lookup"><span data-stu-id="51a62-779">Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a62-780">出力キャッシュされたページでキャッシュ後の置換に <xref:System.Web.HttpResponse.WriteSubstitution%2A> メソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="51a62-780">You can use the <xref:System.Web.HttpResponse.WriteSubstitution%2A> method for post-cache substitution in your output-cached pages.</span></span> <span data-ttu-id="51a62-781">指定された <xref:System.Web.HttpResponseSubstitutionCallback> シグネチャを持つコールバックメソッドに <xref:System.Web.HttpContext> オブジェクトを渡すことによって、ページキャッシュ内の任意の場所でキャッシュされた出力コンテンツを置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="51a62-781">By passing a <xref:System.Web.HttpContext> object to a callback method with a prescribed <xref:System.Web.HttpResponseSubstitutionCallback> signature, you can replace output cached content at any given location in the page cache.</span></span> <span data-ttu-id="51a62-782">置換を開始するには、<xref:System.Web.HttpResponse.WriteSubstitution%2A> メソッドを呼び出して、コールバックメソッドを渡します。これは、スレッドセーフである必要があり、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="51a62-782">To initiate the replacement, call the <xref:System.Web.HttpResponse.WriteSubstitution%2A> method, passing it the callback method, which must be thread safe and can be either of the following:</span></span>  
  
-   <span data-ttu-id="51a62-783">コンテナーページまたはユーザーコントロールの静的メソッド。</span><span class="sxs-lookup"><span data-stu-id="51a62-783">A static method on the container page or user control.</span></span>  
  
-   <span data-ttu-id="51a62-784">別の任意のオブジェクトの静的メソッドまたはインスタンスメソッド。</span><span class="sxs-lookup"><span data-stu-id="51a62-784">A static or instance method on another arbitrary object.</span></span>  
  
 <span data-ttu-id="51a62-785">ページへの最初の要求では、<xref:System.Web.HttpResponse.WriteSubstitution%2A> は <xref:System.Web.HttpResponseSubstitutionCallback> デリゲートを呼び出して出力を生成します。</span><span class="sxs-lookup"><span data-stu-id="51a62-785">On the first request to the page, the <xref:System.Web.HttpResponse.WriteSubstitution%2A> calls the <xref:System.Web.HttpResponseSubstitutionCallback> delegate to produce the output.</span></span> <span data-ttu-id="51a62-786">次に、代替バッファーを応答に追加します。これにより、今後の要求に対して呼び出しを行うデリゲートが保持されます。</span><span class="sxs-lookup"><span data-stu-id="51a62-786">Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests.</span></span> <span data-ttu-id="51a62-787">最後に、クライアント側のキャッシュ機能をパブリックからサーバーのみに低下させ、ページへの今後の要求によって、クライアントでキャッシュしないことによってデリゲートを再度呼び出すようにします。</span><span class="sxs-lookup"><span data-stu-id="51a62-787">Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51a62-788">出力キャッシュがユーザーコントロールレベルで適用されるキャッシュされたユーザーコントロールでは、キャッシュ後の置換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="51a62-788">Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level.</span></span> <span data-ttu-id="51a62-789">これは、フラグメントキャッシュとも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="51a62-789">This is also known as fragment caching.</span></span> <span data-ttu-id="51a62-790">詳細については、「 [ASP.NET ページの部分をキャッシュする](https://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51a62-790">For more information, see [Caching Portions of an ASP.NET Page](https://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51a62-791"><paramref name="callback" /> 型の <see cref="T:System.Web.UI.Control" /> パラメーターのターゲット。</span><span class="sxs-lookup"><span data-stu-id="51a62-791">The target of the <paramref name="callback" /> parameter is of type <see cref="T:System.Web.UI.Control" />.</span></span></exception>
        <altmember cref="T:System.Web.HttpResponseSubstitutionCallback" />
        <altmember cref="T:System.Web.UI.WebControls.Substitution" />
        <related type="Article" href="https://msdn.microsoft.com/library/d5fbd79f-972d-4557-9a39-f90684b3dcd3"><span data-ttu-id="51a62-792">ページのキャッシュの設定</span><span class="sxs-lookup"><span data-stu-id="51a62-792">Setting the Cacheability of a Page</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e"><span data-ttu-id="51a62-793">ASP.NET ページの部分をキャッシュする</span><span class="sxs-lookup"><span data-stu-id="51a62-793">Caching Portions of an ASP.NET Page</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/09c9bd9a-0d68-4a5c-aa6f-1b461c208795"><span data-ttu-id="51a62-794">キャッシュされたページの部分を動的に更新する</span><span class="sxs-lookup"><span data-stu-id="51a62-794">Dynamically Updating Portions of a Cached Page</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
