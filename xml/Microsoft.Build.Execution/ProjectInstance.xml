<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14d36e603aa866b266547cb376349c93b0180f2b" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76957570" /></Metadata><TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <TypeSignature Language="F#" Value="type ProjectInstance = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="38f18-101">プロジェクト インスタンスを表します。</span><span class="sxs-lookup"><span data-stu-id="38f18-101">Represents a project instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-102">このクラスのインスタンスは、プロジェクトの複製時に生成されます。</span><span class="sxs-lookup"><span data-stu-id="38f18-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="38f18-103">コンストラクターは、ユーザーが既存のプロジェクトからプロジェクトインスタンスを作成するように要求するために内部的に存在します。</span><span class="sxs-lookup"><span data-stu-id="38f18-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="38f18-104">新しいプロジェクトインスタンスは変更できません。ただし、インスタンス項目を追加したり、インスタンスのプロパティを設定したりすることはできません。</span><span class="sxs-lookup"><span data-stu-id="38f18-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="38f18-105">プロジェクトインスタンスは、元のプロジェクトに支障をきたすことなく変更およびビルドできるので便利です。</span><span class="sxs-lookup"><span data-stu-id="38f18-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="38f18-106">このクラスとその構成要素のいずれにも、<xref:Microsoft.Build.Construction> または <xref:Microsoft.Build.Evaluation> オブジェクトへの参照を与えることはできません。</span><span class="sxs-lookup"><span data-stu-id="38f18-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="38f18-107">プロジェクトインスタンスターゲット、ホストサービス、およびタスクレジストリは公開されません。</span><span class="sxs-lookup"><span data-stu-id="38f18-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38f18-108">新しいプロジェクト インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="38f18-108">Creates a new project instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="38f18-109">プロジェクトのルート要素。</span><span class="sxs-lookup"><span data-stu-id="38f18-109">The project root element.</span></span></param>
        <summary><span data-ttu-id="38f18-110">既定のプロジェクト コレクションを使用して、指定されたプロジェクトのルートから新しいプロジェクト インスタンスを作成および初期化します。</span><span class="sxs-lookup"><span data-stu-id="38f18-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-111">中間 <xref:Microsoft.Build.Evaluation.Project> オブジェクトは作成されません。</span><span class="sxs-lookup"><span data-stu-id="38f18-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="38f18-112">これは、プロジェクトをビルドし、表示または編集しない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="38f18-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="38f18-113">プロジェクト ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="38f18-113">The name of the project file.</span></span></param>
        <summary><span data-ttu-id="38f18-114">既定のプロジェクト コレクションを使用して、指定されたプロジェクト ファイルから新しいプロジェクト インスタンスを作成および初期化します。</span><span class="sxs-lookup"><span data-stu-id="38f18-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-115">中間 <xref:Microsoft.Build.Evaluation.Project> オブジェクトは作成されません。</span><span class="sxs-lookup"><span data-stu-id="38f18-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="38f18-116">これは、プロジェクトをビルドし、表示または編集しない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="38f18-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="38f18-117">プロジェクト ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="38f18-117">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="38f18-118">使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="38f18-118">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="38f18-119">ツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="38f18-119">The tools version.</span></span></param>
        <summary><span data-ttu-id="38f18-120">指定されたグローバル プロパティ、ツール バージョン、および既定のプロジェクト コレクションを使用して、指定されたプロジェクト ファイルから新しいプロジェクト インスタンスを作成および初期化します。</span><span class="sxs-lookup"><span data-stu-id="38f18-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-121">中間 <xref:Microsoft.Build.Evaluation.Project> オブジェクトは作成されません。</span><span class="sxs-lookup"><span data-stu-id="38f18-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="38f18-122">これは、プロジェクトをビルドし、表示または編集しない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="38f18-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="38f18-123">プロジェクトのルート要素。</span><span class="sxs-lookup"><span data-stu-id="38f18-123">The project root element</span></span></param>
        <param name="globalProperties"><span data-ttu-id="38f18-124">使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="38f18-124">The global properties to use.</span></span> <span data-ttu-id="38f18-125">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-125">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="38f18-126">ツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="38f18-126">The tools version.</span></span> <span data-ttu-id="38f18-127">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-127">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="38f18-128">プロジェクト コレクション</span><span class="sxs-lookup"><span data-stu-id="38f18-128">Project collection</span></span></param>
        <summary><span data-ttu-id="38f18-129">指定されたグローバル プロパティ、ツール バージョン、およびプロジェクト コレクションを使用して、指定されたプロジェクトのルートから新しいプロジェクト インスタンスを作成および初期化します。</span><span class="sxs-lookup"><span data-stu-id="38f18-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-130">中間 <xref:Microsoft.Build.Evaluation.Project> オブジェクトは作成されません。</span><span class="sxs-lookup"><span data-stu-id="38f18-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="38f18-131">これは、プロジェクトをビルドし、表示または編集しない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="38f18-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="38f18-132">プロジェクト ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="38f18-132">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="38f18-133">使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="38f18-133">The global properties to use.</span></span> <span data-ttu-id="38f18-134">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-134">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="38f18-135">ツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="38f18-135">The tools version.</span></span> <span data-ttu-id="38f18-136">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-136">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="38f18-137">プロジェクト コレクション</span><span class="sxs-lookup"><span data-stu-id="38f18-137">Project collection</span></span></param>
        <summary><span data-ttu-id="38f18-138">指定されたグローバル プロパティ、ツール バージョン、およびプロジェクト コレクションを使用して、指定されたプロジェクト ファイルから新しいプロジェクト インスタンスを作成および初期化します。</span><span class="sxs-lookup"><span data-stu-id="38f18-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-139">中間 <xref:Microsoft.Build.Evaluation.Project> オブジェクトは作成されません。</span><span class="sxs-lookup"><span data-stu-id="38f18-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="38f18-140">これは、プロジェクトをビルドし、表示または編集しない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="38f18-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="38f18-141">プロジェクトのルート要素。</span><span class="sxs-lookup"><span data-stu-id="38f18-141">The project root element.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="38f18-142">使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="38f18-142">The global properties to use.</span></span> <span data-ttu-id="38f18-143">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-143">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="38f18-144">ツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="38f18-144">The tools version.</span></span> <span data-ttu-id="38f18-145">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-145">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="38f18-146">サブ ツールセット バージョン。</span><span class="sxs-lookup"><span data-stu-id="38f18-146">The sub toolset version.</span></span> <span data-ttu-id="38f18-147">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-147">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="38f18-148">プロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="38f18-148">Project collection.</span></span></param>
        <summary><span data-ttu-id="38f18-149">指定されたグローバル プロパティ、ツール バージョン、およびプロジェクト コレクションを使用して、指定されたプロジェクトのルートから新しいプロジェクト インスタンスを作成および初期化します。</span><span class="sxs-lookup"><span data-stu-id="38f18-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-150">中間 <xref:Microsoft.Build.Evaluation.Project> オブジェクトは作成されません。</span><span class="sxs-lookup"><span data-stu-id="38f18-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="38f18-151">これは、プロジェクトをビルドし、表示または編集しない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="38f18-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="38f18-152">プロジェクト ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="38f18-152">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="38f18-153">使用するグローバル プロパティ。</span><span class="sxs-lookup"><span data-stu-id="38f18-153">The global properties to use.</span></span> <span data-ttu-id="38f18-154">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-154">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="38f18-155">ツール バージョン。</span><span class="sxs-lookup"><span data-stu-id="38f18-155">The tools version.</span></span> <span data-ttu-id="38f18-156">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-156">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="38f18-157">サブ ツールセット バージョン。</span><span class="sxs-lookup"><span data-stu-id="38f18-157">The sub toolset version.</span></span> <span data-ttu-id="38f18-158">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-158">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="38f18-159">プロジェクト コレクション。</span><span class="sxs-lookup"><span data-stu-id="38f18-159">Project collection.</span></span></param>
        <summary><span data-ttu-id="38f18-160">指定されたグローバル プロパティ、ツール バージョン、サブツールセット バージョン、およびプロジェクト コレクションを使用して、指定されたプロジェクト ファイルから新しいプロジェクト インスタンスを作成および初期化します。</span><span class="sxs-lookup"><span data-stu-id="38f18-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-161">中間 <xref:Microsoft.Build.Evaluation.Project> オブジェクトは作成されません。</span><span class="sxs-lookup"><span data-stu-id="38f18-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="38f18-162">これは、プロジェクトをビルドし、表示または編集しない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="38f18-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38f18-163">メタデータのない項目をプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="38f18-163">Adds an item with no metadata to the project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="38f18-164">追加する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="38f18-164">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="38f18-165">項目の評価された Include 属性。</span><span class="sxs-lookup"><span data-stu-id="38f18-165">The evaluated Include attribute of the item.</span></span></param>
        <summary><span data-ttu-id="38f18-166">メタデータのない項目をプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="38f18-166">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="38f18-167">新しい項目。</span><span class="sxs-lookup"><span data-stu-id="38f18-167">The new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-168">別の ProjectInstance によって既に使用されているものがないかどうかを確認するための ProjectItemInstance はありません。</span><span class="sxs-lookup"><span data-stu-id="38f18-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="38f18-169">追加する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="38f18-169">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="38f18-170">項目の評価された Include 属性。</span><span class="sxs-lookup"><span data-stu-id="38f18-170">The evaluated Include attribute of the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="38f18-171">項目のメタデータ。</span><span class="sxs-lookup"><span data-stu-id="38f18-171">The metadata of the item.</span></span></param>
        <summary><span data-ttu-id="38f18-172">指定したメタデータを持つ項目をプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="38f18-172">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="38f18-173">新しい項目を返します。</span><span class="sxs-lookup"><span data-stu-id="38f18-173">Return the new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-174">別の ProjectInstance によって既に使用されているものがないかどうかを確認するための ProjectItemInstance はありません。</span><span class="sxs-lookup"><span data-stu-id="38f18-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38f18-175">プロジェクト コレクションのロガーを使用して、プロジェクトの既定のターゲットをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-175">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="projectInstance.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38f18-176">プロジェクト コレクションのロガーを使用して、プロジェクトの既定のターゲットをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-176">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
        <returns><span data-ttu-id="38f18-177">ビルドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-177"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="38f18-178">ビルドに使用するロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-178">The loggers to use for the build.</span></span> <span data-ttu-id="38f18-179">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-179">May be null.</span></span></param>
        <summary><span data-ttu-id="38f18-180">指定したロガーを使用して、プロジェクトの既定のターゲットをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-180">Builds the default targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="38f18-181">ビルドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-181"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-182">指定したロガーのいずれかが既にログサービスにアタッチされている場合、InvalidOperationException をスローします。</span><span class="sxs-lookup"><span data-stu-id="38f18-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="38f18-183">ビルドに使用するロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-183">The loggers to use for the build.</span></span> <span data-ttu-id="38f18-184">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-184">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="38f18-185">ビルドに使用するリモート ロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-185">The remote loggers to use for the build.</span></span> <span data-ttu-id="38f18-186">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-186">May be null.</span></span></param>
        <summary><span data-ttu-id="38f18-187">指定したロガーとリモート ロガーを使用して、プロジェクトの既定のターゲットをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-187">Builds the default targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="38f18-188">ビルドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-188"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-189">指定したロガーのいずれかが既にログサービスにアタッチされている場合、InvalidOperationException をスローします。</span><span class="sxs-lookup"><span data-stu-id="38f18-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="38f18-190">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="38f18-190">The target to build.</span></span> <span data-ttu-id="38f18-191">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-191">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="38f18-192">ビルドに使用するロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-192">The loggers to use for the build.</span></span> <span data-ttu-id="38f18-193">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-193">May be null.</span></span></param>
        <summary><span data-ttu-id="38f18-194">指定したロガーを使用して、プロジェクトの指定したターゲットをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-194">Builds the given target of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="38f18-195">ビルドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-195"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-196">指定したロガーのいずれかが既にログサービスにアタッチされている場合、InvalidOperationException をスローします。</span><span class="sxs-lookup"><span data-stu-id="38f18-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="38f18-197">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="38f18-197">The targets to build.</span></span> <span data-ttu-id="38f18-198">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-198">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="38f18-199">ビルドに使用するロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-199">The loggers to use for the build.</span></span> <span data-ttu-id="38f18-200">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-200">May be null.</span></span></param>
        <summary><span data-ttu-id="38f18-201">指定したロガーを使用して、プロジェクトの指定した複数のターゲットをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-201">Builds the given targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="38f18-202">ビルドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-202"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-203">指定したロガーのいずれかが既にログサービスにアタッチされている場合、InvalidOperationException をスローします。</span><span class="sxs-lookup"><span data-stu-id="38f18-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="38f18-204">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="38f18-204">The target to build.</span></span> <span data-ttu-id="38f18-205">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-205">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="38f18-206">ビルドに使用するロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-206">The loggers to use for the build.</span></span> <span data-ttu-id="38f18-207">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-207">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="38f18-208">ビルドに使用するリモート ロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-208">The remote loggers to use for the build.</span></span> <span data-ttu-id="38f18-209">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-209">May be null.</span></span></param>
        <summary><span data-ttu-id="38f18-210">指定したロガーとリモート ロガーを使用して、プロジェクトの指定したターゲットをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-210">Builds the given target of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="38f18-211">ビルドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-211"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-212">指定したロガーのいずれかが既にログサービスにアタッチされている場合、InvalidOperationException をスローします。</span><span class="sxs-lookup"><span data-stu-id="38f18-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * IDictionary -&gt; bool" Usage="projectInstance.Build (targets, loggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="38f18-213">ビルドするターゲットの一覧。</span><span class="sxs-lookup"><span data-stu-id="38f18-213">List of targets to build.</span></span> <span data-ttu-id="38f18-214">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-214">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="38f18-215">ターゲットのビルドに使用するロガーを列挙するリスト。</span><span class="sxs-lookup"><span data-stu-id="38f18-215">Enumerated list of loggers to use for building targets.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="38f18-216">ターゲット ビルドの出力。</span><span class="sxs-lookup"><span data-stu-id="38f18-216">Outputs of target builds.</span></span></param>
        <summary><span data-ttu-id="38f18-217">指定したロガーを使用して、ターゲットのリストをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-217">Build a list of targets with specified loggers.</span></span> <span data-ttu-id="38f18-218">ターゲットには null も指定できます。</span><span class="sxs-lookup"><span data-stu-id="38f18-218">Targets may be null.</span></span> <span data-ttu-id="38f18-219">ロガーを null にすることもできます。</span><span class="sxs-lookup"><span data-stu-id="38f18-219">Loggers may be null.</span></span></summary>
        <returns><span data-ttu-id="38f18-220">成功した場合は <see langword="true" />、失敗した場合は false。</span><span class="sxs-lookup"><span data-stu-id="38f18-220"><see langword="true" /> on success, false on failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-221">指定したロガーのいずれかが、渡されたログサービスに既にアタッチされている場合、は InvalidOperationException をスローします。</span><span class="sxs-lookup"><span data-stu-id="38f18-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="38f18-222">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="38f18-222">The targets to build.</span></span> <span data-ttu-id="38f18-223">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-223">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="38f18-224">ビルドに使用するロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-224">The loggers to use for the build.</span></span> <span data-ttu-id="38f18-225">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-225">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="38f18-226">ビルドに使用するリモート ロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-226">The remote loggers to use for the build.</span></span> <span data-ttu-id="38f18-227">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-227">May be null.</span></span></param>
        <summary><span data-ttu-id="38f18-228">指定したロガーとリモート ロガーを使用して、プロジェクトの指定した複数のターゲットをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-228">Builds the given targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="38f18-229">ビルドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-229"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-230">指定したロガーのいずれかが既にログサービスにアタッチされている場合、InvalidOperationException をスローします。</span><span class="sxs-lookup"><span data-stu-id="38f18-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; * IDictionary -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="38f18-231">ビルドするターゲット。</span><span class="sxs-lookup"><span data-stu-id="38f18-231">The targets to build.</span></span> <span data-ttu-id="38f18-232">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-232">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="38f18-233">ビルドに使用するロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-233">The loggers to use for the build.</span></span> <span data-ttu-id="38f18-234">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-234">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="38f18-235">ビルドに使用するリモート ロガー。</span><span class="sxs-lookup"><span data-stu-id="38f18-235">The remote loggers to use for the build.</span></span> <span data-ttu-id="38f18-236">null になることがあります。</span><span class="sxs-lookup"><span data-stu-id="38f18-236">May be null.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="38f18-237">ターゲット出力。</span><span class="sxs-lookup"><span data-stu-id="38f18-237">The target outputs.</span></span></param>
        <summary><span data-ttu-id="38f18-238">指定したターゲット出力と、指定したロガーおよびリモート ロガーを使用して、指定したターゲットをビルドします。</span><span class="sxs-lookup"><span data-stu-id="38f18-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="38f18-239">ビルドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-239"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-240">指定したロガーのいずれかが既にログサービスにアタッチされている場合、InvalidOperationException をスローします。</span><span class="sxs-lookup"><span data-stu-id="38f18-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38f18-241">このプロジェクトおよびプロジェクト内に含まれているすべての項目の、独立した詳細クローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="38f18-241">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="38f18-242">単一のファイルをコンパイルする場合や、ビルド間でビルド結果を保持する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="38f18-242">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38f18-243">このプロジェクトおよびプロジェクト内に含まれているすべての項目の、独立した詳細クローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="38f18-243">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="38f18-244">クローンは元のものと同じ変更可能性です。</span><span class="sxs-lookup"><span data-stu-id="38f18-244">Clone has the same mutability as the original.</span></span> <span data-ttu-id="38f18-245">単一のファイルをコンパイルする場合や、ビルド間でビルド結果を保持する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="38f18-245">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="38f18-246">このプロジェクトの独立した詳細クローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="38f18-246">Creates an independent, deep clone of this project.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : bool -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy isImmutable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="isImmutable"><span data-ttu-id="38f18-247">クローンの変更可能性を示すフラグ。</span><span class="sxs-lookup"><span data-stu-id="38f18-247">Flag indicating clone mutability.</span></span></param>
        <summary><span data-ttu-id="38f18-248">このプロジェクトおよびプロジェクト内に含まれているすべての項目の、特定の変更可能性を持つ独立した詳細クローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="38f18-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span></span> <span data-ttu-id="38f18-249">単一のファイルをコンパイルする場合や、ビルド間でビルド結果を保持する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="38f18-249">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="38f18-250">特定の変更可能性を持つ、このプロジェクトの独立した詳細クローン。</span><span class="sxs-lookup"><span data-stu-id="38f18-250">An independent, deep clone of this project, with specified mutability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-251">このプロジェクトの既定のターゲットのリストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="38f18-251">Gets or sets the list of default targets for this project.</span></span></summary>
        <value><span data-ttu-id="38f18-252">このプロジェクトの既定のターゲットの一覧。</span><span class="sxs-lookup"><span data-stu-id="38f18-252">The list of default targets for this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-253">ターゲットが明示的に指定されていない場合は、既定のターゲットがビルドされます。</span><span class="sxs-lookup"><span data-stu-id="38f18-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : string" Usage="Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-254">プロジェクトのルート ディレクトリを取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-254">Gets the project root directory.</span></span> <span data-ttu-id="38f18-255">ビルド時に、相対パスの評価や現在のディレクトリの設定を行うために使用されます。</span><span class="sxs-lookup"><span data-stu-id="38f18-255">Used for evaluation of relative paths and setting the current directory during build.</span></span> <span data-ttu-id="38f18-256">null になることはありません。ディスクから読み込まれていないプロジェクトでは、ビルドが開始された時点の現在のディレクトリが使用されます。</span><span class="sxs-lookup"><span data-stu-id="38f18-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span></span></summary>
        <value><span data-ttu-id="38f18-257">プロジェクトルートディレクトリ。 null になることはありません。</span><span class="sxs-lookup"><span data-stu-id="38f18-257">The project root directory, which is never null.</span></span> <span data-ttu-id="38f18-258">ディスクから読み込まれていないプロジェクトでは、ビルドが開始された時点の現在のディレクトリが返されます。</span><span class="sxs-lookup"><span data-stu-id="38f18-258">Projects not loaded from disk return the current directory at the time the build was started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateCondition : string -&gt; bool&#xA;override this.EvaluateCondition : string -&gt; bool" Usage="projectInstance.EvaluateCondition condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="38f18-259">展開する文字列。</span><span class="sxs-lookup"><span data-stu-id="38f18-259">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="38f18-260">指定された文字列を条件として評価します。現在使用できる項目とプロパティを使用して、項目とプロパティを展開し、論理評価を実行します。</span><span class="sxs-lookup"><span data-stu-id="38f18-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span></span></summary>
        <returns><span data-ttu-id="38f18-261">文字列の評価が true の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-261"><see langword="true" /> if the string evaluates to true; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-262">これは、[イミディエイト] ウィンドウに便利です。</span><span class="sxs-lookup"><span data-stu-id="38f18-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="38f18-263">は、ベアメタデータ式を展開しません。</span><span class="sxs-lookup"><span data-stu-id="38f18-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="abstract member ExpandString : string -&gt; string&#xA;override this.ExpandString : string -&gt; string" Usage="projectInstance.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="38f18-264">展開する文字列。</span><span class="sxs-lookup"><span data-stu-id="38f18-264">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="38f18-265">指定された文字列を評価します。現在使用できる項目とプロパティを使用して、項目とプロパティを展開します。</span><span class="sxs-lookup"><span data-stu-id="38f18-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span></span></summary>
        <returns><span data-ttu-id="38f18-266">展開された文字列値。</span><span class="sxs-lookup"><span data-stu-id="38f18-266">The expanded string value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-267">これは、一部のホスト、またはデバッガーの [イミディエイト] ウィンドウに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="38f18-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="38f18-268">は、ベアメタデータ式を展開しません。</span><span class="sxs-lookup"><span data-stu-id="38f18-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-269">プロジェクト ファイルの完全パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-269">Gets the full path to the project file.</span></span> <span data-ttu-id="38f18-270">ログに使用されます。</span><span class="sxs-lookup"><span data-stu-id="38f18-270">Used for logging.</span></span></summary>
        <value><span data-ttu-id="38f18-271">プロジェクトファイルへの完全パス。プロジェクトに名前が付けられていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-271">The full path to the project file, or <see langword="null" /> if the project was never named.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38f18-272">指定した項目定義の Include 属性の評価されたエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-272">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="38f18-273">評価してエスケープする項目定義。</span><span class="sxs-lookup"><span data-stu-id="38f18-273">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="38f18-274">指定した項目定義の Include 属性の評価されたエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-274">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="38f18-275">指定した項目定義の Include 属性の評価されたエスケープ値。</span><span class="sxs-lookup"><span data-stu-id="38f18-275">The evaluated, escaped value of the Include attribute of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="38f18-276">評価してエスケープする項目。</span><span class="sxs-lookup"><span data-stu-id="38f18-276">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="38f18-277">指定した項目の Include 属性の評価されたエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-277">Gets the evaluated, escaped value of the Include attribute of the provided item.</span></span></summary>
        <returns><span data-ttu-id="38f18-278">指定した項目の Include 属性の評価されたエスケープ値。</span><span class="sxs-lookup"><span data-stu-id="38f18-278">The evaluated, escaped value of the Include attribute of the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="38f18-279">取得する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="38f18-279">The item type of the items to be retrieved.</span></span></param>
        <summary><span data-ttu-id="38f18-280">このプロジェクト内の項目のうち、指定した種類のすべての項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-280">Gets all the items in this project of the specified type.</span></span> <span data-ttu-id="38f18-281">これは読み取り専用のリストです。</span><span class="sxs-lookup"><span data-stu-id="38f18-281">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="38f18-282">このプロジェクト内の項目のうち、指定した種類のすべての項目。</span><span class="sxs-lookup"><span data-stu-id="38f18-282">All the items in this project of the specified type.</span></span> <span data-ttu-id="38f18-283">該当する項目がない場合は、空のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="38f18-283">Returns an empty list if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByItemTypeAndEvaluatedInclude : string * string -&gt; seq&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItemsByItemTypeAndEvaluatedInclude (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="evaluatedInclude" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="38f18-284">取得する項目の種類。</span><span class="sxs-lookup"><span data-stu-id="38f18-284">The item type of the items to be retrieved.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="38f18-285">取得する項目の評価されたインクルード値。</span><span class="sxs-lookup"><span data-stu-id="38f18-285">The evaluated include value of the items to be retrieved</span></span></param>
        <summary><span data-ttu-id="38f18-286">このプロジェクト内の、指定された型と評価されたインクルード値を持つすべての項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-286">Gets all the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="38f18-287">これは読み取り専用のリストです。</span><span class="sxs-lookup"><span data-stu-id="38f18-287">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="38f18-288">このプロジェクト内の、指定された型と評価されたインクルード値を持つすべての項目。</span><span class="sxs-lookup"><span data-stu-id="38f18-288">All the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="38f18-289">該当する項目がない場合は、空のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="38f18-289">Returns an empty collection if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38f18-290">指定した項目定義から、指定した名前を持つメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-290">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectMetadataInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="38f18-291">エスケープするメタデータ。</span><span class="sxs-lookup"><span data-stu-id="38f18-291">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="38f18-292">指定したメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-292">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="38f18-293">指定したメタデータのエスケープ値。</span><span class="sxs-lookup"><span data-stu-id="38f18-293">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="38f18-294">メタデータ値を提供する項目定義。</span><span class="sxs-lookup"><span data-stu-id="38f18-294">The item definition to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="38f18-295">メタデータ名。</span><span class="sxs-lookup"><span data-stu-id="38f18-295">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="38f18-296">指定した項目定義から、指定した名前を持つメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-296">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="38f18-297">指定した項目定義からの、指定した名前を持つメタデータのエスケープ値。</span><span class="sxs-lookup"><span data-stu-id="38f18-297">The escaped value of the metadatum with the provided name of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="38f18-298">メタデータ値を提供する項目。</span><span class="sxs-lookup"><span data-stu-id="38f18-298">The item to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="38f18-299">メタデータ名。</span><span class="sxs-lookup"><span data-stu-id="38f18-299">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="38f18-300">指定した項目から、指定した名前を持つメタデータのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-300">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="38f18-301">指定した項目からの、指定した名前を持つメタデータのエスケープ値。</span><span class="sxs-lookup"><span data-stu-id="38f18-301">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance&#xA;override this.GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="38f18-302">取得するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="38f18-302">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="38f18-303">指定した名前のプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-303">Gets the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="38f18-304">指定した名前のプロパティ。またはその名前のプロパティが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-304">The property with the given name, or <see langword="null" /> if no property exists with that name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="projectInstance.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="38f18-305">値を取得するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="38f18-305">The name of the property whose value is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="38f18-306">指定された名前のプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-306">Gets the value of the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="38f18-307">指定した名前のプロパティの値。またはその名前のプロパティが存在しない場合は空の文字列。</span><span class="sxs-lookup"><span data-stu-id="38f18-307">The value of the property with the given name, or an empty string if no property exists with that name.</span></span> <span data-ttu-id="38f18-308">戻り値にエスケープ文字シーケンスは含まれません。</span><span class="sxs-lookup"><span data-stu-id="38f18-308">The value returned has no escaped character sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-309">このメソッドは、値が空の文字列のプロパティと、指定された名前のプロパティを区別しません。</span><span class="sxs-lookup"><span data-stu-id="38f18-309">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Execution.ProjectPropertyInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="38f18-310">エスケープするプロパティ。</span><span class="sxs-lookup"><span data-stu-id="38f18-310">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="38f18-311">指定したプロパティのエスケープ値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-311">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="38f18-312">指定したプロパティのエスケープ値。</span><span class="sxs-lookup"><span data-stu-id="38f18-312">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-313">このプロジェクトの評価時に使用されたグローバル プロパティがあれば、そのディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-313">Gets the dictionary of global properties this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="38f18-314">このプロジェクトの評価に使用されたグローバルプロパティのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="38f18-314">The dictionary of global properties this project was evaluated with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-315">読み取り専用のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="38f18-315">Read only collection.</span></span>  
  
 <span data-ttu-id="38f18-316">プロジェクト参照を走査します。</span><span class="sxs-lookup"><span data-stu-id="38f18-316">Traverses project references.</span></span>  
  
 <span data-ttu-id="38f18-317">これは、パブリックに公開されたゲッターであり、読み取り専用の dead IDictionary\<文字列、文字列 > に変換します。</span><span class="sxs-lookup"><span data-stu-id="38f18-317">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-318">プロジェクトとそのすべてのインポートの開始ターゲットのリストを深さ優先で取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-318">Gets the list of initial targets for the project and all its imports, depth-first.</span></span> <span data-ttu-id="38f18-319">これらのターゲットは、その他のターゲットの前にビルドされます。</span><span class="sxs-lookup"><span data-stu-id="38f18-319">These targets are built before any other targets.</span></span></summary>
        <value><span data-ttu-id="38f18-320">プロジェクトとそのすべてのインポートの初期ターゲットのリスト (深さ優先)。</span><span class="sxs-lookup"><span data-stu-id="38f18-320">The list of initial targets for the project and all its imports, depth-first.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImmutable : bool" Usage="Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-321">プロジェクトのインスタンスが変更できないかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-321">Gets a value that indicates whether the project instance is immutable.</span></span> <span data-ttu-id="38f18-322">このフラグは、インスタンスの作成時に永続的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="38f18-322">This flag is set permanently when the instance is created.</span></span></summary>
        <value><span data-ttu-id="38f18-323">プロジェクトインスタンスが不変である場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="38f18-323"><see langword="true" /> if the project instance is immutable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-324">プロジェクト内の項目定義の読み取り専用のディクショナリを取得します。項目の種類がキーになります。</span><span class="sxs-lookup"><span data-stu-id="38f18-324">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="38f18-325">項目の種類によってキー付けされた、プロジェクト内の項目定義の読み取り専用のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="38f18-325">A read-only dictionary of the item definitions in the project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-326">このプロジェクト内のすべての項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-326">Gets all items in this project.</span></span></summary>
        <value><span data-ttu-id="38f18-327">このプロジェクト内のすべての項目。</span><span class="sxs-lookup"><span data-stu-id="38f18-327">All items in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-328">このプロジェクト内のすべての項目の種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-328">Gets all item types in this project.</span></span></summary>
        <value><span data-ttu-id="38f18-329">このプロジェクトのすべての項目の種類。</span><span class="sxs-lookup"><span data-stu-id="38f18-329">All item types in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-330">発生元ファイル自体の場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-330">Gets the location of the originating file itself.</span></span> <span data-ttu-id="38f18-331">null になることはありません。</span><span class="sxs-lookup"><span data-stu-id="38f18-331">Never null.</span></span></summary>
        <value><span data-ttu-id="38f18-332">元のファイルの場所。</span><span class="sxs-lookup"><span data-stu-id="38f18-332">The location of the originating file.</span></span> <span data-ttu-id="38f18-333"><see langword="null" />を返しません。</span><span class="sxs-lookup"><span data-stu-id="38f18-333">Never returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-334">このプロジェクト内のすべてのプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-334">Gets all properties in this project.</span></span></summary>
        <value><span data-ttu-id="38f18-335">このプロジェクトのすべてのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="38f18-335">All properties in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Execution.ProjectItemInstance -&gt; bool" Usage="projectInstance.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="38f18-336">削除する項目。</span><span class="sxs-lookup"><span data-stu-id="38f18-336">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="38f18-337">プロジェクトから項目を削除します (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="38f18-337">Removes an item from the project, if present.</span></span> <span data-ttu-id="38f18-338">項目が存在していた場合は true、それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="38f18-338">Returns true if it was present, false otherwise.</span></span></summary>
        <returns><span data-ttu-id="38f18-339">削除前に項目が存在していた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-339"><see langword="true" /> if the item was present before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; bool" Usage="projectInstance.RemoveProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="38f18-340">削除するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="38f18-340">The name of the property to be removed.</span></span></param>
        <summary><span data-ttu-id="38f18-341">指定した名前のプロパティを削除します。</span><span class="sxs-lookup"><span data-stu-id="38f18-341">Removes a property with the given name.</span></span> <span data-ttu-id="38f18-342">プロパティに値 (空の文字列を含む) が設定されていた場合は true、それ以外の場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="38f18-342">Returns true if the property had a value (possibly empty string), otherwise false.</span></span></summary>
        <returns><span data-ttu-id="38f18-343">削除前にプロパティに値 (空の文字列を含む) が設定されていた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-343"><see langword="true" /> if the property had a value (possibly an empty string) before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.SetProperty (name, evaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="38f18-344">追加するプロパティの名前です。</span><span class="sxs-lookup"><span data-stu-id="38f18-344">The name of the property to add.</span></span></param>
        <param name="evaluatedValue"><span data-ttu-id="38f18-345">追加するプロパティの評価値。</span><span class="sxs-lookup"><span data-stu-id="38f18-345">The evaluated value of the property to add.</span></span></param>
        <summary><span data-ttu-id="38f18-346">指定した名前と値のプロパティをプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="38f18-346">Add a property with the specified name and value to the project.</span></span> <span data-ttu-id="38f18-347">同じ名前のプロパティがプロパティ コレクションに既に存在する場合は、そのプロパティが上書きされます。</span><span class="sxs-lookup"><span data-stu-id="38f18-347">Overwrites any property with the same name already in the property collection.</span></span></summary>
        <returns><span data-ttu-id="38f18-348">新しいプロパティ。</span><span class="sxs-lookup"><span data-stu-id="38f18-348">The new property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-349">ProjectPropertyInstance は、別の ProjectPropertyInstance によって既に使用されているものがないかどうかを確認するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="38f18-349">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-350">このプロジェクト内のすべてのターゲットに対する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-350">Gets an enumerator over all targets in this project.</span></span> <span data-ttu-id="38f18-351">このコレクションは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="38f18-351">This collection is read-only.</span></span></summary>
        <value><span data-ttu-id="38f18-352">このプロジェクト内のすべてのターゲットに対する列挙子。</span><span class="sxs-lookup"><span data-stu-id="38f18-352">An enumerator over all targets in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38f18-353">このプロジェクトの評価時に使用されたツール バージョンがあれば取得します。</span><span class="sxs-lookup"><span data-stu-id="38f18-353">Gets the tools version this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="38f18-354">このプロジェクトが評価されたツールバージョン (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="38f18-354">The tools version this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38f18-355">結果は、プロジェクトタグのツールのバージョン (存在する場合) と必ずしも同じであるとは限りません。外部で指定されている場合があります (たとえば、/tv スイッチを使用した場合)。</span><span class="sxs-lookup"><span data-stu-id="38f18-355">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberSignature Language="F#" Value="member this.ToProjectRootElement : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectInstance.ToProjectRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38f18-356">この ProjectInstance の内容から ProjectRootElement を作成します。</span><span class="sxs-lookup"><span data-stu-id="38f18-356">Creates a ProjectRootElement from the contents of this ProjectInstance.</span></span></summary>
        <returns><span data-ttu-id="38f18-357">このインスタンスを表す ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="38f18-357">A ProjectRootElement which represents this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberSignature Language="F#" Value="member this.UpdateStateFrom : Microsoft.Build.Execution.ProjectInstance -&gt; unit" Usage="projectInstance.UpdateStateFrom projectState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectState"><span data-ttu-id="38f18-358">更新元の <see langword="ProjectInstance" />。</span><span class="sxs-lookup"><span data-stu-id="38f18-358">The <see langword="ProjectInstance" /> to update from.</span></span></param>
        <summary><span data-ttu-id="38f18-359">プロジェクトの状態 <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />、<see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" />、および <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> を、指定した <see cref="T:Microsoft.Build.Execution.ProjectInstance" /> の状態に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="38f18-359">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
