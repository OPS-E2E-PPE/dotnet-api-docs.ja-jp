<Type Name="Partitioner" FullName="System.Collections.Concurrent.Partitioner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e093c6a991ff88354c2edb8ea7df7f7d7efd70d1" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75152096" /></Metadata><TypeSignature Language="C#" Value="public static class Partitioner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Partitioner extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.Partitioner" />
  <TypeSignature Language="VB.NET" Value="Public Class Partitioner" />
  <TypeSignature Language="C++ CLI" Value="public ref class Partitioner abstract sealed" />
  <TypeSignature Language="F#" Value="type Partitioner = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b1f54-101">配列、リスト、および列挙体に使用できる共通のパーティション方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-101">Provides common partitioning strategies for arrays, lists, and enumerables.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1f54-102">詳細については、「[Custom Partitioners for PLINQ and TPL (PLINQ および TPL 用のカスタム パーティショナー)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1f54-102">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="b1f54-103">方法: 小さいループ本体を高速化する</span><span class="sxs-lookup"><span data-stu-id="b1f54-103">How to: Speed Up Small Loop Bodies</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="b1f54-104">方法: 静的な数のパーティションを持つパーティショナーを実装する</span><span class="sxs-lookup"><span data-stu-id="b1f54-104">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1f54-105">パーティショナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-105">Creates a partitioner.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;int,int&gt;&gt; Create (int fromInclusive, int toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int32, int32&gt;&gt; Create(int32 fromInclusive, int32 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Integer, toExclusive As Integer) As OrderablePartitioner(Of Tuple(Of Integer, Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;int, int&gt; ^&gt; ^ Create(int fromInclusive, int toExclusive);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;int * int&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (fromInclusive, toExclusive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="b1f54-106">範囲の下限。この値も含まれます。</span><span class="sxs-lookup"><span data-stu-id="b1f54-106">The lower, inclusive bound of the range.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="b1f54-107">範囲の上限。この値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1f54-107">The upper, exclusive bound of the range.</span></span></param>
        <summary><span data-ttu-id="b1f54-108">ユーザーが指定した範囲をチャンクするパーティショナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-108">Creates a partitioner that chunks the user-specified range.</span></span></summary>
        <returns><span data-ttu-id="b1f54-109">パーティショナー。</span><span class="sxs-lookup"><span data-stu-id="b1f54-109">A partitioner.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1f54-110">詳細と例については、「[カスタムパーティショナー FOR PLINQ AND TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1f54-110">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1f54-111"><paramref name="toExclusive" /> 引数が <paramref name="fromInclusive" /> 引数以下です。</span><span class="sxs-lookup"><span data-stu-id="b1f54-111">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="b1f54-112">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="b1f54-112">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="b1f54-113">方法: 小さいループ本体を高速化する</span><span class="sxs-lookup"><span data-stu-id="b1f54-113">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="b1f54-114">方法: 静的な数のパーティションを持つパーティショナーを実装する</span><span class="sxs-lookup"><span data-stu-id="b1f54-114">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;long,long&gt;&gt; Create (long fromInclusive, long toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int64, int64&gt;&gt; Create(int64 fromInclusive, int64 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Long, toExclusive As Long) As OrderablePartitioner(Of Tuple(Of Long, Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;long, long&gt; ^&gt; ^ Create(long fromInclusive, long toExclusive);" />
      <MemberSignature Language="F#" Value="static member Create : int64 * int64 -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;int64 * int64&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (fromInclusive, toExclusive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int64,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="b1f54-115">範囲の下限。この値も含まれます。</span><span class="sxs-lookup"><span data-stu-id="b1f54-115">The lower, inclusive bound of the range.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="b1f54-116">範囲の上限。この値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1f54-116">The upper, exclusive bound of the range.</span></span></param>
        <summary><span data-ttu-id="b1f54-117">ユーザーが指定した範囲をチャンクするパーティショナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-117">Creates a partitioner that chunks the user-specified range.</span></span></summary>
        <returns><span data-ttu-id="b1f54-118">パーティショナー。</span><span class="sxs-lookup"><span data-stu-id="b1f54-118">A partitioner.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1f54-119">詳細と例については、「[カスタムパーティショナー FOR PLINQ AND TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1f54-119">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1f54-120"><paramref name="toExclusive" /> 引数が <paramref name="fromInclusive" /> 引数以下です。</span><span class="sxs-lookup"><span data-stu-id="b1f54-120">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="b1f54-121">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="b1f54-121">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="b1f54-122">方法: 小さいループ本体を高速化する</span><span class="sxs-lookup"><span data-stu-id="b1f54-122">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="b1f54-123">方法: 静的な数のパーティションを持つパーティショナーを実装する</span><span class="sxs-lookup"><span data-stu-id="b1f54-123">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;int,int&gt;&gt; Create (int fromInclusive, int toExclusive, int rangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int32, int32&gt;&gt; Create(int32 fromInclusive, int32 toExclusive, int32 rangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Integer, toExclusive As Integer, rangeSize As Integer) As OrderablePartitioner(Of Tuple(Of Integer, Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;int, int&gt; ^&gt; ^ Create(int fromInclusive, int toExclusive, int rangeSize);" />
      <MemberSignature Language="F#" Value="static member Create : int * int * int -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;int * int&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (fromInclusive, toExclusive, rangeSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="rangeSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="b1f54-124">範囲の下限。この値も含まれます。</span><span class="sxs-lookup"><span data-stu-id="b1f54-124">The lower, inclusive bound of the range.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="b1f54-125">範囲の上限。この値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1f54-125">The upper, exclusive bound of the range.</span></span></param>
        <param name="rangeSize"><span data-ttu-id="b1f54-126">各サブ範囲のサイズ。</span><span class="sxs-lookup"><span data-stu-id="b1f54-126">The size of each subrange.</span></span></param>
        <summary><span data-ttu-id="b1f54-127">ユーザーが指定した範囲をチャンクするパーティショナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-127">Creates a partitioner that chunks the user-specified range.</span></span></summary>
        <returns><span data-ttu-id="b1f54-128">パーティショナー。</span><span class="sxs-lookup"><span data-stu-id="b1f54-128">A partitioner.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1f54-129">詳細と例については、「[カスタムパーティショナー FOR PLINQ AND TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1f54-129">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1f54-130"><paramref name="toExclusive" /> 引数が <paramref name="fromInclusive" /> 引数以下です。</span><span class="sxs-lookup"><span data-stu-id="b1f54-130">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span></span>  
  
<span data-ttu-id="b1f54-131">または</span><span class="sxs-lookup"><span data-stu-id="b1f54-131">-or-</span></span> 
<span data-ttu-id="b1f54-132"><paramref name="rangeSize" /> 引数が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="b1f54-132">The <paramref name="rangeSize" /> argument is less than or equal to 0.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="b1f54-133">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="b1f54-133">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="b1f54-134">方法: 小さいループ本体を高速化する</span><span class="sxs-lookup"><span data-stu-id="b1f54-134">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="b1f54-135">方法: 静的な数のパーティションを持つパーティショナーを実装する</span><span class="sxs-lookup"><span data-stu-id="b1f54-135">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;long,long&gt;&gt; Create (long fromInclusive, long toExclusive, long rangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int64, int64&gt;&gt; Create(int64 fromInclusive, int64 toExclusive, int64 rangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Long, toExclusive As Long, rangeSize As Long) As OrderablePartitioner(Of Tuple(Of Long, Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;long, long&gt; ^&gt; ^ Create(long fromInclusive, long toExclusive, long rangeSize);" />
      <MemberSignature Language="F#" Value="static member Create : int64 * int64 * int64 -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;int64 * int64&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (fromInclusive, toExclusive, rangeSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int64,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="rangeSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="b1f54-136">範囲の下限。この値も含まれます。</span><span class="sxs-lookup"><span data-stu-id="b1f54-136">The lower, inclusive bound of the range.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="b1f54-137">範囲の上限。この値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1f54-137">The upper, exclusive bound of the range.</span></span></param>
        <param name="rangeSize"><span data-ttu-id="b1f54-138">各サブ範囲のサイズ。</span><span class="sxs-lookup"><span data-stu-id="b1f54-138">The size of each subrange.</span></span></param>
        <summary><span data-ttu-id="b1f54-139">ユーザーが指定した範囲をチャンクするパーティショナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-139">Creates a partitioner that chunks the user-specified range.</span></span></summary>
        <returns><span data-ttu-id="b1f54-140">パーティショナー。</span><span class="sxs-lookup"><span data-stu-id="b1f54-140">A partitioner.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1f54-141">詳細と例については、「[カスタムパーティショナー FOR PLINQ AND TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1f54-141">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1f54-142"><paramref name="toExclusive" /> 引数が <paramref name="fromInclusive" /> 引数以下です。</span><span class="sxs-lookup"><span data-stu-id="b1f54-142">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span></span>  
  
<span data-ttu-id="b1f54-143">または</span><span class="sxs-lookup"><span data-stu-id="b1f54-143">-or-</span></span> 
<span data-ttu-id="b1f54-144"><paramref name="rangeSize" /> 引数が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="b1f54-144">The <paramref name="rangeSize" /> argument is less than or equal to 0.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="b1f54-145">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="b1f54-145">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="b1f54-146">方法: 小さいループ本体を高速化する</span><span class="sxs-lookup"><span data-stu-id="b1f54-146">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3"><span data-ttu-id="b1f54-147">方法: 静的な数のパーティションを持つパーティショナーを実装する</span><span class="sxs-lookup"><span data-stu-id="b1f54-147">How to: Implement a Partitioner With a Static Number of Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (source As IEnumerable(Of TSource)) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Create : seq&lt;'Source&gt; -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="System.Collections.Concurrent.Partitioner.Create source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="b1f54-148">元の列挙内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="b1f54-148">Type of the elements in source enumerable.</span></span></typeparam>
        <param name="source"><span data-ttu-id="b1f54-149">パーティションに分割する列挙体。</span><span class="sxs-lookup"><span data-stu-id="b1f54-149">The enumerable to be partitioned.</span></span></param>
        <summary><span data-ttu-id="b1f54-150"><see cref="T:System.Collections.Generic.IEnumerable`1" /> インスタンスから順序付け可能なパーティショナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-150">Creates an orderable partitioner from a <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b1f54-151">入力配列に基づく順序付け可能なパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="b1f54-151">An orderable partitioner based on the input array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1f54-152">作成されたパーティショナーで使用される順序は、ソースの列挙型から取得される要素の自然な順序によって決まります。</span><span class="sxs-lookup"><span data-stu-id="b1f54-152">The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</span></span> <span data-ttu-id="b1f54-153">詳細と例については、「[カスタムパーティショナー FOR PLINQ AND TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1f54-153">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="b1f54-154">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="b1f54-154">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="b1f54-155">方法: 小さいループ本体を高速化する</span><span class="sxs-lookup"><span data-stu-id="b1f54-155">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="b1f54-156">方法: 動的パーティションを実装する</span><span class="sxs-lookup"><span data-stu-id="b1f54-156">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Collections.Concurrent.EnumerablePartitionerOptions partitionerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, valuetype System.Collections.Concurrent.EnumerablePartitionerOptions partitionerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (source As IEnumerable(Of TSource), partitionerOptions As EnumerablePartitionerOptions) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Collections::Concurrent::EnumerablePartitionerOptions partitionerOptions);" />
      <MemberSignature Language="F#" Value="static member Create : seq&lt;'Source&gt; * System.Collections.Concurrent.EnumerablePartitionerOptions -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (source, partitionerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="partitionerOptions" Type="System.Collections.Concurrent.EnumerablePartitionerOptions" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="b1f54-157">元の列挙内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="b1f54-157">Type of the elements in source enumerable.</span></span></typeparam>
        <param name="source"><span data-ttu-id="b1f54-158">パーティションに分割する列挙体。</span><span class="sxs-lookup"><span data-stu-id="b1f54-158">The enumerable to be partitioned.</span></span></param>
        <param name="partitionerOptions"><span data-ttu-id="b1f54-159">パーティショナーのバッファー動作を制御するオプション。</span><span class="sxs-lookup"><span data-stu-id="b1f54-159">Options to control the buffering behavior of the partitioner.</span></span></param>
        <summary><span data-ttu-id="b1f54-160"><see cref="T:System.Collections.Generic.IEnumerable`1" /> インスタンスから順序付け可能なパーティショナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-160">Creates an orderable partitioner from a <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b1f54-161">入力配列に基づく順序付け可能なパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="b1f54-161">An orderable partitioner based on the input array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1f54-162">作成されたパーティショナーで使用される順序は、ソースの列挙型から取得される要素の自然な順序によって決まります。</span><span class="sxs-lookup"><span data-stu-id="b1f54-162">The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1f54-163"><paramref name="partitionerOptions" /> 引数が、<see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" /> の無効な値を指定しています。</span><span class="sxs-lookup"><span data-stu-id="b1f54-163">The <paramref name="partitionerOptions" /> argument specifies an invalid value for <see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IList&lt;TSource&gt; list, bool loadBalance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IList`1&lt;!!TSource&gt; list, bool loadBalance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (list As IList(Of TSource), loadBalance As Boolean) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IList&lt;TSource&gt; ^ list, bool loadBalance);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IList&lt;'Source&gt; * bool -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (list, loadBalance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;TSource&gt;" />
        <Parameter Name="loadBalance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="b1f54-164">元のリスト内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="b1f54-164">Type of the elements in source list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="b1f54-165">パーティションに分割するリスト。</span><span class="sxs-lookup"><span data-stu-id="b1f54-165">The list to be partitioned.</span></span></param>
        <param name="loadBalance"><span data-ttu-id="b1f54-166">作成されたパーティショナーで、静的にパーティションを割り当てるのではなく、動的にパーティション間で負荷を分散する必要があるかどうかを示すブール値。</span><span class="sxs-lookup"><span data-stu-id="b1f54-166">A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</span></span></param>
        <summary><span data-ttu-id="b1f54-167"><see cref="T:System.Collections.Generic.IList`1" /> インスタンスから順序付け可能なパーティショナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-167">Creates an orderable partitioner from an <see cref="T:System.Collections.Generic.IList`1" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b1f54-168">入力リストに基づく順序付け可能なパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="b1f54-168">An orderable partitioner based on the input list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1f54-169">詳細と例については、「[カスタムパーティショナー FOR PLINQ AND TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1f54-169">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="b1f54-170">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="b1f54-170">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="b1f54-171">方法: 小さいループ本体を高速化する</span><span class="sxs-lookup"><span data-stu-id="b1f54-171">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="b1f54-172">方法: 動的パーティションを実装する</span><span class="sxs-lookup"><span data-stu-id="b1f54-172">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (TSource[] array, bool loadBalance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(!!TSource[] array, bool loadBalance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (array As TSource(), loadBalance As Boolean) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(cli::array &lt;TSource&gt; ^ array, bool loadBalance);" />
      <MemberSignature Language="F#" Value="static member Create : 'Source[] * bool -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (array, loadBalance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="TSource[]" />
        <Parameter Name="loadBalance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="b1f54-173">元の配列内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="b1f54-173">Type of the elements in source array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="b1f54-174">パーティションに分割する配列。</span><span class="sxs-lookup"><span data-stu-id="b1f54-174">The array to be partitioned.</span></span></param>
        <param name="loadBalance"><span data-ttu-id="b1f54-175">作成されたパーティショナーで、静的にパーティションを割り当てるのではなく、動的にパーティション間で負荷を分散する必要があるかどうかを示すブール値。</span><span class="sxs-lookup"><span data-stu-id="b1f54-175">A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</span></span></param>
        <summary><span data-ttu-id="b1f54-176"><see cref="T:System.Array" /> インスタンスから順序付け可能なパーティショナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1f54-176">Creates an orderable partitioner from a <see cref="T:System.Array" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b1f54-177">入力配列に基づく順序付け可能なパーティショナー。</span><span class="sxs-lookup"><span data-stu-id="b1f54-177">An orderable partitioner based on the input array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1f54-178">詳細と例については、「[カスタムパーティショナー FOR PLINQ AND TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1f54-178">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="b1f54-179">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="b1f54-179">Custom Partitioners for PLINQ and TPL</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce"><span data-ttu-id="b1f54-180">方法: 小さいループ本体を高速化する</span><span class="sxs-lookup"><span data-stu-id="b1f54-180">How to: Speed Up Small Loop Bodies</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7"><span data-ttu-id="b1f54-181">方法: 動的パーティションを実装する</span><span class="sxs-lookup"><span data-stu-id="b1f54-181">How to: Implement Dynamic Partitions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
