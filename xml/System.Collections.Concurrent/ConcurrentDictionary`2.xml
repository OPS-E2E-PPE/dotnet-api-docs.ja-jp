<Type Name="ConcurrentDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Concurrent.ConcurrentDictionary&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eed79ea3cf47aee8b1963955a1e680ee25ab5dc9" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82323667" /></Metadata><TypeSignature Language="C#" Value="public class ConcurrentDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConcurrentDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class ConcurrentDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ConcurrentDictionary&lt;'Key, 'Value&gt; = class&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&#xA;    interface IDictionary" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public class ConcurrentDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.IDictionary" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue))" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class ConcurrentDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::IDictionary" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type ConcurrentDictionary&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ConcurrentDictionary&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConcurrentDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" FrameworkAlternate="netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type ConcurrentDictionary&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IDictionary&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Collections.Concurrent" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="fd628-101">ディクショナリ内のキーの型。</span><span class="sxs-lookup"><span data-stu-id="fd628-101">The type of the keys in the dictionary.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="fd628-102">ディクショナリ内の値の型。</span><span class="sxs-lookup"><span data-stu-id="fd628-102">The type of the values in the dictionary.</span></span></typeparam>
    <summary><span data-ttu-id="fd628-103">同時に複数のスレッドからアクセスできる、スレッド セーフなキーと値のペアのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="fd628-103">Represents a thread-safe collection of key/value pairs that can be accessed by multiple threads concurrently.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd628-104">非常に大きな <xref:System.Collections.Concurrent.ConcurrentDictionary%602> オブジェクトの場合、 [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md)構成要素を実行時環境の `true` に設定することにより、64ビットシステムで最大配列サイズを2ギガバイト (GB) に増やすことができます。</span><span class="sxs-lookup"><span data-stu-id="fd628-104">For very large <xref:System.Collections.Concurrent.ConcurrentDictionary%602> objects, you can increase the maximum array size to 2 gigabytes (GB) on a 64-bit system by setting the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd628-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602> は、[!INCLUDE[net_v46](~/includes/net-v46-md.md)]で始まる <xref:System.Collections.Generic.IReadOnlyCollection%601> と <xref:System.Collections.Generic.IReadOnlyDictionary%602> インターフェイスを実装します。以前のバージョンの .NET Framework では、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> クラスはこれらのインターフェイスを実装していませんでした。</span><span class="sxs-lookup"><span data-stu-id="fd628-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> and <xref:System.Collections.Generic.IReadOnlyDictionary%602> interfaces starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class did not implement these interfaces.</span></span>  
  
 <span data-ttu-id="fd628-106"><xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType> クラスと同様に、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> は <xref:System.Collections.Generic.IDictionary%602> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="fd628-106">Like the <xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType> class, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span> <span data-ttu-id="fd628-107">また、次の表に示すように、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> には、ディクショナリのキーと値のペアを追加または更新するためのいくつかの方法が用意されています。</span><span class="sxs-lookup"><span data-stu-id="fd628-107">In addition, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> provides several methods for adding or updating key/value pairs in the dictionary, as described in the following table.</span></span>  
  
|<span data-ttu-id="fd628-108">目的</span><span class="sxs-lookup"><span data-stu-id="fd628-108">To do this</span></span>|<span data-ttu-id="fd628-109">使用するメソッド</span><span class="sxs-lookup"><span data-stu-id="fd628-109">Use this method</span></span>|<span data-ttu-id="fd628-110">使用上の注意</span><span class="sxs-lookup"><span data-stu-id="fd628-110">Usage notes</span></span>|  
|----------------|---------------------|-----------------|  
|<span data-ttu-id="fd628-111">ディクショナリに新しいキーがまだ存在しない場合は、そのキーを追加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-111">Add a new key to the dictionary, if it doesn't already exist in the dictionary</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A>|<span data-ttu-id="fd628-112">このメソッドは、キーが現在ディクショナリ内に存在しない場合、指定されたキーと値のペアを追加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-112">This method adds the specified key/value pair, if the key doesn't currently exist in the dictionary.</span></span> <span data-ttu-id="fd628-113">このメソッドは、新しいペアが追加されたかどうかに応じて、`true` または `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-113">The method returns `true` or `false` depending on whether the new pair was added.</span></span>|  
|<span data-ttu-id="fd628-114">このキーに特定の値が含まれている場合は、ディクショナリ内の既存のキーの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="fd628-114">Update the value for an existing key in the dictionary, if that key has a specific value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A>|<span data-ttu-id="fd628-115">このメソッドは、キーに指定された値があるかどうかを確認し、存在する場合は、新しい値でキーを更新します。</span><span class="sxs-lookup"><span data-stu-id="fd628-115">This method checks whether the key has a specified value, and if it does, updates the key with a new value.</span></span> <span data-ttu-id="fd628-116">これは、dictionary 要素に使用される点を除いて、<xref:System.Threading.Interlocked.CompareExchange%2A> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="fd628-116">It's similar to the <xref:System.Threading.Interlocked.CompareExchange%2A> method, except that it's used for dictionary elements.</span></span>|  
|<span data-ttu-id="fd628-117">キーと値のペアをディクショナリに無条件で格納し、既に存在するキーの値を上書きします。</span><span class="sxs-lookup"><span data-stu-id="fd628-117">Store a key/value pair in the dictionary unconditionally, and overwrite the value of a key that already exists</span></span>|<span data-ttu-id="fd628-118">インデクサーの setter: `dictionary[key] = newValue`</span><span class="sxs-lookup"><span data-stu-id="fd628-118">The indexer's setter: `dictionary[key] = newValue`</span></span>||  
|<span data-ttu-id="fd628-119">キーと値のペアをディクショナリに追加します。キーが既に存在する場合は、キーの既存の値に基づいてキーの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="fd628-119">Add a key/value pair to the dictionary, or if the key already exists, update the value for the key based on the key's existing value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29><br /><br /> <span data-ttu-id="fd628-120">- または -</span><span class="sxs-lookup"><span data-stu-id="fd628-120">-or-</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29>|<span data-ttu-id="fd628-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> は、キーと2つのデリゲートを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="fd628-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key and two delegates.</span></span> <span data-ttu-id="fd628-122">キーがディクショナリに存在しない場合は、最初のデリゲートを使用します。キーを受け取り、キーに対して追加する必要がある値を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-122">It uses the first delegate if the key doesn't exist in the dictionary; it accepts the key and returns the value that should be added for the key.</span></span> <span data-ttu-id="fd628-123">キーが存在する場合は、2つ目のデリゲートを使用します。キーとその現在の値を受け取り、キーに設定する必要がある新しい値を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-123">It uses the second delegate if the key does exist; it accepts the key and its current value, and it returns the new value that should be set for the key.</span></span><br /><br /> <span data-ttu-id="fd628-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> は、キー、追加する値、および更新デリゲートを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="fd628-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key, a value to add, and the update delegate.</span></span> <span data-ttu-id="fd628-125">これは前のオーバーロードと同じですが、デリゲートを使用してキーを追加しない点が異なります。</span><span class="sxs-lookup"><span data-stu-id="fd628-125">This is the same as the previous overload, except that it doesn't use a delegate to add a key.</span></span>|  
|<span data-ttu-id="fd628-126">ディクショナリ内のキーの値を取得し、その値をディクショナリに追加して、キーが存在しない場合はそれを返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-126">Get the value for a key in the dictionary, adding the value to the dictionary and returning it if the key doesn't exist</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29><br /><br /> <span data-ttu-id="fd628-127">- または -</span><span class="sxs-lookup"><span data-stu-id="fd628-127">-or-</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29>|<span data-ttu-id="fd628-128">これらのオーバーロードは、ディクショナリ内のキーと値のペアに対して遅延初期化を提供し、値が存在しない場合にのみ値を追加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-128">These overloads provide lazy initialization for a key/value pair in the dictionary, adding the value only if it's not there.</span></span><br /><br /> <span data-ttu-id="fd628-129">キーが存在しない場合、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29> は追加される値を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="fd628-129"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29> takes the value to be added if the key doesn't exist.</span></span><br /><br /> <span data-ttu-id="fd628-130">キーが存在しない場合、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29> は、値を生成するデリゲートを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="fd628-130"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29> takes a delegate that will generate the value if the key doesn't exist.</span></span>|  
  
 <span data-ttu-id="fd628-131">これらの操作はすべてアトミックであり、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> クラスの他のすべての操作に関してスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="fd628-131">All these operations are atomic and are thread-safe with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span> <span data-ttu-id="fd628-132">唯一の例外は、デリゲートを受け入れるメソッド、つまり、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> と <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>です。</span><span class="sxs-lookup"><span data-stu-id="fd628-132">The only exceptions are the methods that accept a delegate, that is, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> and <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>.</span></span> <span data-ttu-id="fd628-133">ディクショナリに対する変更および書き込み操作の場合、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> はきめ細かなロックを使用してスレッドセーフを確保します。</span><span class="sxs-lookup"><span data-stu-id="fd628-133">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="fd628-134">(ディクショナリに対する読み取り操作は、ロックなしの方法で実行されます)。ただし、ロックの下で不明なコードを実行した場合に発生する可能性のある問題を回避するために、これらのメソッドのデリゲートはロックの外部で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-134">(Read operations on the dictionary are performed in a lock-free manner.) However, delegates for these methods are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="fd628-135">したがって、これらのデリゲートによって実行されるコードは、操作の原子性の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="fd628-135">Therefore, the code executed by these delegates is not subject to the atomicity of the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd628-136">次の例は、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> オブジェクトを構築する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fd628-136">The following example shows how to construct a <xref:System.Collections.Concurrent.ConcurrentDictionary%602> object.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="fd628-137"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> のパブリックメンバーとプロテクトメンバーはすべてスレッドセーフであり、複数のスレッドから同時に使用することができます。</span><span class="sxs-lookup"><span data-stu-id="fd628-137">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> are thread-safe and may be used concurrently from multiple threads.</span></span> <span data-ttu-id="fd628-138">ただし、<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> が実装するインターフェイスの1つ (拡張メソッドを含む) を介してアクセスされるメンバーは、スレッドセーフであるとは限りません。また、呼び出し元による同期が必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fd628-138">However, members accessed through one of the interfaces the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-139">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-139">Thread-Safe Collections</span></span></related>
    <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-140">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-140">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd628-141"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fd628-141">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class.</span></span></summary>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-142">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-142">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-143">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-143">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd628-144">空で、既定のコンカレンシー レベルと既定の初期量を備え、キーの型の既定の比較子を使用する、<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fd628-144">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd628-145">既定の同時実行レベルは Cpu の数と同じです。</span><span class="sxs-lookup"><span data-stu-id="fd628-145">The default concurrency level is equal to the number of CPUs.</span></span> <span data-ttu-id="fd628-146">同時実行レベルが高いほど、干渉やブロッキングを発生させずに、同時に行われる書き込み操作が増加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-146">The higher the concurrency level is, the more concurrent write operations can take place without interference and blocking.</span></span> <span data-ttu-id="fd628-147">同時実行レベルの値を大きくすると、すべてのロック (テーブルのサイズ変更、`ToArray`、`Count`など) を必要とする操作の負荷も高くなります。</span><span class="sxs-lookup"><span data-stu-id="fd628-147">Higher concurrency level values also cause operations that require all locks (for example, table resizing, `ToArray` and `Count`) to become more expensive.</span></span> <span data-ttu-id="fd628-148">既定の容量 (DEFAULT_CAPACITY) は、バケットの初期数を表します。これは、非常に小さな辞書のサイズと大きな辞書を構築する際のサイズ変更の間のトレードオフです。</span><span class="sxs-lookup"><span data-stu-id="fd628-148">The default capacity (DEFAULT_CAPACITY), which represents the initial number of buckets, is a trade-off between the size of a very small dictionary and the number of resizes when constructing a large dictionary.</span></span> <span data-ttu-id="fd628-149">また、容量を小さな素数で割り切れないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="fd628-149">Also, the capacity should not be divisible by a small prime number.</span></span> <span data-ttu-id="fd628-150">既定の容量は31です。</span><span class="sxs-lookup"><span data-stu-id="fd628-150">The default capacity is 31.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-151">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-151">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-152">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-152">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="fd628-153">新しい <see cref="T:System.Collections.Generic.IEnumerable`1" /> に要素がコピーされた <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-153">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="fd628-154">指定した <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> からコピーされた要素を格納し、既定のコンカレンシー レベルと既定の初期量を備え、キーの型の既定の比較子を使用する、<see cref="T:System.Collections.Generic.IEnumerable`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fd628-154">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IEnumerable`1" />, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-155"><paramref name="collection" /> またはそのキーが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-155"><paramref name="collection" /> or any of its keys is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd628-156"><paramref name="collection" /> には 1 つまたは複数の重複するキーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="fd628-156"><paramref name="collection" /> contains one or more duplicate keys.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-157">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-157">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-158">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-158">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="fd628-159">キーの比較時に使用する等価比較の実装。</span><span class="sxs-lookup"><span data-stu-id="fd628-159">The equality comparison implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="fd628-160">空で、既定のコンカレンシー レベルと容量を備え、指定した <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> を使用する、<see cref="T:System.Collections.Generic.IEqualityComparer`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fd628-160">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level and capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-161"><paramref name="comparer" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-161"><paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-162">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-162">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-163">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-163">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (collection, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="fd628-164">新しい <see cref="T:System.Collections.Generic.IEnumerable`1" /> に要素がコピーされた <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-164">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="fd628-165">キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="fd628-165">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="fd628-166">指定した <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> からコピーされた要素を格納し、既定のコンカレンシー レベルと既定の初期量を備え、指定した <see cref="T:System.Collections.IEnumerable" /> を使用する、<see cref="T:System.Collections.Generic.IEqualityComparer`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fd628-166">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" /> has the default concurrency level, has the default initial capacity, and uses the specified  <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-167"><paramref name="collection" /> または <paramref name="comparer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-167"><paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-168">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-168">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-169">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-169">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * int -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel"><span data-ttu-id="fd628-170">同時に <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> を更新するスレッドの推定数。</span><span class="sxs-lookup"><span data-stu-id="fd628-170">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span></span></param>
        <param name="capacity"><span data-ttu-id="fd628-171"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> が格納できる要素数の初期値。</span><span class="sxs-lookup"><span data-stu-id="fd628-171">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span></span></param>
        <summary><span data-ttu-id="fd628-172">空で、指定したコンカレンシー レベルと容量を備え、キーの型の既定の比較子を使用する、<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fd628-172">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the key type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fd628-173"><paramref name="concurrencyLevel" /> が 1 未満です。</span><span class="sxs-lookup"><span data-stu-id="fd628-173"><paramref name="concurrencyLevel" /> is less than 1.</span></span>  
  
<span data-ttu-id="fd628-174">- または -</span><span class="sxs-lookup"><span data-stu-id="fd628-174">-or-</span></span> 
 <span data-ttu-id="fd628-175"><paramref name="capacity" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="fd628-175"><paramref name="capacity" /> is less than 0.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-176">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-176">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-177">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-177">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, collection, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel"><span data-ttu-id="fd628-178">同時に <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> を更新するスレッドの推定数。</span><span class="sxs-lookup"><span data-stu-id="fd628-178">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span></span></param>
        <param name="collection"><span data-ttu-id="fd628-179">新しい <see cref="T:System.Collections.Generic.IEnumerable`1" /> に要素がコピーされた <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-179">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="fd628-180">キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="fd628-180">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="fd628-181">指定した <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> から要素をコピーして格納し、指定した <see cref="T:System.Collections.IEnumerable" /> を使用する、<see cref="T:System.Collections.Generic.IEqualityComparer`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fd628-181">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" />, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-182"><paramref name="collection" /> または <paramref name="comparer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-182"><paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fd628-183"><paramref name="concurrencyLevel" /> が 1 未満です。</span><span class="sxs-lookup"><span data-stu-id="fd628-183"><paramref name="concurrencyLevel" /> is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd628-184"><paramref name="collection" /> には 1 つまたは複数の重複するキーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="fd628-184"><paramref name="collection" /> contains one or more duplicate keys.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-185">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-185">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-186">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-186">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer, comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * int * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, capacity, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel"><span data-ttu-id="fd628-187">同時に <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> を更新するスレッドの推定数。</span><span class="sxs-lookup"><span data-stu-id="fd628-187">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span></span></param>
        <param name="capacity"><span data-ttu-id="fd628-188"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> が格納できる要素数の初期値。</span><span class="sxs-lookup"><span data-stu-id="fd628-188">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span></span></param>
        <param name="comparer"><span data-ttu-id="fd628-189">キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="fd628-189">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="fd628-190">空で、指定したコンカレンシー レベルと指定した初期量を備え、指定した <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> を使用する、<see cref="T:System.Collections.Generic.IEqualityComparer`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fd628-190">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-191"><paramref name="comparer" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-191"><paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fd628-192"><paramref name="concurrencyLevel" /> または <paramref name="capacity" /> が 1 未満です。</span><span class="sxs-lookup"><span data-stu-id="fd628-192"><paramref name="concurrencyLevel" /> or <paramref name="capacity" /> is less than 1.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-193">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-193">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-194">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-194">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd628-195">キーがまだ存在しない場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> にキーと値のペアを追加し、キーが既に存在する場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> のキーと値のペアを更新します。</span><span class="sxs-lookup"><span data-stu-id="fd628-195">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd628-196">次の例は、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fd628-196">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-197">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-197">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-198">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-198">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, Func&lt;TKey,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; addValueFactory, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValueFactory As Func(Of TKey, TValue), updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * Func&lt;'Key, 'Value&gt; * Func&lt;'Key, 'Value, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValueFactory, updateValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-199">追加するキーまたは値を更新するキー</span><span class="sxs-lookup"><span data-stu-id="fd628-199">The key to be added or whose value should be updated</span></span></param>
        <param name="addValueFactory"><span data-ttu-id="fd628-200">キーが存在しない場合に、値を生成するために使用される関数</span><span class="sxs-lookup"><span data-stu-id="fd628-200">The function used to generate a value for an absent key</span></span></param>
        <param name="updateValueFactory"><span data-ttu-id="fd628-201">キーが存在する場合に、キーの既存の値に基づいて新しい値を生成するために使用される関数</span><span class="sxs-lookup"><span data-stu-id="fd628-201">The function used to generate a new value for an existing key based on the key's existing value</span></span></param>
        <summary><span data-ttu-id="fd628-202">指定した関数を使用して、キーがまだ存在しない場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> にキーと値のペアを追加し、キーが既に存在する場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> のキーと値のペアを更新します。</span><span class="sxs-lookup"><span data-stu-id="fd628-202">Uses the specified functions to add a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or to update a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span></span></summary>
        <returns><span data-ttu-id="fd628-203">キーの新しい値。</span><span class="sxs-lookup"><span data-stu-id="fd628-203">The new value for the key.</span></span> <span data-ttu-id="fd628-204">これは、<paramref name="addValueFactory" /> の結果 (キーが存在しない場合) か <paramref name="updateValueFactory" /> の結果 (キーが存在する場合) のどちらかになります。</span><span class="sxs-lookup"><span data-stu-id="fd628-204">This will be either be the result of <paramref name="addValueFactory" /> (if the key was absent) or the result of <paramref name="updateValueFactory" /> (if the key was present).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd628-205">異なるスレッドで同時に <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> を呼び出すと、`addValueFactory` が複数回呼び出される可能性がありますが、そのキーと値のペアは、呼び出しごとにディクショナリに追加されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd628-205">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> simultaneously on different threads, `addValueFactory` may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</span></span>  

 <span data-ttu-id="fd628-206">ディクショナリに対する変更および書き込み操作の場合、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> はきめ細かなロックを使用してスレッドセーフを確保します。</span><span class="sxs-lookup"><span data-stu-id="fd628-206">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="fd628-207">(ディクショナリに対する読み取り操作は、ロックなしの方法で実行されます)。ただし、ロックの下で不明なコードを実行した場合に発生する可能性のある問題を回避するために、`addValueFactory` デリゲートと `updateValueFactory` デリゲートがロックの外部で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-207">(Read operations on the dictionary are performed in a lock-free manner.) However, the `addValueFactory` and `updateValueFactory` delegates are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="fd628-208">したがって、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> クラスの他のすべての操作に関しては、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> はアトミックではありません。</span><span class="sxs-lookup"><span data-stu-id="fd628-208">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-209"><paramref name="key" />、<paramref name="addValueFactory" />、または <paramref name="updateValueFactory" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-209"><paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-210">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-210">The dictionary contains too many elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-211">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-211">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-212">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-212">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, TValue addValue, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, !TValue addValue, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValue As TValue, updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, TValue addValue, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * 'Value * Func&lt;'Key, 'Value, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValue, updateValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValue" Type="TValue" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-213">追加するキーまたは値を更新するキー</span><span class="sxs-lookup"><span data-stu-id="fd628-213">The key to be added or whose value should be updated</span></span></param>
        <param name="addValue"><span data-ttu-id="fd628-214">キーが存在しない場合に追加する値</span><span class="sxs-lookup"><span data-stu-id="fd628-214">The value to be added for an absent key</span></span></param>
        <param name="updateValueFactory"><span data-ttu-id="fd628-215">キーが存在する場合に、キーの既存の値に基づいて新しい値を生成するために使用される関数</span><span class="sxs-lookup"><span data-stu-id="fd628-215">The function used to generate a new value for an existing key based on the key's existing value</span></span></param>
        <summary><span data-ttu-id="fd628-216">キーがまだ存在しない場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> にキーと値のペアを追加し、キーが既に存在する場合は、指定された関数を使用して <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> のキーと値のペアを更新します。</span><span class="sxs-lookup"><span data-stu-id="fd628-216">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key already exists.</span></span></summary>
        <returns><span data-ttu-id="fd628-217">キーの新しい値。</span><span class="sxs-lookup"><span data-stu-id="fd628-217">The new value for the key.</span></span> <span data-ttu-id="fd628-218">これは、<paramref name="addValue" /> (キーが存在しない場合) か <paramref name="updateValueFactory" /> の結果 (キーが存在する場合) のどちらかになります。</span><span class="sxs-lookup"><span data-stu-id="fd628-218">This will be either be <paramref name="addValue" /> (if the key was absent) or the result of <paramref name="updateValueFactory" /> (if the key was present).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd628-219">次のコード例は、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> を初期化する方法と、AddOrUpdate メソッドを使用してコレクションに項目を追加し、既存の項目を更新する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fd628-219">The following code example shows how to initialize an <xref:System.Collections.Concurrent.ConcurrentDictionary%602> and how to use the AddOrUpdate method to add an additional item to the collection, and update the existing items.</span></span>  
  
 [!code-csharp[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/cs/program.cs#1)]
 [!code-vb[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/vb/module1.vb#1)]  

## Remarks  
 <span data-ttu-id="fd628-220">ディクショナリに対する変更および書き込み操作の場合、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> はきめ細かなロックを使用してスレッドセーフを確保します。</span><span class="sxs-lookup"><span data-stu-id="fd628-220">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="fd628-221">(ディクショナリに対する読み取り操作は、ロックなしの方法で実行されます)。ただし、ロックの下で不明なコードを実行した場合に発生する可能性のある問題を回避するために、`updateValueFactory` デリゲートはロックの外部で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-221">(Read operations on the dictionary are performed in a lock-free manner.) However, the `updateValueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="fd628-222">したがって、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> クラスの他のすべての操作に関しては、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> はアトミックではありません。</span><span class="sxs-lookup"><span data-stu-id="fd628-222">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-223"><paramref name="key" /> または <paramref name="updateValueFactory" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-223"><paramref name="key" /> or <paramref name="updateValueFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-224">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-224">The dictionary contains too many elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-225">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-225">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-226">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-226">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TArg,TValue&gt; updateValueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; addValueFactory, class System.Func`4&lt;!TKey, !TValue, !!TArg, !TValue&gt; updateValueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate(Of TArg) (key As TKey, addValueFactory As Func(Of TKey, TArg, TValue), updateValueFactory As Func(Of TKey, TValue, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TArg, TValue&gt; ^ updateValueFactory, TArg factoryArgument);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * Func&lt;'Key, 'Arg, 'Value&gt; * Func&lt;'Key, 'Value, 'Arg, 'Value&gt; * 'Arg -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValueFactory, updateValueFactory, factoryArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TArg,TValue&gt;" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="factoryArgument" Type="TArg" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="TArg"><span data-ttu-id="fd628-227"><paramref name="addValueFactory" /> と <paramref name="updateValueFactory" />に渡す引数の型。</span><span class="sxs-lookup"><span data-stu-id="fd628-227">The type of an argument to pass into <paramref name="addValueFactory" /> and <paramref name="updateValueFactory" />.</span></span></typeparam>
        <param name="key"><span data-ttu-id="fd628-228">追加するキーまたは値を更新するキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-228">The key to be added or whose value should be updated.</span></span></param>
        <param name="addValueFactory"><span data-ttu-id="fd628-229">キーが存在しない場合に、値を生成するために使用される関数。</span><span class="sxs-lookup"><span data-stu-id="fd628-229">The function used to generate a value for an absent key.</span></span></param>
        <param name="updateValueFactory"><span data-ttu-id="fd628-230">キーの既存の値に基づいて、既存のキーの新しい値を生成するために使用される関数。</span><span class="sxs-lookup"><span data-stu-id="fd628-230">The function used to generate a new value for an existing key based on the key's existing value.</span></span></param>
        <param name="factoryArgument"><span data-ttu-id="fd628-231"><paramref name="addValueFactory" /> と <paramref name="updateValueFactory" /> に渡す引数。</span><span class="sxs-lookup"><span data-stu-id="fd628-231">An argument to pass into <paramref name="addValueFactory" /> and <paramref name="updateValueFactory" />.</span></span></param>
        <summary><span data-ttu-id="fd628-232">指定した関数と引数を使用して、キーがまだ存在しない場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> にキーと値のペアを追加し、キーが既に存在する場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> のキーと値のペアを更新します。</span><span class="sxs-lookup"><span data-stu-id="fd628-232">Uses the specified functions and argument to add a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or to update a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span></span></summary>
        <returns><span data-ttu-id="fd628-233">キーの新しい値。</span><span class="sxs-lookup"><span data-stu-id="fd628-233">The new value for the key.</span></span> <span data-ttu-id="fd628-234">これは、<paramref name="addValueFactory" /> の結果 (キーが存在しない場合) か <paramref name="updateValueFactory" /> の結果 (キーが存在する場合) のどちらかになります。</span><span class="sxs-lookup"><span data-stu-id="fd628-234">This will be either be the result of <paramref name="addValueFactory" /> (if the key was absent) or the result of <paramref name="updateValueFactory" /> (if the key was present).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd628-235">異なるスレッドで同時に <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> を呼び出すと、`addValueFactory` が複数回呼び出される可能性がありますが、そのキーと値のペアは、呼び出しごとにディクショナリに追加されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fd628-235">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> simultaneously on different threads, `addValueFactory` may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</span></span>  

 <span data-ttu-id="fd628-236">ディクショナリに対する変更および書き込み操作の場合、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> はきめ細かなロックを使用してスレッドセーフを確保します。</span><span class="sxs-lookup"><span data-stu-id="fd628-236">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="fd628-237">(ディクショナリに対する読み取り操作は、ロックなしの方法で実行されます)。ただし、ロックの下で不明なコードを実行した場合に発生する可能性のある問題を回避するために、`addValueFactory` デリゲートと `updateValueFactory` デリゲートがロックの外部で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-237">(Read operations on the dictionary are performed in a lock-free manner.) However, the `addValueFactory` and `updateValueFactory` delegates are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="fd628-238">したがって、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> クラスの他のすべての操作に関しては、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> はアトミックではありません。</span><span class="sxs-lookup"><span data-stu-id="fd628-238">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-239"><paramref name="key" />、<paramref name="addValueFactory" />、または <paramref name="updateValueFactory" /> が null 参照 (Visual Basic の場合は Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="fd628-239"><paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-240">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-240">The dictionary contains too many elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="concurrentDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd628-241"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> からすべてのキーと値を削除します。</span><span class="sxs-lookup"><span data-stu-id="fd628-241">Removes all keys and values from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-242">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-242">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-243">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-243">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool&#xA;override this.ContainsKey : 'Key -&gt; bool" Usage="concurrentDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-244"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 内で検索されるキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-244">The key to locate in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="fd628-245">指定したキーが <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> に格納されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="fd628-245">Determines whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains the specified key.</span></span></summary>
        <returns><span data-ttu-id="fd628-246">指定したキーを持つ要素が <see langword="true" /> に格納されている場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-246"><see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-247"><paramref name="key" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-247"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-248">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-248">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-249">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-249">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-250"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> に格納されているキー/値ペアの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-250">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="fd628-251"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> に格納されているキー/値ペアの数。</span><span class="sxs-lookup"><span data-stu-id="fd628-251">The number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd628-252">このプロパティにはスナップショットセマンティクスがあり、プロパティがアクセスされた時点の <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType> 内の項目数を表します。</span><span class="sxs-lookup"><span data-stu-id="fd628-252">This property has snapshot semantics and represents the number of items in the <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType> at the moment when the property was accessed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-253">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-253">The dictionary contains too many elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-254">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-254">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-255">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-255">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue))" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;" Usage="concurrentDictionary.GetEnumerator " />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable NotOverridable Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue))" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__35))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__34))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd628-256"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> を反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-256">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="fd628-257"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> の列挙子。</span><span class="sxs-lookup"><span data-stu-id="fd628-257">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd628-258">ディクショナリから返された列挙子は、ディクショナリの読み取りと書き込みで同時に使用することは安全ですが、ディクショナリの時点でのスナップショットは表しません。</span><span class="sxs-lookup"><span data-stu-id="fd628-258">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="fd628-259">列挙子を通じて公開される内容には、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> が呼び出された後にディクショナリに加えられた変更が含まれる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fd628-259">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-260">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-260">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-261">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-261">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOrAdd">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd628-262">キーがまだ存在しない場合に、<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> にキーと値のペアを追加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-262">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span></span> <span data-ttu-id="fd628-263">新しい値、または既にキーが存在する場合は既存の値を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-263">Returns the new value, or the existing value if the key already exists.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd628-264">次の例は、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fd628-264">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-265">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-265">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-266">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-266">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, Func&lt;TKey,TValue&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, valueFactory As Func(Of TKey, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TValue&gt; ^ valueFactory);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * Func&lt;'Key, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, valueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-267">追加する要素のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-267">The key of the element to add.</span></span></param>
        <param name="valueFactory"><span data-ttu-id="fd628-268">キーの値を生成するために使用される関数。</span><span class="sxs-lookup"><span data-stu-id="fd628-268">The function used to generate a value for the key.</span></span></param>
        <summary><span data-ttu-id="fd628-269">キーがまだ存在しない場合に、指定された関数を使用して <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> にキーと値のペアを追加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-269">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key does not already exist.</span></span> <span data-ttu-id="fd628-270">新しい値、またはキーが存在する場合は既存の値を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-270">Returns the new value, or the existing value if the key exists.</span></span></summary>
        <returns><span data-ttu-id="fd628-271">キーの値。</span><span class="sxs-lookup"><span data-stu-id="fd628-271">The value for the key.</span></span> <span data-ttu-id="fd628-272">キーがディクショナリに既に存在する場合はキーの既存の値、キーがディクショナリに存在していなかった場合は新しい値になります。</span><span class="sxs-lookup"><span data-stu-id="fd628-272">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="fd628-273">ディクショナリに対する変更および書き込み操作の場合、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> はきめ細かなロックを使用してスレッドセーフを確保します。</span><span class="sxs-lookup"><span data-stu-id="fd628-273">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="fd628-274">(ディクショナリに対する読み取り操作は、ロックなしの方法で実行されます)。ただし、ロックの下で不明なコードを実行した場合に発生する可能性のある問題を回避するために、`valueFactory` デリゲートはロックの外部で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-274">(Read operations on the dictionary are performed in a lock-free manner.) However, the `valueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="fd628-275">したがって、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> クラスの他のすべての操作に関しては、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> はアトミックではありません。</span><span class="sxs-lookup"><span data-stu-id="fd628-275">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  

 <span data-ttu-id="fd628-276">キー/値は、`valueFactory` が値を生成している間に別のスレッドによって挿入される可能性があるため、`valueFactory` 実行されたときに、生成された値がディクショナリに挿入されて返されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-276">Since a key/value can be inserted by another thread while `valueFactory` is generating a value, you cannot trust that just because `valueFactory` executed, its produced value will be inserted into the dictionary and returned.</span></span> <span data-ttu-id="fd628-277">異なるスレッドで同時に <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> を呼び出すと、`valueFactory` が複数回呼び出される可能性がありますが、ディクショナリに追加されるのは1つのキーと値のペアだけです。</span><span class="sxs-lookup"><span data-stu-id="fd628-277">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> simultaneously on different threads, `valueFactory` may be called multiple times, but only one key/value pair will be added to the dictionary.</span></span> 
 
 <span data-ttu-id="fd628-278">戻り値は、ディクショナリ内のキーの存在と、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> が呼び出された後、`valueFactory` が値を生成する前に別のスレッドによってキー/値が挿入されるかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="fd628-278">The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is called but before `valueFactory` generates a value:</span></span>

 | <span data-ttu-id="fd628-279">シナリオ</span><span class="sxs-lookup"><span data-stu-id="fd628-279">Scenario</span></span> | <span data-ttu-id="fd628-280">戻り値</span><span class="sxs-lookup"><span data-stu-id="fd628-280">Return value</span></span> |
 | -------- | ------------ |
 | <span data-ttu-id="fd628-281">キーは既にディクショナリに存在します。</span><span class="sxs-lookup"><span data-stu-id="fd628-281">The key is already in the dictionary.</span></span> | <span data-ttu-id="fd628-282">既存の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-282">The existing value is returned.</span></span> |
 | <span data-ttu-id="fd628-283">キーがディクショナリにありません。</span><span class="sxs-lookup"><span data-stu-id="fd628-283">The key is not in the dictionary.</span></span> <span data-ttu-id="fd628-284">`valueFactory` によって値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-284">`valueFactory` generates a value.</span></span> <span data-ttu-id="fd628-285">キーのノートで、キーが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="fd628-285">On rechecking for the key, no key is found.</span></span> | <span data-ttu-id="fd628-286">キー/値がディクショナリに挿入され、値が返されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-286">The key/value is inserted into the dictionary, and the value is returned.</span></span> |
 | <span data-ttu-id="fd628-287">キーがディクショナリにありません。</span><span class="sxs-lookup"><span data-stu-id="fd628-287">The key is not in the dictionary.</span></span> <span data-ttu-id="fd628-288">`valueFactory` によって値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-288">`valueFactory` generates a value.</span></span> <span data-ttu-id="fd628-289">`valueFactory` が値を生成している間に、別のスレッドによってキーの値が挿入されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-289">While `valueFactory` is generating the value, a different thread inserts a value for the key.</span></span> <span data-ttu-id="fd628-290">`valueFactory` が実行され、キーのノート時に、もう一方のスレッドによって挿入されたキーが見つかります。</span><span class="sxs-lookup"><span data-stu-id="fd628-290">After `valueFactory` executes and upon rechecking for the key, the key inserted by the other thread is found.</span></span> | <span data-ttu-id="fd628-291">もう一方のスレッドによって挿入された値が返されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-291">The value inserted by the other thread is returned.</span></span> |
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-292"><paramref name="key" /> または <paramref name="valueFactory" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-292"><paramref name="key" /> or <paramref name="valueFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-293">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-293">The dictionary contains too many elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-294">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-294">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-295">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-295">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, value As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * 'Value -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-296">追加する要素のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-296">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="fd628-297">キーがまだ存在しない場合に追加する値。</span><span class="sxs-lookup"><span data-stu-id="fd628-297">The value to be added, if the key does not already exist.</span></span></param>
        <summary><span data-ttu-id="fd628-298">キーがまだ存在しない場合に、<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> にキーと値のペアを追加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-298">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span></span> <span data-ttu-id="fd628-299">新しい値、またはキーが存在する場合は既存の値を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-299">Returns the new value, or the existing value if the key exists.</span></span></summary>
        <returns><span data-ttu-id="fd628-300">キーの値。</span><span class="sxs-lookup"><span data-stu-id="fd628-300">The value for the key.</span></span> <span data-ttu-id="fd628-301">キーがディクショナリに既に存在する場合はキーの既存の値、キーがディクショナリに存在していなかった場合は新しい値になります。</span><span class="sxs-lookup"><span data-stu-id="fd628-301">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-302"><paramref name="key" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-302"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-303">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-303">The dictionary contains too many elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-304">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-304">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-305">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-305">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; valueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd(Of TArg) (key As TKey, valueFactory As Func(Of TKey, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * Func&lt;'Key, 'Arg, 'Value&gt; * 'Arg -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, valueFactory, factoryArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="factoryArgument" Type="TArg" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="TArg"><span data-ttu-id="fd628-306"><paramref name="valueFactory" />に渡す引数の型。</span><span class="sxs-lookup"><span data-stu-id="fd628-306">The type of an argument to pass into <paramref name="valueFactory" />.</span></span></typeparam>
        <param name="key"><span data-ttu-id="fd628-307">追加する要素のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-307">The key of the element to add.</span></span></param>
        <param name="valueFactory"><span data-ttu-id="fd628-308">キーの値を生成するために使用される関数。</span><span class="sxs-lookup"><span data-stu-id="fd628-308">The function used to generate a value for the key.</span></span></param>
        <param name="factoryArgument"><span data-ttu-id="fd628-309"><paramref name="valueFactory" /> に渡す引数値。</span><span class="sxs-lookup"><span data-stu-id="fd628-309">An argument value to pass into <paramref name="valueFactory" />.</span></span></param>
        <summary><span data-ttu-id="fd628-310">キーがまだ存在しない場合は、指定された関数と引数を使用して <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> にキーと値のペアを追加し、キーが存在する場合は既存の値を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-310">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function and an argument if the key does not already exist, or returns the existing value if the key exists.</span></span></summary>
        <returns><span data-ttu-id="fd628-311">キーの値。</span><span class="sxs-lookup"><span data-stu-id="fd628-311">The value for the key.</span></span> <span data-ttu-id="fd628-312">キーがディクショナリに既に存在する場合はキーの既存の値、キーがディクショナリに存在していなかった場合は新しい値になります。</span><span class="sxs-lookup"><span data-stu-id="fd628-312">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="fd628-313">ディクショナリに対する変更および書き込み操作の場合、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> はきめ細かなロックを使用してスレッドセーフを確保します。</span><span class="sxs-lookup"><span data-stu-id="fd628-313">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="fd628-314">(ディクショナリに対する読み取り操作は、ロックなしの方法で実行されます)。ただし、ロックの下で不明なコードを実行した場合に発生する可能性のある問題を回避するために、`valueFactory` デリゲートはロックの外部で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-314">(Read operations on the dictionary are performed in a lock-free manner.) However, the `valueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="fd628-315">したがって、<xref:System.Collections.Concurrent.ConcurrentDictionary%602> クラスの他のすべての操作に関しては、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> はアトミックではありません。</span><span class="sxs-lookup"><span data-stu-id="fd628-315">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  

 <span data-ttu-id="fd628-316">キー/値は、`valueFactory` が値を生成している間に別のスレッドによって挿入される可能性があるため、`valueFactory` 実行されたときに、生成された値がディクショナリに挿入されて返されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-316">Since a key/value can be inserted by another thread while `valueFactory` is generating a value, you cannot trust that just because `valueFactory` executed, its produced value will be inserted into the dictionary and returned.</span></span> <span data-ttu-id="fd628-317">異なるスレッドで同時に <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> を呼び出すと、`valueFactory` が複数回呼び出される可能性がありますが、ディクショナリに追加されるのは1つのキーと値のペアだけです。</span><span class="sxs-lookup"><span data-stu-id="fd628-317">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> simultaneously on different threads, `valueFactory` may be called multiple times, but only one key/value pair will be added to the dictionary.</span></span> 
 
 <span data-ttu-id="fd628-318">戻り値は、ディクショナリ内のキーの存在と、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> が呼び出された後、`valueFactory` が値を生成する前に別のスレッドによってキー/値が挿入されるかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="fd628-318">The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is called but before `valueFactory` generates a value:</span></span>

 | <span data-ttu-id="fd628-319">シナリオ</span><span class="sxs-lookup"><span data-stu-id="fd628-319">Scenario</span></span> | <span data-ttu-id="fd628-320">戻り値</span><span class="sxs-lookup"><span data-stu-id="fd628-320">Return value</span></span> |
 | -------- | ------------ |
 | <span data-ttu-id="fd628-321">キーは既にディクショナリに存在します。</span><span class="sxs-lookup"><span data-stu-id="fd628-321">The key is already in the dictionary.</span></span> | <span data-ttu-id="fd628-322">既存の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-322">The existing value is returned.</span></span> |
 | <span data-ttu-id="fd628-323">キーがディクショナリにありません。</span><span class="sxs-lookup"><span data-stu-id="fd628-323">The key is not in the dictionary.</span></span> <span data-ttu-id="fd628-324">`valueFactory` によって値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-324">`valueFactory` generates a value.</span></span> <span data-ttu-id="fd628-325">キーのノートで、キーが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="fd628-325">On rechecking for the key, no key is found.</span></span> | <span data-ttu-id="fd628-326">キー/値がディクショナリに挿入され、値が返されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-326">The key/value is inserted into the dictionary, and the value is returned.</span></span> |
 | <span data-ttu-id="fd628-327">キーがディクショナリにありません。</span><span class="sxs-lookup"><span data-stu-id="fd628-327">The key is not in the dictionary.</span></span> <span data-ttu-id="fd628-328">`valueFactory` によって値が生成されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-328">`valueFactory` generates a value.</span></span> <span data-ttu-id="fd628-329">`valueFactory` が値を生成している間に、別のスレッドによってキーの値が挿入されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-329">While `valueFactory` is generating the value, a different thread inserts a value for the key.</span></span> <span data-ttu-id="fd628-330">`valueFactory` が実行され、キーのノート時に、もう一方のスレッドによって挿入されたキーが見つかります。</span><span class="sxs-lookup"><span data-stu-id="fd628-330">After `valueFactory` executes and upon rechecking for the key, the key inserted by the other thread is found.</span></span> | <span data-ttu-id="fd628-331">もう一方のスレッドによって挿入された値が返されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-331">The value inserted by the other thread is returned.</span></span> |
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-332"><paramref name="key" /> が <see langword="null" /> 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="fd628-332"><paramref name="key" /> is a <see langword="null" /> reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-333">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-333">The dictionary contains too many elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-334"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> が空かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-334">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty.</span></span></summary>
        <value><span data-ttu-id="fd628-335"><see langword="true" /> が空の場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-335"><see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-336">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-336">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-337">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-337">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-338">取得または設定する値のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-338">The key of the value to get or set.</span></span></param>
        <summary><span data-ttu-id="fd628-339">指定されたキーに関連付けられている値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fd628-339">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="fd628-340">指定したインデックス位置にあるキーと値のペアの値。</span><span class="sxs-lookup"><span data-stu-id="fd628-340">The value of the key/value pair at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-341"><paramref name="key" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-341"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="fd628-342">プロパティが取得され、<paramref name="key" /> がコレクションに存在しません。</span><span class="sxs-lookup"><span data-stu-id="fd628-342">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-343">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-343">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-344">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-344">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TKey&gt; ^ Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;'Key&gt;" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-345"><see cref="T:System.Collections.Generic.Dictionary`2" /> 内のキーを格納しているコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-345">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="fd628-346"><see cref="T:System.Collections.Generic.Dictionary`2" /> のキーのコレクション。</span><span class="sxs-lookup"><span data-stu-id="fd628-346">A collection of keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-347">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-347">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-348">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-348">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; unit" Usage="concurrentDictionary.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add keyValuePair" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="fd628-349">ディクショナリに追加する <see cref="T:System.Collections.Generic.KeyValuePair`2" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-349">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add to the dictionary.</span></span></param>
        <summary><span data-ttu-id="fd628-350">項目をコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-350">Adds an item to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-351">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-351">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-352">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-352">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; bool" Usage="concurrentDictionary.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains keyValuePair" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="fd628-353"><see cref="T:System.Collections.Generic.ICollection`1" /> 内で検索されるキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-353">The key to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="fd628-354">指定したキーを持つ要素が <see cref="T:System.Collections.Generic.ICollection`1" /> に含まれているかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-354">Gets whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="fd628-355">指定したキーを持つ要素が <see langword="true" /> に格納されている場合は <see cref="T:System.Collections.Generic.ICollection`1" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-355"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-356">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-356">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-357">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-357">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[] * int -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[] * int -&gt; unit" Usage="concurrentDictionary.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fd628-358"><see cref="T:System.Collections.ICollection" /> から要素がコピーされる 1 次元配列。</span><span class="sxs-lookup"><span data-stu-id="fd628-358">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="fd628-359">配列には、0 から始まるインデックスが設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fd628-359">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="fd628-360">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</span><span class="sxs-lookup"><span data-stu-id="fd628-360">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="fd628-361">指定した配列インデックスを開始位置として、配列に <see cref="T:System.Collections.ICollection" /> の要素をコピーします。</span><span class="sxs-lookup"><span data-stu-id="fd628-361">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at the specified array index.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-362">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-362">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-363">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-363">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey,TValue&gt;&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly : bool" Usage="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-364"><see cref="T:System.Collections.ICollection" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-364">Gets a value that indicates whether the <see cref="T:System.Collections.ICollection" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="fd628-365"><see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-365"><see langword="true" /> if the <see cref="T:System.Collections.ICollection" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-366">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-366">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-367">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-367">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; bool" Usage="concurrentDictionary.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove keyValuePair" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="fd628-368">削除する <see cref="T:System.Collections.Generic.KeyValuePair`2" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-368">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to remove.</span></span></param>
        <summary><span data-ttu-id="fd628-369">コレクションから、指定したキーと値のペアを削除します。</span><span class="sxs-lookup"><span data-stu-id="fd628-369">Removes the specified key/value pair from the collection.</span></span></summary>
        <returns><span data-ttu-id="fd628-370">要素が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-370"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fd628-371">このメソッドは、<paramref name="key" /> が元の <see cref="T:System.Collections.Generic.ICollection`1" /> に見つからない場合にも false を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-371">This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-372">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-372">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-373">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-373">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add">
      <MemberSignature Language="C#" Value="void IDictionary&lt;TKey,TValue&gt;.Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As TKey, value As TValue) Implements IDictionary(Of TKey, TValue).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(TKey key, TValue value) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add : 'Key * 'Value -&gt; unit&#xA;override this.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add : 'Key * 'Value -&gt; unit" Usage="concurrentDictionary.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-374">追加する要素のキーとして使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fd628-374">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="fd628-375">追加する要素の値として使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fd628-375">The object to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="fd628-376">指定したキーと値を <see cref="T:System.Collections.Generic.IDictionary`2" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-376">Adds the specified key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-377"><paramref name="key" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-377"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd628-378">同じキーを持つ要素が、<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> に既に存在します。</span><span class="sxs-lookup"><span data-stu-id="fd628-378">An element with the same key already exists in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-379">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-379">The dictionary contains too many elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-380">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-380">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-381">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-381">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove">
      <MemberSignature Language="C#" Value="bool IDictionary&lt;TKey,TValue&gt;.Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (key As TKey) As Boolean Implements IDictionary(Of TKey, TValue).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(TKey key) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove : 'Key -&gt; bool&#xA;override this.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove : 'Key -&gt; bool" Usage="concurrentDictionary.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-382">削除する要素のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-382">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="fd628-383">指定したキーを持つ要素を <see cref="T:System.Collections.Generic.IDictionary`2" /> から削除します。</span><span class="sxs-lookup"><span data-stu-id="fd628-383">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="fd628-384">要素が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-384"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fd628-385">このメソッドは、元の <see langword="false" /> で <paramref name="key" /> が見つからなかった場合にも <see cref="T:System.Collections.Generic.IDictionary`2" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-385">This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-386"><paramref name="key" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-386"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-387">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-387">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-388">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-388">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys : seq&lt;'Key&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-389"><see cref="T:System.Collections.Generic.Dictionary`2" /> 内のキーを格納しているコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-389">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="fd628-390"><see cref="T:System.Collections.Generic.Dictionary`2" /> のキーを格納しているコレクション。</span><span class="sxs-lookup"><span data-stu-id="fd628-390">A collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values : seq&lt;'Value&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-391"><see cref="T:System.Collections.Generic.Dictionary`2" /> 内の値を含むコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-391">Gets a collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="fd628-392"><see cref="T:System.Collections.Generic.Dictionary`2" /> 内の値を格納しているコレクション。</span><span class="sxs-lookup"><span data-stu-id="fd628-392">A collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="concurrentDictionary.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fd628-393"><see cref="T:System.Collections.ICollection" /> から要素がコピーされる先の 1 次元配列。</span><span class="sxs-lookup"><span data-stu-id="fd628-393">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="fd628-394">配列には、0 から始まるインデックスが設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fd628-394">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="fd628-395">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</span><span class="sxs-lookup"><span data-stu-id="fd628-395">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="fd628-396">指定した配列インデックスを開始位置として、配列に <see cref="T:System.Collections.ICollection" /> の要素をコピーします。</span><span class="sxs-lookup"><span data-stu-id="fd628-396">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at the specified array index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-397"><paramref name="array" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-397"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fd628-398"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="fd628-398"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd628-399"><paramref name="index" /> が <paramref name="array" /> の長さ以上です。</span><span class="sxs-lookup"><span data-stu-id="fd628-399"><paramref name="index" /> is equal to or greater than the length of the <paramref name="array" />.</span></span>  
  
<span data-ttu-id="fd628-400">- または -</span><span class="sxs-lookup"><span data-stu-id="fd628-400">-or-</span></span> 
<span data-ttu-id="fd628-401">コピー元の <see cref="T:System.Collections.ICollection" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</span><span class="sxs-lookup"><span data-stu-id="fd628-401">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-402">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-402">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-403">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-403">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-404"><see cref="T:System.Collections.ICollection" /> へのアクセスが SyncRoot で同期されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-404">Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span></span></summary>
        <value><span data-ttu-id="fd628-405"><see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-405"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fd628-406"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> の場合、このプロパティは常に <see langword="false" />を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-406">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-407">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-407">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-408">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-408">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-409"><see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-409">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="fd628-410">このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fd628-410">This property is not supported.</span></span></summary>
        <value><span data-ttu-id="fd628-411">常に null を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-411">Always returns null.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fd628-412">このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fd628-412">This property is not supported.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-413">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-413">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-414">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-414">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IDictionary.Add : obj * obj -&gt; unit&#xA;override this.System.Collections.IDictionary.Add : obj * obj -&gt; unit" Usage="concurrentDictionary.System.Collections.IDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-415">キーとして使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fd628-415">The object to use as the key.</span></span></param>
        <param name="value"><span data-ttu-id="fd628-416">値として使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fd628-416">The object to use as the value.</span></span></param>
        <summary><span data-ttu-id="fd628-417">指定したキーと値をディクショナリに追加します。</span><span class="sxs-lookup"><span data-stu-id="fd628-417">Adds the specified key and value to the dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-418"><paramref name="key" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-418"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd628-419"><paramref name="key" /> が、<see cref="T:System.Collections.Generic.Dictionary`2" /> のキーの型に代入できない型です。</span><span class="sxs-lookup"><span data-stu-id="fd628-419"><paramref name="key" /> is of a type that is not assignable to the key type  of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span>  
  
<span data-ttu-id="fd628-420">- または -</span><span class="sxs-lookup"><span data-stu-id="fd628-420">-or-</span></span> 
 <span data-ttu-id="fd628-421"><paramref name="value" /> が、<see cref="T:System.Collections.Generic.Dictionary`2" /> 内の値の型に代入できない型です。</span><span class="sxs-lookup"><span data-stu-id="fd628-421"><paramref name="value" /> is of a type that is not assignable to the type of values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span>  
  
<span data-ttu-id="fd628-422">- または -</span><span class="sxs-lookup"><span data-stu-id="fd628-422">-or-</span></span> 
<span data-ttu-id="fd628-423">同じキーを持つ値が、<see cref="T:System.Collections.Generic.Dictionary`2" /> に既に存在します。</span><span class="sxs-lookup"><span data-stu-id="fd628-423">A value with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-424">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-424">The dictionary contains too many elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-425">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-425">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-426">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-426">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IDictionary.Contains : obj -&gt; bool&#xA;override this.System.Collections.IDictionary.Contains : obj -&gt; bool" Usage="concurrentDictionary.System.Collections.IDictionary.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-427"><see cref="T:System.Collections.Generic.IDictionary`2" /> 内で検索されるキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-427">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="fd628-428">指定したキーを持つ要素が <see cref="T:System.Collections.Generic.IDictionary`2" /> に含まれているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-428">Gets a value that indicates the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="fd628-429">指定したキーを持つ要素が <see langword="true" /> に格納されている場合は <see cref="T:System.Collections.Generic.IDictionary`2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-429"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-430"><paramref name="key" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-430"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-431">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-431">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-432">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-432">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IDictionary.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.System.Collections.IDictionary.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="concurrentDictionary.System.Collections.IDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd628-433"><see cref="T:System.Collections.IDictionaryEnumerator" /> に対する <see cref="T:System.Collections.Generic.IDictionary`2" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="fd628-433">Provides a <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="fd628-434"><see cref="T:System.Collections.IDictionaryEnumerator" /> の <see cref="T:System.Collections.Generic.IDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-434">A <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-435">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-435">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-436">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-436">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.IsFixedSize : bool" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-437"><see cref="T:System.Collections.Generic.IDictionary`2" /> が固定サイズかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-437">Gets a value that indicates whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="fd628-438"><see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.Generic.IDictionary`2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-438"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fd628-439"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> の場合、このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-439">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-440">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-440">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-441">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-441">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.IsReadOnly : bool" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-442"><see cref="T:System.Collections.Generic.IDictionary`2" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-442">Gets a value that indicates whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="fd628-443"><see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.Generic.IDictionary`2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-443"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fd628-444"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> の場合、このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-444">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-445">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-445">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-446">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-446">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.Item(obj) : obj with get, set" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-447">取得または設定する値のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-447">The key of the value to get or set.</span></span></param>
        <summary><span data-ttu-id="fd628-448">指定されたキーに関連付けられている値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fd628-448">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="fd628-449">指定したキーに関連付けられている値。<paramref name="key" /> がディクショナリに存在しない場合、または <paramref name="key" /> が <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> のキーの型に代入できない型である場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-449">The value associated with the specified key, or  <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-450"><paramref name="key" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-450"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd628-451">値を代入しようとしていますが、<paramref name="key" /> は、<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> のキーの型または値型に代入できない型です。</span><span class="sxs-lookup"><span data-stu-id="fd628-451">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type or the value type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-452">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-452">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-453">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-453">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.Keys : System.Collections.ICollection" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-454"><see cref="T:System.Collections.ICollection" /> のキーが格納されている <see cref="T:System.Collections.Generic.IDictionary`2" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-454">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys of the  <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="fd628-455"><see cref="T:System.Collections.Generic.IDictionary`2" /> のキーを格納しているインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="fd628-455">An interface that contains the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-456">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-456">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-457">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-457">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IDictionary.Remove : obj -&gt; unit&#xA;override this.System.Collections.IDictionary.Remove : obj -&gt; unit" Usage="concurrentDictionary.System.Collections.IDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-458">削除する要素のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-458">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="fd628-459">指定したキーを持つ要素を <see cref="T:System.Collections.IDictionary" /> から削除します。</span><span class="sxs-lookup"><span data-stu-id="fd628-459">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-460"><paramref name="key" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-460"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-461">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-461">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-462">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-462">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IDictionary.Values : System.Collections.ICollection" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-463"><see cref="T:System.Collections.ICollection" /> 内の値を格納している <see cref="T:System.Collections.IDictionary" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-463">Gets an <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="fd628-464"><see cref="T:System.Collections.IDictionary" /> 内の値を含むインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="fd628-464">An interface that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-465">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-465">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-466">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-466">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="concurrentDictionary.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd628-467"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> を反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-467">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="fd628-468"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> の列挙子。</span><span class="sxs-lookup"><span data-stu-id="fd628-468">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd628-469">ディクショナリから返された列挙子は、ディクショナリの読み取りと書き込みで同時に使用することは安全ですが、ディクショナリの時点でのスナップショットは表しません。</span><span class="sxs-lookup"><span data-stu-id="fd628-469">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="fd628-470">列挙子を通じて公開される内容には、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> が呼び出された後にディクショナリに加えられた変更が含まれる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fd628-470">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-471">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-471">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-472">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-472">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As KeyValuePair(Of TKey, TValue)()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[]" Usage="concurrentDictionary.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd628-473"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> に格納されているキーと値のペアを新しい配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fd628-473">Copies the key and value pairs stored in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="fd628-474"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> からコピーされたキーと値のペアのスナップショットを格納する新しい配列。</span><span class="sxs-lookup"><span data-stu-id="fd628-474">A new array containing a snapshot of key and value pairs copied from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-475">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-475">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-476">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-476">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'Key * 'Value -&gt; bool" Usage="concurrentDictionary.TryAdd (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-477">追加する要素のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-477">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="fd628-478">追加する要素の値。</span><span class="sxs-lookup"><span data-stu-id="fd628-478">The value of the element to add.</span></span> <span data-ttu-id="fd628-479">参照型の場合は <see langword="null" /> の値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="fd628-479">The value can be  <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="fd628-480"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> に対して、指定したキーと値の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="fd628-480">Attempts to add the specified key and value to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="fd628-481">キーと値のペアが <see langword="true" /> に正常に追加された場合は <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。キーが既に存在する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-481"><see langword="true" /> if the key/value pair was added to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> successfully; <see langword="false" /> if the key already exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd628-482">このメソッドは、キーが既に存在する場合に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="fd628-482">This method returns `false` if the key already exists.</span></span> <span data-ttu-id="fd628-483">キーが既に存在する場合は、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> または <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> メソッドを使用して値を更新します。</span><span class="sxs-lookup"><span data-stu-id="fd628-483">Use the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> or <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method to update the value in case a key already exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd628-484">次の例は、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fd628-484">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-485"><paramref name="key" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-485"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="fd628-486">ディレクトリに含まれている要素が多すぎます。</span><span class="sxs-lookup"><span data-stu-id="fd628-486">The dictionary contains too many elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-487">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-487">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-488">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-488">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key * 'Value -&gt; bool&#xA;override this.TryGetValue : 'Key * 'Value -&gt; bool" Usage="concurrentDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-489">取得する値のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-489">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="fd628-490">このメソッドから戻るときに、指定したキーを持つオブジェクトが <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> から格納されます。操作が失敗した場合は、型の既定値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-490">When this method returns, contains the object from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> that has the specified key, or the default value of the type if the operation failed.</span></span></param>
        <summary><span data-ttu-id="fd628-491"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> から、指定したキーに関連付けられている値の取得を試みます。</span><span class="sxs-lookup"><span data-stu-id="fd628-491">Attempts to get the value associated with the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="fd628-492">キーが <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> に見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-492"><see langword="true" /> if the key was found in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-493"><paramref name="key" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-493"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-494">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-494">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-495">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-495">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryRemove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (item As KeyValuePair(Of TKey, TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRemove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; item);" />
      <MemberSignature Language="F#" Value="member this.TryRemove : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt; -&gt; bool" Usage="concurrentDictionary.TryRemove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryRemove(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRemove(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="member this.TryRemove : 'Key * 'Value -&gt; bool" Usage="concurrentDictionary.TryRemove (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-496">削除して返す要素のキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-496">The key of the element to remove and return.</span></span></param>
        <param name="value"><span data-ttu-id="fd628-497">このメソッドから戻るときに、<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> から削除されたオブジェクトが格納されます。<paramref name="key" /> が存在しない場合は、<see langword="TValue" /> 型の既定値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="fd628-497">When this method returns, contains the object removed from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, or the default value of  the <see langword="TValue" /> type if <paramref name="key" /> does not exist.</span></span></param>
        <summary><span data-ttu-id="fd628-498"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> から、指定したキーを持つ値を削除して返そうと試みます。</span><span class="sxs-lookup"><span data-stu-id="fd628-498">Attempts to remove and return the value that has the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="fd628-499">オブジェクトが正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-499"><see langword="true" /> if the object was removed successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd628-500">次の例は、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fd628-500">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-501"><paramref name="key" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="fd628-501"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-502">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-502">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-503">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-503">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryUpdate">
      <MemberSignature Language="C#" Value="public bool TryUpdate (TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUpdate(!TKey key, !TValue newValue, !TValue comparisonValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdate (key As TKey, newValue As TValue, comparisonValue As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUpdate(TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="F#" Value="member this.TryUpdate : 'Key * 'Value * 'Value -&gt; bool" Usage="concurrentDictionary.TryUpdate (key, newValue, comparisonValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="newValue" Type="TValue" />
        <Parameter Name="comparisonValue" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fd628-504">値を <paramref name="comparisonValue" /> と比較し、場合によっては置き換えるキー。</span><span class="sxs-lookup"><span data-stu-id="fd628-504">The key of the value that is compared with <paramref name="comparisonValue" /> and possibly replaced.</span></span></param>
        <param name="newValue"><span data-ttu-id="fd628-505">比較した結果が等しい場合に、指定した <paramref name="key" /> を持つ要素の値を置き換える値。</span><span class="sxs-lookup"><span data-stu-id="fd628-505">The value that replaces the value of the element that has the specified <paramref name="key" /> if the comparison results in equality.</span></span></param>
        <param name="comparisonValue"><span data-ttu-id="fd628-506">指定した <paramref name="key" /> を持つ要素の値と比較する値。</span><span class="sxs-lookup"><span data-stu-id="fd628-506">The value that is compared with the value of the element that has the specified <paramref name="key" />.</span></span></param>
        <summary><span data-ttu-id="fd628-507"><paramref name="key" /> での既存の値が <paramref name="comparisonValue" /> と等しい場合は、<paramref name="key" /> に関連付けられている値を <paramref name="newValue" /> に更新します。</span><span class="sxs-lookup"><span data-stu-id="fd628-507">Updates the value associated with <paramref name="key" /> to <paramref name="newValue" /> if the existing value with <paramref name="key" /> is equal to <paramref name="comparisonValue" />.</span></span></summary>
        <returns><span data-ttu-id="fd628-508"><see langword="true" /> を持つ値が <paramref name="key" /> に等しかったため、<paramref name="comparisonValue" /> に置き換えられた場合は <paramref name="newValue" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd628-508"><see langword="true" /> if the value with <paramref name="key" /> was equal to <paramref name="comparisonValue" /> and was replaced with <paramref name="newValue" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd628-509">次の例は、<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fd628-509">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd628-510"><paramref name="key" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="fd628-510"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-511">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-511">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-512">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-512">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TValue&gt; ^ Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'Value&gt;" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd628-513"><see cref="T:System.Collections.Generic.Dictionary`2" /> 内の値を含むコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fd628-513">Gets a collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="fd628-514"><see cref="T:System.Collections.Generic.Dictionary`2" /> 内の値を格納しているコレクション。</span><span class="sxs-lookup"><span data-stu-id="fd628-514">A collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="fd628-515">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="fd628-515">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-and-remove-items.md"><span data-ttu-id="fd628-516">方法: ConcurrentDictionary の項目を追加および削除する</span><span class="sxs-lookup"><span data-stu-id="fd628-516">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
