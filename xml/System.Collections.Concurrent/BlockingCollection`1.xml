<Type Name="BlockingCollection&lt;T&gt;" FullName="System.Collections.Concurrent.BlockingCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9dd1d8c35ed406a33a17718c51d047d808669fc" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73375976" /></Metadata><TypeSignature Language="C#" Value="public class BlockingCollection&lt;T&gt; : IDisposable, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockingCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.BlockingCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class BlockingCollection(Of T)&#xA;Implements ICollection, IDisposable, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class BlockingCollection : IDisposable, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type BlockingCollection&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IDisposable&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}, Type = {m_collection}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemThreadingCollections_BlockingCollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="1d63b-101">コレクション内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="1d63b-101">The type of elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="1d63b-102"><see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> を実装するスレッド セーフなコレクションに、ブロッキングと範囲指定の機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-102">Provides blocking and bounding capabilities for thread-safe collections that implement <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-103"><xref:System.Collections.Concurrent.BlockingCollection%601> は、次の機能を提供するスレッドセーフなコレクションクラスです。</span><span class="sxs-lookup"><span data-stu-id="1d63b-103"><xref:System.Collections.Concurrent.BlockingCollection%601> is a thread-safe collection class that provides the following:</span></span>  
  
-   <span data-ttu-id="1d63b-104">プロデューサー/コンシューマーパターンの実装。<xref:System.Collections.Concurrent.BlockingCollection%601> は、<xref:System.Collections.Concurrent.IProducerConsumerCollection%601> インターフェイスのラッパーです。</span><span class="sxs-lookup"><span data-stu-id="1d63b-104">An implementation of the producer/consumer pattern; <xref:System.Collections.Concurrent.BlockingCollection%601> is a wrapper for the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span>  
  
-   <span data-ttu-id="1d63b-105"><xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> および <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> メソッドを使用した、複数のスレッドからの項目の同時追加と削除。</span><span class="sxs-lookup"><span data-stu-id="1d63b-105">Concurrent addition and removal of items from multiple threads with the <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> and  <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> methods.</span></span>  
  
-   <span data-ttu-id="1d63b-106">コレクションが full または empty の場合に <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> および <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> の操作をブロックする、制限されたコレクション。</span><span class="sxs-lookup"><span data-stu-id="1d63b-106">A bounded collection that blocks <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> and <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> operations when the collection is full or empty.</span></span>  
  
-   <span data-ttu-id="1d63b-107"><xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> または <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> メソッドで <xref:System.Threading.CancellationToken> オブジェクトを使用した <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> または <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> 操作の取り消し。</span><span class="sxs-lookup"><span data-stu-id="1d63b-107">Cancellation of <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> or <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> operations by using a <xref:System.Threading.CancellationToken> object in the  <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> or <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1d63b-108">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1d63b-109">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-109">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1d63b-110">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1d63b-111">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1d63b-112">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1d63b-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span> <span data-ttu-id="1d63b-113">また、<xref:System.Collections.Concurrent.BlockingCollection%601.Dispose> メソッドはスレッドセーフではないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="1d63b-113">Also, note that the <xref:System.Collections.Concurrent.BlockingCollection%601.Dispose> method is not thread-safe.</span></span> <span data-ttu-id="1d63b-114"><xref:System.Collections.Concurrent.BlockingCollection%601> の他のすべてのパブリックメンバーとプロテクトメンバーは、スレッドセーフであり、複数のスレッドから同時に使用することができます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-114">All other public and protected members of <xref:System.Collections.Concurrent.BlockingCollection%601> are thread-safe and may be used concurrently from multiple threads.</span></span>  
  
 <span data-ttu-id="1d63b-115"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> は、スレッドセーフなデータの追加と削除を可能にするコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-115"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> represents a collection that allows for thread-safe adding and removal of data.</span></span> <span data-ttu-id="1d63b-116"><xref:System.Collections.Concurrent.BlockingCollection%601> は、<xref:System.Collections.Concurrent.IProducerConsumerCollection%601> インスタンスのラッパーとして使用され、データを削除できるようになるまでコレクションからの削除試行をブロックすることを許可します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-116"><xref:System.Collections.Concurrent.BlockingCollection%601> is used as a wrapper for an <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> instance, and allows removal attempts from the collection to block until data is available to be removed.</span></span> <span data-ttu-id="1d63b-117">同様に、<xref:System.Collections.Concurrent.BlockingCollection%601> を作成して、<xref:System.Collections.Concurrent.IProducerConsumerCollection%601>で許可されるデータ要素の数に上限を適用することもできます。コレクションへの追加の試行は、追加された項目を格納するための領域が使用可能になるまでブロックされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-117">Similarly, you can create a <xref:System.Collections.Concurrent.BlockingCollection%601> to enforce an upper bound on the number of data elements allowed in the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>; addition attempts to the collection may then block until space is available to store the added items.</span></span> <span data-ttu-id="1d63b-118">このように、<xref:System.Collections.Concurrent.BlockingCollection%601> は従来のブロッキングキューデータ構造に似ていますが、基になるデータストレージメカニズムが <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> として抽象化される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-118">In this manner, <xref:System.Collections.Concurrent.BlockingCollection%601> is similar to a traditional blocking queue data structure, except that the underlying data storage mechanism is abstracted away as an <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>.</span></span>  
  
 <span data-ttu-id="1d63b-119"><xref:System.Collections.Concurrent.BlockingCollection%601> はバインドとブロックに対応しています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-119"><xref:System.Collections.Concurrent.BlockingCollection%601> supports bounding and blocking.</span></span> <span data-ttu-id="1d63b-120">境界は、コレクションの最大容量を設定できることを意味します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-120">Bounding means that you can set the maximum capacity of the collection.</span></span> <span data-ttu-id="1d63b-121">境界は、特定のシナリオで重要です。これにより、メモリ内のコレクションの最大サイズを制御できるようになり、生成しているスレッドが、消費スレッドよりも先に進んでしまうのを防ぐことができます。複数のスレッドまたはタスクでコレクションに項目を同時に追加できます。コレクションが指定された最大容量に達すると、生成したスレッドは項目が削除されるまでブロックされます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-121">Bounding is important in certain scenarios because it enables you to control the maximum size of the collection in memory, and it prevents the producing threads from moving too far ahead of the consuming threads.Multiple threads or tasks can add items to the collection concurrently, and if the collection reaches its specified maximum capacity, the producing threads will block until an item is removed.</span></span> <span data-ttu-id="1d63b-122">複数の cosumer が同時に項目を削除できます。コレクションが空になった場合、consumer スレッドは、producer が項目を追加するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="1d63b-122">Multiple consumers can remove items concurrently, and if the collection becomes empty, the consuming threads will block until a producer adds an item.</span></span> <span data-ttu-id="1d63b-123">生成スレッドは、<xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A> メソッドを呼び出して、それ以上項目が追加されないことを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-123">A producing thread can call the <xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A> method to indicate that no more items will be added.</span></span> <span data-ttu-id="1d63b-124">consumer では、<xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> プロパティを監視して、コレクションが空になったときや、それ以上の項目は追加されないことになったときを把握できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-124">Consumers monitor the <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> property to know when the collection is empty and no more items will be added.</span></span>  
  
 <span data-ttu-id="1d63b-125"><xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> および <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> の操作は、通常、ループで実行されます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-125"><xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> and <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> operations are typically performed in a loop.</span></span> <span data-ttu-id="1d63b-126">ループを取り消すには、<xref:System.Threading.CancellationToken> オブジェクトを <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> または <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> メソッドに渡し、各反復処理でトークンの <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> プロパティの値を確認します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-126">You can cancel a loop by passing in a <xref:System.Threading.CancellationToken> object to the <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> or <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> method, and then checking the value of the token's <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property on each iteration.</span></span> <span data-ttu-id="1d63b-127">値が `true`場合は、リソースをクリーンアップしてループを終了することで、キャンセル要求に応答する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-127">If the value is `true`, it is up to you to respond the cancellation request by cleaning up any resources and exiting the loop.</span></span>  
  
 <span data-ttu-id="1d63b-128"><xref:System.Collections.Concurrent.BlockingCollection%601> オブジェクトを作成するときに、制限された容量だけでなく、使用するコレクションの種類を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-128">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify not only the bounded capacity but also the type of collection to use.</span></span> <span data-ttu-id="1d63b-129">たとえば、先入れ先出し法 (FIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentQueue%601> オブジェクトを指定し、後入れ先出し法 (LIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentStack%601> オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-129">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="1d63b-130"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> インターフェイスを実装する任意のコレクション クラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-130">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="1d63b-131"><xref:System.Collections.Concurrent.BlockingCollection%601> の既定のコレクション型は <xref:System.Collections.Concurrent.ConcurrentQueue%601> です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-131">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 <span data-ttu-id="1d63b-132">基になるコレクションを直接変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="1d63b-132">Do not modify the underlying collection directly.</span></span> <span data-ttu-id="1d63b-133">要素を追加または削除するには <xref:System.Collections.Concurrent.BlockingCollection%601> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-133">Use <xref:System.Collections.Concurrent.BlockingCollection%601> methods to add or remove elements.</span></span> <span data-ttu-id="1d63b-134">基になるコレクションを直接変更すると、<xref:System.Collections.Concurrent.BlockingCollection%601> オブジェクトが破損する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-134">The <xref:System.Collections.Concurrent.BlockingCollection%601> object can become corrupted if you change the underlying collection directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d63b-135">次の例は、ブロッキングコレクションから項目を同時に追加して取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-135">The following example shows how to add and take items concurrently from a blocking collection:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#1)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="1d63b-136">Dispose メソッドはスレッドセーフではありません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-136">The Dispose method is not thread-safe.</span></span> <span data-ttu-id="1d63b-137"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> の他のすべてのパブリックメンバーとプロテクトメンバーは、スレッドセーフであり、複数のスレッドから同時に使用することができます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-137">All other public and protected members of <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-138">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-138">Thread-Safe Collections</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-139">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-139">BlockingCollection Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/4c2492de-3876-4873-b5a1-000bb404d770"><span data-ttu-id="1d63b-140">方法: 境界ブロッキング機能をコレクションクラスに追加する</span><span class="sxs-lookup"><span data-stu-id="1d63b-140">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-141">上限を指定せずに、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-141">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class without an upper-bound.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d63b-142">上限を指定せずに、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-142">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class without an upper-bound.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-143">既定の基になるコレクションは <xref:System.Collections.Concurrent.ConcurrentQueue%601> オブジェクトで、先入れ先出し (FIFO) の動作を提供します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-143">The default underlying collection is a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object, which provides first in, first out (FIFO) behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-144">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-144">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-145">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-145">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection (System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IProducerConsumerCollection(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection(System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;'T&gt; -&gt; System.Collections.Concurrent.BlockingCollection&lt;'T&gt;" Usage="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="1d63b-146">基になるデータ ストアとして使用するコレクション。</span><span class="sxs-lookup"><span data-stu-id="1d63b-146">The collection to use as the underlying data store.</span></span></param>
        <summary><span data-ttu-id="1d63b-147">上限を指定せずに、指定した <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> を基になるデータ ストアとして使用して、<see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-147">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class without an upper-bound and using the provided <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> as its underlying data store.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-148"><paramref name="collection" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-148">The <paramref name="collection" /> argument is null.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-149">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-149">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-150">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-150">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection (int boundedCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 boundedCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (boundedCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection(int boundedCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; : int -&gt; System.Collections.Concurrent.BlockingCollection&lt;'T&gt;" Usage="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; boundedCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="boundedCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="boundedCapacity"><span data-ttu-id="1d63b-151">コレクションのサイズの制限。</span><span class="sxs-lookup"><span data-stu-id="1d63b-151">The bounded size of the collection.</span></span></param>
        <summary><span data-ttu-id="1d63b-152">上限を指定して、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-152">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class with the specified upper-bound.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-153">基になる既定のコレクションは、<xref:System.Collections.Concurrent.ConcurrentQueue%601>です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-153">The default underlying collection is a <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-154"><paramref name="boundedCapacity" /> は正の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-154">The <paramref name="boundedCapacity" /> is not a positive value.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-155">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-155">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-156">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-156">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection (System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt; collection, int boundedCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt; collection, int32 boundedCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IProducerConsumerCollection(Of T), boundedCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection(System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt; ^ collection, int boundedCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;'T&gt; * int -&gt; System.Collections.Concurrent.BlockingCollection&lt;'T&gt;" Usage="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; (collection, boundedCapacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;" />
        <Parameter Name="boundedCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="1d63b-157">基になるデータ ストアとして使用するコレクション。</span><span class="sxs-lookup"><span data-stu-id="1d63b-157">The collection to use as the underlying data store.</span></span></param>
        <param name="boundedCapacity"><span data-ttu-id="1d63b-158">コレクションのサイズの制限。</span><span class="sxs-lookup"><span data-stu-id="1d63b-158">The bounded size of the collection.</span></span></param>
        <summary><span data-ttu-id="1d63b-159">上限を指定し、指定した <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> を基になるデータ ストアとして使用して、<see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-159">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class with the specified upper-bound and using the provided <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> as its underlying data store.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-160"><paramref name="collection" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-160">The <paramref name="collection" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-161"><paramref name="boundedCapacity" /> は正の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-161">The <paramref name="boundedCapacity" /> is not a positive value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-162">指定された <paramref name="collection" /> に、<paramref name="boundedCapacity" /> によって許可されているよりも多い値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-162">The supplied <paramref name="collection" /> contains more values than is permitted by <paramref name="boundedCapacity" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-163">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-163">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-164">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-164">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-165"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-165">Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-166">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-166">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-167">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-167">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; unit" Usage="blockingCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-168">コレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-168">The item to be added to the collection.</span></span> <span data-ttu-id="1d63b-169">この値は null 参照でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-169">The value can be a null reference.</span></span></param>
        <summary><span data-ttu-id="1d63b-170"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-170">Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-171">この <xref:System.Collections.Concurrent.BlockingCollection%601> インスタンスが初期化されたときに、容量が制限されている場合は、指定された項目を格納するための領域が使用できるようになるまで、Add を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-171">If a bounded capacity was specified when this instance of <xref:System.Collections.Concurrent.BlockingCollection%601> was initialized, a call to Add may block until space is available to store the provided item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-172"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-172">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-173"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は、追加に関して完了としてマークされました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-173">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="1d63b-174">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-174">-or-</span></span> 
<span data-ttu-id="1d63b-175">基になるコレクションが項目を受け入れませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-175">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-176">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-176">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-177">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-177">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!T item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T * System.Threading.CancellationToken -&gt; unit" Usage="blockingCollection.Add (item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-178">コレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-178">The item to be added to the collection.</span></span> <span data-ttu-id="1d63b-179">この値は null 参照でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-179">The value can be a null reference.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d63b-180">観察するキャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="1d63b-180">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="1d63b-181"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-181">Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-182">この <xref:System.Collections.Concurrent.BlockingCollection%601> のインスタンスが初期化されたときに容量が制限されている場合、指定された項目を格納するために領域が使用可能になるまで、<xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> を呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-182">If a bounded capacity was specified when this instance of <xref:System.Collections.Concurrent.BlockingCollection%601> was initialized, a call to <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> may block until space is available to store the provided item.</span></span>  
  
 <span data-ttu-id="1d63b-183">このメソッドは、`cancellationToken` がキャンセルされた場合に <xref:System.OperationCanceledException> を使用して早期に戻ることができます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-183">This method can return early with an <xref:System.OperationCanceledException> if the `cancellationToken` is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-184"><see cref="T:System.Threading.CancellationToken" /> が取り消されている場合。</span><span class="sxs-lookup"><span data-stu-id="1d63b-184">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-185"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> が破棄されているか、<paramref name="cancellationToken" /> を所有する <see cref="T:System.Threading.CancellationTokenSource" /> が破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-185">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that owns <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-186"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は、追加に関して完了としてマークされました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-186">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="1d63b-187">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-187">-or-</span></span> 
<span data-ttu-id="1d63b-188">基になるコレクションが項目を受け入れませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-188">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-189">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-189">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-190">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-190">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-191">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスに、指定した項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-191">Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToAny">
      <MemberSignature Language="C#" Value="public static int AddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddToAny (collections As BlockingCollection(Of T)(), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item);" />
      <MemberSignature Language="F#" Value="static member AddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.AddToAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-192">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-192">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-193">いずれかのコレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-193">The item to be added to one of the collections.</span></span></param>
        <summary><span data-ttu-id="1d63b-194">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスに、指定した項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-194">Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-195">項目が追加された <paramref name="collections" /> 配列内のコレクションのインデックス。</span><span class="sxs-lookup"><span data-stu-id="1d63b-195">The index of the collection in the <paramref name="collections" /> array to which the item was added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-196">すべての <xref:System.Collections.Concurrent.BlockingCollection%601> インスタンスが初期化されたときに、制限された容量を指定した場合、指定された項目を格納するために、いずれかのコレクションで使用できるようになるまで、AddToAny を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-196">If a bounded capacity was specified when all of the <xref:System.Collections.Concurrent.BlockingCollection%601> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-197">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-197">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-198"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-198">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-199"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-199">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-200"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれます。または 1 つ以上のコレクションが追加完了としてマークされています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-200">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-201">1 つ以上の基になるコレクションで項目が受け入れられませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-201">At least one underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-202">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-202">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-203">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-203">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToAny">
      <MemberSignature Language="C#" Value="public static int AddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.AddToAny (collections, item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-204">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-204">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-205">いずれかのコレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-205">The item to be added to one of the collections.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d63b-206">観察するキャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="1d63b-206">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="1d63b-207">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスに、指定した項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-207">Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-208">項目が追加された <paramref name="collections" /> 配列内のコレクションのインデックス。</span><span class="sxs-lookup"><span data-stu-id="1d63b-208">The index of the collection in the <paramref name="collections" /> array to which the item was added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-209">すべての <xref:System.Collections.Concurrent.BlockingCollection%601> インスタンスが初期化されたときに、制限された容量を指定した場合、指定された項目を格納するために、いずれかのコレクションで使用できるようになるまで、AddToAny を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-209">If a bounded capacity was specified when all of the <xref:System.Collections.Concurrent.BlockingCollection%601> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</span></span> <span data-ttu-id="1d63b-210">領域が使用可能になる前に `cancellationToken` が取り消された場合、このメソッドは、項目がコレクションに追加される前にを返すことがあります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-210">This method may return before the item is added to any collection if the `cancellationToken` is canceled before space is available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-211"><see cref="T:System.Threading.CancellationToken" /> が取り消されている場合。</span><span class="sxs-lookup"><span data-stu-id="1d63b-211">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-212">1 つ以上の基になるコレクションで項目が受け入れられませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-212">At least one underlying collection didn't accept the item.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-213"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-213">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-214"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-214">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-215"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれます。または 1 つ以上のコレクションが追加完了としてマークされています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-215">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-216">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されているか、<paramref name="cancellationToken" /> を作成した <see cref="T:System.Threading.CancellationTokenSource" /> が破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-216">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed, or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-217">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-217">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-218">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-218">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BoundedCapacity">
      <MemberSignature Language="C#" Value="public int BoundedCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BoundedCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundedCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BoundedCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundedCapacity : int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.BoundedCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d63b-219">この <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスの容量の上限。</span><span class="sxs-lookup"><span data-stu-id="1d63b-219">Gets the bounded capacity of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></summary>
        <value><span data-ttu-id="1d63b-220">このコレクションの容量の上限。上限が指定されていない場合は int.MaxValue。</span><span class="sxs-lookup"><span data-stu-id="1d63b-220">The bounded capacity of this collection, or int.MaxValue if no bound was supplied.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-221"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-221">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-222">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-222">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-223">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-223">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompleteAdding">
      <MemberSignature Language="C#" Value="public void CompleteAdding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteAdding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteAdding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteAdding();" />
      <MemberSignature Language="F#" Value="member this.CompleteAdding : unit -&gt; unit" Usage="blockingCollection.CompleteAdding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d63b-224">それ以上追加を受け入れないように、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスをマークします。</span><span class="sxs-lookup"><span data-stu-id="1d63b-224">Marks the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances as not accepting any more additions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-225">コレクションが追加完了としてマークされた後、コレクションへの追加は許可されず、コレクションから削除しようとしても、コレクションが空の場合は待機しません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-225">After a collection has been marked as complete for adding, adding to the collection is not permitted and attempts to remove from the collection will not wait when the collection is empty.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-226"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-226">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-227">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-227">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-228">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-228">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="blockingCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="1d63b-229"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスから要素がコピーされる 1 次元配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-229">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span> <span data-ttu-id="1d63b-230">配列には、0 から始まるインデックスが設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-230">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="1d63b-231">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-231">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="1d63b-232"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンス内のすべての項目を、互換性のある 1 次元配列にコピーします。コピー操作は、コピー先の配列の、指定したインデックスから始まります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-232">Copies all of the items in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-233">CopyTo は、正確な時点におけるコレクションのスナップショットを表します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-233">CopyTo represents a snapshot of the collection at a precise point in time.</span></span> <span data-ttu-id="1d63b-234">CopyTo の実行中に他のスレッドが項目を追加または削除している場合、CopyTo によって返される要素は、コレクションの状態を表していない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-234">If other threads are adding or removing items while CopyTo is executing, then the elements returned by CopyTo might not represent the state of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-235"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-235">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-236"><paramref name="array" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-236">The <paramref name="array" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-237"><paramref name="index" /> 引数は 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-237">The <paramref name="index" /> argument is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-238"><paramref name="index" /> 引数は <paramref name="array" /> の長さ以上です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-238">The <paramref name="index" /> argument is equal to or greater than the length of the <paramref name="array" />.</span></span>  
  
<span data-ttu-id="1d63b-239">目的の配列は小さすぎるため、すべての BlockingCollection 要素を保持できません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-239">The destination array is too small to hold all of the BlockingCollection elements.</span></span>  
  
<span data-ttu-id="1d63b-240">配列ランクが一致しません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-240">The array rank doesn't match.</span></span>  
  
<span data-ttu-id="1d63b-241">配列型は BlockingCollection 要素の型と互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-241">The array type is incompatible with the type of the BlockingCollection elements.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-242">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-242">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-243">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-243">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d63b-244"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に格納されている項目の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-244">Gets the number of items contained in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <value><span data-ttu-id="1d63b-245"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に格納されている項目の数。</span><span class="sxs-lookup"><span data-stu-id="1d63b-245">The number of items contained in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-246">Count プロパティにアクセスしているときに BlockingCollection 内のいずれかのメソッドが実行されている場合、戻り値は概数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-246">If any method in BlockingCollection is executing while the Count property is being accessed, the return value is approximate.</span></span> <span data-ttu-id="1d63b-247">Count には、BlockingCollection 内の実際の項目数よりも大きいか小さい数値が反映される場合があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-247">Count may reflect a number that is either greater than or less than the actual number of items in the BlockingCollection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-248"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-248">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-249">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-249">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-250">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-250">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-251"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-251">Releases all resources used by the current instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="blockingCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d63b-252"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-252">Releases all resources used by the current instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-253">`Dispose` メソッドはスレッドセーフではありません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-253">The `Dispose` method is not thread-safe.</span></span>  
  
 <span data-ttu-id="1d63b-254"><xref:System.Collections.Concurrent.BlockingCollection%601> を使い終わったら、`Dispose`を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-254">Call `Dispose` when you are finished using the <xref:System.Collections.Concurrent.BlockingCollection%601>.</span></span> <span data-ttu-id="1d63b-255">`Dispose`メソッドによって、<xref:System.Collections.Concurrent.BlockingCollection%601> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-255">The `Dispose` method leaves the <xref:System.Collections.Concurrent.BlockingCollection%601> in an unusable state.</span></span> <span data-ttu-id="1d63b-256">`Dispose`呼び出し後は、<xref:System.Collections.Concurrent.BlockingCollection%601>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Collections.Concurrent.BlockingCollection%601> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-256">After calling `Dispose`, you must release all references to the <xref:System.Collections.Concurrent.BlockingCollection%601> so the garbage collector can reclaim the memory that the <xref:System.Collections.Concurrent.BlockingCollection%601> was occupying.</span></span>  
  
 <span data-ttu-id="1d63b-257">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1d63b-257">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d63b-258"><xref:System.Collections.Concurrent.BlockingCollection%601>への最後の参照を解放する前に、必ず`Dispose`を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="1d63b-258">Always call `Dispose` before you release your last reference to the <xref:System.Collections.Concurrent.BlockingCollection%601>.</span></span> <span data-ttu-id="1d63b-259">そうしないと、ガベージ コレクターが <xref:System.Collections.Concurrent.BlockingCollection%601> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-259">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Collections.Concurrent.BlockingCollection%601> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-260">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-260">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-261">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-261">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="blockingCollection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1d63b-262">明示的に破棄される場合は true、ファイナライザーによる場合は false。</span><span class="sxs-lookup"><span data-stu-id="1d63b-262">Whether being disposed explicitly (true) or due to a finalizer (false).</span></span></param>
        <summary><span data-ttu-id="1d63b-263"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-263">Releases resources used by the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-264">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-264">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-265">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-265">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConsumingEnumerable">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-266">コレクション内の項目を取り出す <see cref="T:System.Collections.Generic.IEnumerator`1" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-266">Provides a consuming <see cref="T:System.Collections.Generic.IEnumerator`1" /> for items in the collection.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-267">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-267">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-268">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-268">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConsumingEnumerable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetConsumingEnumerable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; GetConsumingEnumerable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsumingEnumerable () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetConsumingEnumerable();" />
      <MemberSignature Language="F#" Value="member this.GetConsumingEnumerable : unit -&gt; seq&lt;'T&gt;" Usage="blockingCollection.GetConsumingEnumerable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d63b-269">コレクション内の項目を取り出す <see cref="T:System.Collections.Generic.IEnumerator`1" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-269">Provides a consuming <see cref="T:System.Collections.Generic.IEnumerator`1" /> for items in the collection.</span></span></summary>
        <returns><span data-ttu-id="1d63b-270">コレクションから項目を削除して返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-270">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that removes and returns items from the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1d63b-271">次の例は、<xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A> メソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-271">The following example shows how to use the <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#4)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-272"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-272">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-273">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-273">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-274">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-274">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetConsumingEnumerable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetConsumingEnumerable (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; GetConsumingEnumerable(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetConsumingEnumerable(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetConsumingEnumerable : System.Threading.CancellationToken -&gt; seq&lt;'T&gt;" Usage="blockingCollection.GetConsumingEnumerable cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.BlockingCollection`1/&lt;GetConsumingEnumerable&gt;d__2))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.BlockingCollection`1/&lt;GetConsumingEnumerable&gt;d__68))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="1d63b-275">観察するキャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="1d63b-275">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="1d63b-276">コレクション内の項目を取り出す <see cref="T:System.Collections.Generic.IEnumerable`1" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-276">Provides a consuming <see cref="T:System.Collections.Generic.IEnumerable`1" /> for items in the collection.</span></span></summary>
        <returns><span data-ttu-id="1d63b-277">コレクションから項目を削除して返す <see cref="T:System.Collections.Generic.IEnumerable`1" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-277">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that removes and returns items from the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-278">このメソッドを使用すると、クライアントコードは foreach ループ (Visual Basic 内の各に対して)、または <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> または PLINQ クエリを使用して、コレクションから項目を削除できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-278">This method enables client code to remove items from the collection by using a foreach loop (For Each in Visual Basic), or <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> or a PLINQ query.</span></span> <span data-ttu-id="1d63b-279"><xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> が true を返すまで、列挙子は項目を提供し続けます。 <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> が false の場合は、項目が使用可能になるまで、または <xref:System.Threading.CancellationToken> が取り消されるまで、ループはブロックされます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-279">The enumerator will continue to provide items (if any exist) until <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> returns true, and if <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> is false the loop blocks until an item becomes available or until the <xref:System.Threading.CancellationToken> is cancelled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-280"><see cref="T:System.Threading.CancellationToken" /> が取り消されている場合。</span><span class="sxs-lookup"><span data-stu-id="1d63b-280">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-281"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> が破棄されているか、<paramref name="cancellationToken" /> を作成した <see cref="T:System.Threading.CancellationTokenSource" /> が破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-281">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-282">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-282">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-283">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-283">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsAddingCompleted">
      <MemberSignature Language="C#" Value="public bool IsAddingCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingCompleted : bool" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.IsAddingCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d63b-284">この <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> が追加完了としてマークされているかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-284">Gets whether this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete for adding.</span></span></summary>
        <value><span data-ttu-id="1d63b-285">このコレクションが追加完了としてマークされているかどうか。</span><span class="sxs-lookup"><span data-stu-id="1d63b-285">Whether this collection has been marked as complete for adding.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-286"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-286">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-287">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-287">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-288">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-288">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d63b-289">この <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> が追加完了としてマークされていて、かつ空であるかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-289">Gets whether this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete for adding and is empty.</span></span></summary>
        <value><span data-ttu-id="1d63b-290">このコレクションが追加完了としてマークされていて、かつ空であるかどうか。</span><span class="sxs-lookup"><span data-stu-id="1d63b-290">Whether this collection has been marked as complete for adding and is empty.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-291"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-291">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-292">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-292">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-293">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-293">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d63b-294">コレクション内の項目に対する <see cref="T:System.Collections.Generic.IEnumerator`1" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-294">Provides an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for items in the collection.</span></span></summary>
        <returns><span data-ttu-id="1d63b-295">コレクション内の項目に対する <see cref="T:System.Collections.Generic.IEnumerator`1" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-295">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the items in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-296"><xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A>とは異なり、<xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType> は基になるコレクションを変更しない標準列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-296">Unlike <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A>, <xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType> returns a standard enumerator that does not modify the underlying collection.</span></span> <span data-ttu-id="1d63b-297">GetEnumerator が呼び出されたときに、他のスレッドが要素を同時に追加または削除している場合、列挙子によって返される要素は、コレクションの現在の状態を表していない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-297">If other threads are adding or removing elements concurrently when GetEnumerator is called, then the elements returned by the enumerator might not represent the current state of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-298"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-298">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-299">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-299">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-300">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-300">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="1d63b-301"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスから要素がコピーされる 1 次元配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-301">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span> <span data-ttu-id="1d63b-302">配列には、0 から始まるインデックスが設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-302">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="1d63b-303">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-303">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="1d63b-304"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンス内のすべての項目を、互換性のある 1 次元配列にコピーします。コピー操作は、コピー先の配列の、指定したインデックスから始まります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-304">Copies all of the items in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-305"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-305">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-306"><paramref name="array" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-306">The <paramref name="array" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-307"><paramref name="index" /> 引数は 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-307">The <paramref name="index" /> argument is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-308"><paramref name="index" /> 引数が <paramref name="array" /> の長さ以上か、配列が多次元か、またはコレクションの型パラメーターを自動的にコピー先の配列の型にキャストできません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-308">The <paramref name="index" /> argument is equal to or greater than the length of the <paramref name="array" />, the array is multidimensional, or the type parameter for the collection cannot be cast automatically to the type of the destination array.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-309">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-309">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-310">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-310">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d63b-311"><see cref="T:System.Collections.ICollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-311">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="1d63b-312">アクセスが同期されていないことを示すために、常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-312">Always returns <see langword="false" /> to indicate the access is not synchronized.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-313"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-313">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-314">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-314">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-315">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-315">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d63b-316"><see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-316">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="1d63b-317">このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-317">This property is not supported.</span></span></summary>
        <value><span data-ttu-id="1d63b-318">null を返します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-318">returns null.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1d63b-319">SyncRoot プロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-319">The SyncRoot property is not supported.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-320">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-320">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-321">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-321">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d63b-322">コレクション内の項目に対する <see cref="T:System.Collections.IEnumerator" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-322">Provides an <see cref="T:System.Collections.IEnumerator" /> for items in the collection.</span></span></summary>
        <returns><span data-ttu-id="1d63b-323">コレクション内の項目に対する <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-323">An <see cref="T:System.Collections.IEnumerator" /> for the items in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-324"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-324">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-325">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-325">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-326">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-326">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Take">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-327"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> から項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-327">Removes an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-328">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-328">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-329">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-329">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public T Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Take" />
      <MemberSignature Language="VB.NET" Value="Public Function Take () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Take();" />
      <MemberSignature Language="F#" Value="member this.Take : unit -&gt; 'T" Usage="blockingCollection.Take " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d63b-330"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> から項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-330">Removes  an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="1d63b-331">コレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-331">The item removed from the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-332">項目を削除できるようになるまで、<xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> の呼び出しがブロックされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-332">A call to <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> may block until an item is available to be removed.</span></span>  
  
 <span data-ttu-id="1d63b-333">項目が削除される順序は、<xref:System.Collections.Concurrent.BlockingCollection%601> インスタンスの作成に使用されたコレクションの型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-333">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="1d63b-334"><xref:System.Collections.Concurrent.BlockingCollection%601> オブジェクトを作成すると、使用するコレクションの型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-334">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="1d63b-335">たとえば、先入れ先出し法 (FIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentQueue%601> オブジェクトを指定し、後入れ先出し法 (LIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentStack%601> オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-335">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="1d63b-336"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> インターフェイスを実装する任意のコレクション クラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-336">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="1d63b-337"><xref:System.Collections.Concurrent.BlockingCollection%601> の既定のコレクション型は <xref:System.Collections.Concurrent.ConcurrentQueue%601> です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-337">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-338"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-338">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-339">基になるコレクションがこの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスの外で変更されました。または、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> が空で、コレクションが追加完了としてマークされています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-339">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance, or the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> is empty and the collection has been marked as complete for adding.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-340">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-340">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-341">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-341">BlockingCollection Overview</span></span></related>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-342"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は空であり、追加に関して完了としてマークされました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-342">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> is empty and has been marked as complete with regards to additions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public T Take (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Take(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Take(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Take : System.Threading.CancellationToken -&gt; 'T" Usage="blockingCollection.Take cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="1d63b-343">取得操作を取り消すために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1d63b-343">Object that can be used to cancel the take operation.</span></span></param>
        <summary><span data-ttu-id="1d63b-344"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> から項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-344">Removes an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="1d63b-345">コレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-345">The item removed from the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-346">項目を削除できるようになるまで、またはトークンが取り消されるまで、<xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> の呼び出しがブロックされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-346">A call to <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> may block until an item is available to be removed or the token is canceled.</span></span>  
  
 <span data-ttu-id="1d63b-347">項目が削除される順序は、<xref:System.Collections.Concurrent.BlockingCollection%601> インスタンスの作成に使用されたコレクションの型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-347">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="1d63b-348"><xref:System.Collections.Concurrent.BlockingCollection%601> オブジェクトを作成すると、使用するコレクションの型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-348">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="1d63b-349">たとえば、先入れ先出し法 (FIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentQueue%601> オブジェクトを指定し、後入れ先出し法 (LIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentStack%601> オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-349">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="1d63b-350"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> インターフェイスを実装する任意のコレクション クラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-350">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="1d63b-351"><xref:System.Collections.Concurrent.BlockingCollection%601> の既定のコレクション型は <xref:System.Collections.Concurrent.ConcurrentQueue%601> です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-351">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-352"><see cref="T:System.Threading.CancellationToken" /> は取り消されます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-352">The <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-353"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> が破棄されているか、トークンを作成した <see cref="T:System.Threading.CancellationTokenSource" /> が取り消されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-353">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created the token was canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-354">基になるコレクションがこの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスの外で変更されたか、BlockingCollection が追加完了としてマークされているか、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> が空です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-354">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance or the BlockingCollection is marked as complete for adding, or the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> is empty.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-355">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-355">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-356">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-356">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeFromAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-357">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスから項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-357">Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-358">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-358">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-359">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-359">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeFromAny">
      <MemberSignature Language="C#" Value="public static int TakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="static member TakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TakeFromAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-360">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-360">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-361">いずれかのコレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-361">The item removed from one of the collections.</span></span></param>
        <summary><span data-ttu-id="1d63b-362">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスから項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-362">Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-363">項目が削除された <paramref name="collections" /> 配列内のコレクションのインデックス。</span><span class="sxs-lookup"><span data-stu-id="1d63b-363">The index of the collection in the <paramref name="collections" /> array from which the item was removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-364">項目を削除できるようになるまで、の呼び出しがブロックされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-364">A call to TakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-365">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-365">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-366"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-366">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-367"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-367">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-368"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれています。または、<see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> がコレクションで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-368">The <paramref name="collections" /> argument is a 0-length array or contains a null element or <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> has been called on the collection.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-369">1 つ以上の基になるコレクションが <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンス以外で変更されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-369">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-370">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-370">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-371">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-371">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TakeFromAny">
      <MemberSignature Language="C#" Value="public static int TakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member TakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TakeFromAny (collections, item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-372">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-372">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-373">いずれかのコレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-373">The item removed from one of the collections.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d63b-374">観察するキャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="1d63b-374">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="1d63b-375">指定したキャンセル トークンを観察しながら、指定した <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスのいずれかから項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-375">Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances while observing the specified cancellation token.</span></span></summary>
        <returns><span data-ttu-id="1d63b-376">項目が削除された <paramref name="collections" /> 配列内のコレクションのインデックス。</span><span class="sxs-lookup"><span data-stu-id="1d63b-376">The index of the collection in the <paramref name="collections" /> array from which the item was removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-377">項目を削除できるようになるまで、の呼び出しがブロックされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-377">A call to TakeFromAny may block until an item is available to be removed.</span></span> <span data-ttu-id="1d63b-378">トークンが取り消された場合、メソッドは OperationCanceledException を使用して早期に戻ります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-378">The method will return early with an OperationCanceledException if the token is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-379"><see cref="T:System.Threading.CancellationToken" /> が取り消されている場合。</span><span class="sxs-lookup"><span data-stu-id="1d63b-379">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-380">1 つ以上の基になるコレクションが <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンス以外で変更されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-380">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-381"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-381">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-382"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-382">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-383"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれています。または、<see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> がコレクションで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-383">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> has been called on the collection.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-384">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-384">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-385">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-385">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-386">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-386">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="blockingCollection.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d63b-387"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスの項目を新しい配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="1d63b-387">Copies the items from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance into a new array.</span></span></summary>
        <returns><span data-ttu-id="1d63b-388">コレクションの要素のコピーを格納する配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-388">An array containing copies of the elements of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-389">コピーした要素は、コレクションから削除されません。</span><span class="sxs-lookup"><span data-stu-id="1d63b-389">The copied elements are not removed from the collection.</span></span>  
  
 <span data-ttu-id="1d63b-390">ToArray メソッドの実行中に BlockingCollection 内のいずれかのメソッドが実行されている場合、戻り値は概数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-390">If any method in BlockingCollection is executing while the ToArray method executes, the return value is approximate.</span></span> <span data-ttu-id="1d63b-391">ToArray には、既に削除されている項目を含めることも、既に挿入されている項目を除外することもできます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-391">ToArray  may include items that have already been removed, or exclude items that have already been inserted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-392"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-392">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-393">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-393">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-394">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-394">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAdd">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-395"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に対して、指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-395">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T -&gt; bool" Usage="blockingCollection.TryAdd item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-396">コレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-396">The item to be added to the collection.</span></span></param>
        <summary><span data-ttu-id="1d63b-397"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に対して、指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-397">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="1d63b-398"><paramref name="item" /> を追加できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-398"><see langword="true" /> if <paramref name="item" /> could be added; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1d63b-399">項目が重複しており、基になるコレクションが項目の重複を受け入れない場合は、<see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-399">If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-400">コレクションが制限付きコレクションであり、いっぱいの場合、このメソッドは項目を追加せずに、直ちに false を返します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-400">If the collection is a bounded collection, and is full, this method immediately returns false without adding the item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-401"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-401">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-402"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は、追加に関して完了としてマークされました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-402">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="1d63b-403">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-403">-or-</span></span> 
<span data-ttu-id="1d63b-404">基になるコレクションが項目を受け入れませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-404">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-405">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-405">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-406">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-406">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T, millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T * int -&gt; bool" Usage="blockingCollection.TryAdd (item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-407">コレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-407">The item to be added to the collection.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="1d63b-408">待機するミリ秒数。無制限に待機する場合は <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-408">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="1d63b-409">指定した期間内に、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に対して指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-409">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> within the specified time period.</span></span></summary>
        <returns><span data-ttu-id="1d63b-410">指定した時間内にコレクションに <paramref name="item" /> を追加できた場合は <see langword="true" />。それ以外の場合は false。</span><span class="sxs-lookup"><span data-stu-id="1d63b-410"><see langword="true" /> if the <paramref name="item" /> could be added to the collection within the specified time; otherwise, false.</span></span> <span data-ttu-id="1d63b-411">項目が重複しており、基になるコレクションが項目の重複を受け入れない場合は、<see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-411">If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-412"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-412">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-413"><paramref name="millisecondsTimeout" /> は無限のタイムアウトを表す -1 以外の負の数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-413"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-414"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は、追加に関して完了としてマークされました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-414">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="1d63b-415">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-415">-or-</span></span> 
<span data-ttu-id="1d63b-416">基になるコレクションが項目を受け入れませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-416">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-417">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-417">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-418">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-418">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T * TimeSpan -&gt; bool" Usage="blockingCollection.TryAdd (item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-419">コレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-419">The item to be added to the collection.</span></span></param>
        <param name="timeout"><span data-ttu-id="1d63b-420">待機するミリ秒数を表す <see cref="T:System.TimeSpan" />。無制限に待機する場合は、-1 ミリ秒を表す <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-420">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="1d63b-421"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に対して、指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-421">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="1d63b-422">指定した期間内にコレクションに <paramref name="item" /> を追加できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-422"><see langword="true" /> if the <paramref name="item" /> could be added to the collection within the specified time span; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-423"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-423">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-424"><paramref name="timeout" /> が -1 ミリ秒以外の負数です。-1 は無制限のタイムアウトを表します。または、タイムアウトが <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-424"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-425"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は、追加に関して完了としてマークされました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-425">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="1d63b-426">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-426">-or-</span></span> 
<span data-ttu-id="1d63b-427">基になるコレクションが項目を受け入れませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-427">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-428">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-428">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-429">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-429">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T * int * System.Threading.CancellationToken -&gt; bool" Usage="blockingCollection.TryAdd (item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-430">コレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-430">The item to be added to the collection.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="1d63b-431">待機するミリ秒数。無制限に待機する場合は <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-431">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d63b-432">観察するキャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="1d63b-432">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="1d63b-433">キャンセル トークンを観察しながら、指定した期間内に、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> に対して指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-433">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> within the specified time period, while observing a cancellation token.</span></span></summary>
        <returns><span data-ttu-id="1d63b-434">指定した時間内にコレクションに <paramref name="item" /> を追加できた場合は <see langword="true" />。それ以外の場合は false。</span><span class="sxs-lookup"><span data-stu-id="1d63b-434"><see langword="true" /> if the <paramref name="item" /> could be added to the collection within the specified time; otherwise, false.</span></span> <span data-ttu-id="1d63b-435">項目が重複しており、基になるコレクションが項目の重複を受け入れない場合は、<see cref="T:System.InvalidOperationException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-435">If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-436"><see cref="T:System.Threading.CancellationToken" /> が取り消されている場合。</span><span class="sxs-lookup"><span data-stu-id="1d63b-436">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-437"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> が破棄されているか、または基になっている <see cref="T:System.Threading.CancellationTokenSource" /> が破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-437">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the underlying <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-438"><paramref name="millisecondsTimeout" /> は無限のタイムアウトを表す -1 以外の負の数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-438"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-439"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は、追加に関して完了としてマークされました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-439">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="1d63b-440">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-440">-or-</span></span> 
<span data-ttu-id="1d63b-441">基になるコレクションが項目を受け入れませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-441">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-442">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-442">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-443">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-443">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAddToAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-444">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスに対して、指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-444">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-445">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-445">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-446">いずれかのコレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-446">The item to be added to one of the collections.</span></span></param>
        <summary><span data-ttu-id="1d63b-447">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスに対して、指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-447">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-448"><paramref name="collections" /> 配列内の、項目が追加されたコレクションのインデックス。項目を追加できなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="1d63b-448">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-449">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-449">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-450"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-450">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-451"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-451">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-452"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれます。または 1 つ以上のコレクションが追加完了としてマークされています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-452">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-453">1 つ以上の基になるコレクションで項目が受け入れられませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-453">At least one underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-454">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-454">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-455">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-455">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-456">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-456">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-457">いずれかのコレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-457">The item to be added to one of the collections.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="1d63b-458">待機するミリ秒数。無制限に待機する場合は <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-458">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="1d63b-459">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスに対して、指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-459">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-460"><paramref name="collections" /> 配列内の、項目が追加されたコレクションのインデックス。項目を追加できなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="1d63b-460">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-461">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-461">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-462"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-462">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-463"><paramref name="millisecondsTimeout" /> は無限のタイムアウトを表す -1 以外の負の数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-463"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span> 
<span data-ttu-id="1d63b-464">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-464">-or-</span></span> 
<span data-ttu-id="1d63b-465"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-465">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-466"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれます。または 1 つ以上のコレクションが追加完了としてマークされています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-466">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-467">1 つ以上の基になるコレクションで項目が受け入れられませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-467">At least one underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-468">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-468">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-469">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-469">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T, timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * TimeSpan -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-470">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-470">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-471">いずれかのコレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-471">The item to be added to one of the collections.</span></span></param>
        <param name="timeout"><span data-ttu-id="1d63b-472">待機するミリ秒数を表す <see cref="T:System.TimeSpan" />。無制限に待機する場合は、-1 ミリ秒を表す <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-472">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="1d63b-473">指定したキャンセル トークンを観察しながら、指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスに対して指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-473">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances while observing the specified cancellation token.</span></span></summary>
        <returns><span data-ttu-id="1d63b-474"><paramref name="collections" /> 配列内の、項目が追加されたコレクションのインデックス。項目を追加できなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="1d63b-474">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-475">このメソッドは、追加操作の領域が使用可能になる前に cancellationToken がキャンセルされた場合に、早期に戻ることができます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-475">This method can return early if the cancellationToken is cancelled before space was available for the Add operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-476">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンス、または <paramref name="cancellationToken" /> を作成した <see cref="T:System.Threading.CancellationTokenSource" /> が破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-476">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-477"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-477">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-478"><paramref name="timeout" /> が -1 ミリ秒以外の負数です。-1 は無制限のタイムアウトを表します。または、タイムアウトが <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-478"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="1d63b-479">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-479">-or-</span></span> 
<span data-ttu-id="1d63b-480"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-480">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-481"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれます。または 1 つ以上のコレクションが追加完了としてマークされています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-481">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-482">1 つ以上の基になるコレクションで項目が受け入れられませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-482">At least one underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-483">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-483">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-484">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-484">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-485">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-485">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-486">いずれかのコレクションに追加する項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-486">The item to be added to one of the collections.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="1d63b-487">待機するミリ秒数。無制限に待機する場合は <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-487">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d63b-488">観察するキャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="1d63b-488">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="1d63b-489">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスに対して、指定した項目の追加を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-489">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-490"><paramref name="collections" /> 配列内の、項目が追加されたコレクションのインデックス。項目を追加できなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="1d63b-490">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-491"><see cref="T:System.Threading.CancellationToken" /> が取り消されている場合。</span><span class="sxs-lookup"><span data-stu-id="1d63b-491">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-492">1 つ以上の基になるコレクションで項目が受け入れられませんでした。</span><span class="sxs-lookup"><span data-stu-id="1d63b-492">At least one underlying collection didn't accept the item.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-493"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-493">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-494"><paramref name="millisecondsTimeout" /> は無限のタイムアウトを表す -1 以外の負の数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-494"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span> 
<span data-ttu-id="1d63b-495">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-495">-or-</span></span> 
<span data-ttu-id="1d63b-496"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-496">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-497"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれます。または 1 つ以上のコレクションが追加完了としてマークされています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-497">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-498">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-498">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-499">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-499">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-500">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-500">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryTake">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-501"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> から項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-501">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1d63b-502"><xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> メソッドを使用する方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-502">The following example shows how to use the <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> method.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#2)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-503">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-503">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-504">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-504">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryTake : 'T -&gt; bool" Usage="blockingCollection.TryTake item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-505">コレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-505">The item to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="1d63b-506"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> から項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-506">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="1d63b-507">項目を削除できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-507"><see langword="true" /> if an item could be removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-508">コレクションが空の場合、このメソッドは直ちに false を返します。</span><span class="sxs-lookup"><span data-stu-id="1d63b-508">If the collection is empty, this method immediately returns false.</span></span>  
  
 <span data-ttu-id="1d63b-509">項目が削除される順序は、<xref:System.Collections.Concurrent.BlockingCollection%601> インスタンスの作成に使用されたコレクションの型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-509">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="1d63b-510"><xref:System.Collections.Concurrent.BlockingCollection%601> オブジェクトを作成すると、使用するコレクションの型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-510">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="1d63b-511">たとえば、先入れ先出し法 (FIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentQueue%601> オブジェクトを指定し、後入れ先出し法 (LIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentStack%601> オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-511">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="1d63b-512"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> インターフェイスを実装する任意のコレクション クラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-512">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="1d63b-513"><xref:System.Collections.Concurrent.BlockingCollection%601> の既定のコレクション型は <xref:System.Collections.Concurrent.ConcurrentQueue%601> です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-513">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-514"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-514">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-515">基になるコレクションが <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスの外部で変更されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-515">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-516">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-516">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-517">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-517">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T, millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.TryTake : 'T * int -&gt; bool" Usage="blockingCollection.TryTake (item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-518">コレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-518">The item to be removed from the collection.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="1d63b-519">待機するミリ秒数。無制限に待機する場合は <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-519">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="1d63b-520">指定した期間内に、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> から項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-520">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in the specified time period.</span></span></summary>
        <returns><span data-ttu-id="1d63b-521">指定した時間内にコレクションから項目を削除できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-521"><see langword="true" /> if an item could be removed from the collection within the specified  time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-522">項目が削除される順序は、<xref:System.Collections.Concurrent.BlockingCollection%601> インスタンスの作成に使用されたコレクションの型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-522">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="1d63b-523"><xref:System.Collections.Concurrent.BlockingCollection%601>を作成するときに、使用するコレクションの種類を指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-523">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601>, you can specify the type of collection to use.</span></span> <span data-ttu-id="1d63b-524">たとえば、先入れ先出し法 (FIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentQueue%601> オブジェクトを指定し、後入れ先出し法 (LIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentStack%601> オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-524">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="1d63b-525"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> インターフェイスを実装する任意のコレクション クラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-525">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="1d63b-526"><xref:System.Collections.Concurrent.BlockingCollection%601> の既定のコレクション型は <xref:System.Collections.Concurrent.ConcurrentQueue%601> です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-526">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-527"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-527">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-528"><paramref name="millisecondsTimeout" /> は無限のタイムアウトを表す -1 以外の負の数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-528"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-529">基になるコレクションが <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスの外部で変更されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-529">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-530">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-530">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-531">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-531">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.TryTake : 'T * TimeSpan -&gt; bool" Usage="blockingCollection.TryTake (item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-532">コレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-532">The item to be removed from the collection.</span></span></param>
        <param name="timeout"><span data-ttu-id="1d63b-533">待機するミリ秒数を表すオブジェクト。無制限に待機する場合は、-1 ミリ秒を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1d63b-533">An object that represents the number of milliseconds to wait, or an object that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="1d63b-534">指定した期間内に、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> から項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-534">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in the specified time period.</span></span></summary>
        <returns><span data-ttu-id="1d63b-535">指定した時間内にコレクションから項目を削除できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-535"><see langword="true" /> if an item could be removed from the collection within the specified  time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-536">項目が削除される順序は、<xref:System.Collections.Concurrent.BlockingCollection%601> インスタンスの作成に使用されたコレクションの型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-536">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="1d63b-537"><xref:System.Collections.Concurrent.BlockingCollection%601> オブジェクトを作成すると、使用するコレクションの型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-537">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="1d63b-538">たとえば、先入れ先出し法 (FIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentQueue%601> オブジェクトを指定し、後入れ先出し法 (LIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentStack%601> オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-538">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="1d63b-539"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> インターフェイスを実装する任意のコレクション クラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-539">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="1d63b-540"><xref:System.Collections.Concurrent.BlockingCollection%601> の既定のコレクション型は <xref:System.Collections.Concurrent.ConcurrentQueue%601> です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-540">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-541"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-541">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-542"><paramref name="timeout" /> は無限のタイムアウトを表す -1 ミリ秒以外の負の数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-542"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="1d63b-543">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-543">-or-</span></span> 
 <span data-ttu-id="1d63b-544"><paramref name="timeout" /> が <see cref="F:System.Int32.MaxValue" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-544"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-545">基になるコレクションが <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスの外部で変更されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-545">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-546">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-546">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-547">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-547">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TryTake : 'T * int * System.Threading.CancellationToken -&gt; bool" Usage="blockingCollection.TryTake (item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1d63b-548">コレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-548">The item to be removed from the collection.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="1d63b-549">待機するミリ秒数。無制限に待機する場合は <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-549">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d63b-550">観察するキャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="1d63b-550">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="1d63b-551">キャンセル トークンを観察しながら、指定した期間内に、<see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> から項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-551">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in the specified time period while observing a cancellation token.</span></span></summary>
        <returns><span data-ttu-id="1d63b-552">指定した時間内にコレクションから項目を削除できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-552"><see langword="true" /> if an item could be removed from the collection within the specified  time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-553">項目が削除される順序は、<xref:System.Collections.Concurrent.BlockingCollection%601> インスタンスの作成に使用されたコレクションの型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-553">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="1d63b-554"><xref:System.Collections.Concurrent.BlockingCollection%601> オブジェクトを作成すると、使用するコレクションの型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-554">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="1d63b-555">たとえば、先入れ先出し法 (FIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentQueue%601> オブジェクトを指定し、後入れ先出し法 (LIFO) の動作には <xref:System.Collections.Concurrent.ConcurrentStack%601> オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-555">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="1d63b-556"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> インターフェイスを実装する任意のコレクション クラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-556">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="1d63b-557"><xref:System.Collections.Concurrent.BlockingCollection%601> の既定のコレクション型は <xref:System.Collections.Concurrent.ConcurrentQueue%601> です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-557">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-558"><see cref="T:System.Threading.CancellationToken" /> は取り消されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-558">The <see cref="T:System.Threading.CancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-559"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> が破棄されているか、または基になっている <see cref="T:System.Threading.CancellationTokenSource" /> が破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-559">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the underlying <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-560"><paramref name="millisecondsTimeout" /> は無限のタイムアウトを表す -1 以外の負の数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-560"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-561">基になるコレクションがこの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスの外部で変更されました 。</span><span class="sxs-lookup"><span data-stu-id="1d63b-561">The underlying collection was modified outside this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-562">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-562">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-563">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-563">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryTakeFromAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d63b-564">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスから項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-564">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-565">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-565">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-566">いずれかのコレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-566">The item removed from one of the collections.</span></span></param>
        <summary><span data-ttu-id="1d63b-567">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスから項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-567">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-568"><paramref name="collections" /> 配列内の、項目が削除されたコレクションのインデックス。項目を削除できなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="1d63b-568">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-569">TryTakeFromAny を呼び出すと、項目を削除できるようになるまでブロックされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-569">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d63b-570">次の例は、<xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType> メソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-570">The following example shows how to use the <xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#3)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-571">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-571">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-572"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-572">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-573"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-573">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-574"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-574">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-575">1 つ以上の基になるコレクションが <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンス以外で変更されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-575">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-576">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-576">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-577">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-577">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-578">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-578">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-579">いずれかのコレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-579">The item removed from one of the collections.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="1d63b-580">待機するミリ秒数。無制限に待機する場合は <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-580">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="1d63b-581">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスから項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-581">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-582"><paramref name="collections" /> 配列内の、項目が削除されたコレクションのインデックス。項目を削除できなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="1d63b-582">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-583">TryTakeFromAny を呼び出すと、項目を削除できるようになるまでブロックされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-583">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-584">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-584">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-585"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-585">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-586"><paramref name="millisecondsTimeout" /> は無限のタイムアウトを表す -1 以外の負の数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-586"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span> 
<span data-ttu-id="1d63b-587">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-587">-or-</span></span> 
<span data-ttu-id="1d63b-588"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-588">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-589"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-589">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-590">1 つ以上の基になるコレクションが <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンス以外で変更されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-590">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-591">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-591">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-592">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-592">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T, timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * TimeSpan -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-593">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-593">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-594">いずれかのコレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-594">The item removed from one of the collections.</span></span></param>
        <param name="timeout"><span data-ttu-id="1d63b-595">待機するミリ秒数を表す <see cref="T:System.TimeSpan" />。無制限に待機する場合は、-1 ミリ秒を表す <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="1d63b-595">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="1d63b-596">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスから項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-596">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-597"><paramref name="collections" /> 配列内の、項目が削除されたコレクションのインデックス。項目を削除できなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="1d63b-597">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-598">TryTakeFromAny を呼び出すと、項目を削除できるようになるまでブロックされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-598">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-599">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-599">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-600"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-600">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-601"><paramref name="timeout" /> が -1 ミリ秒以外の負数です。-1 は無制限のタイムアウトを表します。または、タイムアウトが <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-601"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="1d63b-602">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-602">-or-</span></span> 
<span data-ttu-id="1d63b-603"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-603">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-604"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-604">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-605">1 つ以上の基になるコレクションが <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンス以外で変更されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-605">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-606">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-606">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-607">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-607">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="1d63b-608">コレクションの配列。</span><span class="sxs-lookup"><span data-stu-id="1d63b-608">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="1d63b-609">いずれかのコレクションから削除される項目。</span><span class="sxs-lookup"><span data-stu-id="1d63b-609">The item removed from one of the collections.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="1d63b-610">待機するミリ秒数。無制限に待機する場合は <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</span><span class="sxs-lookup"><span data-stu-id="1d63b-610">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d63b-611">観察するキャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="1d63b-611">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="1d63b-612">指定したいずれかの <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスから項目の削除を試みます。</span><span class="sxs-lookup"><span data-stu-id="1d63b-612">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="1d63b-613"><paramref name="collections" /> 配列内の、項目が削除されたコレクションのインデックス。項目を削除できなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="1d63b-613">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d63b-614">TryTakeFromAny を呼び出すと、項目を削除できるようになるまでブロックされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1d63b-614">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="1d63b-615"><see cref="T:System.Threading.CancellationToken" /> が取り消されている場合。</span><span class="sxs-lookup"><span data-stu-id="1d63b-615">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d63b-616">1 つ以上の基になるコレクションが <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンス以外で変更されました。</span><span class="sxs-lookup"><span data-stu-id="1d63b-616">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1d63b-617"><paramref name="collections" /> 引数が null です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-617">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1d63b-618"><paramref name="millisecondsTimeout" /> は無限のタイムアウトを表す -1 以外の負の数です。</span><span class="sxs-lookup"><span data-stu-id="1d63b-618"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span> 
<span data-ttu-id="1d63b-619">- または -</span><span class="sxs-lookup"><span data-stu-id="1d63b-619">-or-</span></span> 
<span data-ttu-id="1d63b-620"><paramref name="collections" /> の数が STA および MTA の最大サイズ (STA の場合は 62、MTA の場合は 63) を超えています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-620">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1d63b-621"><paramref name="collections" /> 引数が長さ 0 の配列であるか、NULL 要素がこの引数に含まれています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-621">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1d63b-622">1 つ以上の <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> インスタンスが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="1d63b-622">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1d63b-623">スレッド セーフなコレクション</span><span class="sxs-lookup"><span data-stu-id="1d63b-623">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="1d63b-624">BlockingCollection の概要</span><span class="sxs-lookup"><span data-stu-id="1d63b-624">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
