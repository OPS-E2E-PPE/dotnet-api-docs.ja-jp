<Type Name="LogStore" FullName="System.IO.Log.LogStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6738e76ff796796ee4d843a1a06b0995334ebd2c" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78824523" /></Metadata><TypeSignature Language="C#" Value="public sealed class LogStore : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogStore extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogStore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogStore&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogStore sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type LogStore = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3e80f-101">ログ構造化ストレージを表します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-101">Represents a log-structured storage.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-102"><xref:System.IO.Log.LogRecordSequence> クラスは、Common Log File System (CLFS) ログ上でレコード シーケンス インターフェイスの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-102">The <xref:System.IO.Log.LogRecordSequence> class provides an implementation of the record sequence interface on top of a Common Log File System (CLFS) log.</span></span> <span data-ttu-id="3e80f-103">CLFS ログ ファイルを直接操作および管理するためのインターフェイスを提供する <xref:System.IO.Log.LogStore> クラスと共に動作します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-103">It works with the <xref:System.IO.Log.LogStore> class, which provides an interface for directly manipulating and managing a CLFS log file.</span></span> <span data-ttu-id="3e80f-104">ログ ストアは、一連のディスク エクステントで使用される追加専用ストレージです。</span><span class="sxs-lookup"><span data-stu-id="3e80f-104">A log store provides append-only storage across a set of disk extents.</span></span> <span data-ttu-id="3e80f-105"><xref:System.IO.Log.LogStore> クラスはこのストレージを表し、コンテナーの追加および削除、ポリシーの追加、アーカイブの作成を行うメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-105">The <xref:System.IO.Log.LogStore> class represents this storage, and provides methods for adding and removing containers, setting policy, and creating archives.</span></span> <span data-ttu-id="3e80f-106">記憶域の読み書き用のメソッドは提供しません。これらのメソッドは、<xref:System.IO.Log.LogRecordSequence> クラスで提供されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-106">It does not provide methods for reading from and writing to the storage; these methods are provided by the <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
 <span data-ttu-id="3e80f-107"><xref:System.IO.Log.LogStore> クラスと <xref:System.IO.Log.LogRecordSequence> クラスの関係は、ディスク ファイルと <xref:System.IO.FileStream> オブジェクトの関係に似ています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-107">The relationship between the <xref:System.IO.Log.LogStore> class and the <xref:System.IO.Log.LogRecordSequence> class is similar to the relationship between a disk file and a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="3e80f-108">ディスク ファイルは記憶域を提供し、長さや最終アクセス日時などの属性を持つのに対して、<xref:System.IO.FileStream> オブジェクトはファイルに対する読み書きで使用できるファイルに関するビューを提供します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-108">The disk file provides the actual storage and has attributes such as length and last access time, while the <xref:System.IO.FileStream> object provides a view on the file that can be used to read from it and write to it.</span></span> <span data-ttu-id="3e80f-109">同様に、<xref:System.IO.Log.LogStore> クラスはポリシーやディスク エクステントのコレクションなどの属性を持つのに対して、<xref:System.IO.Log.LogRecordSequence> クラスはデータを読み書きするためのレコード指向の機構を提供します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-109">Similarly, the <xref:System.IO.Log.LogStore> class has attributes like a policy and a collection of disk extents, and the <xref:System.IO.Log.LogRecordSequence> class provides a record-oriented mechanism for reading and writing data.</span></span>  
  
 <span data-ttu-id="3e80f-110"><xref:System.IO.Log.FileRecordSequence> クラスにより表されるファイル レコード シーケンスとは異なり、<xref:System.IO.Log.LogStore> インスタンスは <xref:System.IO.Log.LogExtent> インスタンスにより表されるディスク エクステントのコレクションにデータを保存します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-110">Unlike the file record sequence represented by the <xref:System.IO.Log.FileRecordSequence> class, a <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances.</span></span> <span data-ttu-id="3e80f-111">指定の <xref:System.IO.Log.LogStore> インスタンス内のエクステントはすべて、均一のサイズを持ちます。また、エクステントの増加分について、<xref:System.IO.Log.LogStore> インスタンスに対して領域の追加と削除が行われます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-111">The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments.</span></span> <span data-ttu-id="3e80f-112">ログ エクステントを追加および削除するには、<xref:System.IO.Log.LogExtentCollection.Add%2A> プロパティで返される <xref:System.IO.Log.LogExtentCollection.Remove%2A> オブジェクトの <xref:System.IO.Log.LogExtentCollection> メソッドおよび <xref:System.IO.Log.LogStore.Extents%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-112">To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A> and <xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which can be returned by the <xref:System.IO.Log.LogStore.Extents%2A> property.</span></span>  
  
 <span data-ttu-id="3e80f-113"><xref:System.IO.Log.LogStore> インスタンスには、ポリシーを関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-113">A <xref:System.IO.Log.LogStore> instance can have policies associated with it.</span></span> <span data-ttu-id="3e80f-114">これらのポリシーは、<xref:System.IO.Log.LogPolicy> プロパティで返される <xref:System.IO.Log.LogStore.Policy%2A> インスタンスで表されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-114">These are represented by <xref:System.IO.Log.LogPolicy> instances that can be returned by the <xref:System.IO.Log.LogStore.Policy%2A> property.</span></span> <span data-ttu-id="3e80f-115">ポリシーは、エクステントの最大数と最小サイズなど、ログで準拠を試みる規則と、一定条件下での <xref:System.IO.Log.LogStore> の拡大および縮小の手順を決定します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-115">A policy dictates rules that the log will attempt to follow, such as maximum number of extents and minimum size, and instructions on growing or shrinking the <xref:System.IO.Log.LogStore> under certain conditions.</span></span> <span data-ttu-id="3e80f-116">また、<xref:System.IO.Log.LogStore> インスタンスをアーカイブ可能にするかどうかを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-116">In addition, you can specify whether a <xref:System.IO.Log.LogStore> instance can be archived.</span></span> <span data-ttu-id="3e80f-117">ポリシーはログごとに設定され、揮発性を有します。つまり、ログへの各ハンドルを閉じると、ポリシーは存在しなくなります。</span><span class="sxs-lookup"><span data-stu-id="3e80f-117">Policies are set per log and are volatile, which means that once every handle to the log is closed, the policy no longer exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e80f-118">次の例では、<xref:System.IO.Log.LogStore> を XML ドキュメントにアーカイブする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-118">The following example shows how to archive a <xref:System.IO.Log.LogStore> to an XML document.</span></span>  
  
 [!code-csharp[logarchievesnapshot#0](~/samples/snippets/csharp/VS_Snippets_CFX/logarchievesnapshot/cs/logarchievesnapshot.cs#0)]
 [!code-vb[logarchievesnapshot#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/logarchievesnapshot/vb/logarchievesnapshot.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e80f-119"><see cref="T:System.IO.Log.LogStore" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-119">Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogStore (Microsoft.Win32.SafeHandles.SafeFileHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Win32.SafeHandles.SafeFileHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As SafeFileHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogStore(Microsoft::Win32::SafeHandles::SafeFileHandle ^ handle);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogStore : Microsoft.Win32.SafeHandles.SafeFileHandle -&gt; System.IO.Log.LogStore" Usage="new System.IO.Log.LogStore handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="3e80f-120">現在の <see cref="T:System.IO.Log.LogStore" /> オブジェクトによってカプセル化されるログ ファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="3e80f-120">A file handle for the log file that the current <see cref="T:System.IO.Log.LogStore" /> object encapsulates.</span></span></param>
        <summary><span data-ttu-id="3e80f-121">ハンドルを指定して <see cref="T:System.IO.Log.LogStore" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-121">Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class for the specified handle.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e80f-122"><paramref name="handle" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-122"><paramref name="handle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3e80f-123">ログ ハンドルをスレッド プールにバインドできませんでした。</span><span class="sxs-lookup"><span data-stu-id="3e80f-123">The log handle could not be bound to the thread pool.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3e80f-124">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-124">Access for the specified log store is denied by the operating system.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-125">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-125">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="3e80f-126">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-126">There is not enough memory to continue the execution of a program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogStore (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogStore(System::String ^ path, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogStore : string * System.IO.FileMode -&gt; System.IO.Log.LogStore" Usage="new System.IO.Log.LogStore (path, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3e80f-127">開くログ ストアの基本ファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="3e80f-127">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="3e80f-128">ストアを開くか作成する方法を決定する <see cref="T:System.IO.FileMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-128">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <summary><span data-ttu-id="3e80f-129">パスとモードを指定して、<see cref="T:System.IO.Log.LogStore" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-129">Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class with the specified path and mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-130">このコンストラクターを使用して、指定されたパスおよびモードでログ ストアを開きます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-130">Use this constructor to open a log store with the specified path and mode.</span></span> <span data-ttu-id="3e80f-131">ストアは読み取り/書き込みアクセスで開かれ、読み取りアクセスを共有します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-131">The store is opened with read/write access, and shares read access.</span></span>  
  
 <span data-ttu-id="3e80f-132">`path` パラメーターでは、次の構文を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3e80f-132">The `path` parameter should use the following syntax:</span></span>  
  
 `log:<physical log name>[::<log client name>]`  
  
 <span data-ttu-id="3e80f-133">`<physical log name>` はログ ファイルへの有効なパス、`<log client name>` は一意のクライアント識別子です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-133">where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier.</span></span> <span data-ttu-id="3e80f-134">ログ ストアは、物理ログ ストアまたは仮想ログ ストアであることが必要です。ただし、両方である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-134">A log store should be either a physical log store or a virtual log store, but not both.</span></span> <span data-ttu-id="3e80f-135">ログ ストアが物理的または仮想的に作成されると、有効期間にわたり維持されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-135">Once a log store has been created physically or virtually, it remains so for its lifetime.</span></span> <span data-ttu-id="3e80f-136">物理ログ ストアは、物理ログ名を指定することでのみ作成されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-136">A physical log store is created by specifying only the physical log name.</span></span> <span data-ttu-id="3e80f-137">仮想ログ ストアは、物理ログの名前とログ クライアントの名前の両方を指定することにより作成されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-137">A virtual log store is created by specifying both the physical log name and the log client name.</span></span>  
  
 <span data-ttu-id="3e80f-138">同じ物理ログ名を共有するクライアントは、同じエクステント コレクションとポリシーを共有します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-138">Clients that share the same physical log name share the same extents collection and policy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e80f-139"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-139"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e80f-140"><paramref name="path" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-140"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="3e80f-141">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-141">-or-</span></span> 
 <span data-ttu-id="3e80f-142"><paramref name="path" /> には、空白のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-142"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="3e80f-143">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-143">-or-</span></span> 
 <span data-ttu-id="3e80f-144"><paramref name="path" /> には 1 つ以上の無効な文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-144"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e80f-145"><paramref name="mode" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-145"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3e80f-146">ファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-146">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3e80f-147">ログ ストアを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-147">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3e80f-148">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-148">Access for the specified log store is denied by the operating system.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3e80f-149">必要な Common Log File System (CLFS) コンポーネントがインストールされていないため、<see cref="T:System.IO.Log.LogStore" /> を使用できません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-149"><see cref="T:System.IO.Log.LogStore" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="3e80f-150">使用しているプラットフォームで CLFS コンポーネントを使用可能な場合はインストールしてください。または、代わりに <see cref="T:System.IO.Log.FileRecordSequence" /> クラスを使用してください。</span><span class="sxs-lookup"><span data-stu-id="3e80f-150">Install the CLFS component if it is available for your platform or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class instead.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="3e80f-151">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-151">There is not enough memory to continue the execution of a program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogStore (string path, System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogStore(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogStore : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Log.LogStore" Usage="new System.IO.Log.LogStore (path, mode, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3e80f-152">開くログ ストアの基本ファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="3e80f-152">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="3e80f-153">ストアを開くか作成する方法を決定する <see cref="T:System.IO.FileMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-153">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="3e80f-154"><see cref="T:System.IO.FileAccess" /> によりこのファイルにアクセスできる方法を決定する <see cref="T:System.IO.Log.LogStore" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-154">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</span></span></param>
        <summary><span data-ttu-id="3e80f-155">パス、モード、およびアクセスを指定して、<see cref="T:System.IO.Log.LogStore" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-155">Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class with the specified path, mode, and access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-156">このコンストラクターを使用して、指定されたパス、モード、およびアクセスで新しいログ ストアを開きます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-156">Use this constructor to open a new log store with the specified path, mode, and access.</span></span> <span data-ttu-id="3e80f-157">このストアが開き、アクセスを共有します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-157">The store is opened sharing read access.</span></span>  
  
 <span data-ttu-id="3e80f-158">`path` パラメーターでは、次の構文を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3e80f-158">The `path` parameter should use the following syntax:</span></span>  
  
 `log:<physical log name>[::<log client name>]`  
  
 <span data-ttu-id="3e80f-159">`<physical log name>` はログ ファイルへの有効なパス、`<log client name>` は一意のクライアント識別子です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-159">where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier.</span></span> <span data-ttu-id="3e80f-160">ログ ストアは、物理ログ ストアまたは仮想ログ ストアであることが必要です。ただし、両方である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-160">A log store should be either a physical log store or a virtual log store, but not both.</span></span> <span data-ttu-id="3e80f-161">ログ ストアが物理的または仮想的に作成されると、有効期間にわたり維持されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-161">Once a log store has been created physically or virtually, it remains so for its lifetime.</span></span> <span data-ttu-id="3e80f-162">物理ログ ストアは、物理ログ名を指定することでのみ作成されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-162">A physical log store is created by specifying only the physical log name.</span></span> <span data-ttu-id="3e80f-163">仮想ログ ストアは、物理ログの名前とログ クライアントの名前の両方を指定することにより作成されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-163">A virtual log store is created by specifying both the physical log name and the log client name.</span></span>  
  
 <span data-ttu-id="3e80f-164">同じ物理ログ名を共有するクライアントは、同じエクステント コレクションとポリシーを共有します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-164">Clients that share the same physical log name share the same extents collection and policy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e80f-165"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-165"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e80f-166"><paramref name="path" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-166"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="3e80f-167">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-167">-or-</span></span> 
 <span data-ttu-id="3e80f-168"><paramref name="path" /> には、空白のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-168"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="3e80f-169">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-169">-or-</span></span> 
 <span data-ttu-id="3e80f-170"><paramref name="path" /> には 1 つ以上の無効な文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-170"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e80f-171"><paramref name="mode" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-171"><paramref name="mode" /> contains an invalid value.</span></span>  
  
<span data-ttu-id="3e80f-172">-or</span><span class="sxs-lookup"><span data-stu-id="3e80f-172">-or</span></span> 
 <span data-ttu-id="3e80f-173"><paramref name="access" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-173"><paramref name="access" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3e80f-174">ファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-174">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3e80f-175">ログ ストアを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-175">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3e80f-176">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-176">Access for the specified log store is denied by the operating system.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3e80f-177">必要な Common Log File System (CLFS) コンポーネントがインストールされていないため、<see cref="T:System.IO.Log.LogStore" /> を使用できません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-177"><see cref="T:System.IO.Log.LogStore" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="3e80f-178">使用しているプラットフォームで CLFS コンポーネントを使用可能な場合はインストールしてください。または、代わりに <see cref="T:System.IO.Log.FileRecordSequence" /> クラスを使用してください。</span><span class="sxs-lookup"><span data-stu-id="3e80f-178">Install the CLFS component if it is available for your platform or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class instead.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="3e80f-179">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-179">There is not enough memory to continue the execution of a program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogStore (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogStore(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogStore : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Log.LogStore" Usage="new System.IO.Log.LogStore (path, mode, access, share)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3e80f-180">開くログ ストアの基本ファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="3e80f-180">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="3e80f-181">ストアを開くか作成する方法を決定する <see cref="T:System.IO.FileMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-181">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="3e80f-182"><see cref="T:System.IO.FileAccess" /> によりこのファイルにアクセスできる方法を決定する <see cref="T:System.IO.Log.LogStore" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-182">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</span></span></param>
        <param name="share"><span data-ttu-id="3e80f-183">ログ ストアが処理中に共有される方法を指定する <see cref="T:System.IO.FileShare" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-183">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes.</span></span></param>
        <summary><span data-ttu-id="3e80f-184"><see cref="T:System.IO.Log.LogStore" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-184">Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-185">このコンストラクターは、新しい <xref:System.IO.Log.LogStore> オブジェクトを初期化し、指定のパス、モード、およびアクセスと共に開きます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-185">This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access.</span></span> <span data-ttu-id="3e80f-186">このストアが開き、指定のアクセスを共有します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-186">The store is opened sharing the specified access.</span></span>  
  
 <span data-ttu-id="3e80f-187">`path` パラメーターでは、次の構文を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3e80f-187">The `path` parameter should use the following syntax:</span></span>  
  
 `log:<physical log name>[::<log client name>]`  
  
 <span data-ttu-id="3e80f-188">`<physical log name>` はログ ファイルへの有効なパス、`<log client name>` は一意のクライアント識別子です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-188">where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier.</span></span> <span data-ttu-id="3e80f-189">ログ ストアは、物理ログ ストアまたは仮想ログ ストアであることが必要です。ただし、両方である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-189">A log store should be either a physical log store or a virtual log store, but not both.</span></span> <span data-ttu-id="3e80f-190">ログ ストアが物理的または仮想的に作成されると、有効期間にわたり維持されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-190">Once a log store has been created physically or virtually, it remains so for its lifetime.</span></span> <span data-ttu-id="3e80f-191">物理ログ ストアは、物理ログ名を指定することでのみ作成されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-191">A physical log store is created by specifying only the physical log name.</span></span> <span data-ttu-id="3e80f-192">仮想ログ ストアは、物理ログの名前とログ クライアントの名前の両方を指定することにより作成されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-192">A virtual log store is created by specifying both the physical log name and the log client name.</span></span>  
  
 <span data-ttu-id="3e80f-193">同じ物理ログ名を共有するクライアントは、同じエクステント コレクションとポリシーを共有します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-193">Clients that share the same physical log name share the same extents collection and policy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e80f-194"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-194"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e80f-195"><paramref name="path" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-195"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="3e80f-196">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-196">-or-</span></span> 
 <span data-ttu-id="3e80f-197"><paramref name="path" /> には、空白のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-197"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="3e80f-198">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-198">-or-</span></span> 
 <span data-ttu-id="3e80f-199"><paramref name="path" /> には 1 つ以上の無効な文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-199"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e80f-200"><paramref name="mode" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-200"><paramref name="mode" /> contains an invalid value.</span></span>  
  
<span data-ttu-id="3e80f-201">-or</span><span class="sxs-lookup"><span data-stu-id="3e80f-201">-or</span></span> 
 <span data-ttu-id="3e80f-202"><paramref name="access" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-202"><paramref name="access" /> contains an invalid value.</span></span>  
  
<span data-ttu-id="3e80f-203">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-203">-or-</span></span> 
 <span data-ttu-id="3e80f-204"><paramref name="share" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-204"><paramref name="share" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3e80f-205">ファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-205">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3e80f-206">ログ ストアを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-206">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3e80f-207">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-207">Access for the specified log store is denied by the operating system.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3e80f-208">必要な Common Log File System (CLFS) コンポーネントがインストールされていないため、<see cref="T:System.IO.Log.LogStore" /> を使用できません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-208"><see cref="T:System.IO.Log.LogStore" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="3e80f-209">使用しているプラットフォームで CLFS コンポーネントを使用可能な場合はインストールしてください。または、代わりに <see cref="T:System.IO.Log.FileRecordSequence" /> クラスを使用してください。</span><span class="sxs-lookup"><span data-stu-id="3e80f-209">Install the CLFS component if it is available for your platform or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class instead.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="3e80f-210">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-210">There is not enough memory to continue the execution of a program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogStore (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, fileSecurity As FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogStore(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.LogStore : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * System.Security.AccessControl.FileSecurity -&gt; System.IO.Log.LogStore" Usage="new System.IO.Log.LogStore (path, mode, access, share, fileSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3e80f-211">開くログ ストアの基本ファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="3e80f-211">A relative or absolute path for the base file of the log store to open.</span></span></param>
        <param name="mode"><span data-ttu-id="3e80f-212">ストアを開くか作成する方法を決定する <see cref="T:System.IO.FileMode" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-212">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</span></span></param>
        <param name="access"><span data-ttu-id="3e80f-213"><see cref="T:System.IO.FileAccess" /> によりこのファイルにアクセスできる方法を決定する <see cref="T:System.IO.Log.LogStore" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-213">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</span></span></param>
        <param name="share"><span data-ttu-id="3e80f-214">ログ ストアが処理中に共有される方法を指定する <see cref="T:System.IO.FileShare" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-214">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes.</span></span></param>
        <param name="fileSecurity"><span data-ttu-id="3e80f-215">ストアを作成する必要がある場合に、新しく作成したストアに設定するセキュリティを指定する <see cref="T:System.Security.AccessControl.FileSecurity" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="3e80f-215">One of the <see cref="T:System.Security.AccessControl.FileSecurity" /> value that specifies the security to set on the newly created store if the store must be created.</span></span></param>
        <summary><span data-ttu-id="3e80f-216"><see cref="T:System.IO.Log.LogStore" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-216">Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-217">このコンストラクターは、新しい <xref:System.IO.Log.LogStore> オブジェクトを初期化し、指定のパス、モード、およびアクセスと共に開きます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-217">This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access.</span></span> <span data-ttu-id="3e80f-218">このストアが開き、指定のアクセスを共有します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-218">The store is opened sharing the specified access.</span></span> <span data-ttu-id="3e80f-219">`path` パラメーターでは、次の構文を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3e80f-219">The `path` parameter should follow the following syntax:</span></span>  
  
 `log:<physical log name>[::<log client name>]`  
  
 <span data-ttu-id="3e80f-220">`<physical log name>` はログ ファイルへの有効なパス、`<log client name>` は一意のクライアント識別子です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-220">where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier.</span></span> <span data-ttu-id="3e80f-221">ログ ストアは、物理ログ ストアまたは仮想ログ ストアであることが必要です。ただし、両方である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-221">A log store should be either a physical log store or a virtual log store, but not both.</span></span> <span data-ttu-id="3e80f-222">ログ ストアが物理的または仮想的に作成されると、有効期間にわたり維持されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-222">Once a log store has been created physically or virtually, it remains so for its lifetime.</span></span> <span data-ttu-id="3e80f-223">物理ログ ストアは、物理ログ名を指定することでのみ作成されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-223">A physical log store is created by specifying only the physical log name.</span></span> <span data-ttu-id="3e80f-224">仮想ログ ストアは、物理ログの名前とログ クライアントの名前の両方を指定することにより作成されます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-224">A virtual log store is created by specifying both the physical log name and the log client name.</span></span>  
  
 <span data-ttu-id="3e80f-225">同じ物理ログ名を共有するクライアントは、同じエクステント コレクションとポリシーを共有します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-225">Clients that share the same physical log name share the same extents collection and policy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e80f-226"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-226"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e80f-227"><paramref name="path" /> で指定されたログ ストア ファイル名が無効です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-227">The log store file name specified by <paramref name="path" /> is not valid.</span></span>  
  
<span data-ttu-id="3e80f-228">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-228">-or-</span></span> 
 <span data-ttu-id="3e80f-229"><paramref name="Mode" /> が <see langword="CreateNew" /> であるため、書き込みアクセスがなければ使用できません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-229"><paramref name="Mode" /> is <see langword="CreateNew" />, which cannot be used without write access.</span></span>  
  
<span data-ttu-id="3e80f-230">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-230">-or-</span></span> 
 <span data-ttu-id="3e80f-231"><paramref name="Mode" /> が <see langword="OpenOrCreate" /> であるため、書き込みアクセスがなければ使用できません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-231"><paramref name="Mode" /> is <see langword="OpenOrCreate" />, which cannot be used without write access.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e80f-232"><paramref name="mode" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-232"><paramref name="mode" /> contains an invalid value.</span></span>  
  
<span data-ttu-id="3e80f-233">-or</span><span class="sxs-lookup"><span data-stu-id="3e80f-233">-or</span></span> 
 <span data-ttu-id="3e80f-234"><paramref name="access" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-234"><paramref name="access" /> contains an invalid value.</span></span>  
  
<span data-ttu-id="3e80f-235">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-235">-or-</span></span> 
 <span data-ttu-id="3e80f-236"><paramref name="share" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-236"><paramref name="share" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3e80f-237">ファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-237">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3e80f-238">ログ ストアを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-238">An I/O error occurs when opening the log store.</span></span>  
  
<span data-ttu-id="3e80f-239"><paramref name="path" /> で指定されたファイルは他のプロセスで使用中のため、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-239">The file specified by <paramref name="path" /> cannot be accessed because it is in use by another process.</span></span>  
  
<span data-ttu-id="3e80f-240">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-240">-or-</span></span> 
<span data-ttu-id="3e80f-241">ファイルまたはディレクトリが既に存在するため、<paramref name="path" /> で指定されたファイルを作成できません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-241">The file specified by <paramref name="path" /> cannot be created because the file or directory already exists.</span></span>  
  
<span data-ttu-id="3e80f-242">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-242">-or-</span></span> 
<span data-ttu-id="3e80f-243">ログ ハンドルをスレッド プールにバインドできませんでした。</span><span class="sxs-lookup"><span data-stu-id="3e80f-243">The log handle could not be bound to the thread pool.</span></span>  
  
<span data-ttu-id="3e80f-244">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-244">-or-</span></span> 
<span data-ttu-id="3e80f-245">指定されたログ ファイルの形式またはバージョンが無効です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-245">The specified log file format or version is invalid.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3e80f-246">必要な Common Log File System (CLFS) コンポーネントがインストールされていないため、<see cref="T:System.IO.Log.LogStore" /> を使用できません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-246"><see cref="T:System.IO.Log.LogStore" /> cannot be used because the required Common Log File System (CLFS) component is not installed.</span></span> <span data-ttu-id="3e80f-247">使用しているプラットフォームで CLFS コンポーネントを使用可能な場合はインストールしてください。または、代わりに <see cref="T:System.IO.Log.FileRecordSequence" /> クラスを使用してください。</span><span class="sxs-lookup"><span data-stu-id="3e80f-247">Install the CLFS component if it is available for your platform or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class instead.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-248">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-248">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="3e80f-249">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-249">There is not enough memory to continue the execution of a program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="3e80f-250">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="3e80f-250">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3e80f-251">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-251">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Archivable">
      <MemberSignature Language="C#" Value="public bool Archivable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archivable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogStore.Archivable" />
      <MemberSignature Language="VB.NET" Value="Public Property Archivable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archivable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Archivable : bool with get, set" Usage="System.IO.Log.LogStore.Archivable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e80f-252">この <see cref="T:System.IO.Log.LogStore" /> インスタンスがアーカイブ可能であるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-252">Gets a value indicating whether this <see cref="T:System.IO.Log.LogStore" /> instance can be archived.</span></span></summary>
        <value><span data-ttu-id="3e80f-253">この <see langword="true" /> インスタンスがアーカイブ可能である場合は <see cref="T:System.IO.Log.LogStore" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e80f-253"><see langword="true" /> if this <see cref="T:System.IO.Log.LogStore" /> instance can be archived; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-254"><xref:System.IO.Log.LogStore> がアーカイブ可能でない場合、<xref:System.IO.Log.LogStore.CreateLogArchiveSnapshot%2A> メソッドおよび <xref:System.IO.Log.LogStore.SetArchiveTail%2A> メソッドを呼び出すと、<xref:System.NotSupportedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-254">If a <xref:System.IO.Log.LogStore> is not archivable, calls to the <xref:System.IO.Log.LogStore.CreateLogArchiveSnapshot%2A> and <xref:System.IO.Log.LogStore.SetArchiveTail%2A> methods result in a <xref:System.NotSupportedException> being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-255">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-255">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogStore.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogStore.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e80f-256">この <see cref="T:System.IO.Log.LogStore" /> インスタンス内の有効なレコードに対応する下限のシーケンス番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-256">Gets the lowest sequence number that corresponds to a valid record in this <see cref="T:System.IO.Log.LogStore" /> instance.</span></span></summary>
        <value><span data-ttu-id="3e80f-257">この <see cref="T:System.IO.Log.LogStore" /> インスタンス内の有効なレコードに対応する下限のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="3e80f-257">The lowest sequence number that corresponds to a valid record in this <see cref="T:System.IO.Log.LogStore" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-258">有効なシーケンス番号は、<xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> 以上、<xref:System.IO.Log.LogStore.LastSequenceNumber%2A> 未満です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-258">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-259">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-259">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateLogArchiveSnapshot">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e80f-260">バックアップの作成に必要なログ ストア状態のスナップショットを取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-260">Takes a snapshot of the log store state necessary to make a backup.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateLogArchiveSnapshot">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogArchiveSnapshot CreateLogArchiveSnapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Log.LogArchiveSnapshot CreateLogArchiveSnapshot() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLogArchiveSnapshot () As LogArchiveSnapshot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::LogArchiveSnapshot ^ CreateLogArchiveSnapshot();" />
      <MemberSignature Language="F#" Value="member this.CreateLogArchiveSnapshot : unit -&gt; System.IO.Log.LogArchiveSnapshot" Usage="logStore.CreateLogArchiveSnapshot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogArchiveSnapshot</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e80f-261">バックアップを作成するために、ログ ストア状態のスナップショットを取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-261">Takes a snapshot of the log store state for making a backup.</span></span></summary>
        <returns><span data-ttu-id="3e80f-262">アーカイブを作成するのに必要な状態を格納する <see cref="T:System.IO.Log.LogArchiveSnapshot" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3e80f-262">A <see cref="T:System.IO.Log.LogArchiveSnapshot" /> object that contains the state necessary to make an archive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e80f-263">次の例では、<xref:System.IO.Log.LogStore> を XML ドキュメントにアーカイブする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-263">The following example shows how to archive a <xref:System.IO.Log.LogStore> to an XML document.</span></span>  
  
 [!code-csharp[logarchievesnapshot#0](~/samples/snippets/csharp/VS_Snippets_CFX/logarchievesnapshot/cs/logarchievesnapshot.cs#0)]
 [!code-vb[logarchievesnapshot#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/logarchievesnapshot/vb/logarchievesnapshot.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3e80f-264">ログ ストアはアーカイブできません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-264">The log store is not archivable.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-265">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-265">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3e80f-266">アーカイブ スナップショットの作成時に I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-266">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e80f-267">引数が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-267">An argument is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3e80f-268">無効な操作が実行されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-268">An invalid operation has been executed.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="3e80f-269">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-269">There is not enough memory to continue the execution of a program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="3e80f-270">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="3e80f-270">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3e80f-271">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-271">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateLogArchiveSnapshot">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogArchiveSnapshot CreateLogArchiveSnapshot (System.IO.Log.SequenceNumber first, System.IO.Log.SequenceNumber last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Log.LogArchiveSnapshot CreateLogArchiveSnapshot(valuetype System.IO.Log.SequenceNumber first, valuetype System.IO.Log.SequenceNumber last) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLogArchiveSnapshot (first As SequenceNumber, last As SequenceNumber) As LogArchiveSnapshot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::LogArchiveSnapshot ^ CreateLogArchiveSnapshot(System::IO::Log::SequenceNumber first, System::IO::Log::SequenceNumber last);" />
      <MemberSignature Language="F#" Value="member this.CreateLogArchiveSnapshot : System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber -&gt; System.IO.Log.LogArchiveSnapshot" Usage="logStore.CreateLogArchiveSnapshot (first, last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogArchiveSnapshot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="last" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="first"><span data-ttu-id="3e80f-272">アーカイブする範囲の開始シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="3e80f-272">The starting sequence number in the range to archive.</span></span></param>
        <param name="last"><span data-ttu-id="3e80f-273">アーカイブする範囲の終了シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="3e80f-273">The ending sequence number in the range to archive.</span></span></param>
        <summary><span data-ttu-id="3e80f-274">バックアップを作成するために、指定されたシーケンス番号範囲のログ ストア状態のスナップショットを取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-274">Takes a snapshot of the log store state between the specified sequence numbers for making a backup.</span></span></summary>
        <returns><span data-ttu-id="3e80f-275">アーカイブを作成するのに必要な状態を格納する <see cref="T:System.IO.Log.LogArchiveSnapshot" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3e80f-275">A <see cref="T:System.IO.Log.LogArchiveSnapshot" /> object that contains the state necessary to make an archive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-276">このメソッドから返されるアーカイブ スナップショットには、基本シーケンス番号またはアーカイブ シーケンス番号のどちらか小さい方から最後のシーケンス番号までの情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-276">The archive snapshot returned from this method encompasses information from either the base sequence number or the archive sequence number, whichever is lower, to the last sequence number.</span></span> <span data-ttu-id="3e80f-277">ただし、アーカイブのレコードには、最後のシーケンス番号は含まれません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-277">It is not inclusive for the last sequence number, which means that the archive only includes records up to but not including last.</span></span> <span data-ttu-id="3e80f-278">また、このメソッドを使用する場合、アーカイブの一貫性を保つには、開始 SequenceNumber を BaseSequenceNumber と同じ値にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3e80f-278">In addition, when using this method, the start SequenceNumber must be equal to the BaseSequenceNumber in order for the archive to be consistent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e80f-279"><paramref name="first" /> または <paramref name="last" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-279"><paramref name="first" /> or <paramref name="last" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e80f-280"><paramref name="first" /> が <paramref name="last" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="3e80f-280"><paramref name="first" /> is larger than <paramref name="last" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3e80f-281">無効な操作が実行されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-281">An invalid operation has been executed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3e80f-282">アーカイブ スナップショットの作成時に I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-282">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3e80f-283">ログ ストアはアーカイブできません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-283">The log store is not archivable.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-284">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-284">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="3e80f-285">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-285">There is not enough memory to continue the execution of a program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="3e80f-286">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="3e80f-286">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3e80f-287">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-287">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.IO.Log.LogStore.Delete path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3e80f-288">削除するログ ストアの基本ファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="3e80f-288">A relative or absolute path for the base file of the log store to remove.</span></span></param>
        <summary><span data-ttu-id="3e80f-289">ログ ストアを削除します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-289">Removes the log store.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e80f-290"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-290"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e80f-291"><paramref name="path" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-291"><paramref name="path" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="3e80f-292">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-292">-or-</span></span> 
 <span data-ttu-id="3e80f-293"><paramref name="path" /> には、空白のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-293"><paramref name="path" /> contains only white space.</span></span>  
  
<span data-ttu-id="3e80f-294">または</span><span class="sxs-lookup"><span data-stu-id="3e80f-294">-or-</span></span> 
 <span data-ttu-id="3e80f-295"><paramref name="path" /> には 1 つ以上の無効な文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-295"><paramref name="path" /> contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3e80f-296">ファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-296">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3e80f-297">ログ ストアを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-297">An I/O error occurs when opening the log store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3e80f-298">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-298">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="logStore.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e80f-299"><see cref="T:System.IO.Log.LogStore" /> で使用されるすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-299">Releases all resources used by the <see cref="T:System.IO.Log.LogStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-300"><xref:System.IO.Log.LogStore.Dispose%2A> は、<xref:System.IO.Log.LogStore> の使用が完了したときに呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-300">Call <xref:System.IO.Log.LogStore.Dispose%2A> when you have finished using the <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="3e80f-301"><xref:System.IO.Log.LogStore.Dispose%2A>メソッドによって、<xref:System.IO.Log.LogStore> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="3e80f-301">The <xref:System.IO.Log.LogStore.Dispose%2A> method leaves the <xref:System.IO.Log.LogStore> in an unusable state.</span></span> <span data-ttu-id="3e80f-302"><xref:System.IO.Log.LogStore.Dispose%2A> を呼び出した後で、<xref:System.IO.Log.LogStore> へのすべての参照を解放し、<xref:System.IO.Log.LogStore> によって占有されていたメモリをガベージ コレクターがクリアできるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3e80f-302">After calling <xref:System.IO.Log.LogStore.Dispose%2A> , you must release all references to the <xref:System.IO.Log.LogStore> so the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogStore> was occupying.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3e80f-303"><xref:System.IO.Log.LogStore.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.IO.Log.LogStore> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="3e80f-303">Always call <xref:System.IO.Log.LogStore.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="3e80f-304">そうしないと、ガベージ コレクターが <xref:System.IO.Log.LogStore> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-304">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Log.LogStore> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-305">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-305">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Extents">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogExtentCollection Extents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Log.LogExtentCollection Extents" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogStore.Extents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extents As LogExtentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::LogExtentCollection ^ Extents { System::IO::Log::LogExtentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extents : System.IO.Log.LogExtentCollection" Usage="System.IO.Log.LogStore.Extents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogExtentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e80f-306">このログ ストアのデータを格納しているログ エクステントのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-306">Gets the collection of log extents that contain the data for this log store.</span></span></summary>
        <value><span data-ttu-id="3e80f-307">このログ ストアのデータをカプセル化したログ エクステントのコレクションを格納している <see cref="T:System.IO.Log.LogExtentCollection" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="3e80f-307">A <see cref="T:System.IO.Log.LogExtentCollection" /> instance containing the collection of log extents that encapsulates data for this log store.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-308"><xref:System.IO.Log.LogStore> インスタンスは、<xref:System.IO.Log.LogExtent> により表されるディスク エクステントのコレクションにデータを保存します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-308">A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances.</span></span> <span data-ttu-id="3e80f-309">指定の <xref:System.IO.Log.LogStore> インスタンス内のエクステントはすべて、均一のサイズを持ちます。また、エクステントの増加分について、<xref:System.IO.Log.LogStore> インスタンスに対して領域の追加と削除が行われます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-309">The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments.</span></span> <span data-ttu-id="3e80f-310">ログ エクステントを追加および削除するには、このプロパティで返される <xref:System.IO.Log.LogExtentCollection.Add%2A> オブジェクトの <xref:System.IO.Log.LogExtentCollection.Remove%2A> メソッドおよび <xref:System.IO.Log.LogExtentCollection> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-310">To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A> and <xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which is returned by this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeBytes">
      <MemberSignature Language="C#" Value="public long FreeBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FreeBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogStore.FreeBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FreeBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long FreeBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.FreeBytes : int64" Usage="System.IO.Log.LogStore.FreeBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e80f-311">ログ ストアで使用可能なバイト数を取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-311">Gets the number of bytes available in the log store.</span></span></summary>
        <value><span data-ttu-id="3e80f-312">ログ ストアで使用可能なバイト数。</span><span class="sxs-lookup"><span data-stu-id="3e80f-312">The number of bytes available in the log store.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-313">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-313">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeFileHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeFileHandle Handle" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogStore.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeFileHandle ^ Handle { Microsoft::Win32::SafeHandles::SafeFileHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.Log.LogStore.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e80f-314">現在の <see cref="T:System.IO.Log.LogStore" /> インスタンスによってカプセル化されるログ ファイルのオペレーティング システム ファイル ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-314">Gets the operating system file handle for the log file that the current <see cref="T:System.IO.Log.LogStore" /> instance encapsulates.</span></span></summary>
        <value><span data-ttu-id="3e80f-315">現在の <see cref="T:System.IO.Log.LogStore" /> インスタンスによってカプセル化されるログ ファイルのオペレーティング システム ファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="3e80f-315">The operating system file handle for the log file that the current <see cref="T:System.IO.Log.LogStore" /> instance encapsulates.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogStore.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.LogStore.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e80f-316">派生クラスでオーバーライドされると、ログ ストアに追加される次のレコードのシーケンス番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-316">When overridden in a derived class, gets the sequence number of the next record to be appended to the log store.</span></span></summary>
        <value><span data-ttu-id="3e80f-317">ログ ストアに追加される次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="3e80f-317">The sequence number of the next record to be appended to the log store.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-318">有効なシーケンス番号は、<xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> 以上、<xref:System.IO.Log.LogStore.LastSequenceNumber%2A> 未満です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-318">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-319">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-319">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogStore.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Log.LogStore.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e80f-320">ログ ストアのサイズをバイト単位で取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-320">Gets the size of the log store, in bytes.</span></span></summary>
        <value><span data-ttu-id="3e80f-321">ログ ストアのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="3e80f-321">The size of the log store, in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-322">ログ ストアのサイズは、ログ エクステントのサイズの合計です。</span><span class="sxs-lookup"><span data-stu-id="3e80f-322">The size of the log store is the sum of the sizes of the log extents.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-323">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-323">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogPolicy Policy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Log.LogPolicy Policy" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogStore.Policy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Policy As LogPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::LogPolicy ^ Policy { System::IO::Log::LogPolicy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Policy : System.IO.Log.LogPolicy" Usage="System.IO.Log.LogStore.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e80f-324">このログ ストアに関連付けられたポリシーを取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-324">Gets the policy associated with this log store.</span></span></summary>
        <value><span data-ttu-id="3e80f-325">このログ ストアに関連付けられたポリシーを表す <see cref="T:System.IO.Log.LogPolicy" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="3e80f-325">A <see cref="T:System.IO.Log.LogPolicy" /> instance representing the policy associated with this log store.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-326">このプロパティによって返される <xref:System.IO.Log.LogPolicy> インスタンスを使用して、<xref:System.IO.Log.LogStore> に関連付けられたログ ポリシーを確認および操作できます。</span><span class="sxs-lookup"><span data-stu-id="3e80f-326">You can use the <xref:System.IO.Log.LogPolicy> instance returned by this property to examine and manipulate the log policy associated with this <xref:System.IO.Log.LogStore>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetArchiveTail">
      <MemberSignature Language="C#" Value="public void SetArchiveTail (System.IO.Log.SequenceNumber archiveTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetArchiveTail(valuetype System.IO.Log.SequenceNumber archiveTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogStore.SetArchiveTail(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetArchiveTail (archiveTail As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetArchiveTail(System::IO::Log::SequenceNumber archiveTail);" />
      <MemberSignature Language="F#" Value="member this.SetArchiveTail : System.IO.Log.SequenceNumber -&gt; unit" Usage="logStore.SetArchiveTail archiveTail" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveTail" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="archiveTail"><span data-ttu-id="3e80f-327">アーカイブ末尾のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="3e80f-327">The sequence number of the archive tail.</span></span></param>
        <summary><span data-ttu-id="3e80f-328">アーカイブ末尾のシーケンス番号を設定します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-328">Sets the sequence number of the archive tail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e80f-329">基本シーケンス番号とアーカイブ末尾のどちらか小さい方によってログの末尾が決まります。</span><span class="sxs-lookup"><span data-stu-id="3e80f-329">The smaller of the base sequence number and the archive tail determines the tail of the log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e80f-330">次の例では、<xref:System.IO.Log.LogStore> を XML ドキュメントにアーカイブする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-330">The following example shows how to archive a <xref:System.IO.Log.LogStore> to an XML document.</span></span>  
  
 [!code-csharp[logarchievesnapshot#0](~/samples/snippets/csharp/VS_Snippets_CFX/logarchievesnapshot/cs/logarchievesnapshot.cs#0)]
 [!code-vb[logarchievesnapshot#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/logarchievesnapshot/vb/logarchievesnapshot.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e80f-331"><paramref name="archiveTail" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-331"><paramref name="archiveTail" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e80f-332"><paramref name="archiveTail" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-332"><paramref name="archiveTail" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3e80f-333">無効な操作が実行されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-333">An invalid operation has been executed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3e80f-334">アーカイブ スナップショットの作成時に I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-334">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3e80f-335">ログ ストアはアーカイブできません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-335">The log store is not archivable.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3e80f-336">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-336">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="3e80f-337">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="3e80f-337">There is not enough memory to continue the execution of a program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3e80f-338">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="3e80f-338">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StreamCount">
      <MemberSignature Language="C#" Value="public int StreamCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StreamCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogStore.StreamCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StreamCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StreamCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StreamCount : int" Usage="System.IO.Log.LogStore.StreamCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e80f-339">このログ ストアのログ ストリームの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="3e80f-339">Gets the number of log streams in this log store.</span></span></summary>
        <value><span data-ttu-id="3e80f-340">このログ ストアのログ ストリームの数。</span><span class="sxs-lookup"><span data-stu-id="3e80f-340">The number of log streams in this log store.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
