<Type Name="ActionBlock&lt;TInput&gt;" FullName="System.Threading.Tasks.Dataflow.ActionBlock&lt;TInput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d23a89dcad15628b5ab524e454238b025a8ecc5" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82319871" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActionBlock&lt;TInput&gt; : System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActionBlock`1&lt;TInput&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TInput&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActionBlock(Of TInput)&#xA;Implements ITargetBlock(Of TInput)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput&gt;&#xA;public ref class ActionBlock sealed : System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="F#" Value="type ActionBlock&lt;'Input&gt; = class&#xA;    interface ITargetBlock&lt;'Input&gt;&#xA;    interface IDataflowBlock" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type ActionBlock&lt;'Input&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface ITargetBlock&lt;'Input&gt;" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
    <AssemblyVersion>4.6.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayContent,nq}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.Dataflow.ActionBlock`1/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput"><span data-ttu-id="58025-101">この <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> が動作するデータの型。</span><span class="sxs-lookup"><span data-stu-id="58025-101">The type of data that this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> operates on.</span></span></typeparam>
    <summary><span data-ttu-id="58025-102">すべての受信データ要素の <see cref="T:System.Action`1" /> の指定されたデリゲートを呼び出すデータ フローのブロックを提供します。</span><span class="sxs-lookup"><span data-stu-id="58025-102">Provides a dataflow block that invokes a provided <see cref="T:System.Action`1" /> delegate for every data element received.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
## Examples  
 <span data-ttu-id="58025-103">次の例は、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601> クラスを使用して、データフローブロックを使用して複数の計算を実行し、計算の実行に必要な経過時間を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="58025-103">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> class to perform several computations using dataflow blocks, and returns the elapsed time required to perform the computations.</span></span> <span data-ttu-id="58025-104">このコード例は、「[方法: データフローブロックで並列処理の次数を指定する](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)」で提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="58025-104">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="58025-105">受信した各データ要素で呼び出す操作。</span><span class="sxs-lookup"><span data-stu-id="58025-105">The action to invoke with each data element received.</span></span></param>
        <summary><span data-ttu-id="58025-106">指定したアクションを使用して、<see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="58025-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58025-107"><paramref name="action" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="58025-107"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="58025-108">受信した各データ要素で呼び出す操作。</span><span class="sxs-lookup"><span data-stu-id="58025-108">The action to invoke with each data element received.</span></span></param>
        <summary><span data-ttu-id="58025-109">指定したアクションを使用して、<see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="58025-109">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58025-110"><paramref name="action" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="58025-110"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="58025-111">受信した各データ要素で呼び出す操作。</span><span class="sxs-lookup"><span data-stu-id="58025-111">The action to invoke with each data element received.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="58025-112">この <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> の構成に使用するオプション。</span><span class="sxs-lookup"><span data-stu-id="58025-112">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span></span></param>
        <summary><span data-ttu-id="58025-113">指定したアクションと構成オプションを使用して、<see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="58025-113">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="58025-114">次の例では、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> コンストラクターを使用して、新しい <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> オブジェクトを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="58025-114">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> constructor to create a new <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> object.</span></span> <span data-ttu-id="58025-115">このコード例は、「[方法: データフローブロックで並列処理の次数を指定する](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)」で提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="58025-115">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58025-116"><paramref name="action" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="58025-116"><paramref name="action" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="58025-117">または</span><span class="sxs-lookup"><span data-stu-id="58025-117">-or-</span></span> 
 <span data-ttu-id="58025-118"><paramref name="dataflowBlockOptions" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="58025-118"><paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="58025-119">受信した各データ要素で呼び出す操作。</span><span class="sxs-lookup"><span data-stu-id="58025-119">The action to invoke with each data element received.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="58025-120">この <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> の構成に使用するオプション。</span><span class="sxs-lookup"><span data-stu-id="58025-120">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span></span></param>
        <summary><span data-ttu-id="58025-121">指定したアクションと構成オプションを使用して、<see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="58025-121">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58025-122"><paramref name="action" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="58025-122"><paramref name="action" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="58025-123">または</span><span class="sxs-lookup"><span data-stu-id="58025-123">-or-</span></span> 
 <span data-ttu-id="58025-124"><paramref name="dataflowBlockOptions" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="58025-124"><paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="actionBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58025-125">これ以上メッセージを受け付けまたは生成せず、延期メッセージを使用しないことをデータ フロー ブロックに通知します。</span><span class="sxs-lookup"><span data-stu-id="58025-125">Signals to the dataflow block  that it shouldn't accept or produce any more messages and shouldn't consume any more postponed messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58025-126">データフローブロックで <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> が呼び出された後、そのブロックは、以前に使用可能なすべてのデータを処理した後に、その <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> タスクが最終的な状態になるように完了します。</span><span class="sxs-lookup"><span data-stu-id="58025-126">After <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> has been called on a dataflow block, that block will complete (so that its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state) after it has processed all previously available data.</span></span> <span data-ttu-id="58025-127">このメソッドは、完了するのを待機するのをブロックしませんが、要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="58025-127">This method will not block waiting for completion to occur, but will initiate the request.</span></span> <span data-ttu-id="58025-128">完了するまで待機するには、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="58025-128">To wait for completion to occur, use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58025-129">次の例では、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> メソッドを使用して、それ以上メッセージを受け入れたり生成したり、延期されたメッセージを使用したりしないことをデータフローブロックに通知します。</span><span class="sxs-lookup"><span data-stu-id="58025-129">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> method to signal to the dataflow block  that it shouldn't accept or produce any more messages nor consume any more postponed messages.</span></span> <span data-ttu-id="58025-130">このコード例は、「[方法: データフローブロックで並列処理の次数を指定する](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)」で提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="58025-130">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58025-131">データ フロー ブロックの非同期操作と完了を表す <see cref="T:System.Threading.Tasks.Task" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="58025-131">Gets a  <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation and completion of the dataflow block.</span></span></summary>
        <value><span data-ttu-id="58025-132">完了したタスク。</span><span class="sxs-lookup"><span data-stu-id="58025-132">The completed task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58025-133">データフローブロックは、現在メッセージを処理しておらず、それ以上メッセージを処理しないことが保証されている場合に、完了したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="58025-133">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="58025-134">関連付けられたブロックが完了すると、返された <xref:System.Threading.Tasks.Task> は完了状態に遷移します。</span><span class="sxs-lookup"><span data-stu-id="58025-134">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state  when the associated block has completed.</span></span> <span data-ttu-id="58025-135">データフローブロックの定義されたセマンティクスに従ってブロックが正常に処理を完了すると、<xref:System.Threading.Tasks.TaskStatus.RanToCompletion> 状態に遷移します。</span><span class="sxs-lookup"><span data-stu-id="58025-135">It will transition to the <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block's defined semantics.</span></span> <span data-ttu-id="58025-136">処理されない例外が原因でデータフローブロックが途中で処理を完了し、キャンセル要求を受け取った後にデータフローブロックの処理が完了していない場合は、<xref:System.Threading.Tasks.TaskStatus.Faulted> 状態に遷移 <xref:System.Threading.Tasks.TaskStatus.Canceled> します。</span><span class="sxs-lookup"><span data-stu-id="58025-136">It will transition to the <xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the  <xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely after receiving a cancellation request.</span></span> <span data-ttu-id="58025-137">タスクが <xref:System.Threading.Tasks.TaskStatus.Faulted> 状態で完了した場合、その `Exception` プロパティは、ブロックが失敗する原因となった例外を1つ以上含む <xref:System.AggregateException> 例外を返します。</span><span class="sxs-lookup"><span data-stu-id="58025-137">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property returns an <xref:System.AggregateException> exception that contains one or more exceptions that caused the block to fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58025-138">次の例では、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> プロパティを使用して、すべてのメッセージがネットワーク経由で伝達されるのを待機する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="58025-138">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property to wait for all messages to propagate through the network.</span></span> <span data-ttu-id="58025-139">このコード例は、「[方法: データフローブロックで並列処理の次数を指定する](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)」で提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="58025-139">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputCount">
      <MemberSignature Language="C#" Value="public int InputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputCount : int" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.InputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58025-140">このブロックで処理するために待機している入力項目の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="58025-140">Gets the number of input items waiting to be processed by this block.</span></span></summary>
        <value><span data-ttu-id="58025-141">このブロックで処理するために待機している入力項目の数。</span><span class="sxs-lookup"><span data-stu-id="58025-141">The number of input items waiting to be processed by this block.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58025-142"><xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> には、ブロックによって現在処理されている項目や、ブロックによって既に処理されている項目は含まれません。</span><span class="sxs-lookup"><span data-stu-id="58025-142">The <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> does not include any items that are currently being processed by the block or any items that have already been processed by the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public bool Post (TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Post(!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Post (item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Post(TInput item);" />
      <MemberSignature Language="F#" Value="member this.Post : 'Input -&gt; bool" Usage="actionBlock.Post item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="58025-143">ターゲットに提供される項目。</span><span class="sxs-lookup"><span data-stu-id="58025-143">The item being offered to the target.</span></span></param>
        <summary><span data-ttu-id="58025-144">ターゲット データ フロー ブロックに項目をポストします。</span><span class="sxs-lookup"><span data-stu-id="58025-144">Posts an item to the target dataflow block.</span></span></summary>
        <returns><span data-ttu-id="58025-145">項目がデータフロー ブロックにポストされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58025-145"><see langword="true" /> if the item is posted to the dataflow block; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="58025-146">次の例は、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> メソッドを使用して、対象のデータフローブロックに項目をポストする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="58025-146">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> method to post an item to the target dataflow block.</span></span> <span data-ttu-id="58025-147">このコード例は、「[方法: データフローブロックで並列処理の次数を指定する](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)」で提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="58025-147">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Sub Fault (exception As Exception) Implements IDataflowBlock.Fault" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberSignature Language="F#" Value="abstract member System.Threading.Tasks.Dataflow.IDataflowBlock.Fault : Exception -&gt; unit&#xA;override this.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault : Exception -&gt; unit" Usage="actionBlock.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault exception" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="58025-148">このエラーの原因となった例外。</span><span class="sxs-lookup"><span data-stu-id="58025-148">The exception that caused the faulting.</span></span></param>
        <summary><span data-ttu-id="58025-149">データフロー ブロックが違反状態で完了します。</span><span class="sxs-lookup"><span data-stu-id="58025-149">Causes the dataflow block to complete in a faulted state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58025-150">データフローブロックで <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> が呼び出されると、そのブロックが完了し、その <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> タスクが最終的な状態になります。</span><span class="sxs-lookup"><span data-stu-id="58025-150">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete and its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="58025-151">ブロックのキャンセルと同様にブロックがエラーになると、バッファー内のメッセージ (未処理の入力メッセージと unoffered 出力メッセージ) が失われます。</span><span class="sxs-lookup"><span data-stu-id="58025-151">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58025-152"><paramref name="exception" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="58025-152"><paramref name="exception" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;TInput&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of TInput), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of TInput).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, TInput messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TInput&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;::OfferMessage;" />
      <MemberSignature Language="F#" Value="abstract member System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * 'Input * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Input&gt; * bool -&gt; System.Threading.Tasks.Dataflow.DataflowMessageStatus&#xA;override this.System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * 'Input * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Input&gt; * bool -&gt; System.Threading.Tasks.Dataflow.DataflowMessageStatus" Usage="actionBlock.System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage (messageHeader, messageValue, source, consumeToAccept)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="58025-153">提供されるメッセージのヘッダー。</span><span class="sxs-lookup"><span data-stu-id="58025-153">The header of the message being offered.</span></span></param>
        <param name="messageValue"><span data-ttu-id="58025-154">提供されるメッセージの値。</span><span class="sxs-lookup"><span data-stu-id="58025-154">The value of the message being offered.</span></span></param>
        <param name="source"><span data-ttu-id="58025-155">メッセージを伝えているデータフローのブロック。</span><span class="sxs-lookup"><span data-stu-id="58025-155">The dataflow block that is offering the message.</span></span> <span data-ttu-id="58025-156"><see langword="null" /> でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="58025-156">This may be <see langword="null" />.</span></span></param>
        <param name="consumeToAccept"><span data-ttu-id="58025-157">メッセージを使用するために、<see langword="true" /> を返す前に <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> の呼び出し中に <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> を同期的に呼び出すようにターゲットに指示する場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58025-157"><see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="58025-158">メッセージをデータ フローのブロックに提供し、メッセージを使用するか、または延期する機会を与えます。</span><span class="sxs-lookup"><span data-stu-id="58025-158">Offers a message to the dataflow block, and gives it the opportunity to consume or postpone the message.</span></span></summary>
        <returns><span data-ttu-id="58025-159">提供されたメッセージのステータス。</span><span class="sxs-lookup"><span data-stu-id="58025-159">The status of the offered message.</span></span>  <span data-ttu-id="58025-160">メッセージがターゲットによって受け入れられた場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> が返されます。メッセージはターゲットに所有されるようになったので、ソースは提供されたメッセージを使用しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="58025-160">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span></span> <span data-ttu-id="58025-161">メッセージがターゲットによって延期された場合、ターゲットが後でメッセージの使用または予約を試みる可能性があることを示す通知として <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> が返されます。その間、ソースはそのメッセージを引き続き所有し、他のブロックに提供する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="58025-161">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span></span>  
  
<span data-ttu-id="58025-162">ターゲットがメッセージを遅延するはずだったのに、ソースが <see langword="null" /> だった場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="58025-162">If the target would have otherwise postponed message, but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span></span>  
  
<span data-ttu-id="58025-163">ターゲットがメッセージを受け入れようとしたが、ソースが別のターゲットにメッセージを配信したか、単純に破棄したため、受け入れることができなかった場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="58025-163">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span></span>  
  
<span data-ttu-id="58025-164">ターゲットがメッセージを受け入れなかった場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="58025-164">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span></span> <span data-ttu-id="58025-165">ターゲットがメッセージを受け入れず、今後、このソースからの別のメッセージを受け入れない場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="58025-165">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="58025-166"><paramref name="messageHeader" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="58025-166"><paramref name="messageHeader" /> is not valid.</span></span>  
  
<span data-ttu-id="58025-167">または、<paramref name="consumeToAccept" /> は、<see langword="true" /> の値が null 以外である場合にのみ <paramref name="source" /> にすることができます。</span><span class="sxs-lookup"><span data-stu-id="58025-167">-or- <paramref name="consumeToAccept" /> may be <see langword="true" /> only if provided with a non-null <paramref name="source" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="actionBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58025-168">この <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> インスタンスの書式設定された名前を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="58025-168">Returns a string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></summary>
        <returns><span data-ttu-id="58025-169">この <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> インスタンスの書式設定された名前を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="58025-169">A string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58025-170"><xref:System.Object> から継承されます。</span><span class="sxs-lookup"><span data-stu-id="58025-170">Inherited from <xref:System.Object>.</span></span> <span data-ttu-id="58025-171"><xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> オプションを使用します。</span><span class="sxs-lookup"><span data-stu-id="58025-171">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
