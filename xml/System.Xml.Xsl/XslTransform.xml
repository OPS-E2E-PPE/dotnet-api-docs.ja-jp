<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="623c102e7f222a5fdd2805edfe6d783f75361c76" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83529112" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fa621-101">XSLT (Extensible Stylesheet Language Transformations) スタイル シートを使用して XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="fa621-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-102"><xref:System.Xml.Xsl.XslTransform> クラスは、Microsoft .NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-103"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-104">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-105"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-106">XSLT スタイルシートでは、`http://www.w3.org/1999/XSL/Transform`名前空間を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-107"><xref:System.Xml.Xsl.XsltArgumentList> クラスを使用して、追加の引数をスタイルシートに追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="fa621-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="fa621-108">このクラスには、スタイルシートと拡張オブジェクトの入力パラメーターが含まれています。これは、スタイルシートから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="fa621-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="fa621-109">XML データを変換するには:</span><span class="sxs-lookup"><span data-stu-id="fa621-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="fa621-110"><xref:System.Xml.Xsl.XslTransform> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="fa621-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="fa621-111"><xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドを使用して、変換のスタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="fa621-112">このメソッドにはいくつかのオーバーロードがあり、<xref:System.Xml.XmlReader>、<xref:System.Xml.XPath.XPathNavigator>、<xref:System.Xml.XPath.IXPathNavigable>、またはファイルの場所を含む URL を使用してスタイルシートを読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="fa621-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="fa621-113"><xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用して、XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="fa621-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="fa621-114">このメソッドにはいくつかのオーバーロードがあり、さまざまな種類の入力と出力を処理できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="fa621-115">変換中に入力として使用する追加の引数を含む <xref:System.Xml.Xsl.XsltArgumentList> を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="fa621-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="fa621-116">**セキュリティに関する考慮事項**</span><span class="sxs-lookup"><span data-stu-id="fa621-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="fa621-117"><xref:System.Xml.Xsl.XslTransform> クラスを使用するアプリケーションを作成するときには、次の項目とその関連事項に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="fa621-118">拡張オブジェクトは既定で有効になっています。</span><span class="sxs-lookup"><span data-stu-id="fa621-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="fa621-119">拡張オブジェクトを含む <xref:System.Xml.Xsl.XsltArgumentList> オブジェクトが <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡されると、拡張オブジェクトは使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="fa621-120">XSLT スタイル シートには、他のファイルへの参照や埋め込みのスクリプト ブロックを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="fa621-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="fa621-121">悪意のあるユーザーがこの問題を悪用する可能性があります。これを実行すると、コンピューターがリソース不足になるまでシステムが処理されるデータまたはスタイルシートが提供されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="fa621-122">混在信頼環境で動作する XSLT アプリケーションは、スタイル シートのなりすましを引き起こす可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="fa621-123">たとえば、悪意のあるユーザーは、有害なスタイル シートを含むオブジェクトを読み込み、それを <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを呼び出して変換を実行する別のユーザーに渡す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="fa621-124">これらのセキュリティの問題は、<xref:System.Xml.Xsl.XslTransform> オブジェクト、XSLT スタイルシート、または信頼されていないソースからの XML ソースデータを受け入れないことで軽減できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="fa621-125">**スクリプトのサポート**</span><span class="sxs-lookup"><span data-stu-id="fa621-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="fa621-126">このクラスは、`msxsl:script` 要素を使用した埋め込みスクリプトをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="fa621-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="fa621-127">.NET Framework のバージョン1.1 では、スタイルシートの証拠によって、埋め込みスクリプトに与えられるアクセス許可が決定されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="fa621-128">スタイルシートが Uniform Resource Identifier (URI) から読み込まれた場合は、URI が証拠の作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="fa621-129">この証拠には、URI とそのサイトとゾーンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="fa621-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="fa621-130">スタイルシートが別のソースを使用して読み込まれた場合は、<xref:System.Security.Policy.Evidence?displayProperty=nameWithType> オブジェクトを <xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドに渡すことによって、証拠を提供できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="fa621-131">それ以外の場合、スクリプトアセンブリには完全な信頼が与えられます。</span><span class="sxs-lookup"><span data-stu-id="fa621-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="fa621-132">信頼されていない呼び出し元: 埋め込みスクリプトをコンパイルするには、`UnmanagedCode` アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa621-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="fa621-133"><xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドに <xref:System.Security.Policy.Evidence> を提供するには、`ControlEvidence` アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa621-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="fa621-134"><xref:System.Security.SecurityException> は、呼び出し元に必要なアクセス許可がない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="fa621-135">詳細については、「<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>」および「<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="fa621-136">`msxsl:script` 要素には、次の要件があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="fa621-137">`msxsl:script` 要素は `urn:schemas-microsoft-com:xslt` 名前空間に属します。</span><span class="sxs-lookup"><span data-stu-id="fa621-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="fa621-138">スタイルシートには `xmlns:msxsl=urn:schemas-microsoft-com:xslt`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="fa621-139">`msxsl:script` 要素には、使用するスクリプト言語を指定する `language` 属性を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="fa621-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="fa621-140">`language` 属性の値はC#、、CSHARP、VB、visual Basic、JScript、または JavaScript のいずれかである必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="fa621-141">言語名では大文字と小文字が区別されないため、JavaScript と javascript は両方とも有効です。</span><span class="sxs-lookup"><span data-stu-id="fa621-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="fa621-142">`language` 属性が指定されていない場合、既定値は JScript になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="fa621-143">`msxsl:script` 要素には、スクリプトブロックに関連付けられている名前空間を表すプレフィックスを含む `implements-prefix` 属性が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="fa621-144">この名前空間は、スタイルシート内で定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="fa621-145">スタイルシートには、名前空間によってグループ化された複数のスクリプトブロックを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="fa621-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="fa621-146">同じ名前空間内に複数の言語のスクリプトブロックを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="fa621-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="fa621-147">スクリプトブロックは、別のスクリプトブロックで定義されている関数を呼び出すことができます。これは、同じ名前空間内にスクリプトブロックが存在する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="fa621-148">スクリプトブロックの内容は、スクリプト言語の規則と構文 (`language` 属性によって指定) に従って解析されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="fa621-149">たとえば、スクリプトブロックがC#ある場合、コメントの先頭には `//` 文字が付きます。</span><span class="sxs-lookup"><span data-stu-id="fa621-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="fa621-150">コメントは、有効な XML コンテンツである必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-150">The comments must be valid XML content.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="fa621-151">スクリプトブロックを CDATA セクションにラップすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-151">It is recommended that you wrap script blocks in a CDATA section.</span></span>
  
 [!INCLUDE [xsltransform-script](~/includes/xsltransform-script.md)] 
   
 <span data-ttu-id="fa621-152">関数は、`msxsl:script` 要素内で宣言できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="fa621-153">既定でサポートされる名前空間を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="fa621-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="fa621-154">サポートされている名前空間</span><span class="sxs-lookup"><span data-stu-id="fa621-154">Supported Namespaces</span></span>|<span data-ttu-id="fa621-155">説明</span><span class="sxs-lookup"><span data-stu-id="fa621-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="fa621-156">システムクラス。</span><span class="sxs-lookup"><span data-stu-id="fa621-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="fa621-157">コレクション クラス</span><span class="sxs-lookup"><span data-stu-id="fa621-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="fa621-158">テキスト処理クラス。</span><span class="sxs-lookup"><span data-stu-id="fa621-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="fa621-159">コア XML クラス</span><span class="sxs-lookup"><span data-stu-id="fa621-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="fa621-160">XSLT クラス</span><span class="sxs-lookup"><span data-stu-id="fa621-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="fa621-161">XPath (XML Path Language) クラス</span><span class="sxs-lookup"><span data-stu-id="fa621-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="fa621-162">スクリプト関数によって定義される引数と戻り値は、以下に示す World Wide Web コンソーシアム (W3C) のいずれかの型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="fa621-163">次の表では、W3C 型 (XPath または XSLT) と、対応する .NET Framework クラスとの間のマッピングについて説明します。</span><span class="sxs-lookup"><span data-stu-id="fa621-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="fa621-164">W3C 型</span><span class="sxs-lookup"><span data-stu-id="fa621-164">W3C Type</span></span>|<span data-ttu-id="fa621-165">同等の .NET クラス</span><span class="sxs-lookup"><span data-stu-id="fa621-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="fa621-166">String (XPath)</span><span class="sxs-lookup"><span data-stu-id="fa621-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="fa621-167">ブール値 (XPath)</span><span class="sxs-lookup"><span data-stu-id="fa621-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="fa621-168">数値 (XPath)</span><span class="sxs-lookup"><span data-stu-id="fa621-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="fa621-169">結果ツリーフラグメント (XSLT)</span><span class="sxs-lookup"><span data-stu-id="fa621-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="fa621-170">ノードセット (XPath)</span><span class="sxs-lookup"><span data-stu-id="fa621-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="fa621-171">スクリプト関数で、Int16、UInt16、Int32、UInt32、Int64、UInt64、Single、Decimal のいずれかの数値型を使用する場合、これらの型は、W3C XPath 型の数値にマップされる Double に強制的に変換されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="fa621-172">例外は、引数の結果を必要な型の1つに変換できない関数が呼び出された場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-173">`msxsl:script` と `msxsl:node-list` は、<xref:System.Xml.Xsl.XslTransform> クラスでサポートされている `urn:schemas-microsoft-com:xslt` 名前空間の唯一の関数です。</span><span class="sxs-lookup"><span data-stu-id="fa621-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="fa621-174"><xref:System.Xml.Xsl.XslTransform> には、CLR (共通言語ランタイム) コードを拡張メカニズムとして使用する機能があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="fa621-175">これを実現するには、クラスのインスタンスを <xref:System.Xml.Xsl.XslTransform> クラスに渡し、XSLT スタイルシート内でそのパブリックメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fa621-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="fa621-176">`params` キーワードで定義されたメソッドは、指定された数のパラメーターを渡すことができますが、このシナリオでは正しく機能しません。</span><span class="sxs-lookup"><span data-stu-id="fa621-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="fa621-177">詳細については、「 [params](~/docs/csharp/language-reference/keywords/params.md) 」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-177">See [params](~/docs/csharp/language-reference/keywords/params.md) for more details.</span></span>  
  
 <span data-ttu-id="fa621-178">詳細について[は、「XslTransform クラスを使用した XSLT 変換](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-178">For more information see [XSLT Transformations with the XslTransform Class](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa621-179">次の例では、指定された XML ドキュメントを変換し、結果をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="fa621-180"><see cref="T:System.Xml.Xsl.XslTransform" /> オブジェクトは、変換操作に対してのみスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="fa621-180"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="fa621-181">他の操作は、スレッドセーフであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="fa621-181">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="fa621-182">読み込み操作中に、オブジェクトに対して他のメソッドが呼び出されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-182">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa621-183"><see cref="T:System.Xml.Xsl.XslTransform" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fa621-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa621-184">XSLT スタイル シートを読み込みます。XSLT の <see langword="xsl:include" /> 要素および <see langword="xsl:import" /> 要素で参照されるスタイル シートが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="fa621-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-185"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-186"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-187">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-187">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="fa621-188">読み込む XSLT スタイル シートを指定する URL。</span><span class="sxs-lookup"><span data-stu-id="fa621-188">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="fa621-189">URL で指定された XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-189">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-190"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-191"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-192">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-192">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-193"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-194">XSLT スタイルシートには `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="fa621-195">このメソッドは、`xsl:include` および `xsl:import` 要素で参照されているスタイルシートを含む XSLT スタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa621-196">外部リソースは、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="fa621-197">スタイルシートが、認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa621-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa621-198">スタイルシートに埋め込みスクリプトが含まれている場合、スクリプトはアセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa621-199">スタイルシートの URI は、アセンブリに適用される証拠の作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa621-200">呼び出し元に `UnmanagedCode` のアクセス許可がない場合、埋め込みスクリプトはコンパイルされず、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa621-201">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa621-202">次の例では、XML ドキュメントを HTML ドキュメントに変換します。</span><span class="sxs-lookup"><span data-stu-id="fa621-202">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="fa621-203">テーブル内の各書籍の ISBN、タイトル、価格が表示されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-203">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="fa621-204">このサンプルは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-204">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-205">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-205">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-206">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-206">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="fa621-207">XSLT スタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa621-207">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="fa621-208"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-209"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-210"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-211">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-212"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-213">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-214">このメソッドは、`xsl:include` および `xsl:import` 要素で参照されているスタイルシートを含む XSLT スタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa621-215">外部リソースは、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="fa621-216">スタイルシートが、認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa621-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa621-217">スタイルシートは、すべての子を通じて <xref:System.Xml.XmlReader> の現在のノードから読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="fa621-217">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="fa621-218">これにより、ドキュメントの一部をスタイルシートとして使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-218">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="fa621-219"><xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドから制御が戻った後、スタイルシートの末尾の次のノードに <xref:System.Xml.XmlReader> が配置されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-219">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="fa621-220">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="fa621-220">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="fa621-221">スタイルシートにエンティティが含まれている場合は、エンティティを解決できる <xref:System.Xml.XmlReader> を指定する必要があります (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> は `true`を返します)。</span><span class="sxs-lookup"><span data-stu-id="fa621-221">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="fa621-222">この場合は、<xref:System.Xml.XmlValidatingReader> を使用できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-222">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="fa621-223">スタイルシートに埋め込みスクリプトが含まれている場合、スクリプトはアセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-223">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa621-224">アセンブリには完全な信頼があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-224">The assembly has full trust.</span></span> <span data-ttu-id="fa621-225"><xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> メソッドを使用して証拠を提供することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-225">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa621-226">呼び出し元に `UnmanagedCode` のアクセス許可がない場合、埋め込みスクリプトはコンパイルされず、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-226">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa621-227">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-227">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa621-228">次の例では、すべての書籍をタイトルで並べ替えて XML ファイルを変換します。</span><span class="sxs-lookup"><span data-stu-id="fa621-228">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="fa621-229">この例では、入力として次のデータファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-229">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-230">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="fa621-230">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-231">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-231">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="fa621-232"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-232">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-233">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-233">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="fa621-234"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-234">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-235"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-235">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-236"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-236">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-237">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-237">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-238"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-238"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-239">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-239">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-240">このメソッドは、`xsl:include` および `xsl:import` 要素で参照されているスタイルシートを含む XSLT スタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-240">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa621-241">外部リソースは、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-241">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="fa621-242">スタイルシートが、認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa621-242">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa621-243">スタイルシートに埋め込みスクリプトが含まれている場合、スクリプトはアセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-243">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa621-244">アセンブリには完全な信頼があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-244">The assembly has full trust.</span></span> <span data-ttu-id="fa621-245"><xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> メソッドを使用して証拠を提供することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-245">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa621-246">呼び出し元に `UnmanagedCode` のアクセス許可がない場合、埋め込みスクリプトはコンパイルされず、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-246">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa621-247">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-247">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-248">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-248">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-249">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-249">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="fa621-250">XSLT スタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa621-250">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="fa621-251"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-251">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-252"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-253"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-254">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-255"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-256">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-257">このメソッドは、`xsl:include` および `xsl:import` 要素で参照されているスタイルシートを含む XSLT スタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-257">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa621-258">外部リソースは、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-258">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="fa621-259">スタイルシートが、認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa621-259">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa621-260">スタイルシートは、<xref:System.Xml.XPath.XPathNavigator>の現在位置から読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="fa621-260">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="fa621-261">読み込まれたドキュメントの一部だけをスタイルシートとして使用するには、スタイルシートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="fa621-261">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="fa621-262"><xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドから制御が戻った後、<xref:System.Xml.XPath.XPathNavigator> はスタイルシートの先頭 ([`xsl:style sheet`] ノード) に配置されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-262">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="fa621-263">スタイルシートに埋め込みスクリプトが含まれている場合、スクリプトはアセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-263">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa621-264">アセンブリには完全な信頼があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-264">The assembly has full trust.</span></span> <span data-ttu-id="fa621-265"><xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> メソッドを使用して証拠を提供することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-265">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa621-266">呼び出し元に `UnmanagedCode` のアクセス許可がない場合、埋め込みスクリプトはコンパイルされず、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-266">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa621-267">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-267">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-268">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="fa621-268">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-269">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-269">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="fa621-270">読み込む XSLT スタイル シートを指定する URL。</span><span class="sxs-lookup"><span data-stu-id="fa621-270">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-271">スタイル シート、および <c>xsl:import</c> 要素と <c>xsl:include</c> 要素で参照される任意のスタイル シートの読み込みに使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-271">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="fa621-272">これが <see langword="null" /> の場合は、ユーザー資格情報を持たない既定の <see cref="T:System.Xml.XmlUrlResolver" /> がスタイル シートを開くときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-272">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="fa621-273">既定の <see cref="T:System.Xml.XmlUrlResolver" /> は、スタイル シート内の外部リソースの解決には使用されないため、<c>xsl:import</c> 要素と <c>xsl:include</c> 要素は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-273">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="fa621-274"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-274">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-275">URL で指定された XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-275">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-276"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-276">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-277"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-277">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-278">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-278">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-279"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-279"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-280">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-280">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-281">スタイルシートに埋め込みスクリプトが含まれている場合、スクリプトはアセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-281">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa621-282">スタイルシートの URI は、アセンブリに適用される証拠の作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-282">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa621-283">呼び出し元に `UnmanagedCode` のアクセス許可がない場合、埋め込みスクリプトはコンパイルされず、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa621-284">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa621-285">次の例では、XML ドキュメントを HTML ドキュメントに変換します。</span><span class="sxs-lookup"><span data-stu-id="fa621-285">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="fa621-286">この例では、別のスタイルシートを参照する `xsl:include` 要素を含む XSLT スタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-286">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="fa621-287"><xref:System.Xml.XmlUrlResolver> は、含まれているスタイルシートのネットワークリソースにアクセスするために必要な資格情報を設定する <xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-287">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="fa621-288">この例では、入力として次のデータファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-288">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-289">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-289">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-290">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-290">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="fa621-291">XSLT スタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa621-291">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-292"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-292">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="fa621-293">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-293">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="fa621-294"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-294">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-295"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-295">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-296"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-296">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-297"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-297">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-298">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-298">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-299"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-299"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-300">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-300">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-301">このメソッドは、`xsl:include` および `xsl:import` 要素で参照されているスタイルシートを含む XSLT スタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-301">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa621-302">スタイルシートは、すべての子を通じて <xref:System.Xml.XmlReader> の現在のノードから読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="fa621-302">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="fa621-303">これにより、ドキュメントの一部をスタイルシートとして使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-303">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="fa621-304"><xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドから制御が戻った後、スタイルシートの末尾の次のノードに <xref:System.Xml.XmlReader> が配置されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-304">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="fa621-305">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="fa621-305">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="fa621-306">スタイルシートにエンティティが含まれている場合は、エンティティを解決できる <xref:System.Xml.XmlReader> を指定する必要があります (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> は `true`を返します)。</span><span class="sxs-lookup"><span data-stu-id="fa621-306">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="fa621-307">この場合は、<xref:System.Xml.XmlValidatingReader> を使用できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-307">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="fa621-308">スタイルシートに埋め込みスクリプトが含まれている場合、スクリプトはアセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-308">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa621-309">アセンブリには完全な信頼があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-309">The assembly has full trust.</span></span> <span data-ttu-id="fa621-310"><xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> メソッドを使用して証拠を提供することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-310">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa621-311">呼び出し元に `UnmanagedCode` のアクセス許可がない場合、埋め込みスクリプトはコンパイルされず、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-311">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa621-312">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-312">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-313">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="fa621-313">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-314">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-314">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="fa621-315"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-315">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-316">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-316">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-317"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-317">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="fa621-318">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-318">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="fa621-319"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-319">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-320"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-320">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-321"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-321">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-322"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-322">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-323">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-323">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-324"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-324"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-325">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-325">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-326">スタイルシートに埋め込みスクリプトが含まれている場合、スクリプトはアセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-326">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa621-327">アセンブリには完全な信頼があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-327">The assembly has full trust.</span></span> <span data-ttu-id="fa621-328"><xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> メソッドを使用して証拠を提供することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-328">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa621-329">呼び出し元に `UnmanagedCode` のアクセス許可がない場合、埋め込みスクリプトはコンパイルされず、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa621-330">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-331">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-331">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-332">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="fa621-333">XSLT スタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa621-333">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-334"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="fa621-335">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-335">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="fa621-336"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-337"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-337">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-338"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-338">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-339"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-339">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-340">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-340">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-341"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-341"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-342">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-342">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-343">スタイルシートは、<xref:System.Xml.XPath.XPathNavigator>の現在位置から読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="fa621-343">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="fa621-344">読み込まれたドキュメントの一部をスタイルシートとして使用するには、スタイルシートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="fa621-344">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="fa621-345"><xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドから制御が戻った後、<xref:System.Xml.XPath.XPathNavigator> はスタイルシートの先頭 ([`xsl:style sheet`] ノード) に配置されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-345">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="fa621-346">スタイルシートに埋め込みスクリプトが含まれている場合、スクリプトはアセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-346">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa621-347">アセンブリには完全な信頼があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-347">The assembly has full trust.</span></span> <span data-ttu-id="fa621-348"><xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>を使用して証拠を提供することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-348">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa621-349">呼び出し元に `UnmanagedCode` のアクセス許可がない場合、埋め込みスクリプトはコンパイルされず、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-349">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa621-350">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-350">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-351">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="fa621-351">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-352">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-352">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="fa621-353">読み込むスタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa621-353">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-354"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-354">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="fa621-355">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-355">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="fa621-356"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-356">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="fa621-357">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-357">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="fa621-358">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-358">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="fa621-359">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa621-359">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="fa621-360">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-360">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fa621-361"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-361">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="fa621-362">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-362">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-363"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-363">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-364"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-364">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-365">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-365">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-366"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-366"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-367">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-367">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-368">このメソッドは、`xsl:include` および `xsl:import` 要素で参照されているスタイルシートを含む XSLT スタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-368">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa621-369">スタイルシートは、すべての子を通じて <xref:System.Xml.XmlReader> の現在のノードから読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="fa621-369">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="fa621-370">これにより、ドキュメントの一部をスタイルシートとして使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-370">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="fa621-371"><xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドから制御が戻った後、スタイルシートの末尾の次のノードに <xref:System.Xml.XmlReader> が配置されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-371">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="fa621-372">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="fa621-372">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="fa621-373">スタイルシートにエンティティが含まれている場合は、エンティティを解決できる <xref:System.Xml.XmlReader> を指定する必要があります (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> は `true`を返します)。</span><span class="sxs-lookup"><span data-stu-id="fa621-373">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="fa621-374">この場合は、<xref:System.Xml.XmlValidatingReader> を使用できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-374">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="fa621-375">証拠を提供するには、さまざまな方法があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-375">There are different ways to provide evidence.</span></span> <span data-ttu-id="fa621-376">次の表は、一般的なユーザーシナリオに対して提供する証拠の種類を示しています。</span><span class="sxs-lookup"><span data-stu-id="fa621-376">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="fa621-377">シナリオ</span><span class="sxs-lookup"><span data-stu-id="fa621-377">Scenario</span></span>|<span data-ttu-id="fa621-378">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="fa621-378">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="fa621-379">XSLT スタイルシートは、自己完結型であるか、信頼できるコードベースから取得されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-379">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="fa621-380">アセンブリからの証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-380">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="fa621-381">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="fa621-381">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa621-382">ソースの出所がわかっており、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-382">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="fa621-383">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="fa621-383">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="fa621-384">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="fa621-384">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa621-385">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="fa621-385">The origin of the source is not known.</span></span>|<span data-ttu-id="fa621-386">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="fa621-386">Set evidence to `null`.</span></span> <span data-ttu-id="fa621-387">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-387">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="fa621-388">さらに、`resolver` パラメーターを `null`に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="fa621-388">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="fa621-389">これにより、`xsl:import` と `xsl:include` の要素が処理されなくなります。</span><span class="sxs-lookup"><span data-stu-id="fa621-389">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="fa621-390">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="fa621-390">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa621-391">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="fa621-391">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="fa621-392">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="fa621-392">Request evidence from the caller.</span></span> <span data-ttu-id="fa621-393">呼び出し元の API は、証拠 (通常は <xref:System.Security.Policy.Evidence> クラス) を提供する手段を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-393">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="fa621-394">次の例では、XSLT 変換を実行します。 `xsltReader` はスタイルシートを含む <xref:System.Xml.XmlReader> であり、`secureURL` は <xref:System.Security.Policy.Evidence>の作成に使用できる信頼された URL です。</span><span class="sxs-lookup"><span data-stu-id="fa621-394">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="fa621-395"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> メソッドは、スタイルシートに適用される <xref:System.Security.Policy.Evidence> を作成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-395">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-396">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="fa621-396">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-397">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa621-397">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="fa621-398">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-398">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="fa621-399"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-399">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-400">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-400">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-401"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-401">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="fa621-402">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-402">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="fa621-403"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-403">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="fa621-404">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-404">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="fa621-405">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-405">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="fa621-406">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa621-406">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="fa621-407">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-407">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fa621-408"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-408">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="fa621-409">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-409">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-410"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-410">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-411"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-411">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-412">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-412">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-413"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-413"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-414">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-414">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="fa621-415">証拠を提供するには、さまざまな方法があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-415">There are different ways to provide evidence.</span></span> <span data-ttu-id="fa621-416">次の表は、一般的なユーザーシナリオに対して提供する証拠の種類を示しています。</span><span class="sxs-lookup"><span data-stu-id="fa621-416">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="fa621-417">シナリオ</span><span class="sxs-lookup"><span data-stu-id="fa621-417">Scenario</span></span>|<span data-ttu-id="fa621-418">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="fa621-418">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="fa621-419">XSLT スタイルシートは、自己完結型であるか、信頼できるコードベースから取得されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-419">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="fa621-420">アセンブリからの証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-420">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="fa621-421">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="fa621-421">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa621-422">ソースの出所がわかっており、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-422">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="fa621-423">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="fa621-423">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="fa621-424">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="fa621-424">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa621-425">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="fa621-425">The origin of the source is not known.</span></span>|<span data-ttu-id="fa621-426">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="fa621-426">Set evidence to `null`.</span></span> <span data-ttu-id="fa621-427">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-427">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="fa621-428">さらに、`resolver` パラメーターを `null`に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="fa621-428">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="fa621-429">これにより、`xsl:import` と `xsl:include` の要素が処理されなくなります。</span><span class="sxs-lookup"><span data-stu-id="fa621-429">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="fa621-430">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="fa621-430">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa621-431">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="fa621-431">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="fa621-432">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="fa621-432">Request evidence from the caller.</span></span> <span data-ttu-id="fa621-433">呼び出し元の API は、証拠 (通常は <xref:System.Security.Policy.Evidence> クラス) を提供する手段を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-433">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-434">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="fa621-434">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-435">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa621-435">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="fa621-436">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-436">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="fa621-437">読み込むスタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa621-437">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-438"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-438">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="fa621-439">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-439">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="fa621-440"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-440">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="fa621-441">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-441">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="fa621-442">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-442">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="fa621-443">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa621-443">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="fa621-444">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-444">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fa621-445"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="fa621-445">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="fa621-446">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-446">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-447"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-447">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-448"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-448">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-449">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-449">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-450"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-450"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-451">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-451">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-452">スタイルシートは、<xref:System.Xml.XPath.XPathNavigator>の現在位置から読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="fa621-452">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="fa621-453">読み込まれたドキュメントの一部をスタイルシートとして使用するには、スタイルシートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="fa621-453">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="fa621-454"><xref:System.Xml.Xsl.XslTransform.Load%2A> メソッドから制御が戻った後、<xref:System.Xml.XPath.XPathNavigator> はスタイルシートの先頭 ([`xsl:style sheet`] ノード) に配置されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-454">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="fa621-455">証拠を提供するには、さまざまな方法があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-455">There are different ways to provide evidence.</span></span> <span data-ttu-id="fa621-456">次の表は、一般的なユーザーシナリオに対して提供する証拠の種類を示しています。</span><span class="sxs-lookup"><span data-stu-id="fa621-456">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="fa621-457">シナリオ</span><span class="sxs-lookup"><span data-stu-id="fa621-457">Scenario</span></span>|<span data-ttu-id="fa621-458">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="fa621-458">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="fa621-459">XSLT スタイルシートは、自己完結型であるか、信頼できるコードベースから取得されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-459">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="fa621-460">アセンブリからの証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-460">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="fa621-461">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="fa621-461">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa621-462">ソースの出所がわかっており、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-462">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="fa621-463">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="fa621-463">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="fa621-464">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="fa621-464">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa621-465">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="fa621-465">The origin of the source is not known.</span></span>|<span data-ttu-id="fa621-466">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="fa621-466">Set evidence to `null`.</span></span> <span data-ttu-id="fa621-467">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-467">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="fa621-468">さらに、`resolver` パラメーターを `null`に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="fa621-468">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="fa621-469">これにより、`xsl:import` と `xsl:include` の要素が処理されなくなります。</span><span class="sxs-lookup"><span data-stu-id="fa621-469">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="fa621-470">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="fa621-470">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa621-471">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="fa621-471">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="fa621-472">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="fa621-472">Request evidence from the caller.</span></span> <span data-ttu-id="fa621-473">呼び出し元の API は、証拠 (通常は `Evidence` クラス) を提供する手段を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-473">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fa621-474">次の例では、外部ソースのスタイルシートを使用して XSLT 変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-474">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="fa621-475">スタイルシートは信頼できないソースからのものであるため、`resolver` パラメーターと `evidence` パラメーターは `null`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-475">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="fa621-476">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="fa621-476">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fa621-477">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="fa621-477">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="fa621-478">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-478">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa621-479">読み込まれた XSLT スタイル シートを使用して、XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="fa621-479">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-480"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-480">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-481"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-481">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-482">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-482">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="fa621-483">変換するソース ドキュメントの URL。</span><span class="sxs-lookup"><span data-stu-id="fa621-483">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="fa621-484">出力ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="fa621-484">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="fa621-485">XML データを入力ファイルに変換し、その結果を出力ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-485">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-486"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-486">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-487"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-487">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-488">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-488">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-489"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-489"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-490">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-490">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-491">このメソッドは、バージョン1.1 の .NET Framework では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-491">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="fa621-492"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> プロパティの設定によって、XSLT `document()` 関数がどのように解決されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="fa621-492">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa621-493"><xref:System.Xml.XmlResolver> オブジェクトを引数の1つとして受け取る <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-493">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa621-494">次の例では、`output.xsl` スタイルシートを使用して `books.xml` ファイルを変換し、結果を `books.html` ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-494">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="fa621-495">このサンプルでは、次の2つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-495">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-496">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-496">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="fa621-497">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="fa621-497">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-498"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-498">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-499">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-499">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-500">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-500">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="fa621-501">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-501">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="fa621-502">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-502">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-503"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-503">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-504"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-504">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-505">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-505">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-506"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-506"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-507">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-507">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-508">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-508">This method is now obsolete.</span></span> <span data-ttu-id="fa621-509"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> プロパティの設定によって、XSLT `document()` 関数がどのように解決されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="fa621-509">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa621-510"><xref:System.Xml.XmlResolver> オブジェクトを引数の1つとして受け取る <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-510">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="fa621-511">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-511">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-512">`xsl:output` 要素は、<xref:System.Xml.XmlReader> への出力時にはサポートされません (`xsl:output` 要素は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="fa621-512">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="fa621-513">詳細について[は、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-513">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa621-514">このメソッドを使用すると、ソースドキュメントの非同期変換を実行できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-514">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="fa621-515">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fa621-515">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa621-516">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-516">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-517">ノードフラグメントを変換するには、ノードフラグメントだけを含む <xref:System.Xml.XmlDocument> を作成し、その <xref:System.Xml.XmlDocument> を <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-517">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa621-518">次の例では、ノードフラグメントに対して変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-518">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="fa621-519">この例では、`library.xml` と `print_root.xsl` ファイルを入力として使用し、次の情報をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-519">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-520">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-520">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="fa621-521">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="fa621-521">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-522">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-522">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-523">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-523">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="fa621-524">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-524">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="fa621-525">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-525">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-526"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-526">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-527"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-527">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-528">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-528">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-529"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-529"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-530">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-530">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-531">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-531">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-532">変換の選択は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-532">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa621-533">つまり、現在のノードがドキュメントルートノード以外のノードツリーで設定されている場合、この操作によって、読み込まれたドキュメント内のすべてのノードに変換処理がアクセスするのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="fa621-533">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-534">変換が実行されると、<xref:System.Xml.XPath.XPathNavigator> は元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-534">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa621-535">これは、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドが呼び出された後に、変換プロセスの前にあるノードが現在のノードのままになることを意味します。</span><span class="sxs-lookup"><span data-stu-id="fa621-535">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa621-536"><xref:System.Xml.XmlReader> は読み取り専用の出力を提供するため、`xsl:output` 要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-536">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="fa621-537">詳細について[は、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-537">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa621-538">このメソッドを使用すると、ソースドキュメントの非同期変換を実行できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-538">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-539">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-539">This method is obsolete.</span></span> <span data-ttu-id="fa621-540"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> プロパティの設定によって、XSLT ドキュメント () 関数がどのように解決されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="fa621-540">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="fa621-541"><xref:System.Xml.XmlResolver> オブジェクトを引数の1つとして受け取る <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-541">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-542">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-542">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-543">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-543">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-544">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-544">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-545">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-545">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="fa621-546">変換するソース ドキュメントの URL。</span><span class="sxs-lookup"><span data-stu-id="fa621-546">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="fa621-547">出力ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="fa621-547">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-548">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-548">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="fa621-549">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-549">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="fa621-550"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-550">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-551">XML データを入力ファイルに変換し、その結果を出力ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-551">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-552"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-552">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-553"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-553">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-554">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-554">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-555"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-555"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-556">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-556">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa621-557">次の例では、XSLT 変換を実行し、ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-557">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="fa621-558">既定の資格情報を持つ <xref:System.Xml.XmlUrlResolver> は、外部リソースを解決するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-558">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="fa621-559">詳細については、「<xref:System.Net.CredentialCache.DefaultCredentials%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-559">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-560"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-560">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-561">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-561">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-562">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-562">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-563">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="fa621-563">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="fa621-564">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-564">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-565"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-565">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-566"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-566">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-567">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-567">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-568"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-568"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-569">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-569">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-570">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-570">This method is now obsolete.</span></span> <span data-ttu-id="fa621-571"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> プロパティの設定によって、XSLT `document()` 関数がどのように解決されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="fa621-571">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa621-572"><xref:System.Xml.XmlResolver> オブジェクトを引数の1つとして受け取る <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-572">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="fa621-573">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-573">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="fa621-574">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fa621-574">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa621-575">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-575">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-576">ノードフラグメントを変換するには、ノードフラグメントだけを含む <xref:System.Xml.XmlDocument> を作成し、その <xref:System.Xml.XmlDocument> を <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-576">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa621-577">次の例では、ノードフラグメントに対して変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-577">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="fa621-578">この例では、`library.xml` と `print_root.xsl` ファイルを入力として使用し、次の情報をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-578">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-579">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-579">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-580">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-580">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-581">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-581">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-582">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-582">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="fa621-583">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="fa621-583">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-584"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-584">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-585">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-585">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-586">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-586">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-587">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-587">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="fa621-588">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-588">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-589"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-589">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-590"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-590">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-591">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-591">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-592"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-592"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-593">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-593">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-594">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-594">This method is now obsolete.</span></span> <span data-ttu-id="fa621-595"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> プロパティの設定によって、XSLT `document()` 関数がどのように解決されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="fa621-595">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa621-596"><xref:System.Xml.XmlResolver> オブジェクトを引数の1つとして受け取る <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-596">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="fa621-597">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-597">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="fa621-598">`xsl:output` 要素の encoding 属性は、<xref:System.IO.TextWriter>への出力時にはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="fa621-598">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="fa621-599">サポートされている `xsl:output` 属性の詳細については[、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-599">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="fa621-600">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fa621-600">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa621-601">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-601">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-602">ノードフラグメントを変換するには、ノードフラグメントだけを含む <xref:System.Xml.XmlDocument> を作成し、その <xref:System.Xml.XmlDocument> を <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-602">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa621-603">次の例では、ノードフラグメントに対して変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-603">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="fa621-604">この例では、`library.xml` と `print_root.xsl` ファイルを入力として使用し、次の情報をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-604">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-605">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-605">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-606">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-606">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-607">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-607">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-608">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-608">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="fa621-609">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="fa621-609">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-610"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-610">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-611">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-611">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-612">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-612">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-613">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-613">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="fa621-614">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-614">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="fa621-615"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-615">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-616">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-616">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="fa621-617">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-617">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-618"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-618">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-619"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-619">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-620">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-620">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-621"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-621"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-622">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-622">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-623">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-623">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-624">`xsl:output` 要素は、<xref:System.Xml.XmlReader> への出力時にはサポートされません (`xsl:output` 要素は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="fa621-624">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="fa621-625">詳細について[は、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-625">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa621-626">このメソッドを使用すると、ソースドキュメントの非同期変換を実行できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-626">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="fa621-627">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fa621-627">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa621-628">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-628">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-629">ノードフラグメントを変換するには、ノードフラグメントだけを含む <xref:System.Xml.XmlDocument> を作成し、その <xref:System.Xml.XmlDocument> を <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-629">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa621-630">次の例では、ノードフラグメントに対して変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-630">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="fa621-631">この例では、`library.xml` と `print_root.xsl` ファイルを入力として使用し、次の情報をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-631">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fa621-632">次の例では、XML ドキュメントを変換し、結果を `XmlReader`に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-632">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="fa621-633">任意の XSLT `document()` 関数の処理には、必要な資格情報を持つ <xref:System.Xml.XmlUrlResolver> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-633">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-634">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-634">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="fa621-635">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="fa621-635">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-636"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-636">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-637">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-637">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-638">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-638">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-639">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-639">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="fa621-640">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-640">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-641"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-641">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-642"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-642">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-643">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-643">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-644"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-644"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-645">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-645">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-646">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-646">This method is now obsolete.</span></span> <span data-ttu-id="fa621-647"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> プロパティの設定によって、XSLT `document()` 関数がどのように解決されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="fa621-647">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa621-648"><xref:System.Xml.XmlResolver> オブジェクトを引数の1つとして受け取る <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-648">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="fa621-649">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-649">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-650">`xsl:output` 要素は、<xref:System.Xml.XmlWriter> への出力時にはサポートされません (`xsl:output` は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="fa621-650">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="fa621-651">詳細について[は、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-651">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa621-652">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fa621-652">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa621-653">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-653">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-654">ノードフラグメントを変換するには、ノードフラグメントだけを含む <xref:System.Xml.XmlDocument> を作成し、その <xref:System.Xml.XmlDocument> を <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-654">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa621-655">次の例では、ノードフラグメントに対して変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-655">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="fa621-656">この例では、`library.xml` と `print_root.xsl` ファイルを入力として使用し、次の情報をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-656">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-657">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-657">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-658">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-658">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-659">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-659">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-660">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-660">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="fa621-661">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="fa621-661">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-662">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-662">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-663">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-663">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-664">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="fa621-664">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="fa621-665">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-665">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-666"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-666">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-667"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-667">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-668">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-668">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-669"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-669"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-670">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-670">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-671">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-671">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-672">変換の選択は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-672">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa621-673">つまり、現在のノードがドキュメントルートノード以外のノードツリーで設定されている場合、この操作によって、読み込まれたドキュメント内のすべてのノードに変換処理がアクセスするのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="fa621-673">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-674">変換が実行されると、<xref:System.Xml.XPath.XPathNavigator> は元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-674">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa621-675">これは、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドが呼び出された後に、変換プロセスの前にあるノードが現在のノードのままになることを意味します。</span><span class="sxs-lookup"><span data-stu-id="fa621-675">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa621-676">サポートされている `xsl:output` 属性の詳細については[、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-676">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-677">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-677">This method is now obsolete.</span></span> <span data-ttu-id="fa621-678"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> プロパティの設定によって、XSLT `document()` 関数がどのように解決されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="fa621-678">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa621-679"><xref:System.Xml.XmlResolver> オブジェクトを引数の1つとして受け取る <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-679">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-680">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-680">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-681">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-681">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-682">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-682">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-683">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-683">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-684">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-684">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-685">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-685">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-686">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-686">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="fa621-687">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-687">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-688"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-688">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-689"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-689">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-690">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-690">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-691"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-691"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-692">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-692">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-693">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-693">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-694">変換の選択は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-694">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa621-695">つまり、現在のノードがドキュメントルートノード以外のノードツリーで設定されている場合、この操作によって、読み込まれたドキュメント内のすべてのノードに変換処理がアクセスするのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="fa621-695">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-696">変換が実行されると、<xref:System.Xml.XPath.XPathNavigator> は元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-696">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa621-697">これは、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドが呼び出された後に、変換プロセスの前にあるノードが現在のノードのままになることを意味します。</span><span class="sxs-lookup"><span data-stu-id="fa621-697">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa621-698">`xsl:output` 要素の encoding 属性は、<xref:System.IO.TextWriter>への出力時にはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="fa621-698">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="fa621-699">サポートされている `xsl:output` 属性の詳細については[、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-699">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-700">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-700">This method is now obsolete.</span></span> <span data-ttu-id="fa621-701"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> プロパティの設定によって、XSLT `document()` 関数がどのように解決されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="fa621-701">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa621-702"><xref:System.Xml.XmlResolver> オブジェクトを引数の1つとして受け取る <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-702">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-703">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-703">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-704">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-704">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-705">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-705">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-706">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-706">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-707">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-707">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-708">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-708">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-709">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-709">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="fa621-710">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-710">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="fa621-711"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-711">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-712">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-712">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="fa621-713">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-713">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-714"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-714">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-715"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-715">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-716">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-716">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-717"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-717"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-718">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-718">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-719">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-719">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-720">変換の選択は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-720">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa621-721">つまり、現在のノードがドキュメントルートノード以外のノードツリーで設定されている場合、この操作によって、読み込まれたドキュメント内のすべてのノードに変換処理がアクセスするのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="fa621-721">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-722">変換が実行されると、<xref:System.Xml.XPath.XPathNavigator> は元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-722">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa621-723">これは、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドが呼び出された後に、変換プロセスの前にあるノードが現在のノードのままになることを意味します。</span><span class="sxs-lookup"><span data-stu-id="fa621-723">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa621-724"><xref:System.Xml.XmlReader> は読み取り専用の出力を提供するため、`xsl:output` 要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-724">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="fa621-725">詳細について[は、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-725">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa621-726">このメソッドを使用すると、ソースドキュメントの非同期変換を実行できます。</span><span class="sxs-lookup"><span data-stu-id="fa621-726">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-727">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-727">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-728">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-728">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-729">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-729">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-730">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-730">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-731">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-731">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-732">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-732">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-733">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-733">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="fa621-734">指定した args を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-734">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-735"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-735">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-736"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-736">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-737">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-737">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-738"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-738"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-739">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-739">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-740">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-740">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-741">変換の選択は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-741">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa621-742">つまり、現在のノードがドキュメントルートノード以外のノードツリーで設定されている場合、この操作によって、読み込まれたドキュメント内のすべてのノードに変換処理がアクセスするのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="fa621-742">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-743">変換が実行されると、<xref:System.Xml.XPath.XPathNavigator> は元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-743">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa621-744">これは、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドが呼び出された後に、変換プロセスの前にあるノードが現在のノードのままになることを意味します。</span><span class="sxs-lookup"><span data-stu-id="fa621-744">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa621-745">`xsl:output` 要素は、<xref:System.Xml.XmlWriter> への出力時にはサポートされません (`xsl:output` は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="fa621-745">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="fa621-746">詳細について[は、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-746">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-747">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-747">This method is now obsolete.</span></span> <span data-ttu-id="fa621-748"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> プロパティの設定によって、XSLT `document()` 関数がどのように解決されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="fa621-748">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa621-749"><xref:System.Xml.XmlResolver> オブジェクトを引数の1つとして受け取る <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-749">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-750">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-750">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-751">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-751">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-752">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-752">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-753">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-753">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-754"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-754">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-755">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-755">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-756">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-756">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-757">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="fa621-757">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-758">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-758">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="fa621-759">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-759">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="fa621-760"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-760">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-761">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-761">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-762"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-762">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-763"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-763">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-764">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-764">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-765"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-765"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-766">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-766">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-767">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-767">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="fa621-768">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fa621-768">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa621-769">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-769">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-770">ノードフラグメントを変換するには、ノードフラグメントだけを含む <xref:System.Xml.XmlDocument> を作成し、その <xref:System.Xml.XmlDocument> を <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-770">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa621-771">次の例では、ノードフラグメントに対して変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-771">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="fa621-772">この例では、`library.xml` と `print_root.xsl` ファイルを入力として使用し、次の情報をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-772">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fa621-773">次の例では、ASP.NET ページ内で変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-773">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-774">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-774">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-775">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-775">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-776">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-776">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-777">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-777">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="fa621-778">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="fa621-778">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-779"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-779">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-780">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-780">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-781">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-781">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-782">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-782">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-783">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-783">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="fa621-784">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-784">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="fa621-785"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-785">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-786">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-786">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-787"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-787">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-788"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-788">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-789">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-789">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-790"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-790"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-791">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-791">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-792">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-792">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="fa621-793">`xsl:output` 要素の encoding 属性は、<xref:System.IO.TextWriter>への出力時にはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="fa621-793">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="fa621-794">サポートされている `xsl:output` 属性の詳細については[、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-794">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="fa621-795">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fa621-795">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa621-796">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-796">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-797">ノードフラグメントを変換するには、ノードフラグメントだけを含む <xref:System.Xml.XmlDocument> を作成し、その <xref:System.Xml.XmlDocument> を <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-797">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa621-798">次の例では、ノードフラグメントに対して変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-798">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="fa621-799">この例では、`library.xml` と `print_root.xsl` ファイルを入力として使用し、次の情報をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-799">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fa621-800">次の例では、XML ファイルを変換し、HTML 文字列を出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-800">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="fa621-801"><xref:System.IO.StringReader> クラスと <xref:System.IO.StringWriter> クラスを使用して、文字列の読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="fa621-801">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="fa621-802">この例は、`books.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-802">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-803">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-803">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-804">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-804">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-805">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-805">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-806">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-806">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="fa621-807">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="fa621-807">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-808"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="fa621-808">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="fa621-809">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fa621-809">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-810">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-810">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-811">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-811">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-812">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-812">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="fa621-813">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-813">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="fa621-814"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-814">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-815">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-815">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-816"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-816">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-817"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-817">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-818">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-818">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-819"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-819"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-820">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-820">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-821">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-821">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-822">`xsl:output` 要素は、<xref:System.Xml.XmlWriter> への出力時にはサポートされません (`xsl:output` は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="fa621-822">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="fa621-823">詳細について[は、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-823">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa621-824">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fa621-824">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa621-825">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-825">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-826">ノードフラグメントを変換するには、ノードフラグメントだけを含む <xref:System.Xml.XmlDocument> を作成し、その <xref:System.Xml.XmlDocument> を <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-826">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa621-827">次の例では、ノードフラグメントに対して変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="fa621-827">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="fa621-828">この例では、`library.xml` と `print_root.xsl` ファイルを入力として使用し、次の情報をコンソールに出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-828">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fa621-829">次の例では、XML ドキュメントを HTML ドキュメントに変換します。</span><span class="sxs-lookup"><span data-stu-id="fa621-829">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="fa621-830">テーブル内の各書籍の ISBN、タイトル、価格が表示されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-830">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="fa621-831">このサンプルは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-831">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-832">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-832">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-833">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-833">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-834">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-834">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-835">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-835">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="fa621-836">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="fa621-836">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-837">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-837">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-838">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-838">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-839">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="fa621-839">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-840">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-840">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="fa621-841">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-841">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="fa621-842"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-842">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-843">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-843">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-844"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-844">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-845"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-845">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-846">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-846">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-847"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-847"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-848">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-848">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-849">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-849">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-850">変換の選択は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-850">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa621-851">つまり、現在のノードがドキュメントルートノード以外のノードツリーで設定されている場合、この操作によって、読み込まれたドキュメント内のすべてのノードに変換処理がアクセスするのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="fa621-851">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-852">変換が実行されると、<xref:System.Xml.XPath.XPathNavigator> は元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-852">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa621-853">これは、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドが呼び出された後に、変換プロセスの前にあるノードが現在のノードのままになることを意味します。</span><span class="sxs-lookup"><span data-stu-id="fa621-853">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa621-854">サポートされている `xsl:output` 属性の詳細については[、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-854">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa621-855">次の例では、顧客テーブルを <xref:System.Xml.XmlDataDocument> に読み込み、XSLT 変換を実行して、顧客データを HTML テーブルにプルします。</span><span class="sxs-lookup"><span data-stu-id="fa621-855">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="fa621-856">この例では、Microsoft SQL Server 2000 Northwind データベースを使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-856">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="fa621-857">この例は、`customers.xsl` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-857">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-858">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-858">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-859">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-859">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-860">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-860">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-861">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-861">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-862">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-862">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-863">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-863">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-864">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-864">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-865">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-865">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="fa621-866">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-866">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="fa621-867"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-867">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-868">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-868">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-869"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-869">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-870"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-870">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-871">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-871">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-872"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-872"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-873">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-873">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-874">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-874">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-875">変換の選択は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-875">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa621-876">つまり、現在のノードがドキュメントルートノード以外のノードツリーで設定されている場合、この操作によって、読み込まれたドキュメント内のすべてのノードに変換処理がアクセスするのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="fa621-876">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-877">変換が実行されると、<xref:System.Xml.XPath.XPathNavigator> は元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-877">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa621-878">これは、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドが呼び出された後に、変換プロセスの前にあるノードが現在のノードのままになることを意味します。</span><span class="sxs-lookup"><span data-stu-id="fa621-878">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa621-879">`xsl:output` 要素の encoding 属性は、<xref:System.IO.TextWriter>への出力時にはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="fa621-879">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="fa621-880">サポートされている `xsl:output` 属性の詳細については[、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-880">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-881">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-881">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-882">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-882">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-883">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-883">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-884">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-884">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa621-885">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-885">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="fa621-886">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-886">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="fa621-887">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-887">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="fa621-888">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-888">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="fa621-889">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-889">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="fa621-890"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="fa621-890">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="fa621-891">指定した args を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="fa621-891">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-892"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-892">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-893"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-893">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-894">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-894">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-895"><xref:System.Xml.Xsl.XslTransform> では、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="fa621-895"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa621-896">XSLT スタイルシートには `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`名前空間の宣言が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa621-896">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa621-897">`args` は、スタイルシートで定義されている `xsl:param` の要素と一致します。</span><span class="sxs-lookup"><span data-stu-id="fa621-897">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa621-898">変換の選択は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-898">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa621-899">つまり、現在のノードがドキュメントルートノード以外のノードツリーで設定されている場合、この操作によって、読み込まれたドキュメント内のすべてのノードに変換処理がアクセスするのを防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="fa621-899">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa621-900">変換が実行されると、<xref:System.Xml.XPath.XPathNavigator> は元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="fa621-900">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa621-901">これは、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドが呼び出された後に、変換プロセスの前にあるノードが現在のノードのままになることを意味します。</span><span class="sxs-lookup"><span data-stu-id="fa621-901">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa621-902">`xsl:output` 要素は、<xref:System.Xml.XmlWriter> への出力時にはサポートされません (`xsl:output` は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="fa621-902">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="fa621-903">詳細について[は、「XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-903">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa621-904">次の例では、XSLT 変換を実行する前に、XML ドキュメントを読み込んで編集します。</span><span class="sxs-lookup"><span data-stu-id="fa621-904">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa621-905">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fa621-905">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="fa621-906">メモ : これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="fa621-906">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="fa621-907">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fa621-907">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="fa621-908">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="fa621-908">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa621-909"><see cref="T:System.Xml.XmlResolver" /> メソッドの呼び出し時に外部リソースの解決に使用する <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="fa621-909">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="fa621-910">変換中に使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="fa621-910">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="fa621-911"><see langword="null" />に設定した場合、XSLT<c>ドキュメント ()</c>関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-911">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa621-912"><xref:System.Xml.Xsl.XslTransform> クラスは、.NET Framework バージョン2.0 では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-912">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa621-913"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="fa621-913">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa621-914">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fa621-914">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa621-915">.NET Framework のバージョン1.1 では、アプリケーションの信頼レベルによって既定の動作が決定されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-915">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="fa621-916">ユーザー資格情報を持たない既定の <xref:System.Xml.XmlUrlResolver> を `Fully trusted code:`、`document()` 関数を解決するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-916">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="fa621-917">外部リソースにアクセスするために認証が必要な場合は、このプロパティを使用して、必要な資格情報を持つ <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa621-917">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa621-918">プロパティが `null`に設定されている `Semi-trusted code:`、`document()` 関数が解決されないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="fa621-918">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="fa621-919"><xref:System.Xml.XmlResolver>を指定するには完全信頼が必要であるため、このプロパティも設定できません。</span><span class="sxs-lookup"><span data-stu-id="fa621-919">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="fa621-920">このリゾルバーは、XSLT `document()` 関数が呼び出されたときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="fa621-920">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="fa621-921">スタイルシートで参照されている要素の `xsl:import` および `xsl:include` の解決には使用されません。</span><span class="sxs-lookup"><span data-stu-id="fa621-921">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="fa621-922">スタイルシートで参照される `xsl:import` および `xsl:include` 要素の解決に使用する <xref:System.Xml.XmlResolver> を指定するには、引数の1つとして <xref:System.Xml.XmlResolver> を受け取る <xref:System.Xml.Xsl.XslTransform.Load%2A> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="fa621-922">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa621-923">このプロパティは、バージョン1.1 の .NET Framework では廃止されています。</span><span class="sxs-lookup"><span data-stu-id="fa621-923">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="fa621-924"><xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法を使用して <xref:System.Xml.XmlResolver> を指定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fa621-924">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="fa621-925">この場合、<xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドの完了後に <xref:System.Xml.XmlResolver> はキャッシュされません。</span><span class="sxs-lookup"><span data-stu-id="fa621-925">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>
