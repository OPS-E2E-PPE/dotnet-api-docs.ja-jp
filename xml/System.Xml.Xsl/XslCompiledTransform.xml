<Type Name="XslCompiledTransform" FullName="System.Xml.Xsl.XslCompiledTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b7b98e4898d24a9b611e47e44c0ed2626b4e0c9" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82421375" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslCompiledTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslCompiledTransform extends System.Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslCompiledTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslCompiledTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslCompiledTransform sealed" />
  <TypeSignature Language="F#" Value="type XslCompiledTransform = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XslCompiledTransform extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4a707-101">XSLT スタイル シートを使用して、XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="4a707-101">Transforms XML data using an XSLT style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-102"><xref:System.Xml.Xsl.XslCompiledTransform> クラスは、XSLT 1.0 構文をサポートする XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="4a707-102">The <xref:System.Xml.Xsl.XslCompiledTransform> class is an XSLT processor that supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="4a707-103">これは新しい実装であり、廃止された <xref:System.Xml.Xsl.XslTransform> クラスと比較すると、パフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="4a707-103">It is a new implementation and includes performance gains when compared to the obsolete <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="4a707-104"><xref:System.Xml.Xsl.XslCompiledTransform> クラスの構造は、<xref:System.Xml.Xsl.XslTransform> クラスと非常によく似ています。</span><span class="sxs-lookup"><span data-stu-id="4a707-104">The structure of the <xref:System.Xml.Xsl.XslCompiledTransform> class is very similar to the <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="4a707-105"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> メソッドはスタイルシートを読み込み、コンパイルしますが、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドは XSLT 変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="4a707-105">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads and compiles the style sheet, while the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method executes the XSLT transform.</span></span>  
  
 <span data-ttu-id="4a707-106">XSLT `document()` 関数と埋め込みスクリプトブロックのサポートは、既定では無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-106">Support for the XSLT `document()` function and embedded script blocks are disabled by default.</span></span> <span data-ttu-id="4a707-107">これらの機能を有効にするには、<xref:System.Xml.Xsl.XsltSettings> オブジェクトを作成し、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-107">These features can be enabled by creating an <xref:System.Xml.Xsl.XsltSettings> object and passing it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
 <span data-ttu-id="4a707-108">詳細については、「 [XslCompiledTransform クラスの使用](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)」および「 [XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4a707-108">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="4a707-109">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="4a707-109">Security Considerations</span></span>  
 <span data-ttu-id="4a707-110"><xref:System.Xml.Xsl.XslCompiledTransform> クラスを使用するアプリケーションを作成するときには、次の項目とその関連事項に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-110">When creating an application that uses the <xref:System.Xml.Xsl.XslCompiledTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="4a707-111">XSLT スクリプトは既定で無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-111">XSLT scripting is disabled by default.</span></span> <span data-ttu-id="4a707-112">XSLT スクリプトは、スクリプトのサポートが必要であり、完全に信頼された環境で作業している場合のみ有効にします。</span><span class="sxs-lookup"><span data-stu-id="4a707-112">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span>  
  
-   <span data-ttu-id="4a707-113">XSLT `document()` 関数は既定で無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-113">The XSLT `document()` function is disabled by default.</span></span> <span data-ttu-id="4a707-114">`document()` 関数を有効にした場合は、<xref:System.Xml.XmlSecureResolver> オブジェクトを <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡すことによって、アクセス可能なリソースを制限してください。</span><span class="sxs-lookup"><span data-stu-id="4a707-114">If you enable the `document()` function, restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
-   <span data-ttu-id="4a707-115">拡張オブジェクトは既定で有効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-115">Extension objects are enabled by default.</span></span> <span data-ttu-id="4a707-116">拡張オブジェクトを含む <xref:System.Xml.Xsl.XsltArgumentList> オブジェクトが <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡されると、拡張オブジェクトは使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-116">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="4a707-117">XSLT スタイル シートには、他のファイルへの参照や埋め込みのスクリプト ブロックを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4a707-117">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="4a707-118">悪意のあるユーザーがこれを悪用して、コンピューターがリソース不足に陥るまでシステムに処理を行わせようとするデータやスタイル シートを提供する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-118">A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="4a707-119">混在信頼環境で動作する XSLT アプリケーションは、スタイル シートのなりすましを引き起こす可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-119">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="4a707-120">たとえば、悪意のあるユーザーは、有害なスタイル シートを含むオブジェクトを読み込み、それを <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドを呼び出して変換を実行する別のユーザーに渡す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-120">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="4a707-121">これらのセキュリティ上の問題は、スタイル シートが信頼されたソースからのものでない限り、スクリプトや `document()` 関数を有効にしないこと、および信頼されていないソースからの <xref:System.Xml.Xsl.XslCompiledTransform> オブジェクト、XSLT スタイル シート、または XML ソース データを受け入れないことによって軽減できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-121">These security issues can be mitigated by not enabling scripting or the `document()` function unless the style sheet comes from a trusted source, and by not accepting <xref:System.Xml.Xsl.XslCompiledTransform> objects, XSLT style sheets, or XML source data from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-122">次の例では、変換を実行し、ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-122">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="4a707-123">このサンプルでは、次の2つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="4a707-123">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="4a707-124"><see cref="T:System.Xml.Xsl.XslCompiledTransform" /> オブジェクトは、読み込まれるとスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="4a707-124">The <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object is thread safe once it has been loaded.</span></span> <span data-ttu-id="4a707-125">つまり、<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> メソッドが正常に完了した後、<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> メソッドを複数のスレッドから同時に呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="4a707-125">In other words, after the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has successfully completed, the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method can be called simultaneously from multiple threads.</span></span>  
  
<span data-ttu-id="4a707-126"><see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> メソッドが別のスレッドで呼び出されている間に、1つのスレッドで <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> メソッドが再度呼び出された場合、<see cref="T:System.Xml.Xsl.XslCompiledTransform" /> オブジェクトは引き続き古い状態を使用して <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> の呼び出しの実行を終了します。</span><span class="sxs-lookup"><span data-stu-id="4a707-126">If the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is called again in one thread while the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method is being called in another thread, the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object finishes executing the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> call by continuing to use the old state.</span></span> <span data-ttu-id="4a707-127">新しい状態は、<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> メソッドが正常に完了したときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-127">The new state is used when the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method successfully completes.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="4a707-128"><see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> メソッドは、複数のスレッドから同時に呼び出された場合、スレッドセーフではありません。</span><span class="sxs-lookup"><span data-stu-id="4a707-128">The <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is not thread safe when called simultaneously from multiple threads.</span></span>  
  
</para></block></threadsafe>
    <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
    <altmember cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
    <altmember cref="N:System.Xml" />
    <related type="Article" href="https://msdn.microsoft.com/library/202f8820-224c-494f-b61e-cd127eac6e03"><span data-ttu-id="4a707-129">XSLT 変換</span><span class="sxs-lookup"><span data-stu-id="4a707-129">XSLT Transformations</span></span></related>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="4a707-130">XML ドキュメントと XML データ</span><span class="sxs-lookup"><span data-stu-id="4a707-130">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a707-131"><see cref="T:System.Xml.Xsl.XslCompiledTransform" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4a707-131">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-132">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-132">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a707-133"><see cref="T:System.Xml.Xsl.XslCompiledTransform" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4a707-133">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-134">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-134">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform (bool enableDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDebug As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform(bool enableDebug);" />
      <MemberSignature Language="F#" Value="new System.Xml.Xsl.XslCompiledTransform : bool -&gt; System.Xml.Xsl.XslCompiledTransform" Usage="new System.Xml.Xsl.XslCompiledTransform enableDebug" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="enableDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDebug"><span data-ttu-id="4a707-135">デバッグ情報を生成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-135"><see langword="true" /> to generate debug information; otherwise <see langword="false" />.</span></span> <span data-ttu-id="4a707-136">これを <see langword="true" /> に設定すると、Microsoft Visual Studio デバッガーを使用してスタイル シートをデバッグできます。</span><span class="sxs-lookup"><span data-stu-id="4a707-136">Setting this to <see langword="true" /> enables you to debug the style sheet with the Microsoft Visual Studio Debugger.</span></span></param>
        <summary><span data-ttu-id="4a707-137"><see cref="T:System.Xml.Xsl.XslCompiledTransform" /> クラスの新しいインスタンスを、指定されたデバッグ設定を使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="4a707-137">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class with the specified debug setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-138">コードにステップインしてスタイルシートをデバッグするには、次の条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-138">The following conditions must be met in order to step into the code and debug the style sheet:</span></span>  
  
-   <span data-ttu-id="4a707-139">`enableDebug` パラメーターを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-139">The `enableDebug` parameter is set to `true`.</span></span>  
  
-   <span data-ttu-id="4a707-140">スタイルシートは、URI として <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> メソッドに渡されるか、または <xref:System.Xml.IXmlLineInfo> インターフェイスを実装する <xref:System.Xml.XmlReader> クラスの実装として渡されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-140">The style sheet is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method either as a URI, or an implementation of the <xref:System.Xml.XmlReader> class that implements the <xref:System.Xml.IXmlLineInfo> interface.</span></span> <span data-ttu-id="4a707-141"><xref:System.Xml.IXmlLineInfo> インターフェイスは、すべてのテキスト解析 <xref:System.Xml.XmlReader> オブジェクトに実装されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-141">The <xref:System.Xml.IXmlLineInfo> interface is implemented on all text-parsing <xref:System.Xml.XmlReader> objects.</span></span>  
  
     <span data-ttu-id="4a707-142">つまり、スタイルシートが、<xref:System.Xml.XmlDocument> や <xref:System.Xml.XPath.XPathDocument>などの <xref:System.Xml.XPath.IXPathNavigable> オブジェクト、または <xref:System.Xml.IXmlLineInfo> インターフェイスを実装していない <xref:System.Xml.XmlReader> の実装を使用して読み込まれている場合、スタイルシートをデバッグすることはできません。</span><span class="sxs-lookup"><span data-stu-id="4a707-142">In other words, if the style sheet is loaded using an <xref:System.Xml.XPath.IXPathNavigable> object, such as an <xref:System.Xml.XmlDocument> or <xref:System.Xml.XPath.XPathDocument>, or an <xref:System.Xml.XmlReader> implementation that does not implement the <xref:System.Xml.IXmlLineInfo> interface, you cannot debug the style sheet.</span></span>  
  
-   <span data-ttu-id="4a707-143">スタイルシートの読み込みに使用される <xref:System.Xml.XmlResolver> は、<xref:System.Xml.XmlUrlResolver> などのファイルベースの <xref:System.Xml.XmlResolver>です (これは <xref:System.Xml.Xsl.XslCompiledTransform> クラスによって使用される既定の <xref:System.Xml.XmlResolver> です)。</span><span class="sxs-lookup"><span data-stu-id="4a707-143">The <xref:System.Xml.XmlResolver> used to load the style sheet is a file-based <xref:System.Xml.XmlResolver>, such as the <xref:System.Xml.XmlUrlResolver> (this is the default <xref:System.Xml.XmlResolver> used by the <xref:System.Xml.Xsl.XslCompiledTransform> class).</span></span>  
  
-   <span data-ttu-id="4a707-144">スタイルシートは、ローカルコンピューターまたはイントラネット上にあります。</span><span class="sxs-lookup"><span data-stu-id="4a707-144">The style sheet is located on the local machine or on the intranet.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-145">XSLT デバッグを有効にする方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="4a707-145">The following example shows how to enable XSLT debugging.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#10](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#10)]
 [!code-vb[XslCompiledTransform.Load#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-146">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-146">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompileToType">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerErrorCollection CompileToType(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver, bool debug, class System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileToType (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver, debug As Boolean, typeBuilder As TypeBuilder, scriptAssemblyPath As String) As CompilerErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerErrorCollection ^ CompileToType(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver, bool debug, System::Reflection::Emit::TypeBuilder ^ typeBuilder, System::String ^ scriptAssemblyPath);" />
      <MemberSignature Language="F#" Value="static member CompileToType : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver * bool * System.Reflection.Emit.TypeBuilder * string -&gt; System.CodeDom.Compiler.CompilerErrorCollection" Usage="System.Xml.Xsl.XslCompiledTransform.CompileToType (stylesheet, settings, stylesheetResolver, debug, typeBuilder, scriptAssemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="debug" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="typeBuilder" Type="System.Reflection.Emit.TypeBuilder" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="scriptAssemblyPath" Type="System.String" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="4a707-147">コンパイル対象のスタイル シートの先頭に配置された <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-147">An <see cref="T:System.Xml.XmlReader" /> positioned at the beginning of the style sheet to be compiled.</span></span></param>
        <param name="settings"><span data-ttu-id="4a707-148">スタイル シートに適用される <see cref="T:System.Xml.Xsl.XsltSettings" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-148">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to be applied to the style sheet.</span></span> <span data-ttu-id="4a707-149">これが <see langword="null" /> の場合、<see cref="P:System.Xml.Xsl.XsltSettings.Default" /> が適用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-149">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> will be applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="4a707-150"><see cref="T:System.Xml.XmlResolver" /> 要素および <see langword="xsl:import" /> 要素で参照されているスタイル シート モジュールの解決に使用する <see langword="xsl:include" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-150">The <see cref="T:System.Xml.XmlResolver" /> use to resolve style sheet modules referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements.</span></span> <span data-ttu-id="4a707-151">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="4a707-151">If this is <see langword="null" />, external resources will not be resolved.</span></span></param>
        <param name="debug"><span data-ttu-id="4a707-152">これを <see langword="true" /> に設定すると、スタイル シートをデバッガーでデバッグできるようになります。</span><span class="sxs-lookup"><span data-stu-id="4a707-152">Setting this to <see langword="true" /> enables debugging the style sheet with a debugger.</span></span></param>
        <param name="typeBuilder"><span data-ttu-id="4a707-153">スタイル シートのコンパイルに使用する <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-153">The <see cref="T:System.Reflection.Emit.TypeBuilder" /> used for the style sheet compilation.</span></span> <span data-ttu-id="4a707-154">指定された TypeBuilder を使用して、結果の型を生成します。</span><span class="sxs-lookup"><span data-stu-id="4a707-154">The provided TypeBuilder is used to generate the resulting type.</span></span></param>
        <param name="scriptAssemblyPath"><span data-ttu-id="4a707-155"><see langword="msxsl:script" /> 要素向けに生成されるアセンブリのベース パス。</span><span class="sxs-lookup"><span data-stu-id="4a707-155">The base path for the assemblies generated for <see langword="msxsl:script" /> elements.</span></span> <span data-ttu-id="4a707-156">生成されるスクリプト アセンブリが 1 つだけの場合、このパラメーターはそのアセンブリのパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-156">If only one script assembly is generated, this parameter specifies the path for that assembly.</span></span> <span data-ttu-id="4a707-157">スクリプト アセンブリの生成が複数にわたる場合、アセンブリ名が一意になるよう、区別のためのサフィックスがファイル名に追加されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-157">In case of multiple script assemblies, a distinctive suffix will be appended to the file name to ensure uniqueness of assembly names.</span></span></param>
        <summary><span data-ttu-id="4a707-158">XSLT スタイル シートを指定された型にコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="4a707-158">Compiles an XSLT style sheet to a specified type.</span></span></summary>
        <returns><span data-ttu-id="4a707-159">コンパイルの結果を示すコンパイラ エラーおよび警告を含む <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4a707-159">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object containing compiler errors and warnings that indicate the results of the compilation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-160">`xsltc.exe` ツールは、<xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> メソッドのラッパーです。</span><span class="sxs-lookup"><span data-stu-id="4a707-160">The `xsltc.exe` tool is a wrapper around the <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method.</span></span> <span data-ttu-id="4a707-161">`xsltc.exe` を使用してスタイルシートをコンパイルすると、コンパイルされたスタイルシートの使用を活用するほとんどのアプリケーションの要求が満たされます。</span><span class="sxs-lookup"><span data-stu-id="4a707-161">Compiling style sheets with the `xsltc.exe` will meet the demands of most applications that leverage the use of compiled style sheets.</span></span> <span data-ttu-id="4a707-162">カスタムコンパイルツールをビルドする場合は、<xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> メソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-162">The <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method should be used when building custom compilation tools.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a707-163">スタイル シートをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="4a707-163">Compiles the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-164">全体的なパフォーマンスは <xref:System.Xml.Xsl.XslCompiledTransform> クラスの方が <xref:System.Xml.Xsl.XslTransform> クラスより優れていますが、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> クラスの <xref:System.Xml.Xsl.XslCompiledTransform> メソッドが変換で初めて呼び出されたときは、<xref:System.Xml.Xsl.XslTransform.Load%2A> クラスの <xref:System.Xml.Xsl.XslTransform> メソッドよりパフォーマンスが劣る場合があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-164">Although the overall performance of the <xref:System.Xml.Xsl.XslCompiledTransform> class is better than the <xref:System.Xml.Xsl.XslTransform> class, the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslCompiledTransform> class might perform more slowly than the <xref:System.Xml.Xsl.XslTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslTransform> class the first time it is called on a transformation.</span></span> <span data-ttu-id="4a707-165">これは、XSLT ファイルを読み込む前にコンパイルする必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="4a707-165">This is because the XSLT file must be compiled before it is loaded.</span></span> <span data-ttu-id="4a707-166">詳しくは、ブログの投稿「[XslCompiledTransform Slower than XslTransform?](https://go.microsoft.com/fwlink/?LinkId=130590)」(XslCompiledTransform は XslTransform より遅い?) をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4a707-166">For more information, see the following blog post: [XslCompiledTransform Slower than XslTransform?](https://go.microsoft.com/fwlink/?LinkId=130590)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a707-167">デバッグ モードでコンパイルされた XSLT と、リリース モードでコンパイルされた XSLT には違いがあります。</span><span class="sxs-lookup"><span data-stu-id="4a707-167">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="4a707-168">状況によっては、デバッグ モードでコンパイルされたスタイル シートが、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> の間にはエラーをスローしないが、その後の <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> の間にエラーとなります。</span><span class="sxs-lookup"><span data-stu-id="4a707-168">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="4a707-169">同じスタイル シートをリリース モードでコンパイルすると、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> の間にエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4a707-169">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="4a707-170">このような動作の 1 つの例は、ノード セット型ではない変数を、ノード セット型が必要な式に代入する場合です。</span><span class="sxs-lookup"><span data-stu-id="4a707-170">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslCompiledTransform.Load stylesheetUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri"><span data-ttu-id="4a707-171">スタイル シートの URI。</span><span class="sxs-lookup"><span data-stu-id="4a707-171">The URI of the style sheet.</span></span></param>
        <summary><span data-ttu-id="4a707-172">指定された URI にあるスタイル シートの読み込みおよびコンパイルを行います。</span><span class="sxs-lookup"><span data-stu-id="4a707-172">Loads and compiles the style sheet located at the specified URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-173"><xref:System.Xml.Xsl.XslCompiledTransform> クラスでは、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4a707-173">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="4a707-174">XSLT スタイルシートでは、`http://www.w3.org/1999/XSL/Transform` 名前空間を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-174">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="4a707-175">このメソッドの動作は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="4a707-175">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="4a707-176">ユーザー資格情報を持たない <xref:System.Xml.XmlUrlResolver> は、スタイルシートの URI の解決に使用され、`xsl:import` または `xsl:include` 要素を処理します。</span><span class="sxs-lookup"><span data-stu-id="4a707-176">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the style sheet URI, and process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="4a707-177">既定の設定の <xref:System.Xml.XmlReader> は、スタイルシートの読み込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-177">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="4a707-178"><xref:System.Xml.XmlReader>で DTD 処理が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-178">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4a707-179">DTD 処理が必要な場合は、この機能が有効になっている <xref:System.Xml.XmlReader> を作成し、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-179">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
-   <span data-ttu-id="4a707-180">`document()` 関数は無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-180">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="4a707-181">埋め込みスクリプトはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4a707-181">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="4a707-182"><xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> オーバーロードを使用して、必要な認証資格情報を持つ <xref:System.Xml.XmlResolver> を指定したり、別の XSLT 設定を指定したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="4a707-182">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-183">次の例では、変換を実行し、ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-183">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-184"><paramref name="stylesheetUri" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-184">The <paramref name="stylesheetUri" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-185">スタイル シートにエラーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-185">The style sheet contains an error.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="4a707-186">スタイル シートが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="4a707-186">The style sheet cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="4a707-187"><paramref name="stylesheetUri" /> の値に、存在しないファイル名またはディレクトリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-187">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="4a707-188"><paramref name="stylesheetUri" /> 値を解決できません。</span><span class="sxs-lookup"><span data-stu-id="4a707-188">The <paramref name="stylesheetUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="4a707-189">または</span><span class="sxs-lookup"><span data-stu-id="4a707-189">-or-</span></span> 
<span data-ttu-id="4a707-190">要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-190">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="4a707-191"><paramref name="stylesheetUri" /> は有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4a707-191"><paramref name="stylesheetUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="4a707-192">スタイル シートの読み込み中に解析エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-192">There was a parsing error loading the style sheet.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-193">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-193">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Type compiledStylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Type compiledStylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (compiledStylesheet As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Type ^ compiledStylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : Type -&gt; unit" Usage="xslCompiledTransform.Load compiledStylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compiledStylesheet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="compiledStylesheet"><span data-ttu-id="4a707-194">コンパイル済みスタイル シートを含むクラスの名前。</span><span class="sxs-lookup"><span data-stu-id="4a707-194">The name of the class that contains the compiled style sheet.</span></span>  
  
 <span data-ttu-id="4a707-195">これは、通常、スタイル シート名です。</span><span class="sxs-lookup"><span data-stu-id="4a707-195">This is usually the name of the style sheet.</span></span> <span data-ttu-id="4a707-196">別途指定しない限り、xsltc.exe ツールはスタイル シート名をクラス名およびアセンブリ名に使用します。</span><span class="sxs-lookup"><span data-stu-id="4a707-196">Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.</span></span></param>
        <summary><span data-ttu-id="4a707-197"><see href="https://docs.microsoft.com/dotnet/standard/data/xml/xslt-compiler-xsltc-exe">XSLT コンパイラ (xsltc.exe)</see> を使用して作成されたコンパイル済みスタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a707-197">Loads the compiled style sheet that was created using the <see href="https://docs.microsoft.com/dotnet/standard/data/xml/xslt-compiler-xsltc-exe">XSLT Compiler (xsltc.exe)</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-198">Xsltc.exe ツールは、スタイルシートをコンパイルし、スタイルシートからアセンブリを生成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-198">The xsltc.exe tool is used to compile style sheets and generate assemblies from the style sheets.</span></span> <span data-ttu-id="4a707-199"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> メソッドは、コンパイルされたスタイルシートをアセンブリから読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a707-199">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads the compiled style sheet from the assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a707-200">また、XSLT アセンブリをアプリケーションに参照として含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-200">You must also include the XSLT assembly as a reference in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-201">次の例は、コンパイルされたスタイルシートを XSLT アセンブリから読み込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4a707-201">The following example shows how to load a compiled style sheet from an XSLT assembly.</span></span> <span data-ttu-id="4a707-202">この例では、xsltc.exe ツールを使用して、bookOrders という名前のクラスを持つ、bookOrders という名前のアセンブリを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="4a707-202">The example assumes that the xsltc.exe tool was used to create an assembly named bookOrders.dll with a class named bookOrders.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a707-203">コードをコンパイルするときに、XSLT アセンブリを参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-203">You have to reference the XSLT assembly when compiling the code.</span></span> <span data-ttu-id="4a707-204">たとえば、「 `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-204">For example, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.</span></span>  
  
```csharp  
// Load the type of the class.  
XslCompiledTransform xslt = new XslCompiledTransform();  
xslt.Load(typeof(bookOrders));  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/672a5ac8-8305-4d28-ba10-11089c2c0924"><span data-ttu-id="4a707-205">XSLT アセンブリツール (xsltc.exe)</span><span class="sxs-lookup"><span data-stu-id="4a707-205">XSLT Assembly Tool (xsltc.exe)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/76ee440b-d134-4f8f-8262-b917ad6dcbf6"><span data-ttu-id="4a707-206">方法: アセンブリを使用して XSLT 変換を実行する</span><span class="sxs-lookup"><span data-stu-id="4a707-206">How to: Perform an XSLT Transformation Using an Assembly</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-207">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-207">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="4a707-208">スタイル シートが格納されている <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-208">An <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span></span></param>
        <summary><span data-ttu-id="4a707-209"><see cref="T:System.Xml.XmlReader" /> に格納されているスタイル シートをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="4a707-209">Compiles the style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-210"><xref:System.Xml.Xsl.XslCompiledTransform> クラスでは、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4a707-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="4a707-211">XSLT スタイルシートでは、`http://www.w3.org/1999/XSL/Transform` 名前空間を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-211">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="4a707-212">スタイルシートは、すべての子を通じて <xref:System.Xml.XmlReader> の現在のノードから読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="4a707-212">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="4a707-213">これにより、ドキュメントの一部をスタイルシートとして使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="4a707-213">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="4a707-214"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> メソッドが完了すると、スタイルシートの末尾の次のノードに <xref:System.Xml.XmlReader> が配置されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-214">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="4a707-215">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="4a707-215">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="4a707-216">このメソッドの動作は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="4a707-216">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="4a707-217">ユーザー資格情報を持たない <xref:System.Xml.XmlUrlResolver> は、`xsl:import` または `xsl:include` 要素を処理するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-217">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="4a707-218">`document()` 関数は無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-218">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="4a707-219">埋め込みスクリプトはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4a707-219">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="4a707-220"><xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> オーバーロードを使用して、必要な認証資格情報を持つ <xref:System.Xml.XmlResolver> を指定したり、別の XSLT 設定を指定したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="4a707-220">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-221">次の例では、<xref:System.Xml.XmlReader> オブジェクトに含まれているスタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a707-221">The following example loads a style sheet contained in an <xref:System.Xml.XmlReader> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Load#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-222"><paramref name="stylesheet" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-222">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-223">スタイル シートにエラーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-223">The style sheet contains an error.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-224">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-224">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="4a707-225"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4a707-225">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="4a707-226">Microsoft .NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、またはスタイル シートが格納されている <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="4a707-226">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span></span></param>
        <summary><span data-ttu-id="4a707-227"><see cref="T:System.Xml.XPath.IXPathNavigable" /> オブジェクトに格納されているスタイル シートをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="4a707-227">Compiles the style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-228"><xref:System.Xml.Xsl.XslCompiledTransform> クラスでは、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4a707-228">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="4a707-229">XSLT スタイルシートでは、`http://www.w3.org/1999/XSL/Transform` 名前空間を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-229">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="4a707-230">このメソッドの動作は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="4a707-230">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="4a707-231">ユーザー資格情報を持たない <xref:System.Xml.XmlUrlResolver> は、`xsl:import` または `xsl:include` 要素を処理するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-231">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="4a707-232">`document()` 関数は無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-232">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="4a707-233">埋め込みスクリプトはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4a707-233">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="4a707-234"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> オーバーロードを使用して、必要な認証資格情報を持つ <xref:System.Xml.XmlResolver> を指定したり、別の XSLT 設定を指定したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="4a707-234">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-235">次の例では、<xref:System.Xml.XPath.XPathDocument> オブジェクトに含まれているスタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a707-235">The following example loads a style sheet contained in an <xref:System.Xml.XPath.XPathDocument> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-236"><paramref name="stylesheet" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-236">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-237">スタイル シートにエラーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-237">The style sheet contains an error.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-238">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-238">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Reflection.MethodInfo executeMethod, unsigned int8[] queryData, class System.Type[] earlyBoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (executeMethod As MethodInfo, queryData As Byte(), earlyBoundTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Reflection::MethodInfo ^ executeMethod, cli::array &lt;System::Byte&gt; ^ queryData, cli::array &lt;Type ^&gt; ^ earlyBoundTypes);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Reflection.MethodInfo * byte[] * Type[] -&gt; unit" Usage="xslCompiledTransform.Load (executeMethod, queryData, earlyBoundTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executeMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="queryData" Type="System.Byte[]" />
        <Parameter Name="earlyBoundTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="executeMethod"><span data-ttu-id="4a707-239">コンパイラが生成した、コンパイル済みスタイル シートの <see cref="T:System.Reflection.MethodInfo" />execute<c>メソッドを表す</c> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4a707-239">A <see cref="T:System.Reflection.MethodInfo" /> object representing the compiler-generated <c>execute</c> method of the compiled style sheet.</span></span></param>
        <param name="queryData"><span data-ttu-id="4a707-240"><c>メソッドによって生成されたコンパイル済みスタイル シートの</c>staticData<see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> フィールドに含まれるシリアル化されたデータ構造のバイト配列。</span><span class="sxs-lookup"><span data-stu-id="4a707-240">A byte array of serialized data structures in the <c>staticData</c> field of the compiled style sheet as generated by the <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> method.</span></span></param>
        <param name="earlyBoundTypes"><span data-ttu-id="4a707-241">コンパイラが生成した、コンパイル済みスタイル シートの <c>ebTypes</c> フィールドに格納された型の配列。</span><span class="sxs-lookup"><span data-stu-id="4a707-241">An array of types stored in the compiler-generated <c>ebTypes</c> field of the compiled style sheet.</span></span></param>
        <summary><span data-ttu-id="4a707-242"><see langword="XSLTC.exe" /> ユーティリティを使用してコンパイルされたスタイル シートからメソッドを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a707-242">Loads a method from a style sheet compiled using the <see langword="XSLTC.exe" /> utility.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-243">このメソッドは、コンパイルされたスタイルシートを <xref:System.Reflection.MethodInfo> オブジェクト、バイト配列、および型配列の形式で受け取ります。</span><span class="sxs-lookup"><span data-stu-id="4a707-243">This method accepts a compiled style sheet in the form of a <xref:System.Reflection.MethodInfo> object, a byte array, and a type array.</span></span> <span data-ttu-id="4a707-244"><xref:System.Reflection.Emit.DynamicMethod> オブジェクトを使用して、<xref:System.Xml.Xsl.XslCompiledTransform> オブジェクトを再利用するときに、コンパイル済みスタイルシートメソッドを破棄することができます。</span><span class="sxs-lookup"><span data-stu-id="4a707-244"><xref:System.Reflection.Emit.DynamicMethod> objects may be used to allow compiled style sheet methods to be discarded when the <xref:System.Xml.Xsl.XslCompiledTransform> object is reclaimed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-245">次のコード例では、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> を使用して、コンパイル済みスタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a707-245">The code example below uses the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> to load a compiled style sheet.</span></span> <span data-ttu-id="4a707-246">変換により、`Price` 要素の値が10% 減少します。</span><span class="sxs-lookup"><span data-stu-id="4a707-246">The transformation reduces the value of the `Price` element by ten percent.</span></span>  
  
 [!code-csharp[XsltDynamicMethodLoad#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/XsltDynamicMethodLoad.cs#1)]
 [!code-vb[XsltDynamicMethodLoad#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltDynamicMethodLoad/VB/XsltDynamicMethodLoad.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="4a707-247">この例で使用される "Transform" アセンブリは、xsltc.exe ユーティリティを使用してビルドされました。</span><span class="sxs-lookup"><span data-stu-id="4a707-247">The "Transform" assembly used in this example was built using the xsltc.exe utility.</span></span> <span data-ttu-id="4a707-248">このコマンドラインツールの使用方法の詳細については、「[方法: アセンブリを使用して XSLT 変換を実行する](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4a707-248">For detailed information on using this command line tool, see [How to: Perform an XSLT Transformation by Using an Assembly](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md).</span></span>  
  
 <span data-ttu-id="4a707-249">前のコード例では、次の変換を使用しています。</span><span class="sxs-lookup"><span data-stu-id="4a707-249">The previous code example uses the following transformation:</span></span>  
 [!code-xml[XsltDynamicMethodLoad-xslt](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/Transform.xslt)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheetUri, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri"><span data-ttu-id="4a707-250">スタイル シートの URI。</span><span class="sxs-lookup"><span data-stu-id="4a707-250">The URI of the style sheet.</span></span></param>
        <param name="settings"><span data-ttu-id="4a707-251">スタイル シートに適用する <see cref="T:System.Xml.Xsl.XsltSettings" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-251">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span></span> <span data-ttu-id="4a707-252">これが <see langword="null" /> の場合は、<see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-252">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="4a707-253">XSLT の <see cref="T:System.Xml.XmlResolver" />import<c>要素および</c>include<c>要素で参照されるスタイル シート URI および任意のスタイル シートを解決するために使用する</c>。</span><span class="sxs-lookup"><span data-stu-id="4a707-253">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the style sheet URI and any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span></span></param>
        <summary><span data-ttu-id="4a707-254">URI で指定された XSLT スタイル シートの読み込みおよびコンパイルを行います。</span><span class="sxs-lookup"><span data-stu-id="4a707-254">Loads and compiles the XSLT style sheet specified by the URI.</span></span> <span data-ttu-id="4a707-255"><see cref="T:System.Xml.XmlResolver" /> は、XSLT の <c>import</c> 要素または <c>include</c> 要素を解決し、XSLT 設定でスタイル シートに対するアクセス許可を確認します。</span><span class="sxs-lookup"><span data-stu-id="4a707-255">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-256"><xref:System.Xml.Xsl.XslCompiledTransform> クラスでは、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4a707-256">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="4a707-257">XSLT スタイルシートでは、`http://www.w3.org/1999/XSL/Transform` 名前空間を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-257">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="4a707-258">既定の設定の <xref:System.Xml.XmlReader> は、スタイルシートの読み込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-258">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="4a707-259"><xref:System.Xml.XmlReader>で DTD 処理が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-259">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4a707-260">DTD 処理が必要な場合は、この機能が有効になっている <xref:System.Xml.XmlReader> を作成し、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-260">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-261">次の例では、ネットワークリソースに格納されているスタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a707-261">The following example loads a style sheet that is stored on a network resource.</span></span> <span data-ttu-id="4a707-262"><xref:System.Xml.XmlSecureResolver> オブジェクトには、スタイル シートにアクセスするのに必要な資格情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-262">An <xref:System.Xml.XmlSecureResolver> object specifies the credentials necessary to access the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Load#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-263"><paramref name="stylesheetUri" /> または <paramref name="stylesheetResolver" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-263">The <paramref name="stylesheetUri" /> or <paramref name="stylesheetResolver" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-264">スタイル シートにエラーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-264">The style sheet contains an error.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="4a707-265">スタイル シートが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="4a707-265">The style sheet cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="4a707-266"><paramref name="stylesheetUri" /> の値に、存在しないファイル名またはディレクトリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-266">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="4a707-267"><paramref name="stylesheetUri" /> 値を解決できません。</span><span class="sxs-lookup"><span data-stu-id="4a707-267">The <paramref name="stylesheetUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="4a707-268">または</span><span class="sxs-lookup"><span data-stu-id="4a707-268">-or-</span></span> 
<span data-ttu-id="4a707-269">要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-269">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="4a707-270"><paramref name="stylesheetUri" /> は有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4a707-270"><paramref name="stylesheetUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="4a707-271">スタイル シートの読み込み中に解析エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-271">There was a parsing error loading the style sheet.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-272">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-272">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="4a707-273">スタイル シートが格納されている <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-273">The <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span></span></param>
        <param name="settings"><span data-ttu-id="4a707-274">スタイル シートに適用する <see cref="T:System.Xml.Xsl.XsltSettings" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-274">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span></span> <span data-ttu-id="4a707-275">これが <see langword="null" /> の場合は、<see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-275">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="4a707-276">XSLT の <see cref="T:System.Xml.XmlResolver" />import<c>要素および</c>include<c>要素で参照される任意のスタイル シートを解決するために使用する</c>。</span><span class="sxs-lookup"><span data-stu-id="4a707-276">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span></span> <span data-ttu-id="4a707-277">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="4a707-277">If this is <see langword="null" />, external resources are not resolved.</span></span></param>
        <summary><span data-ttu-id="4a707-278"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="4a707-278">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="4a707-279"><see cref="T:System.Xml.XmlResolver" /> は、XSLT の <c>import</c> 要素または <c>include</c> 要素を解決し、XSLT 設定でスタイル シートに対するアクセス許可を確認します。</span><span class="sxs-lookup"><span data-stu-id="4a707-279">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-280"><xref:System.Xml.Xsl.XslCompiledTransform> クラスでは、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4a707-280">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="4a707-281">XSLT スタイルシートでは、`http://www.w3.org/1999/XSL/Transform` 名前空間を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-281">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="4a707-282">スタイルシートは、すべての子を通じて <xref:System.Xml.XmlReader> の現在のノードから読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="4a707-282">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="4a707-283">これにより、ドキュメントの一部をスタイルシートとして使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="4a707-283">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="4a707-284"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> メソッドが完了すると、スタイルシートの末尾の次のノードに <xref:System.Xml.XmlReader> が配置されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-284">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="4a707-285">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="4a707-285">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-286">次の例では、スタイルシートを読み込み、XSLT スクリプトのサポートを有効にします。</span><span class="sxs-lookup"><span data-stu-id="4a707-286">The following example loads a style sheet and enables support for XSLT scripting.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Load#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-287"><paramref name="stylesheet" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-287">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-288">スタイル シートにエラーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-288">The style sheet contains an error.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-289">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-289">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="4a707-290"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4a707-290">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="4a707-291">Microsoft .NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、またはスタイル シートが格納されている <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="4a707-291">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span></span></param>
        <param name="settings"><span data-ttu-id="4a707-292">スタイル シートに適用する <see cref="T:System.Xml.Xsl.XsltSettings" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-292">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span></span> <span data-ttu-id="4a707-293">これが <see langword="null" /> の場合は、<see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 設定が適用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-293">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="4a707-294">XSLT の <see cref="T:System.Xml.XmlResolver" />import<c>要素および</c>include<c>要素で参照される任意のスタイル シートを解決するために使用する</c>。</span><span class="sxs-lookup"><span data-stu-id="4a707-294">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span></span> <span data-ttu-id="4a707-295">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="4a707-295">If this is <see langword="null" />, external resources are not resolved.</span></span></param>
        <summary><span data-ttu-id="4a707-296"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="4a707-296">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="4a707-297"><see cref="T:System.Xml.XmlResolver" /> は、XSLT の <c>import</c> 要素または <c>include</c> 要素を解決し、XSLT 設定でスタイル シートに対するアクセス許可を確認します。</span><span class="sxs-lookup"><span data-stu-id="4a707-297">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-298"><xref:System.Xml.Xsl.XslCompiledTransform> クラスでは、XSLT 1.0 構文がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4a707-298">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="4a707-299">XSLT スタイルシートでは、`http://www.w3.org/1999/XSL/Transform` 名前空間を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-299">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-300">次の例では、スタイルシートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="4a707-300">The following example loads a style sheet.</span></span> <span data-ttu-id="4a707-301"><xref:System.Xml.XmlSecureResolver> オブジェクトには、スタイルシートにある `import` または `include` 要素にアクセスするために必要な資格情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-301">The <xref:System.Xml.XmlSecureResolver> object contains the credentials necessary to access any `import` or `include` elements found in the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Load#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-302"><paramref name="stylesheet" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-302">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-303">スタイル シートにエラーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-303">The style sheet contains an error.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-304">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-304">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OutputSettings">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings OutputSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings OutputSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSettings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlWriterSettings ^ OutputSettings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputSettings : System.Xml.XmlWriterSettings" Usage="System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a707-305">スタイル シートの <see cref="T:System.Xml.XmlWriterSettings" />xsl:output<c>要素から派生した出力情報が格納された</c> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="4a707-305">Gets an <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span></span></summary>
        <value><span data-ttu-id="4a707-306">スタイルシートの<c>xsl: output</c>要素から派生した出力情報を格納する、読み取り専用の <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4a707-306">A read-only <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span></span> <span data-ttu-id="4a707-307">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-307">This value can be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-308">このプロパティは、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> メソッドの呼び出しが成功した後に設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-308">This property is populated after a successful call to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span> <span data-ttu-id="4a707-309">これには、コンパイルされたスタイルシートの `xsl:output` 要素から派生した情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="4a707-309">It contains information derived from the `xsl:output` element of a compiled style sheet.</span></span> <span data-ttu-id="4a707-310">この <xref:System.Xml.XmlWriterSettings> オブジェクトを <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> メソッドに渡して、出力先の <xref:System.Xml.XmlWriter> オブジェクトを作成できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-310">This <xref:System.Xml.XmlWriterSettings> object can be passed to the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method to create the <xref:System.Xml.XmlWriter> object to which you want to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-311">次の例では、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> プロパティを使用して、コンソールにテキストを書き込む <xref:System.Xml.XmlWriter> オブジェクトを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4a707-311">The following example shows how to use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to create an <xref:System.Xml.XmlWriter> object that writes text to the console.</span></span>  
  
 [!code-csharp[XslCompiledTransform.OutputSettings#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.OutputSettings/CS/xslt_OutputSettings.cs#1)]
 [!code-vb[XslCompiledTransform.OutputSettings#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.OutputSettings/VB/xslt_OutputSettings.vb#1)]  
  
 <span data-ttu-id="4a707-312">この例では、`books.xml` と `outputConsole.xsl` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="4a707-312">The example uses the `books.xml` and `outputConsole.xsl` files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#2](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/books.xml#2)]  
  
 `outputConsole.xsl`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#3](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/outputConsole.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-313">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-313">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TemporaryFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TemporaryFiles" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemporaryFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TemporaryFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemporaryFiles : System.CodeDom.Compiler.TempFileCollection" Usage="System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a707-314"><see cref="T:System.CodeDom.Compiler.TempFileCollection" /> メソッドの呼び出しが正常に完了した後でディスク上に作成される一時ファイルが格納された <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="4a707-314">Gets the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk after a successful call to the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method.</span></span></summary>
        <value><span data-ttu-id="4a707-315">ディスク上に作成された一時ファイルを格納する <see cref="T:System.CodeDom.Compiler.TempFileCollection" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-315">The <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk.</span></span> <span data-ttu-id="4a707-316"><see langword="null" /> メソッドの呼び出しが正常に完了しなかった場合、またはデバッグが有効になっていない場合は、この値は <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> になります。</span><span class="sxs-lookup"><span data-stu-id="4a707-316">This value is <see langword="null" /> if the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has not been successfully called, or if debugging has not been enabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-317">このプロパティは、XSLT 処理中に生成されたファイルを識別します。</span><span class="sxs-lookup"><span data-stu-id="4a707-317">This property identifies the files that were generated during XSLT processing.</span></span> <span data-ttu-id="4a707-318">ファイルは一時ディレクトリ (% TEMP% 環境変数で指定) に配置されます。これらのファイルは、XSLT 処理が完了した後に削除できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-318">The files are placed in your Temp directory (specified by the %TEMP% environment variable) You can delete these files after the XSLT processing has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-319">次の例では、一時ファイルの名前をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4a707-319">The following example writes the names of temporary files to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a707-320">一時ファイルが作成されるのは、\<msxsl: script > block を使用してスタイルシートを読み込むときだけです。</span><span class="sxs-lookup"><span data-stu-id="4a707-320">Temporary files are created only when loading style sheets with \<msxsl:script> blocks.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Transform#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-321">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-321">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a707-322">XSLT 変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="4a707-322">Executes the XSLT transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4a707-323">デバッグ モードでコンパイルされた XSLT と、リリース モードでコンパイルされた XSLT には違いがあります。</span><span class="sxs-lookup"><span data-stu-id="4a707-323">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="4a707-324">状況によっては、デバッグ モードでコンパイルされたスタイル シートが、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> の間にはエラーをスローしないが、その後の <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> の間にエラーとなります。</span><span class="sxs-lookup"><span data-stu-id="4a707-324">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="4a707-325">同じスタイル シートをリリース モードでコンパイルすると、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> の間にエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="4a707-325">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="4a707-326">このような動作の 1 つの例は、ノード セット型ではない変数を、ノード セット型が必要な式に代入する場合です。</span><span class="sxs-lookup"><span data-stu-id="4a707-326">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-327">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-327">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, string resultsFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, string resultsFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, resultsFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::String ^ resultsFile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, resultsFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="resultsFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="4a707-328">入力ドキュメントの URI。</span><span class="sxs-lookup"><span data-stu-id="4a707-328">The URI of the input document.</span></span></param>
        <param name="resultsFile"><span data-ttu-id="4a707-329">出力ファイルの URI。</span><span class="sxs-lookup"><span data-stu-id="4a707-329">The URI of the output file.</span></span></param>
        <summary><span data-ttu-id="4a707-330">URI で指定された入力ドキュメントを使用して変換を実行し、結果をファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-330">Executes the transform using the input document specified by the URI and outputs the results to a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-331">このメソッドでは、ユーザーの資格情報なしで既定の <xref:System.Xml.XmlUrlResolver> を使用して、入力および出力ドキュメントを解決します。</span><span class="sxs-lookup"><span data-stu-id="4a707-331">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input and output documents.</span></span> <span data-ttu-id="4a707-332">これらのリソースのいずれかが、認証を必要とするネットワークリソースに配置されている場合は、<xref:System.Xml.XmlResolver> を引数の1つとして受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-332">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="4a707-333">既定の設定の <xref:System.Xml.XmlReader> が、入力ドキュメントの読み込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-333">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="4a707-334"><xref:System.Xml.XmlReader>で DTD 処理が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-334">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4a707-335">DTD 処理が必要な場合は、この機能が有効になっている <xref:System.Xml.XmlReader> を作成し、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-335">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-336">次の例では、変換を実行し、ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-336">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="4a707-337">このサンプルでは、次の2つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="4a707-337">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-338"><paramref name="inputUri" /> または <paramref name="resultsFile" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-338">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-339">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-339">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="4a707-340">入力ドキュメントが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="4a707-340">The input document cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="4a707-341"><paramref name="inputUri" /> 値または <paramref name="resultsFile" /> 値に、存在しないファイル名またはディレクトリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-341">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="4a707-342"><paramref name="inputUri" /> 値または <paramref name="resultsFile" /> 値を解決できません。</span><span class="sxs-lookup"><span data-stu-id="4a707-342">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="4a707-343">または</span><span class="sxs-lookup"><span data-stu-id="4a707-343">-or-</span></span> 
<span data-ttu-id="4a707-344">要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-344">An error occurred while processing the request</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="4a707-345"><paramref name="inputUri" /> または <paramref name="resultsFile" /> が有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4a707-345"><paramref name="inputUri" /> or <paramref name="resultsFile" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="4a707-346">入力ドキュメントの読み込み中に解析エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-346">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-347">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-347">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="4a707-348">入力ドキュメントの URI。</span><span class="sxs-lookup"><span data-stu-id="4a707-348">The URI of the input document.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-349">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-349">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="4a707-350">スタイル シートに <c>xsl:output</c> 要素が含まれている場合は、<see cref="T:System.Xml.XmlWriter" /> プロパティから返される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-350">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="4a707-351">これにより、 <see cref="T:System.Xml.XmlWriter" /> に正しい出力設定が設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-351">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="4a707-352">URI で指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-352">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-353">このメソッドでは、ユーザーの資格情報なしで既定の <xref:System.Xml.XmlUrlResolver> を使用して、入力ドキュメントと、スタイルシートにある XSLT `document()` 関数のインスタンスを解決します。</span><span class="sxs-lookup"><span data-stu-id="4a707-353">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="4a707-354">これらのリソースのいずれかが、認証を必要とするネットワークリソースに配置されている場合は、<xref:System.Xml.XmlResolver> を引数の1つとして受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-354">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="4a707-355">既定の設定の <xref:System.Xml.XmlReader> が、入力ドキュメントの読み込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-355">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="4a707-356"><xref:System.Xml.XmlReader>で DTD 処理が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-356">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4a707-357">DTD 処理が必要な場合は、この機能が有効になっている <xref:System.Xml.XmlReader> を作成し、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-357">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="4a707-358">このメソッドは、`xsl:strip-space` 要素をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="4a707-358">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="4a707-359">コンパイルしたスタイルシートに `xsl:strip-space` 要素が含まれている場合は、入力引数として <xref:System.Xml.XmlReader> を受け取る <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> オーバーロードを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-359">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-360">次の例では、XSLT 変換を実行し、<xref:System.Xml.XmlWriter> オブジェクトに出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-360">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Transform#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-361"><paramref name="inputUri" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-361">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-362">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-362">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="4a707-363"><paramref name="inputUri" /> の値に、存在しないファイル名またはディレクトリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-363">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="4a707-364"><paramref name="inputUri" /> 値を解決できません。</span><span class="sxs-lookup"><span data-stu-id="4a707-364">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="4a707-365">または</span><span class="sxs-lookup"><span data-stu-id="4a707-365">-or-</span></span> 
<span data-ttu-id="4a707-366">要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-366">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="4a707-367"><paramref name="inputUri" /> は有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4a707-367"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="4a707-368">入力ドキュメントの読み込み中に解析エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-368">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-369">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-369">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-370">入力ドキュメントが格納されている <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-370">The <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-371">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-371">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="4a707-372">スタイル シートに <c>xsl:output</c> 要素が含まれている場合は、<see cref="T:System.Xml.XmlWriter" /> プロパティから返される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-372">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="4a707-373">これにより、 <see cref="T:System.Xml.XmlWriter" /> に正しい出力設定が設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-373">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="4a707-374"><see cref="T:System.Xml.XmlReader" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-374">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-375">XSLT `document()` 関数が有効になっている場合は、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-375">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="4a707-376">外部リソースが認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-376">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-377">次の例では、books.xml ファイル内の最初のブックを変換します。</span><span class="sxs-lookup"><span data-stu-id="4a707-377">The following example transforms the first book in the books.xml file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Transform#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-378"><paramref name="input" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-378">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-379">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-379">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-380">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-380">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-381"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4a707-381">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="4a707-382">Microsoft .NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="4a707-382">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-383">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-383">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="4a707-384">スタイル シートに <c>xsl:output</c> 要素が含まれている場合は、<see cref="T:System.Xml.XmlWriter" /> プロパティから返される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-384">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="4a707-385">これにより、 <see cref="T:System.Xml.XmlWriter" /> に正しい出力設定が設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-385">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="4a707-386"><see cref="T:System.Xml.XPath.IXPathNavigable" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-386">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-387">XSLT `document()` 関数が有効になっている場合は、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-387">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="4a707-388">外部リソースが認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-388">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="4a707-389">このメソッドは、`xsl:strip-space` 要素をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="4a707-389">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="4a707-390">コンパイルしたスタイルシートに `xsl:strip-space` 要素が含まれている場合は、入力引数として <xref:System.Xml.XmlReader> を受け取る <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> オーバーロードを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-390">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="4a707-391"><xref:System.Xml.XPath.IXPathNavigable> インターフェイスは、<xref:System.Xml.XmlNode> および <xref:System.Xml.XPath.XPathDocument> クラスに実装されています。</span><span class="sxs-lookup"><span data-stu-id="4a707-391">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="4a707-392">これらのクラスは XML データのメモリ内のキャッシュを表します。</span><span class="sxs-lookup"><span data-stu-id="4a707-392">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="4a707-393"><xref:System.Xml.XmlNode> クラスは W3C ドキュメント オブジェクト モデル (DOM) を基礎とし、編集機能も含んでいます。</span><span class="sxs-lookup"><span data-stu-id="4a707-393">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="4a707-394"><xref:System.Xml.XPath.XPathDocument> クラスは、XPath データ モデルに基づいた読み取り専用のデータ ストアです。</span><span class="sxs-lookup"><span data-stu-id="4a707-394">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="4a707-395"><xref:System.Xml.XPath.XPathDocument> は、XSLT 処理に推奨されるクラスです。</span><span class="sxs-lookup"><span data-stu-id="4a707-395"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="4a707-396">これは、<xref:System.Xml.XmlNode> クラスと比較して、より高速なパフォーマンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="4a707-396">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="4a707-397">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="4a707-397">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="4a707-398">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="4a707-398">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="4a707-399">ノード フラグメントを変換するには、ノード フラグメントだけを含むオブジェクトを作成し、そのオブジェクトを <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-399">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="4a707-400">詳細については、「[方法 : ノード フラグメントを変換する](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4a707-400">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-401">次の例では、XSLT 変換を実行し、<xref:System.Xml.XmlWriter> オブジェクトに出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-401">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Transform#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-402"><paramref name="input" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-402">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-403">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-403">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-404">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-404">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="4a707-405">入力ドキュメントの URI。</span><span class="sxs-lookup"><span data-stu-id="4a707-405">The URI of the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-406">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-406">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-407">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-407">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-408">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="4a707-408">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="4a707-409">URI で指定された入力ドキュメントを使用して変換を実行し、結果をストリームに出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-409">Executes the transform using the input document specified by the URI and outputs the results to stream.</span></span> <span data-ttu-id="4a707-410"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には、追加の実行時引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-410">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-411">このメソッドでは、ユーザーの資格情報なしで既定の <xref:System.Xml.XmlUrlResolver> を使用して、入力ドキュメントと、スタイルシートにある XSLT `document()` 関数のインスタンスを解決します。</span><span class="sxs-lookup"><span data-stu-id="4a707-411">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="4a707-412">これらのリソースのいずれかが、認証を必要とするネットワークリソースに配置されている場合は、<xref:System.Xml.XmlResolver> を引数の1つとして受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-412">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="4a707-413">既定の設定の <xref:System.Xml.XmlReader> が、入力ドキュメントの読み込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-413">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="4a707-414"><xref:System.Xml.XmlReader>で DTD 処理が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-414">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4a707-415">DTD 処理が必要な場合は、この機能が有効になっている <xref:System.Xml.XmlReader> を作成し、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-415">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-416"><paramref name="inputUri" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-416">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-417">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-417">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="4a707-418"><paramref name="inputUri" /> の値に、存在しないファイル名またはディレクトリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-418">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="4a707-419"><paramref name="inputUri" /> 値を解決できません。</span><span class="sxs-lookup"><span data-stu-id="4a707-419">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="4a707-420">または</span><span class="sxs-lookup"><span data-stu-id="4a707-420">-or-</span></span> 
<span data-ttu-id="4a707-421">要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-421">An error occurred while processing the request</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="4a707-422"><paramref name="inputUri" /> は有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4a707-422"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="4a707-423">入力ドキュメントの読み込み中に解析エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-423">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-424">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-424">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="4a707-425">入力ドキュメントの URI。</span><span class="sxs-lookup"><span data-stu-id="4a707-425">The URI of the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-426">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-426">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-427">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-427">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-428">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-428">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="4a707-429">URI で指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-429">Executes the transform using the input document specified by the URI and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-430">このメソッドでは、ユーザーの資格情報なしで既定の <xref:System.Xml.XmlUrlResolver> を使用して、入力ドキュメントと、スタイルシートにある XSLT `document()` 関数のインスタンスを解決します。</span><span class="sxs-lookup"><span data-stu-id="4a707-430">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="4a707-431">これらのリソースのいずれかが、認証を必要とするネットワークリソースに配置されている場合は、<xref:System.Xml.XmlResolver> を引数の1つとして受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-431">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="4a707-432">既定の設定の <xref:System.Xml.XmlReader> が、入力ドキュメントの読み込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-432">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="4a707-433"><xref:System.Xml.XmlReader>で DTD 処理が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-433">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4a707-434">DTD 処理が必要な場合は、この機能が有効になっている <xref:System.Xml.XmlReader> を作成し、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-434">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-435">次の例では、XSLT 変換を実行し、文字列を出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-435">The following example executes an XSLT transformation and outputs a string.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Transform#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-436"><paramref name="inputUri" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-436">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-437">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-437">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="4a707-438"><paramref name="inputUri" /> の値に、存在しないファイル名またはディレクトリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-438">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="4a707-439"><paramref name="inputUri" /> 値を解決できません。</span><span class="sxs-lookup"><span data-stu-id="4a707-439">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="4a707-440">または</span><span class="sxs-lookup"><span data-stu-id="4a707-440">-or-</span></span> 
<span data-ttu-id="4a707-441">要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-441">An error occurred while processing the request</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="4a707-442"><paramref name="inputUri" /> は有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4a707-442"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="4a707-443">入力ドキュメントの読み込み中に解析エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-443">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-444">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-444">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="4a707-445">入力ドキュメントの URI。</span><span class="sxs-lookup"><span data-stu-id="4a707-445">The URI of the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-446">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-446">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-447">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-447">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-448">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-448">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="4a707-449">スタイル シートに <c>xsl:output</c> 要素が含まれている場合は、<see cref="T:System.Xml.XmlWriter" /> プロパティから返される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-449">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="4a707-450">これにより、 <see cref="T:System.Xml.XmlWriter" /> に正しい出力設定が設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-450">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="4a707-451">URI で指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-451">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="4a707-452"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には、追加の実行時引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-452">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-453">このメソッドでは、ユーザーの資格情報なしで既定の <xref:System.Xml.XmlUrlResolver> を使用して、入力ドキュメントと、スタイルシートにある XSLT `document()` 関数のインスタンスを解決します。</span><span class="sxs-lookup"><span data-stu-id="4a707-453">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="4a707-454">これらのリソースのいずれかが、認証を必要とするネットワークリソースに配置されている場合は、<xref:System.Xml.XmlResolver> を引数の1つとして受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-454">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="4a707-455">既定の設定の <xref:System.Xml.XmlReader> が、入力ドキュメントの読み込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-455">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="4a707-456"><xref:System.Xml.XmlReader>で DTD 処理が無効になっています。</span><span class="sxs-lookup"><span data-stu-id="4a707-456">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4a707-457">DTD 処理が必要な場合は、この機能が有効になっている <xref:System.Xml.XmlReader> を作成し、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-457">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-458">次の例では、<xref:System.Xml.Xsl.XsltArgumentList> オブジェクトを使用して、現在の日付と時刻を表すパラメーターを作成します。</span><span class="sxs-lookup"><span data-stu-id="4a707-458">The following example uses an <xref:System.Xml.Xsl.XsltArgumentList> object to create a parameter representing the current date and time.</span></span>  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 <span data-ttu-id="4a707-459">この例では、入力として次の2つのデータファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="4a707-459">The example uses the following two data files as input.</span></span>  
  
 <span data-ttu-id="4a707-460">order.xml</span><span class="sxs-lookup"><span data-stu-id="4a707-460">order.xml</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 <span data-ttu-id="4a707-461">order.xsl</span><span class="sxs-lookup"><span data-stu-id="4a707-461">order.xsl</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-462"><paramref name="inputUri" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-462">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-463">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-463">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="4a707-464"><paramref name="inputtUri" /> の値に、存在しないファイル名またはディレクトリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a707-464">The <paramref name="inputtUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="4a707-465"><paramref name="inputUri" /> 値を解決できません。</span><span class="sxs-lookup"><span data-stu-id="4a707-465">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
<span data-ttu-id="4a707-466">または</span><span class="sxs-lookup"><span data-stu-id="4a707-466">-or-</span></span> 
<span data-ttu-id="4a707-467">要求の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-467">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="4a707-468"><paramref name="inputUri" /> は有効な URI ではありません。</span><span class="sxs-lookup"><span data-stu-id="4a707-468"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="4a707-469">入力ドキュメントの読み込み中に解析エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-469">There was a parsing error loading the input document.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-470">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-470">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-471">入力ドキュメントが格納されている <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-471">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-472">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-472">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-473">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-473">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-474">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="4a707-474">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="4a707-475"><see cref="T:System.Xml.XmlReader" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果をストリームに出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-475">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a stream.</span></span> <span data-ttu-id="4a707-476"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には、追加の実行時引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-476">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-477">スタイルシートに XSLT `document()` 関数が含まれている場合は、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-477">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="4a707-478">外部リソースが認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-478">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-479"><paramref name="input" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-479">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-480">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-480">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-481">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-481">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-482">入力ドキュメントが格納されている <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-482">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-483">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-483">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-484">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-484">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-485">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-485">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="4a707-486"><see cref="T:System.Xml.XmlReader" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-486">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="4a707-487"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には、追加の実行時引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-487">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-488">スタイルシートに XSLT `document()` 関数が含まれている場合は、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-488">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="4a707-489">外部リソースが認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-489">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-490"><paramref name="input" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-490">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-491">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-491">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-492">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-492">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-493">入力ドキュメントが格納されている <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-493">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-494">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-494">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-495">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-495">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-496">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-496">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="4a707-497">スタイル シートに <c>xsl:output</c> 要素が含まれている場合は、<see cref="T:System.Xml.XmlWriter" /> プロパティから返される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-497">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="4a707-498">これにより、 <see cref="T:System.Xml.XmlWriter" /> に正しい出力設定が設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-498">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="4a707-499"><see cref="T:System.Xml.XmlReader" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-499">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="4a707-500"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には、追加の実行時引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-500">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-501">スタイルシートに XSLT `document()` 関数が含まれている場合は、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-501">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="4a707-502">外部リソースが認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-502">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-503"><paramref name="input" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-503">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-504">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-504">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-505">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-505">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-506"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4a707-506">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="4a707-507">Microsoft .NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="4a707-507">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-508">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-508">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-509">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-509">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-510">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="4a707-510">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="4a707-511"><see cref="T:System.Xml.XPath.IXPathNavigable" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果をストリームに出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-511">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to a stream.</span></span> <span data-ttu-id="4a707-512"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には、追加の実行時引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-512">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional runtime arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-513">XSLT `document()` 関数が有効になっている場合は、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-513">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="4a707-514">外部リソースが認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-514">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="4a707-515">このメソッドは、`xsl:strip-space` 要素をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="4a707-515">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="4a707-516">コンパイルしたスタイルシートに `xsl:strip-space` 要素が含まれている場合は、入力引数として <xref:System.Xml.XmlReader> を受け取る <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> オーバーロードを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-516">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="4a707-517"><xref:System.Xml.XPath.IXPathNavigable> インターフェイスは、<xref:System.Xml.XmlNode> および <xref:System.Xml.XPath.XPathDocument> クラスに実装されています。</span><span class="sxs-lookup"><span data-stu-id="4a707-517">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="4a707-518">これらのクラスは XML データのメモリ内のキャッシュを表します。</span><span class="sxs-lookup"><span data-stu-id="4a707-518">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="4a707-519"><xref:System.Xml.XmlNode> クラスは W3C ドキュメント オブジェクト モデル (DOM) を基礎とし、編集機能も含んでいます。</span><span class="sxs-lookup"><span data-stu-id="4a707-519">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="4a707-520"><xref:System.Xml.XPath.XPathDocument> クラスは、XPath データ モデルに基づいた読み取り専用のデータ ストアです。</span><span class="sxs-lookup"><span data-stu-id="4a707-520">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="4a707-521"><xref:System.Xml.XPath.XPathDocument> は、XSLT 処理に推奨されるクラスです。</span><span class="sxs-lookup"><span data-stu-id="4a707-521"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="4a707-522">これは、<xref:System.Xml.XmlNode> クラスと比較して、より高速なパフォーマンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="4a707-522">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="4a707-523">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="4a707-523">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="4a707-524">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="4a707-524">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="4a707-525">ノード フラグメントを変換するには、ノード フラグメントだけを含むオブジェクトを作成し、そのオブジェクトを <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-525">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="4a707-526">詳細については、「[方法 : ノード フラグメントを変換する](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4a707-526">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a707-527">次の例では、XSLT 変換を実行し、<xref:System.IO.FileStream>に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-527">The following example executes an XSLT transformation and outputs to a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Transform#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-528"><paramref name="input" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-528">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-529">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-529">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-530">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-530">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-531"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4a707-531">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="4a707-532">Microsoft .NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="4a707-532">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-533">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-533">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-534">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-534">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-535">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-535">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="4a707-536"><see cref="T:System.Xml.XPath.IXPathNavigable" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-536">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="4a707-537"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には、追加の実行時引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-537">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-538">XSLT `document()` 関数が有効になっている場合は、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-538">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="4a707-539">外部リソースが認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-539">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="4a707-540">このメソッドは、`xsl:strip-space` 要素をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="4a707-540">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="4a707-541">コンパイルしたスタイルシートに `xsl:strip-space` 要素が含まれている場合は、入力引数として <xref:System.Xml.XmlReader> を受け取る <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> オーバーロードを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-541">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="4a707-542"><xref:System.Xml.XPath.IXPathNavigable> インターフェイスは、<xref:System.Xml.XmlNode> および <xref:System.Xml.XPath.XPathDocument> クラスに実装されています。</span><span class="sxs-lookup"><span data-stu-id="4a707-542">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="4a707-543">これらのクラスは XML データのメモリ内のキャッシュを表します。</span><span class="sxs-lookup"><span data-stu-id="4a707-543">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="4a707-544"><xref:System.Xml.XmlNode> クラスは W3C ドキュメント オブジェクト モデル (DOM) を基礎とし、編集機能も含んでいます。</span><span class="sxs-lookup"><span data-stu-id="4a707-544">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="4a707-545"><xref:System.Xml.XPath.XPathDocument> クラスは、XPath データ モデルに基づいた読み取り専用のデータ ストアです。</span><span class="sxs-lookup"><span data-stu-id="4a707-545">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="4a707-546"><xref:System.Xml.XPath.XPathDocument> は、XSLT 処理に推奨されるクラスです。</span><span class="sxs-lookup"><span data-stu-id="4a707-546"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="4a707-547">これは、<xref:System.Xml.XmlNode> クラスと比較して、より高速なパフォーマンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="4a707-547">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="4a707-548">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="4a707-548">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="4a707-549">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="4a707-549">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="4a707-550">ノード フラグメントを変換するには、ノード フラグメントだけを含むオブジェクトを作成し、そのオブジェクトを <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-550">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="4a707-551">詳細については、「[方法 : ノード フラグメントを変換する](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4a707-551">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-552"><paramref name="input" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-552">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-553">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-553">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-554">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-554">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-555"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4a707-555">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="4a707-556">Microsoft .NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="4a707-556">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-557">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-557">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-558">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-558">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-559">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-559">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="4a707-560">スタイル シートに <c>xsl:output</c> 要素が含まれている場合は、<see cref="T:System.Xml.XmlWriter" /> プロパティから返される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-560">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="4a707-561">これにより、 <see cref="T:System.Xml.XmlWriter" /> に正しい出力設定が設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-561">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="4a707-562"><see cref="T:System.Xml.XPath.IXPathNavigable" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-562">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="4a707-563"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には、追加の実行時引数を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-563">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a707-564">XSLT `document()` 関数が有効になっている場合は、ユーザー資格情報のない <xref:System.Xml.XmlUrlResolver> を使用して解決されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-564">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="4a707-565">外部リソースが認証を必要とするネットワークリソースに配置されている場合は、引数の1つとして <xref:System.Xml.XmlResolver> を受け取るオーバーロードを使用し、必要な資格情報で <xref:System.Xml.XmlResolver> を指定します。</span><span class="sxs-lookup"><span data-stu-id="4a707-565">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="4a707-566">このメソッドは、`xsl:strip-space` 要素をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="4a707-566">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="4a707-567">コンパイルしたスタイルシートに `xsl:strip-space` 要素が含まれている場合は、入力引数として <xref:System.Xml.XmlReader> を受け取る <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> オーバーロードを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-567">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="4a707-568"><xref:System.Xml.XPath.IXPathNavigable> インターフェイスは、<xref:System.Xml.XmlNode> および <xref:System.Xml.XPath.XPathDocument> クラスに実装されています。</span><span class="sxs-lookup"><span data-stu-id="4a707-568">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="4a707-569">これらのクラスは XML データのメモリ内のキャッシュを表します。</span><span class="sxs-lookup"><span data-stu-id="4a707-569">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="4a707-570"><xref:System.Xml.XmlNode> クラスは W3C ドキュメント オブジェクト モデル (DOM) を基礎とし、編集機能も含んでいます。</span><span class="sxs-lookup"><span data-stu-id="4a707-570">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="4a707-571"><xref:System.Xml.XPath.XPathDocument> クラスは、XPath データ モデルに基づいた読み取り専用のデータ ストアです。</span><span class="sxs-lookup"><span data-stu-id="4a707-571">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="4a707-572"><xref:System.Xml.XPath.XPathDocument> は、XSLT 処理に推奨されるクラスです。</span><span class="sxs-lookup"><span data-stu-id="4a707-572"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="4a707-573">これは、<xref:System.Xml.XmlNode> クラスと比較して、より高速なパフォーマンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="4a707-573">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="4a707-574">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="4a707-574">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="4a707-575">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="4a707-575">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="4a707-576">ノード フラグメントを変換するには、ノード フラグメントだけを含むオブジェクトを作成し、そのオブジェクトを <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a707-576">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="4a707-577">詳細については、「[方法 : ノード フラグメントを変換する](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4a707-577">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-578"><paramref name="input" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-578">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-579">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-579">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-580">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-580">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-581">入力ドキュメントが格納されている <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-581">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-582">変換に対する入力として使用された名前空間限定引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-582">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="4a707-583">この値には <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="4a707-583">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-584">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-584">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="4a707-585">スタイル シートに <c>xsl:output</c> 要素が含まれている場合は、<see cref="T:System.Xml.XmlWriter" /> プロパティから返される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-585">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="4a707-586">これにより、 <see cref="T:System.Xml.XmlWriter" /> に正しい出力設定が設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-586">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <param name="documentResolver"><span data-ttu-id="4a707-587">XSLT の <see cref="T:System.Xml.XmlResolver" />document()<c>関数を解決するために使用する</c>。</span><span class="sxs-lookup"><span data-stu-id="4a707-587">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="4a707-588">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="4a707-588">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span></param>
        <summary><span data-ttu-id="4a707-589"><see cref="T:System.Xml.XmlReader" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-589">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="4a707-590"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には追加の実行時引数を指定し、XmlResolver で XSLT の <c>document()</c> 関数を解決します。</span><span class="sxs-lookup"><span data-stu-id="4a707-590">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the XmlResolver resolves the XSLT <c>document()</c> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a707-591">次の例では、<xref:System.Xml.XmlSecureResolver> を使用して、XSLT `document()` 関数を解決します。</span><span class="sxs-lookup"><span data-stu-id="4a707-591">The following example uses an <xref:System.Xml.XmlSecureResolver> to resolve the XSLT `document()` function.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Transform#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a707-592"><paramref name="input" /> または <paramref name="results" /> の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4a707-592">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="4a707-593">XSLT 変換の実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="4a707-593">There was an error executing the XSLT transform.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b"><span data-ttu-id="4a707-594">XslCompiledTransform クラスの使用</span><span class="sxs-lookup"><span data-stu-id="4a707-594">Using the XslCompiledTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="4a707-595"><see cref="T:System.Xml.XPath.IXPathNavigable" /> オブジェクトで指定された変換対象のドキュメント。</span><span class="sxs-lookup"><span data-stu-id="4a707-595">The document to transform that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span></span></param>
        <param name="arguments"><span data-ttu-id="4a707-596">引数リスト ( <see cref="T:System.Xml.Xsl.XsltArgumentList" />)。</span><span class="sxs-lookup"><span data-stu-id="4a707-596">Argument list as <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</span></span></param>
        <param name="results"><span data-ttu-id="4a707-597">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4a707-597">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
<span data-ttu-id="4a707-598">スタイル シートに <see langword="xsl:output" /> 要素が含まれている場合は、 <see cref="T:System.Xml.XmlWriter" /> プロパティから返される <see cref="T:System.Xml.XmlWriterSettings" /> オブジェクトを使用して <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a707-598">If the style sheet contains an <see langword="xsl:output" /> element, you should create the <see cref="T:System.Xml.XmlWriter" /> by using the <see cref="T:System.Xml.XmlWriterSettings" /> object that is returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="4a707-599">これにより、 <see cref="T:System.Xml.XmlWriter" /> に正しい出力設定が設定されます。</span><span class="sxs-lookup"><span data-stu-id="4a707-599">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <param name="documentResolver"><span data-ttu-id="4a707-600">XSLT の <see cref="T:System.Xml.XmlResolver" /> 関数を解決するために使用する <see langword="document()" /> 。</span><span class="sxs-lookup"><span data-stu-id="4a707-600">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <see langword="document()" /> function.</span></span> <span data-ttu-id="4a707-601">これが <see langword="null" />の場合、 <see langword="document()" /> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="4a707-601">If this is <see langword="null" />, the <see langword="document()" /> function is not resolved.</span></span></param>
        <summary><span data-ttu-id="4a707-602"><see cref="T:System.Xml.XPath.IXPathNavigable" /> オブジェクトで指定された入力ドキュメントを使用して変換を実行し、結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="4a707-602">Executes the transform by using the input document that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="4a707-603"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> には追加の実行時引数を指定し、 <see cref="T:System.Xml.XmlResolver" /> は XSLT の <see langword="document()" /> 関数を解決します。</span><span class="sxs-lookup"><span data-stu-id="4a707-603">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the <see cref="T:System.Xml.XmlResolver" /> resolves the XSLT <see langword="document()" /> function.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
