<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0bc6173d0637612bafdef86c7824304d4ecbf148" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77230902" /></Metadata><TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>クライアント ベースのアプリケーション設定プロバイダーの拡張機能を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション設定のアーキテクチャを使用すると、<xref:System.Configuration.SettingsProvider>から派生したクラスであるカスタム設定プロバイダーを作成することによって、アプリケーション設定のためのカスタムストレージ機構を提供できます。 このようなクラスには、プロパティを格納および取得するための基本機能が含まれています。 ただし、カスタム設定プロバイダーに <xref:System.Configuration.IApplicationSettingsProvider> インターフェイスを実装することで、追加の標準化された機能を追加できます。 このインターフェイスには、主に設定プロバイダーがアプリケーションのバージョンの変更をよりインテリジェントに処理できるようにする3つのメソッドが含まれています。 通常、設定プロバイダーは、次の状況を予測するために、異なるバージョンのアプリケーションのアプリケーション設定を個別に格納します。  
  
-   アプリケーションの異なるバージョンの side-by-side 実行。  
  
-   アプリケーションをアップグレードするときに、アプリケーションの設定を保持します。  
  
-   現在使用されているバージョンのアプリケーション設定を既定値にリセットしています。  
  
 <xref:System.Configuration.LocalFileSettingsProvider> クラスによって、<xref:System.Configuration.IApplicationSettingsProvider> インターフェイスが実装されます。 <xref:System.Configuration.IApplicationSettingsProvider> に含まれる同じメソッドのセットも <xref:System.Configuration.ApplicationSettingsBase> クラスにあります。これにより、アプリケーション設定ラッパーとその設定プロバイダーの間で定義済みの通信チャネルを確立できます。  
  
> [!NOTE]
>  このインターフェイスは省略可能です。 プロバイダーがこのインターフェイスを実装していない場合、このインターフェイスで定義されているいずれかのメソッドにアクセスしようとすると、設定インフラストラクチャが通知なしに失敗します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="~/docs/framework/winforms/advanced/application-settings-architecture.md">アプリケーション設定アーキテクチャ</related>
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
        <param name="property">値が返される <see cref="T:System.Configuration.SettingsProperty" />。</param>
        <summary>同じアプリケーションの前のバージョンの、指定した設定プロパティの値を返します。</summary>
        <returns>前のバージョンのアプリケーションで最後に設定されたときの、指定したプロパティ設定の値を格納している <see cref="T:System.Configuration.SettingsPropertyValue" />。設定が見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> メソッドを <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> メソッドと組み合わせて使用すると、新しいバージョンのアプリケーションのインストール中またはインストール後にアプリケーション設定を移行できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <related type="Article" href="~/docs/framework/deployment/side-by-side-execution.md">side-by-side 実行</related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
        <summary>指定したアプリケーションに関連付けられたアプリケーション設定を、その既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> メソッドは、指定されたアプリケーション設定グループの格納されている値を再初期化します。 これに対して、プロパティの初期化中に、格納されている値がない場合、<xref:System.Configuration.DefaultSettingValueAttribute> は単一の設定プロパティの既定値を提供します。  
  
 設定プロバイダーは、指定されたアプリケーション設定のグループに対して適切な既定値を決定します。 たとえば、<xref:System.Configuration.LocalFileSettingsProvider> の実装は、ユーザースコープの設定を `application.exe.config` ファイル内の共有値にリセットします。これに対して、アプリケーションスコープの設定は変更されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">現在のアプリケーションの使い方を記述している <see cref="T:System.Configuration.SettingsContext" />。</param>
        <param name="properties">値の取得対象となる設定プロパティ グループを格納している <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
        <summary>アプリケーションがアップグレードされたことをプロバイダーに示します。 これにより、プロバイダーは格納している値を必要に応じてアップグレードできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework を使用すると、同じアプリケーションの異なるバージョンをサイドバイサイドでインストールして実行できます。 アプリケーション設定プロバイダーは、分離を確保するために、アプリケーションの各バージョンのアプリケーション設定を個別に保存します。 ただし、以前のバージョンのアプリケーションの設定を現在のものに移行することもできます。 この移行機能を提供するには、<xref:System.Configuration.SettingsProvider>から派生したクラスに実装されている <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> メソッドを使用します。  
  
 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> メソッドを <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> メソッドと組み合わせて使用すると、新しいバージョンのアプリケーションのインストール中またはインストール後にアプリケーション設定を移行できます。  
  
 このメソッドは、<xref:System.Configuration.NoSettingsVersionUpgradeAttribute> が適用されているすべてのアプリケーション設定、または <xref:System.Configuration.ApplicationSettingsBase>から派生した設定ラッパークラス全体に対して抑制する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <related type="Article" href="~/docs/framework/deployment/side-by-side-execution.md">side-by-side 実行</related>
      </Docs>
    </Member>
  </Members>
</Type>
