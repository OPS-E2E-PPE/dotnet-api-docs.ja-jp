<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ffca739d27e2f20d477fa8d42f246a2dbe7feef" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83926712" /></Metadata><TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ApplicationSettingsBase = class&#xA;    inherit SettingsBase&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b632f-101">Windows フォーム アプリケーションでアプリケーション設定機能を実装する、具象ラッパー クラスを派生する基本クラスとして機能します。</span><span class="sxs-lookup"><span data-stu-id="b632f-101">Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-102"><xref:System.Configuration.ApplicationSettingsBase> は、Web ベースのアプリケーションで使用される次の機能を <xref:System.Configuration.SettingsBase> クラスに追加します。</span><span class="sxs-lookup"><span data-stu-id="b632f-102"><xref:System.Configuration.ApplicationSettingsBase> adds the following functionality to the <xref:System.Configuration.SettingsBase> class, which is used by Web-based applications:</span></span>  
  
-   <span data-ttu-id="b632f-103">派生した設定ラッパークラスの属性を検出する機能。</span><span class="sxs-lookup"><span data-stu-id="b632f-103">The ability to detect attributes on a derived, settings wrapper class.</span></span> <span data-ttu-id="b632f-104"><xref:System.Configuration.ApplicationSettingsBase> は、後で説明するように、ラッパークラスのプロパティに使用される宣言型モデルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="b632f-104"><xref:System.Configuration.ApplicationSettingsBase> supports the declarative model used for wrapper class properties, as described later.</span></span>  
  
-   <span data-ttu-id="b632f-105">上位レベルの <xref:System.Configuration.ApplicationSettingsBase.Save%2A> および <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> メソッド。</span><span class="sxs-lookup"><span data-stu-id="b632f-105">Higher-level <xref:System.Configuration.ApplicationSettingsBase.Save%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="b632f-106">個々の設定の正確性を確保するために処理できる追加の検証イベント。</span><span class="sxs-lookup"><span data-stu-id="b632f-106">Additional validation events that you can handle to ensure the correctness of individual settings.</span></span>  
  
 <span data-ttu-id="b632f-107">アプリケーション設定アーキテクチャでは、設定プロパティのグループにアクセスするには、<xref:System.Configuration.ApplicationSettingsBase>から具象ラッパークラスを派生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-107">In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="b632f-108">ラッパークラスは、次の方法で <xref:System.Configuration.ApplicationSettingsBase> をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="b632f-108">The wrapper class customizes <xref:System.Configuration.ApplicationSettingsBase> in the following ways:</span></span>  
  
-   <span data-ttu-id="b632f-109">アクセスするすべての設定プロパティについて、対応する厳密に型指定されたパブリックプロパティがラッパークラスに追加されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-109">For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</span></span> <span data-ttu-id="b632f-110">このプロパティには、読み取り/書き込みアプリケーションの設定に `get` と `set` アクセサーがありますが、読み取り専用の設定では `get` アクセサーのみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-110">This property has `get` and `set` accessors for read/write application settings, but only a `get` accessor for read-only settings.</span></span>  
  
-   <span data-ttu-id="b632f-111">Appropriated 属性は、設定のスコープ (アプリケーションまたはユーザー)、設定のローミングをサポートするかどうか、設定の既定値、使用する設定プロバイダーなど、設定プロパティの特性を示すために、ラッパークラスのパブリックプロパティに適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-111">Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</span></span> <span data-ttu-id="b632f-112">各プロパティは、<xref:System.Configuration.ApplicationScopedSettingAttribute> または <xref:System.Configuration.UserScopedSettingAttribute>のいずれかを使用して、スコープを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-112">Each property is required to specify its scope, using either <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>.</span></span> <span data-ttu-id="b632f-113">既定の <xref:System.Configuration.LocalFileSettingsProvider> が使用されている場合、アプリケーションスコープ設定は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b632f-113">Application-scoped settings are read-only if the default <xref:System.Configuration.LocalFileSettingsProvider> is used.</span></span>  
  
 <span data-ttu-id="b632f-114"><xref:System.Configuration.ApplicationSettingsBase> クラスは、リフレクションを使用してこれらの属性を実行時に検出します。</span><span class="sxs-lookup"><span data-stu-id="b632f-114">The <xref:System.Configuration.ApplicationSettingsBase> class uses reflection to detect these attributes at run time.</span></span> <span data-ttu-id="b632f-115">この情報の大部分は、ストレージや永続化形式などを担当する設定プロバイダーレイヤーに渡されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-115">Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</span></span>  
  
 <span data-ttu-id="b632f-116">アプリケーションに複数の設定ラッパークラスがある場合、各クラスは*設定グループ*を定義します。</span><span class="sxs-lookup"><span data-stu-id="b632f-116">When an application has multiple settings wrapper classes, each class defines a *settings group*.</span></span> <span data-ttu-id="b632f-117">各グループには次の特性があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-117">Each group has the following characteristics:</span></span>  
  
-   <span data-ttu-id="b632f-118">グループには、任意の数または種類のプロパティ設定を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="b632f-118">A group can contain any number or type of property settings.</span></span>  
  
-   <span data-ttu-id="b632f-119">ラッパークラスを <xref:System.Configuration.SettingsGroupNameAttribute>で修飾することによってグループ名が明示的に設定されていない場合は、名前が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-119">If the group name is not explicitly set by the decorating the wrapper class with a <xref:System.Configuration.SettingsGroupNameAttribute>, then a name is automatically generated.</span></span>  
  
 <span data-ttu-id="b632f-120">既定では、すべてのクライアントベースのアプリケーションは、<xref:System.Configuration.LocalFileSettingsProvider> を使用して記憶域を提供します。</span><span class="sxs-lookup"><span data-stu-id="b632f-120">By default, all client-based applications use the <xref:System.Configuration.LocalFileSettingsProvider> to provide storage.</span></span> <span data-ttu-id="b632f-121">代替設定プロバイダーが必要な場合は、ラッパークラスまたはプロパティを、対応する <xref:System.Configuration.SettingsProviderAttribute>で修飾する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-121">If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="b632f-122">アプリケーション設定の使用方法の詳細については、「 [Windows フォームのアプリケーション設定](/dotnet/framework/winforms/advanced/application-settings-for-windows-forms)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-122">For more information about using application settings, see [Application Settings for Windows Forms](/dotnet/framework/winforms/advanced/application-settings-for-windows-forms).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b632f-123">次のコード例では、アプリケーション設定を使用して、メインフォームの場所、サイズ、背景色、およびタイトルバーのテキストの属性を保持する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b632f-123">The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</span></span> <span data-ttu-id="b632f-124">これらの属性はすべて、`FormLocation`、`FormSize`、`FormBackColor`、`FormText`という名前の `FormSettings` クラスの単一のアプリケーション設定プロパティとして保存されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-124">All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively.</span></span> <span data-ttu-id="b632f-125">`FormText` と `Size` を除くすべてのデータは、関連付けられているフォームプロパティにバインドされ、<xref:System.Configuration.DefaultSettingValueAttribute>を使用して既定の設定値が適用されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-125">All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span>  
  
 <span data-ttu-id="b632f-126">フォームには、次の名前と関数を持つ4つの子コントロールが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b632f-126">The form contains four child controls that have the following names and functions:</span></span>  
  
-   <span data-ttu-id="b632f-127">[**色**の共通] ダイアログボックスを表示するために使用 `btnBackColor` という名前のボタン。</span><span class="sxs-lookup"><span data-stu-id="b632f-127">A button named `btnBackColor` used to display the **Color** common dialog box.</span></span>  
  
-   <span data-ttu-id="b632f-128">アプリケーション設定の <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> に使用 `btnReload` という名前のボタン。</span><span class="sxs-lookup"><span data-stu-id="b632f-128">A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="b632f-129">アプリケーション設定の <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> に使用 `btnReset` という名前のボタン。</span><span class="sxs-lookup"><span data-stu-id="b632f-129">A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="b632f-130">プログラムに関するステータス情報を表示するために使用 `tbStatus` という名前のテキストボックス。</span><span class="sxs-lookup"><span data-stu-id="b632f-130">A textbox named `tbStatus` used to display status information about the program.</span></span>  
  
 <span data-ttu-id="b632f-131">アプリケーションを実行するたびに、追加のピリオド文字がフォームのタイトルテキストに追加されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-131">Notice that after every execution of the application, an additional period character is appended to the title text of the form.</span></span>  
  
 <span data-ttu-id="b632f-132">このコード例では、`colorDialog1`という名前の <xref:System.Windows.Forms.ColorDialog> クラスを持つフォームと、`tbStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> を持つ <xref:System.Windows.Forms.StatusStrip> コントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="b632f-132">This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`.</span></span> <span data-ttu-id="b632f-133">さらに、`btnReload`、`btnReset`、および `btnBackColor`という3つの <xref:System.Windows.Forms.Button> オブジェクトが必要です。</span><span class="sxs-lookup"><span data-stu-id="b632f-133">Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.</span></span>  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/64090a34-8556-4904-8ea0-20efe9f8c886"><span data-ttu-id="b632f-134">Windows フォームのアプリケーション設定</span><span class="sxs-lookup"><span data-stu-id="b632f-134">Application Settings for Windows Forms</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b632f-135"><see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b632f-135">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b632f-136"><see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを既定の状態に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b632f-136">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class to its default state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-137">パラメーターなしのコンストラクターは、現在の設定ラッパークラスに関連付けられているコンポーネントが存在しないという前提で動作するように設計されています。これは <xref:System.Configuration.ApplicationSettingsBase>から派生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-137">The parameterless constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="b632f-138">ラッパークラスのインスタンスが作成されると、継承されたコードは次のアクションを自動的に実行します。</span><span class="sxs-lookup"><span data-stu-id="b632f-138">When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</span></span>  
  
1.  <span data-ttu-id="b632f-139">クラスを反映します。</span><span class="sxs-lookup"><span data-stu-id="b632f-139">Reflect over the class.</span></span>  
  
2.  <span data-ttu-id="b632f-140">`[UserScopedSettingAttribute]` または `[ApplicationScopedSettingAttribute]`でマークされたラッパーの各プロパティに対して、対応する <xref:System.Configuration.SettingsProperty> が作成されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-140">For each property on the wrapper marked with either `[UserScopedSettingAttribute]` or `[ApplicationScopedSettingAttribute]`, a corresponding <xref:System.Configuration.SettingsProperty> is created.</span></span>  
  
3.  <span data-ttu-id="b632f-141">各 <xref:System.Configuration.SettingsProperty> には、既定値や設定プロバイダーなど、必要に応じてラッパーのプロパティに存在する他の属性に基づいて設定されたプロパティがいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="b632f-141">Each <xref:System.Configuration.SettingsProperty> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</span></span>  
  
4.  <span data-ttu-id="b632f-142">その他のすべての属性は、単に属性バッグ (<xref:System.Configuration.SettingsProperty> クラスの <xref:System.Configuration.SettingsProperty.Attributes%2A> プロパティ) に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-142">All other attributes are simply put into an attribute bag, the <xref:System.Configuration.SettingsProperty.Attributes%2A> property of the <xref:System.Configuration.SettingsProperty> class.</span></span>  
  
5.  <span data-ttu-id="b632f-143">すべての <xref:System.Configuration.SettingsProperty> オブジェクトは、<xref:System.Configuration.ApplicationSettingsBase> クラスの <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> プロパティによって表される <xref:System.Configuration.SettingsPropertyCollection> に追加されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-143">All <xref:System.Configuration.SettingsProperty> objects are added to a <xref:System.Configuration.SettingsPropertyCollection> represented by the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span> <span data-ttu-id="b632f-144">このコレクションは、<xref:System.Configuration.SettingsBase.Initialize%2A> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-144">This collection is then passed to the <xref:System.Configuration.SettingsBase.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="b632f-145">前述の手順 3. で説明したように、<xref:System.Configuration.ApplicationSettingsBase> は、特に次のようないくつかのプロパティ属性でネイティブに機能します。 <xref:System.Configuration.SettingsProviderAttribute>、<xref:System.Configuration.DefaultSettingValueAttribute>、および <xref:System.Configuration.SettingsSerializeAsAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="b632f-145">As implied by step 3 mentioned previously, <xref:System.Configuration.ApplicationSettingsBase> natively works with several property attributes, specifically the following: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, and <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="b632f-146">その他のすべての設定属性は、適切な基になるプロバイダーに渡されるだけです。</span><span class="sxs-lookup"><span data-stu-id="b632f-146">All other settings attributes are simply passed through to the appropriate underlying provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="b632f-147">アプリケーション設定オブジェクトの所有者として機能するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b632f-147">The component that will act as the owner of the application settings object.</span></span></param>
        <summary><span data-ttu-id="b632f-148">指定された所有者コンポーネントを使用して、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b632f-148">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-149">このコンストラクターは、呼び出しを使用した <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> コンストラクターとまったく同じです。</span><span class="sxs-lookup"><span data-stu-id="b632f-149">This constructor is exactly equivalent to the <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> constructor using the invocation:</span></span>  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 <span data-ttu-id="b632f-150">ラッパークラスのインスタンス化中にリフレクションを使用する方法の詳細については、「既定の <xref:System.Configuration.ApplicationSettingsBase.%23ctor> コンストラクター」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-150">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b632f-151"><paramref name="owner" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b632f-151"><paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase settingsKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey"><span data-ttu-id="b632f-152">ラッパー クラスの個々のインスタンスを一意に識別する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-152">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span></span></param>
        <summary><span data-ttu-id="b632f-153">指定された設定キーを使用して、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b632f-153">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied settings key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-154">このコンストラクターは、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> プロパティを `settingsKey` パラメーターの値に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b632f-154">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="b632f-155">このプロパティは、同じアプリケーションドメイン内の設定ラッパークラスの異なるインスタンスを明確化する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b632f-155">This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="b632f-156">ラッパークラスのインスタンス化中にリフレクションを使用する方法の詳細については、「既定の <xref:System.Configuration.ApplicationSettingsBase.%23ctor> コンストラクター」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-156">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent * string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase (owner, settingsKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="b632f-157">アプリケーション設定オブジェクトの所有者として機能するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b632f-157">The component that will act as the owner of the application settings object.</span></span></param>
        <param name="settingsKey"><span data-ttu-id="b632f-158">ラッパー クラスの個々のインスタンスを一意に識別する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-158">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span></span></param>
        <summary><span data-ttu-id="b632f-159">指定された所有者コンポーネントと設定キーを使用して、<see cref="T:System.Configuration.ApplicationSettingsBase" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b632f-159">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component and settings key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-160">`owner` パラメーターによって指定された <xref:System.ComponentModel.IComponent> オブジェクトは、このアプリケーション設定クラスの現在のインスタンスの所有者として機能します。</span><span class="sxs-lookup"><span data-stu-id="b632f-160">The <xref:System.ComponentModel.IComponent> object specified by the `owner` parameter acts as the owner of the current instance of this applications settings class.</span></span> <span data-ttu-id="b632f-161"><xref:System.Configuration.ApplicationSettingsBase>から派生した設定ラッパークラスの初期化中に、<xref:System.Configuration.ISettingsProviderService>に対して所有者のサイトが照会されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-161">During the initialization of the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>, the owner's site is queried for a <xref:System.Configuration.ISettingsProviderService>.</span></span> <span data-ttu-id="b632f-162">存在する場合は、<xref:System.Configuration.SettingsProviderAttribute>によって指定されたラッパークラスのすべてのプロパティに対して、ネイティブ設定プロバイダーに優先して使用されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-162">If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="b632f-163">このコンストラクターは、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> プロパティを `settingsKey` パラメーターの値に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b632f-163">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="b632f-164">このプロパティは、同じアプリケーションドメイン内のラッパークラスの異なるインスタンスを明確化する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b632f-164">This property is useful in disambiguating different instances of the wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="b632f-165">ラッパークラスのインスタンス化中にリフレクションを使用する方法の詳細については、「既定の <xref:System.Configuration.ApplicationSettingsBase.%23ctor> コンストラクター」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-165">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b632f-166"><paramref name="owner" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b632f-166"><paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Configuration.SettingsContext" Usage="System.Configuration.ApplicationSettingsBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b632f-167">設定グループに関連付けられているアプリケーション設定のコンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="b632f-167">Gets the application settings context associated with the settings group.</span></span></summary>
        <value><span data-ttu-id="b632f-168">設定グループに関連付けられている <see cref="T:System.Configuration.SettingsContext" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-168">A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings group.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-169"><xref:System.Configuration.ApplicationSettingsBase> から派生した各設定ラッパークラスには、関連付けられたコンテキストが関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="b632f-169">Each settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase> has a context associated with it.</span></span> <span data-ttu-id="b632f-170">コンテキストは、プロパティの使用方法を識別するために、各プロパティの設定プロバイダーに渡されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-170">The context is passed to the settings provider for each property to identify how the property is used.</span></span> <span data-ttu-id="b632f-171">したがって、コンテキストは、関連付けられているアプリケーション設定値を永続化するための最適な方法を設定プロバイダーが決定するのに役立つヒントとして機能します。</span><span class="sxs-lookup"><span data-stu-id="b632f-171">Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</span></span>  
  
 <span data-ttu-id="b632f-172">これに対し、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> プロパティを使用すると、設定プロバイダーは同じラッパークラスの複数のインスタンスをあいまいにすることができます。</span><span class="sxs-lookup"><span data-stu-id="b632f-172">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousVersion : string -&gt; obj" Usage="applicationSettingsBase.GetPreviousVersion propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="b632f-173">値が返される設定プロパティの名前を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-173">A <see cref="T:System.String" /> containing the name of the settings property whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="b632f-174">同じアプリケーションの以前のバージョンの、名前付き設定プロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="b632f-174">Returns the value of the named settings property for the previous version of the same application.</span></span></summary>
        <returns><span data-ttu-id="b632f-175">設定プロパティが見つかった場合は、指定した <see cref="T:System.Object" /> の値を含む <see cref="T:System.Configuration.SettingsProperty" />、それ以外の場合は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b632f-175">An <see cref="T:System.Object" /> containing the value of the specified <see cref="T:System.Configuration.SettingsProperty" /> if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-176"><xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> メソッドは、新しいバージョンのアプリケーションのインストール中にアプリケーション設定を移行するときに、<xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> 方法と組み合わせて使用されることがよくあります。</span><span class="sxs-lookup"><span data-stu-id="b632f-176">The <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException"><span data-ttu-id="b632f-177">プロパティが存在しません。</span><span class="sxs-lookup"><span data-stu-id="b632f-177">The property does not exist.</span></span> <span data-ttu-id="b632f-178">プロパティ カウントが 0 か、データ ストアでプロパティが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="b632f-178">The property count is zero or the property cannot be found in the data store.</span></span></exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ApplicationSettingsBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="b632f-179">アクセスするプロパティの名前を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-179">A <see cref="T:System.String" /> containing the name of the property to access.</span></span></param>
        <summary><span data-ttu-id="b632f-180">指定したアプリケーション設定プロパティの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b632f-180">Gets or sets the value of the specified application settings property.</span></span></summary>
        <value><span data-ttu-id="b632f-181">指定した設定プロパティが見つかった場合は、そのプロパティの値。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-181">If found, the value of the named settings property; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> プロパティは、インデクサーとも呼ばれ、<xref:System.Configuration.ApplicationSettingsBase>から派生した設定ラッパークラスで定期的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-182">The <xref:System.Configuration.ApplicationSettingsBase.Item%2A> property, also known as the indexer, is routinely used in the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="b632f-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> ラッパークラスのパブリックプロパティを対応する設定プロパティにバインドします。</span><span class="sxs-lookup"><span data-stu-id="b632f-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> binds the public property of the wrapper class to the corresponding settings property.</span></span>  
  
 <span data-ttu-id="b632f-184"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> は、実行されている操作に応じていくつかのイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b632f-184"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> raises several events depending on the operation being performed:</span></span>  
  
-   <span data-ttu-id="b632f-185">プロパティが最初に取得されたときに、<xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-185">The first time a property is retrieved, the <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event is raised.</span></span>  
  
-   <span data-ttu-id="b632f-186">プロパティが設定されると、<xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-186">When a property is set, the <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> event is raised.</span></span> <span data-ttu-id="b632f-187">ハンドラーがイベントをキャンセルしない場合、プロパティ値が設定され、<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-187">If the handler does not cancel the event, then the property value is set and the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException"><span data-ttu-id="b632f-188">現在のラッパーに関連付けられたプロパティが存在しないか、指定したプロパティが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="b632f-188">There are no properties associated with the current wrapper or the specified property could not be found.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException"><span data-ttu-id="b632f-189">読み取り専用プロパティを設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="b632f-189">An attempt was made to set a read-only property.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException"><span data-ttu-id="b632f-190">指定された値は、設定操作時の設定プロパティと型の互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="b632f-190">The value supplied is of a type incompatible with the settings property, during a set operation.</span></span></exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="b632f-191">構成ファイルを解析できませんでした。</span><span class="sxs-lookup"><span data-stu-id="b632f-191">The configuration file could not be parsed.</span></span></exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnPropertyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="b632f-192">イベントのソースです。</span><span class="sxs-lookup"><span data-stu-id="b632f-192">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="b632f-193">イベント データを含んでいる <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="b632f-193">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b632f-194"><see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b632f-194">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-195">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-195">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b632f-196">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="b632f-196">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="b632f-197"><xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b632f-197">The <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b632f-198">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b632f-198">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b632f-199">派生クラスで <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-199">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit&#xA;override this.OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingChanging (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="b632f-200">イベントのソースです。</span><span class="sxs-lookup"><span data-stu-id="b632f-200">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="b632f-201">イベント データを含んでいる <see cref="T:System.Configuration.SettingChangingEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="b632f-201">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b632f-202"><see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b632f-202">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-203">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-203">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b632f-204">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="b632f-204">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="b632f-205"><xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b632f-205">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b632f-206">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b632f-206">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b632f-207">派生クラスで <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-207">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit&#xA;override this.OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsLoaded (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="b632f-208">イベントのソースです。</span><span class="sxs-lookup"><span data-stu-id="b632f-208">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="b632f-209">イベント データを含んでいる <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="b632f-209">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b632f-210"><see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b632f-210">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-211">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-211">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b632f-212">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="b632f-212">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="b632f-213"><xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b632f-213">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b632f-214">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b632f-214">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b632f-215">派生クラスで <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-215">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsSaving (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="b632f-216">イベントのソースです。</span><span class="sxs-lookup"><span data-stu-id="b632f-216">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="b632f-217">イベント データを含んでいる <see cref="T:System.ComponentModel.CancelEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="b632f-217">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b632f-218"><see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b632f-218">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-219">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-219">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b632f-220">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="b632f-220">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="b632f-221"><xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b632f-221">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b632f-222">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b632f-222">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b632f-223">派生クラスで <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-223">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b632f-224">ラッパーの設定プロパティのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b632f-224">Gets the collection of settings properties in the wrapper.</span></span></summary>
        <value><span data-ttu-id="b632f-225">現在のラッパーで使用するすべての <see cref="T:System.Configuration.SettingsPropertyCollection" /> オブジェクトを格納している <see cref="T:System.Configuration.SettingsProperty" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-225">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects used in the current wrapper.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-226"><xref:System.Configuration.ApplicationSettingsBase.Properties%2A> プロパティの `get` アクセサーは、<xref:System.Configuration.ApplicationSettingsBase>から派生した設定ラッパークラスのメタデータを反映して、使用可能なアプリケーション設定プロパティのセットを動的に決定します。</span><span class="sxs-lookup"><span data-stu-id="b632f-226">The `get` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property reflects over the metadata of the settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, to dynamically determine the set of available application settings properties.</span></span>  
  
 <span data-ttu-id="b632f-227"><xref:System.Configuration.ApplicationSettingsBase> クラスは、名前、プロパティの型、設定プロバイダー、既定値、読み取り専用の状態、シリアル化の設定など、アプリケーション設定の特定の特性をネイティブに認識します。</span><span class="sxs-lookup"><span data-stu-id="b632f-227">The <xref:System.Configuration.ApplicationSettingsBase> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</span></span> <span data-ttu-id="b632f-228">これらの特性は、<xref:System.Configuration.SettingsProperty> クラスのプロパティとしてミラー化されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-228">These characteristics are mirrored as properties in the <xref:System.Configuration.SettingsProperty> class.</span></span> <span data-ttu-id="b632f-229">Settings プロパティのその他のすべての属性は、関連する設定プロバイダーに渡されるだけです。</span><span class="sxs-lookup"><span data-stu-id="b632f-229">All other attributes of the settings property are just passed through to its associated settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="b632f-230">関連付けられた設定プロバイダーが見つからなかったか、設定プロバイダーをインスタンス化できませんでした。</span><span class="sxs-lookup"><span data-stu-id="b632f-230">The associated settings provider could not be found or its instantiation failed.</span></span></exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b632f-231">アプリケーション設定プロパティの値が変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-231">Occurs after the value of an application settings property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-232"><xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> イベントは、<xref:System.Configuration.ApplicationSettingsBase.Item%2A> メソッドの `set` アクセサーを使用して設定プロパティが変更された場合、または <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> または <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> メソッドに対して呼び出しが行われたときに復元されるすべてのプロパティに対して発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-232">The <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised when a settings property is changed through the `set` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method, or for every property that is restored when a call is made to the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="b632f-233">このクラスに対応する `PropertyChanging` イベントがありません。代わりに、<xref:System.Configuration.ApplicationSettingsBase.SettingChanging> イベントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-233">There is no corresponding `PropertyChanging` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValues : System.Configuration.SettingsPropertyValueCollection" Usage="System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b632f-234">プロパティ値のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b632f-234">Gets a collection of property values.</span></span></summary>
        <value><span data-ttu-id="b632f-235">プロパティ値の <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-235">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> of property values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.SettingsProviderCollection" Usage="System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b632f-236">ラッパーが使用するアプリケーション設定プロバイダーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b632f-236">Gets the collection of application settings providers used by the wrapper.</span></span></summary>
        <value><span data-ttu-id="b632f-237">現在の設定ラッパーの設定プロパティが使用する、すべての <see cref="T:System.Configuration.SettingsProviderCollection" /> オブジェクトを格納している <see cref="T:System.Configuration.SettingsProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-237">A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing all the <see cref="T:System.Configuration.SettingsProvider" /> objects used by the settings properties of the current settings wrapper.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-238"><xref:System.Configuration.SettingsProviderAttribute> によって、設定ラッパークラスまたは個々の設定プロパティによって使用される設定プロバイダーが決まります。</span><span class="sxs-lookup"><span data-stu-id="b632f-238">The <xref:System.Configuration.SettingsProviderAttribute> determines what setting provider is used by a settings wrapper class or an individual setting property.</span></span> <span data-ttu-id="b632f-239">この属性が指定されていない場合、クライアントアプリケーションは <xref:System.Configuration.LocalFileSettingsProvider>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b632f-239">If this attribute is not specified, a client application will use the <xref:System.Configuration.LocalFileSettingsProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="applicationSettingsBase.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b632f-240">永続ストレージからアプリケーション設定プロパティ値を更新します。</span><span class="sxs-lookup"><span data-stu-id="b632f-240">Refreshes the application settings property values from persistent storage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-241"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> メソッドは、現在キャッシュされているプロパティ値をクリアし、その後にアクセスしたときに永続ストレージからこれらの値を再読み込みします。</span><span class="sxs-lookup"><span data-stu-id="b632f-241">The <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</span></span> <span data-ttu-id="b632f-242">このメソッドは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b632f-242">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="b632f-243">現在キャッシュされているプロパティをクリアするには、<xref:System.Configuration.SettingsBase.PropertyValues%2A> プロパティによって表されるコレクションをクリアします。</span><span class="sxs-lookup"><span data-stu-id="b632f-243">It clears the currently cached properties by clearing the collection represented by the <xref:System.Configuration.SettingsBase.PropertyValues%2A> property.</span></span>  
  
-   <span data-ttu-id="b632f-244">このメソッドは、<xref:System.Configuration.ApplicationSettingsBase.Properties%2A> コレクションのすべてのメンバーに対して <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b632f-244">It raises the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event for every member of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> collection.</span></span>  
  
 <span data-ttu-id="b632f-245"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> は <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> とは対照的に、前者は保存されているアプリケーション設定値の最後のセットを読み込みますが、後者は保存された既定値を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b632f-245"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b632f-246">次のコード例は、`btnReload`という名前のボタンの <xref:System.Windows.Forms.Control.Click> イベントハンドラーの本体で呼び出される <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="b632f-246">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`.</span></span> <span data-ttu-id="b632f-247">この呼び出しの結果として、アプリケーションの設定に現在格納されている値が、対応するプロパティに再読み込みされます。</span><span class="sxs-lookup"><span data-stu-id="b632f-247">As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="b632f-248">完全なコード例については、「<xref:System.Configuration.ApplicationSettingsBase> クラスの概要」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b632f-248">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="applicationSettingsBase.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b632f-249">保持されているアプリケーション設定値を対応する既定のプロパティに復元します。</span><span class="sxs-lookup"><span data-stu-id="b632f-249">Restores the persisted application settings values to their corresponding default properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-250"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A> メソッドは、各アプリケーション設定の現在の永続化値を復元することによって、ユーザースコープの設定プロパティを上書きします。</span><span class="sxs-lookup"><span data-stu-id="b632f-250">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</span></span> <span data-ttu-id="b632f-251">このメソッドは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b632f-251">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="b632f-252">このメソッドは、この省略可能なメソッドをサポートするすべての設定プロバイダーで <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b632f-252">It calls the <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> method on every settings provider that supports this optional method.</span></span>  
  
-   <span data-ttu-id="b632f-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> メソッドを呼び出して、設定のプロパティ値を強制的に更新します。</span><span class="sxs-lookup"><span data-stu-id="b632f-253">It calls the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method to force a refresh of the settings property values.</span></span>  
  
 <span data-ttu-id="b632f-254"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> は <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> とは対照的に、前者は保存されているアプリケーション設定値の最後のセットを読み込みますが、後者は保存された既定値を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b632f-254"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b632f-255">次のコード例は、`btnReset`という名前のボタンの <xref:System.Windows.Forms.Control.Click> イベントハンドラーの本体で呼び出される <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="b632f-255">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`.</span></span> <span data-ttu-id="b632f-256">この呼び出しの結果として、アプリケーション設定に格納されている既定値が、対応するプロパティに再読み込みされます。</span><span class="sxs-lookup"><span data-stu-id="b632f-256">As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="b632f-257">完全なコード例については、「<xref:System.Configuration.ApplicationSettingsBase> クラスの概要」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b632f-257">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="b632f-258">構成ファイルを解析できませんでした。</span><span class="sxs-lookup"><span data-stu-id="b632f-258">The configuration file could not be parsed.</span></span></exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="applicationSettingsBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b632f-259">アプリケーション設定プロパティの現在の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="b632f-259">Stores the current values of the application settings properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-260"><xref:System.Configuration.ApplicationSettingsBase.Save%2A> メソッドは、各設定プロパティの現在の値を、関連付けられているデータストアに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b632f-260">The <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method writes the current value of each settings property to its associated data store.</span></span> <span data-ttu-id="b632f-261">このメソッドは、プロパティごとに、関連付けられた設定プロバイダーの <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b632f-261">For each property, this method calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method on the associated settings provider.</span></span>  
  
 <span data-ttu-id="b632f-262">このメソッドは、値が書き込まれる前に <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> イベントを発生させるという点で、基本クラスの実装とは異なります。</span><span class="sxs-lookup"><span data-stu-id="b632f-262">This method differs from the base class implementation in that it raises the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event before the values are written.</span></span>  
  
 <span data-ttu-id="b632f-263">定義されている設定がアプリケーションスコープ設定のみの場合、<xref:System.Configuration.ApplicationSettingsBase.Save%2A> は無効になり、既定の <xref:System.Configuration.LocalFileSettingsProvider>で呼び出された場合はエラーを返しません。</span><span class="sxs-lookup"><span data-stu-id="b632f-263">If the only settings defined are application-scoped settings, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> will have no effect and return no error if called with the default <xref:System.Configuration.LocalFileSettingsProvider>.</span></span> <span data-ttu-id="b632f-264"><xref:System.Configuration.LocalFileSettingsProvider> は、ユーザースコープの設定のみを保存します。</span><span class="sxs-lookup"><span data-stu-id="b632f-264"><xref:System.Configuration.LocalFileSettingsProvider> only saves user-scoped settings.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b632f-265">ラッパークラスの初期化中にアプリケーション設定の値が自動的に読み込まれるため、対応する Load メソッドはありません。</span><span class="sxs-lookup"><span data-stu-id="b632f-265">There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</span></span> <span data-ttu-id="b632f-266">これに対し、これらの値は、アプリケーションの終了時に自動的には保存されません。</span><span class="sxs-lookup"><span data-stu-id="b632f-266">In contrast, these values are not automatically saved when an application ends.</span></span> <span data-ttu-id="b632f-267">したがって、アプリケーション設定の現在の値を保持するには、<xref:System.Configuration.ApplicationSettingsBase.Save%2A> メソッドを明示的に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-267">Therefore, you must explicitly call the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method to persist the current values of the application settings.</span></span> <span data-ttu-id="b632f-268">これは、通常、プライマリまたはそれを含む <xref:System.Windows.Forms.Form>の <xref:System.Windows.Forms.Form.Closing> イベントハンドラーで実行されます。</span><span class="sxs-lookup"><span data-stu-id="b632f-268">This is typically performed in the <xref:System.Windows.Forms.Form.Closing> event handler of the primary or containing <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b632f-269">次のコード例は、プライマリフォームの <xref:System.Windows.Forms.Form.Closing> イベントハンドラーから呼び出される <xref:System.Configuration.ApplicationSettingsBase.Save%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="b632f-269">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form.</span></span> <span data-ttu-id="b632f-270">また、このメソッドは、フォームの <xref:System.Windows.Forms.Control.Text%2A> プロパティに関連付けられた設定プロパティに追加の期間を追加します。</span><span class="sxs-lookup"><span data-stu-id="b632f-270">This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 <span data-ttu-id="b632f-271">完全なコード例については、「<xref:System.Configuration.ApplicationSettingsBase> クラスの概要」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b632f-271">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberSignature Language="F#" Value="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " Usage="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b632f-272">アプリケーション設定プロパティの値が変更される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-272">Occurs before the value of an application settings property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-273"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> イベントは、アプリケーション設定の value プロパティが <xref:System.Configuration.ApplicationSettingsBase.Item%2A> メソッドによって変更される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-273">The <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event occurs before an application setting value property is changed through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="b632f-274">このイベントは、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A> メソッドまたは <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> メソッドが呼び出されたときには発生しません。</span><span class="sxs-lookup"><span data-stu-id="b632f-274">This event is not raised when the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods are called.</span></span> <span data-ttu-id="b632f-275"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> は、<xref:System.Configuration.SettingChangingEventArgs> イベントデータクラスを使用して取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="b632f-275"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> can be canceled through the <xref:System.Configuration.SettingChangingEventArgs> event data class.</span></span>  
  
 <span data-ttu-id="b632f-276">通常は、<xref:System.Configuration.ApplicationSettingsBase.SettingChanging> イベントを使用して、個々の設定プロパティの即時検証を処理します。</span><span class="sxs-lookup"><span data-stu-id="b632f-276">You typically use the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event to handle immediate validation of an individual settings property.</span></span> <span data-ttu-id="b632f-277">検証の詳細については、「[方法: アプリケーション設定を検証する](/dotnet/framework/winforms/advanced/how-to-validate-application-settings)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-277">For more information about validation, see [How to: Validate Application Settings](/dotnet/framework/winforms/advanced/how-to-validate-application-settings).</span></span>  
  
 <span data-ttu-id="b632f-278">このクラスに対応する `SettingChanged` イベントがありません。代わりに、<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> イベントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b632f-278">There is no corresponding `SettingChanged` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b632f-279">次のコード例は、`FormSettings`型のオブジェクトの <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> イベントハンドラーを示しています。これは <xref:System.Configuration.ApplicationSettingsBase>から派生したラッパークラスです。</span><span class="sxs-lookup"><span data-stu-id="b632f-279">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="b632f-280">ハンドラーは、`tbStatus`という名前のテキストボックスにイベント情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="b632f-280">The handler displays the event information in a textbox named `tbStatus`.</span></span> <span data-ttu-id="b632f-281">完全なコード例については、「<xref:System.Configuration.ApplicationSettingsBase> クラスの概要」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b632f-281">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/9f145ada-4267-436a-aa4c-c4dcffd0afb7"><span data-ttu-id="b632f-282">方法 : アプリケーション設定を検証する</span><span class="sxs-lookup"><span data-stu-id="b632f-282">How to: Validate Application Settings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b632f-283">アプリケーション設定グループの設定キーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b632f-283">Gets or sets the settings key for the application settings group.</span></span></summary>
        <value><span data-ttu-id="b632f-284">現在の設定グループの設定キーを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b632f-284">A <see cref="T:System.String" /> containing the settings key for the current settings group.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-285"><xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> プロパティは、同じアプリケーション設定クラスの複数のインスタンスを明確に区別するために、クライアントコード (特に設定プロバイダー) を有効にするために用意されています。</span><span class="sxs-lookup"><span data-stu-id="b632f-285">The <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</span></span>  
  
 <span data-ttu-id="b632f-286">設定ラッパークラスがシングルトンパターンを使用して設計されていない限り、1つのアプリケーションに同じアプリケーション設定クラスの複数のインスタンスが存在する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-286">Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</span></span> <span data-ttu-id="b632f-287"><xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> の値は、プロパティ値がどのように共有されるかに応じて設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-287">The value of <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should be set according to how the property values are intended to be shared.</span></span>  
  
-   <span data-ttu-id="b632f-288">ラッパーの設定プロパティが、同じアプリケーション内のラッパーのすべてのインスタンスで共有されることを想定している場合、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> のすべてのインスタンスで同じ値を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-288">If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have the same value in all of the instances.</span></span> <span data-ttu-id="b632f-289">これは、<xref:System.Configuration.ApplicationSettingsBase> クラスの既定の動作です。</span><span class="sxs-lookup"><span data-stu-id="b632f-289">This is the default behavior of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span>  
  
-   <span data-ttu-id="b632f-290">ラッパーの設定プロパティがインスタンスごとに使用されることを想定している場合、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> はすべてのインスタンスに対して一意の値を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="b632f-290">If the settings properties of the wrapper are intended to be per instance, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have a unique value for every instance.</span></span> <span data-ttu-id="b632f-291">コンストラクターの <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> バージョンを使用すると、一意の文字列に <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> を初期化できます。</span><span class="sxs-lookup"><span data-stu-id="b632f-291">The <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> version of the constructor enables you to initialize <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> to a unique string.</span></span>  
  
 <span data-ttu-id="b632f-292">これに対し、<xref:System.Configuration.ApplicationSettingsBase.Context%2A> プロパティは、設定プロバイダーにヒントを提供して、効率的で正しい方法で値を永続化できるようにします。</span><span class="sxs-lookup"><span data-stu-id="b632f-292">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.Context%2A> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</span></span>  
  
 <span data-ttu-id="b632f-293"><xref:System.Configuration.SettingChangingEventArgs> クラスには、<xref:System.Configuration.ApplicationSettingsBase.SettingChanging> イベントのソースを特定するのに役立つ類似した <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> プロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b632f-293">The <xref:System.Configuration.SettingChangingEventArgs> class contains a similar <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> property that helps identify the source of the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberSignature Language="F#" Value="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " Usage="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b632f-294">アプリケーション設定をストレージから取得した後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-294">Occurs after the application settings are retrieved from storage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-295"><xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> イベントは、使用される最初の構成プロパティの最初の `get` アクセスの後にのみ発生します。通常は <xref:System.Configuration.ApplicationSettingsBase.Item%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b632f-295">The <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event occurs only after the initial `get` access of the first configuration property used, typically through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="b632f-296">その後のアクセスでは、ローカルにキャッシュされている settings プロパティの値を使用します。</span><span class="sxs-lookup"><span data-stu-id="b632f-296">Subsequent accesses use values for the settings property that are cached locally.</span></span> <span data-ttu-id="b632f-297"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A> メソッドと <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> メソッドは、キャッシュされているすべての値をクリアし、後続のプロパティアクセス時にこのイベントが再び発生するようにします。</span><span class="sxs-lookup"><span data-stu-id="b632f-297">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods will clear all cached values so this event will be raised again upon subsequent property access.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberSignature Language="F#" Value="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " Usage="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b632f-298">データ ストアに値が保存される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-298">Occurs before values are saved to the data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-299"><xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> イベントは、アプリケーション設定のプロパティを関連付けられたデータストアに格納する前に、<xref:System.Configuration.ApplicationSettingsBase.Save%2A> メソッドによって発生します。</span><span class="sxs-lookup"><span data-stu-id="b632f-299">The <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event is raised by the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method before it stores the application settings properties to their associated data store.</span></span> <span data-ttu-id="b632f-300">関連付けられたイベントハンドラーは、このイベントを取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="b632f-300">The associated event handler can cancel this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b632f-301">次のコード例は、`FormSettings`型のオブジェクトの <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> イベントハンドラーを示しています。これは <xref:System.Configuration.ApplicationSettingsBase>から派生したラッパークラスです。</span><span class="sxs-lookup"><span data-stu-id="b632f-301">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="b632f-302">ハンドラーは、ユーザーに対してクエリを行って、現在のアプリケーション設定プロパティ値を保存します。</span><span class="sxs-lookup"><span data-stu-id="b632f-302">The handler queries the user to save the current application settings property values.</span></span> <span data-ttu-id="b632f-303">完全なコード例については、「<xref:System.Configuration.ApplicationSettingsBase> クラスの概要」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b632f-303">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : unit -&gt; unit&#xA;override this.Upgrade : unit -&gt; unit" Usage="applicationSettingsBase.Upgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b632f-304">アプリケーション設定を更新して、アプリケーションの最新のインストールを反映します。</span><span class="sxs-lookup"><span data-stu-id="b632f-304">Updates application settings to reflect a more recent installation of the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b632f-305"><xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> メソッドは、アプリケーションの新しいバージョンへのスムーズな移行を保証するために、次の2つのアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b632f-305">The <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method performs two actions to assure smooth transition to a new version of an application:</span></span>  
  
-   <span data-ttu-id="b632f-306">このメソッドは、<xref:System.Configuration.IApplicationSettingsProvider> インターフェイスが実装されていることを前提として、アップグレードされたアプリケーションが存在することを、<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> メソッドの呼び出しを通じて、対応するすべての設定プロバイダーに通知します。</span><span class="sxs-lookup"><span data-stu-id="b632f-306">It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> method, assuming they have implemented the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="b632f-307">設定ラッパークラスが <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>でマークされている場合、このアクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="b632f-307">This action is not performed if the settings wrapper class is marked with <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span></span>  
  
-   <span data-ttu-id="b632f-308">すべてのアプリケーション設定の値が再読み込みされます。</span><span class="sxs-lookup"><span data-stu-id="b632f-308">It reloads the values for all of the application settings.</span></span>  
  
 <span data-ttu-id="b632f-309"><xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> の既定の動作をオーバーライドして、カスタムのアップグレードまたはマージ動作を実装することができます。</span><span class="sxs-lookup"><span data-stu-id="b632f-309">You can override the default behavior of <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> to implement custom upgrading or merging behavior.</span></span> <span data-ttu-id="b632f-310">以前のバージョンのアプリケーションの設定の個別の値を取得するには、<xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b632f-310">Use the <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method to retrieve individual values for a setting for the previous version of the application.</span></span> <span data-ttu-id="b632f-311">カスタムアップグレードの動作の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="b632f-311">Examples of custom upgrade behavior include:</span></span>  
  
-   <span data-ttu-id="b632f-312">新しいポリシーの既定値を使用して、以前のユーザー指定値または以前の既定値の1つ以上を上書きします。</span><span class="sxs-lookup"><span data-stu-id="b632f-312">Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</span></span>  
  
-   <span data-ttu-id="b632f-313">新しい範囲、異なる設定プロパティグループなどと互換性のある古い値の特殊な変換。</span><span class="sxs-lookup"><span data-stu-id="b632f-313">Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="b632f-314">構成ファイルを解析できませんでした。</span><span class="sxs-lookup"><span data-stu-id="b632f-314">The configuration file could not be parsed.</span></span></exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>
