<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="066c6cd047c79f7b48956c9468072f703502dc48" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75144205" /></Metadata><TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dd42c-101">アプリケーション設定の格納および取得を行うコントロールまたはライブラリの標準機能を定義します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-101">Defines standard functionality for controls or libraries that store and retrieve application settings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd42c-102">通常、アプリケーションにアプリケーション設定のサポートを追加するには、<xref:System.Configuration.ApplicationSettingsBase>から派生した設定ラッパークラスを作成し、このクラスに特別なプロパティを追加します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-102">Typically, you can add application settings support to an application by creating a settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, and then add special properties to this class.</span></span> <span data-ttu-id="dd42c-103">ただし、この方法では、コンテナーが詳細からシールドされるように、コントロールのアプリケーション設定を十分にカプセル化することはできません。</span><span class="sxs-lookup"><span data-stu-id="dd42c-103">However, this approach does not sufficiently encapsulate application settings for a control so that its container is shielded from the details.</span></span> <span data-ttu-id="dd42c-104"><xref:System.Configuration.IPersistComponentSettings> インターフェイスは、アプリケーション設定の状態変更要求をコントロール、コンポーネント、またはライブラリモジュールに通信するための標準インターフェイスをアプリケーションに提供します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-104">The <xref:System.Configuration.IPersistComponentSettings> interface provides an application with a standard interface for communicating application settings state change requests to a control, component, or library module.</span></span> <span data-ttu-id="dd42c-105">デザイン時ツールは、このインターフェイスにも依存して、コントロールとコンポーネントを適切に管理します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-105">Design-time tools also depend on this interface to properly manage controls and components.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1"><span data-ttu-id="dd42c-106">カスタム コントロールのアプリケーション設定</span><span class="sxs-lookup"><span data-stu-id="dd42c-106">Application Settings for Custom Controls</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd42c-107">コントロールのアプリケーション設定を対応するプロパティに読み込み、コントロールの状態を更新します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-107">Reads the control's application settings into their corresponding properties and updates the control's state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd42c-108">一般に、<xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> メソッドは、次の2つの重要な操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-108">In general, the <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> method performs two essential operations:</span></span>  
  
-   <span data-ttu-id="dd42c-109">これにより、コントロールに含まれる各アプリケーション設定インスタンスは、アプリケーション設定プロパティの値を更新します。通常は、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-109">It causes each application settings instance contained by the control to refresh the values of its application settings properties, typically by calling their <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="dd42c-110">必要に応じて、これらの再読み込みされた設定プロパティに依存する一般的なプロパティを更新します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-110">As required, it updates those general properties that depend on these reloaded settings properties.</span></span> <span data-ttu-id="dd42c-111">たとえば、settings クラスに `location` settings プロパティが含まれている場合、<xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> は、この再読み込みされた設定を反映するようにコントロールの <xref:System.Windows.Forms.Control.Location%2A> プロパティが更新されていることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-111">For example, if the settings class contained a `location` settings property, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> should ensure that the control's <xref:System.Windows.Forms.Control.Location%2A> property is updated to reflect this reloaded setting.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd42c-112">コントロールのアプリケーション設定プロパティを既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="dd42c-112">Resets the control's application settings properties to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd42c-113"><xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> メソッドの実装では、通常、含まれているアプリケーション設定クラスの各インスタンスに対して <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-113">The implementation of the <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> method typically calls the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method on each instance of an application settings class it contains.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd42c-114">コントロールのアプリケーション設定プロパティを保持します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-114">Persists the control's application settings properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd42c-115"><xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> メソッドは、コントロールのアプリケーション設定プロパティの値を、関連付けられているデータストアに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="dd42c-115">The <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method writes the values of the control's application settings properties to the associated data store.</span></span> <span data-ttu-id="dd42c-116">メソッドが使用するデータストアとシリアル化の手法は、<xref:System.Configuration.SettingsProviderAttribute>によって各設定クラスに関連付けられた設定プロバイダーによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="dd42c-116">The data store and serialization technique the method uses is determined by the settings provider associated with each settings class through the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="dd42c-117"><xref:System.Configuration.ISettingsProviderService> インターフェイスを使用して、設定プロバイダーの選択をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="dd42c-117">You can override the choice of the settings provider by using the <xref:System.Configuration.ISettingsProviderService> interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd42c-118"><xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> プロパティが `true`の場合、コントロールは、アプリケーションが終了する前にコントロールの構成データが自動的に格納されるように、独自の <xref:System.Windows.Forms.Control.Dispose%2A> メソッドで <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-118">If the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is `true`, the control should call <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> in its own <xref:System.Windows.Forms.Control.Dispose%2A> method so that the control's configuration data is stored automatically before the application ends.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd42c-119">コントロールのアプリケーション設定プロパティを自動的に保持するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-119">Gets or sets a value indicating whether the control should automatically persist its application settings properties.</span></span></summary>
        <value><span data-ttu-id="dd42c-120">コントロールの状態を自動的に保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dd42c-120"><see langword="true" /> if the control should automatically persist its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd42c-121">コントロールに構成データが含まれている場合、通常は、<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> メソッドへの明示的な呼び出しに応答してこのデータを保持するか、コントロールの <xref:System.Windows.Forms.Control.Dispose%2A> メソッドが呼び出されたときに暗黙的に発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-121">If a control contains configuration data, it will typically persist this data in response to an explicit call to the <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method or sometimes implicitly when the control's <xref:System.Windows.Forms.Control.Dispose%2A> method is invoked.</span></span> <span data-ttu-id="dd42c-122"><xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> プロパティは、コントロールが破棄されたときに、その構成データを自動的に永続化するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-122">The <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property determines whether a control automatically persists its configuration data when it is disposed.</span></span>  
  
 <span data-ttu-id="dd42c-123"><xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> の既定値は、コントロールの実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-123">The default value of <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> depends on the implementation of the control.</span></span> <span data-ttu-id="dd42c-124">コントロールのドキュメントでは、アプリケーション設定、永続化されるデータ、および <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> プロパティの既定値が使用されるかどうかを示す必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-124">The documentation for the control should indicate whether it uses application settings, what data is persisted, and what the default value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd42c-125">次のコード例は、構成データを自動的に永続化する前に、コントロールが <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> プロパティの値を確認するための適切な方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="dd42c-125">The following code example shows the proper way for a control to check the value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property before it attempts to automatically persist its configuration data.</span></span>  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd42c-126">コントロールの現在のインスタンスのアプリケーション設定キーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="dd42c-126">Gets or sets the value of the application settings key for the current instance of the control.</span></span></summary>
        <value><span data-ttu-id="dd42c-127">コントロールの現在のインスタンスの設定キーを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="dd42c-127">A <see cref="T:System.String" /> containing the settings key for the current instance of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd42c-128">同じラッパークラスの複数のインスタンスが存在する場合は、<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> プロパティを使用して、アプリケーション設定プロパティのグループを明確にします。</span><span class="sxs-lookup"><span data-stu-id="dd42c-128">Use the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property to disambiguate groups of application settings properties when there are multiple instances of the same wrapper class.</span></span> <span data-ttu-id="dd42c-129">たとえば、コントロールに関連付けられたラッパークラスが含まれている場合、同じアプリケーションに同じコントロールの複数のインスタンスを配置すると、通常、ラッパークラスの複数のインスタンスが生成されます。</span><span class="sxs-lookup"><span data-stu-id="dd42c-129">For example, if a control contains an associated wrapper class, then placing multiple instances of the same control in the same application will typically result in multiple instances of the wrapper class.</span></span> <span data-ttu-id="dd42c-130">設定キーは、構成データがインスタンスごとに異なる場合にのみ必要です。たとえば、動的に配置されるコントロールの場所などです。</span><span class="sxs-lookup"><span data-stu-id="dd42c-130">A settings key is required only when the configuration data differs on a per-instance basis; for example, the location of dynamically positioned controls.</span></span>  
  
 <span data-ttu-id="dd42c-131"><xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>の使用には、次の一般的な規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="dd42c-131">The following general rules apply to the use of <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span></span>  
  
-   <span data-ttu-id="dd42c-132">任意のクラスと同様に、コントロールには、<xref:System.Configuration.ApplicationSettingsBase>から派生した0個以上のアプリケーション設定クラスを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="dd42c-132">A control, like any class, may contain zero or more application settings classes, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="dd42c-133">各設定クラスには独自の <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> プロパティが含まれており、そのクラスの複数のインスタンスを明確に区別するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="dd42c-133">Each settings class contains its own <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property, which helps disambiguate multiple instances of that class.</span></span>  
  
-   <span data-ttu-id="dd42c-134">コントロールは、インスタンスごとのデータとその共有データをそれぞれ異なる設定クラスに分割する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-134">A control should separate its per-instance data and its shared data into different settings classes.</span></span>  
  
-   <span data-ttu-id="dd42c-135">インスタンスごとの構成データを持つコントロールの場合、<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> プロパティの `get` アクセサーは、既定でコントロールの <xref:System.Windows.Forms.Control.Name%2A> になります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-135">For a control with any per-instance configuration data, the `get` accessor of the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property should default to the <xref:System.Windows.Forms.Control.Name%2A> of the control.</span></span> <span data-ttu-id="dd42c-136">ほとんどの場合、コントロールの名前はアプリケーション内で一意になります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-136">In most cases the name of the control will be unique within an application.</span></span> <span data-ttu-id="dd42c-137">コントロールに共有構成データのみが含まれている場合、`get` は既定で `null`になります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-137">If the control contains only shared configuration data, `get` should default to `null`.</span></span>  
  
-   <span data-ttu-id="dd42c-138">インスタンス単位と共有構成データを含む設定クラスを区別するには、このプロパティの `set` アクセサーを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-138">The `set` accessor for this property should be implemented to distinguish between settings classes containing per-instance and shared configuration data.</span></span> <span data-ttu-id="dd42c-139">インスタンスごとのデータを含む設定クラスごとに、`set` 設定クラスの <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> プロパティに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd42c-139">For each settings class containing per-instance data, `set` should just pass-through to the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property of the settings class.</span></span> <span data-ttu-id="dd42c-140">共有データを含む設定クラスの場合、`set` はその設定クラスに対して何も実行しません。</span><span class="sxs-lookup"><span data-stu-id="dd42c-140">For settings classes containing shared data, `set` should perform no action for that settings class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1"><span data-ttu-id="dd42c-141">カスタム コントロールのアプリケーション設定</span><span class="sxs-lookup"><span data-stu-id="dd42c-141">Application Settings for Custom Controls</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
