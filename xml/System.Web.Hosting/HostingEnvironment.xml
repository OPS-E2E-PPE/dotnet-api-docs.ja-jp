<Type Name="HostingEnvironment" FullName="System.Web.Hosting.HostingEnvironment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5a0c3991523b31a33c36ee1b4971067e0ab8b7a" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77103548" /></Metadata><TypeSignature Language="C#" Value="public sealed class HostingEnvironment : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostingEnvironment extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.HostingEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostingEnvironment&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostingEnvironment sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type HostingEnvironment = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>アプリケーション ドメイン内でマネージド アプリケーションにアプリケーション管理機能およびアプリケーション サービスを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 各マネージアプリケーションドメインには、アプリケーション管理機能とアプリケーションサービスへのアクセスを提供する <xref:System.Web.Hosting.HostingEnvironment> クラスの静的インスタンスが含まれています。



## Examples
 次のコード例は、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトから入手できるアプリケーション情報を表示する web ページです。

 [!code-aspx-csharp[System.Web.Hosting.HostingEnvironment#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.HostingEnvironment/CS/hostingEnvironmentcs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.HostingEnvironment#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.HostingEnvironment/VB/hostingEnvironmentvb.aspx#1)]

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostingEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostingEnvironment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Hosting.HostingEnvironment" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> コンストラクターは、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトを初期化します。 <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> コンストラクターは、アプリケーションの <xref:System.Web.Hosting.ApplicationManager> オブジェクトによって1回だけ呼び出されます。 <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> コンストラクターを複数回呼び出すと、<xref:System.InvalidOperationException> 例外がスローされます。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Web.Hosting.HostingEnvironment.#ctor" /> コンストラクターが、何度も呼び出されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationHost">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.IApplicationHost ApplicationHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.IApplicationHost ApplicationHost" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationHost" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationHost As IApplicationHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::IApplicationHost ^ ApplicationHost { System::Web::Hosting::IApplicationHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationHost : System.Web.Hosting.IApplicationHost" Usage="System.Web.Hosting.HostingEnvironment.ApplicationHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IApplicationHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプロパティは [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
        <value>アプリケーション ホストについての情報を格納するオブジェクト。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f75a72de-e2f2-4a7a-9574-3f278684ea90">.NET Framework 3.5 アーキテクチャ</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationID">
      <MemberSignature Language="C#" Value="public static string ApplicationID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationID" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationID : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの一意の識別子を取得します。</summary>
        <value>アプリケーションの一意の識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.HostingEnvironment.ApplicationID%2A> プロパティにアクセスするには、<xref:System.Web.AspNetHostingPermissionLevel> を高い信頼に設定してアプリケーションを実行している必要があります。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationMonitors">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationMonitors ApplicationMonitors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.ApplicationMonitors ApplicationMonitors" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationMonitors As ApplicationMonitors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::ApplicationMonitors ^ ApplicationMonitors { System::Web::Hosting::ApplicationMonitors ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationMonitors : System.Web.Hosting.ApplicationMonitors" Usage="System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationMonitors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションを正常な状態に保つために ASP.NET サブシステムによって使用されている置き換え可能なモニター オブジェクトのグループを取得します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPhysicalPath">
      <MemberSignature Language="C#" Value="public static string ApplicationPhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationPhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationPhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationPhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPhysicalPath : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのディレクトリへのディスク上の物理パスを取得します。</summary>
        <value>アプリケーションのディレクトリへのディスク上の物理パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 次のコード例では、<xref:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath%2A> プロパティを使用して、アプリケーションの App_Data ディレクトリ内のデータファイルへのパスを作成します。 例を実行するために必要な完全なコードについては、<xref:System.Web.Hosting.VirtualPathProvider> クラスの概要に関するトピックの「例」のセクションを参照してください。

 [!code-csharp[System.Web.Hosting.VirtualPathProvider#27](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#27)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#27](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#27)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationVirtualPath">
      <MemberSignature Language="C#" Value="public static string ApplicationVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationVirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationVirtualPath : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのルートへの仮想パスを取得します。</summary>
        <value>末尾のスラッシュ (/) を除いた、アプリケーションのルートへの仮想パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> プロパティは常に、戻り値の最初の文字として "`/"` を返します。 アプリケーションが web サイトのルートにある場合、戻り値は "`/"`だけです。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public static System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.Caching.Cache" Usage="System.Web.Hosting.HostingEnvironment.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーションに対する <see cref="T:System.Web.Caching.Cache" /> インスタンスを取得します。</summary>
        <value>現在の <see cref="T:System.Web.Caching.Cache" /> インスタンス。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecrementBusyCount">
      <MemberSignature Language="C#" Value="public static void DecrementBusyCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecrementBusyCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DecrementBusyCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DecrementBusyCount();" />
      <MemberSignature Language="F#" Value="static member DecrementBusyCount : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.DecrementBusyCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ホスト環境のビジー オブジェクトの数を 1 つ減らします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ビジー状態の登録済みオブジェクトがその処理を完了すると、<xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> メソッドを呼び出して、処理が完了した <xref:System.Web.Hosting.HostingEnvironment> オブジェクトを通知し、ビジー状態のオブジェクトの数を1つ減らします。

 ビジー状態の数が0より大きい場合、保留中の要求がない場合でも、ホスティングアプリケーションはタイムアウトしません。

 <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> メソッドを呼び出すたびに、<xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> メソッドを呼び出す必要があります。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コードによって別のユーザーを偽装できるようにします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate();" />
      <MemberSignature Language="F#" Value="static member Impersonate : unit -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アプリケーション ID によって表されるユーザーを偽装します。</summary>
        <returns>偽装前の Windows ユーザーを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">プロセスは偽装できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate (IntPtr token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate(native int token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (token As IntPtr) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate(IntPtr token);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="token">Windows アカウント トークンのハンドル。</param>
        <summary>指定したユーザー トークンによって表されるユーザーを偽装します。</summary>
        <returns>偽装前の Windows ユーザーを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">プロセスは偽装できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate (IntPtr userToken, string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate(native int userToken, string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr, virtualPath As String) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate(IntPtr userToken, System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint * string -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate (userToken, virtualPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken">Windows アカウント トークンのハンドル。</param>
        <param name="virtualPath">要求されたリソースへのパス。</param>
        <summary>指定した仮想パスまたは指定したユーザー トークンについて構成設定で指定されたユーザーを偽装します。</summary>
        <returns>偽装前の Windows ユーザーを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> メソッドは、指定された仮想パスに影響する構成設定のすべての要素を適用した後に、結果として得られるユーザーを偽装します。 仮想パスに `identity` 要素が指定されていない場合、<xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> メソッドは、指定された Windows アカウントの権限を借用します。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">プロセスは偽装できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="InClientBuildManager">
      <MemberSignature Language="C#" Value="public static bool InClientBuildManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool InClientBuildManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InClientBuildManager As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool InClientBuildManager { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InClientBuildManager : bool" Usage="System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ホスティング環境が ASP.NET ビルド システムにアクセスできるかどうかを示す値を取得します。</summary>
        <value>アプリケーション ドメインが <see langword="true" /> のシナリオで使用される ASP.NET ホストのアプリケーション ドメインである場合は <see langword="ClientBuildManager" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementBusyCount">
      <MemberSignature Language="C#" Value="public static void IncrementBusyCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncrementBusyCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IncrementBusyCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void IncrementBusyCount();" />
      <MemberSignature Language="F#" Value="static member IncrementBusyCount : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.IncrementBusyCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ホスト環境のビジー オブジェクトの数を 1 つ増やします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 登録済みオブジェクトは、実行されている <xref:System.Web.Hosting.HostingEnvironment> オブジェクトを通知し、ビジー状態のオブジェクトの数を1つ増やします。

 ビジー状態の数が0より大きい場合、保留中の要求がない場合でも、ホスティングアプリケーションはタイムアウトしません。

 <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> メソッドを呼び出すたびに、<xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> メソッドを呼び出す必要があります。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationException">
      <MemberSignature Language="C#" Value="public static Exception InitializationException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Exception InitializationException" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.InitializationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InitializationException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Exception ^ InitializationException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitializationException : Exception" Usage="System.Web.Hosting.HostingEnvironment.InitializationException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Hosting.HostingEnvironment" /> オブジェクトの初期化中にスローされた例外を取得します。</summary>
        <value><see cref="T:System.Web.Hosting.HostingEnvironment" /> オブジェクトの初期化中にスローされた例外。 例外がスローされなかった場合は、<see langword="null" /> が返されます。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="hostingEnvironment.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リースが作成されないようにすることで、<see cref="T:System.Web.Hosting.HostingEnvironment" /> オブジェクトに無期限の有効期間を指定します。</summary>
        <returns>常に <see langword="null" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、基本クラスの <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> メソッドをオーバーライドします。 常に `null` を返し、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトの有効期間を制限するリースが作成されないようにします。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateShutdown">
      <MemberSignature Language="C#" Value="public static void InitiateShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitiateShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitiateShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitiateShutdown();" />
      <MemberSignature Language="F#" Value="static member InitiateShutdown : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.InitiateShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このホストに関連付けられている web アプリケーションのシャットダウンを開始し、登録済みのオブジェクトをシステムから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A> メソッドを使用して、web アプリケーションドメインを停止し、<xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> メソッドに登録されているオブジェクトを削除します。 シャットダウンが完了する前に、このメソッドは直ちにを返します。

 渡されたパラメーターを `false` に設定して、登録されている各オブジェクトに対して <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> メソッドが呼び出されます。これにより、登録された各オブジェクトを非同期にシャットダウンできます。 `<hostingEnvironment>` 構成要素の `shutdownTimeout` 属性に指定された時間が経過すると、<xref:System.Web.Hosting.IRegisteredObject.Stop%2A> メソッドが呼び出され、渡されたパラメーターが残りの登録済みオブジェクトごとに `true` に設定されます。

 登録されているすべてのオブジェクトのシャットダウンが完了すると、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトがアプリケーションドメインをシャットダウンします。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevelopmentEnvironment">
      <MemberSignature Language="C#" Value="public static bool IsDevelopmentEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsDevelopmentEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsDevelopmentEnvironment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsDevelopmentEnvironment { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDevelopmentEnvironment : bool" Usage="System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーションが開発環境で実行されているかどうかを示す値を取得します。</summary>
        <value>アプリケーションが開発環境にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHosted">
      <MemberSignature Language="C#" Value="public static bool IsHosted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsHosted" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.IsHosted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsHosted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsHosted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHosted : bool" Usage="System.Web.Hosting.HostingEnvironment.IsHosted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーション ドメインが <see cref="T:System.Web.Hosting.ApplicationManager" /> オブジェクトによってホストされているかどうかを示す値を取得します。</summary>
        <value>アプリケーション ドメインが <see langword="true" /> オブジェクトによってホストされている場合は <see cref="T:System.Web.Hosting.ApplicationManager" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public static string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member MapPath : string -&gt; string" Usage="System.Web.Hosting.HostingEnvironment.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">(絶対または相対) 仮想パス。</param>
        <summary>サーバー上の物理パスに仮想パスを割り当てます。</summary>
        <returns><paramref name="virtualPath" /> で指定されたサーバー上の物理パス。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentRequestsPerCPU">
      <MemberSignature Language="C#" Value="public static int MaxConcurrentRequestsPerCPU { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxConcurrentRequestsPerCPU" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxConcurrentRequestsPerCPU As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxConcurrentRequestsPerCPU { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentRequestsPerCPU : int with get, set" Usage="System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CPU あたりの同時実行される要求の最大数を取得または設定します。</summary>
        <value>CPU あたりの同時実行される要求の最大数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentThreadsPerCPU">
      <MemberSignature Language="C#" Value="public static int MaxConcurrentThreadsPerCPU { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxConcurrentThreadsPerCPU" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxConcurrentThreadsPerCPU As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxConcurrentThreadsPerCPU { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentThreadsPerCPU : int with get, set" Usage="System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CPU あたりの同時実行されるスレッドの最大数を取得または設定します。</summary>
        <value>CPU あたりの同時実行されるスレッドの最大数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageReceived">
      <MemberSignature Language="C#" Value="public static void MessageReceived ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MessageReceived() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.MessageReceived" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MessageReceived ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MessageReceived();" />
      <MemberSignature Language="F#" Value="static member MessageReceived : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.MessageReceived " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメソッドは [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f75a72de-e2f2-4a7a-9574-3f278684ea90">.NET Framework 3.5 アーキテクチャ</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="QueueBackgroundWorkItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>どの要求とも独立した形で、バック グラウンドで実行するタスクをスケジュールします。

このオーバーロードされたメソッドは、呼び出した側から呼び出された側に <see cref="T:System.Threading.ExecutionContext" /> または <see cref="T:System.Security.SecurityContext" /> をフローさせません。 そのため、それらのオブジェクトのメンバー (<see cref="P:System.Threading.Thread.CurrentPrincipal" /> プロパティなど) は、呼び出した側から呼び出された側にフローしません。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QueueBackgroundWorkItem">
      <MemberSignature Language="C#" Value="public static void QueueBackgroundWorkItem (Action&lt;System.Threading.CancellationToken&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueueBackgroundWorkItem(class System.Action`1&lt;valuetype System.Threading.CancellationToken&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub QueueBackgroundWorkItem (workItem As Action(Of CancellationToken))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void QueueBackgroundWorkItem(Action&lt;System::Threading::CancellationToken&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="static member QueueBackgroundWorkItem : Action&lt;System.Threading.CancellationToken&gt; -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Action&lt;System.Threading.CancellationToken&gt;" Index="0" FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workItem">実行の単位。</param>
        <summary>どの要求とも独立した形で、バック グラウンドで実行するタスクをスケジュールします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 は、この API で登録された作業項目の数を現在実行していることを ASP.NET が追跡できるように、通常の ThreadPool 作業項目とは異なります。また、ASP.NET ランタイムは、これらの作業項目の実行が完了するまで、AppDomain のシャットダウンを遅らせようとします。 この API は、ASP.NET によって管理される AppDomain の外部で呼び出すことはできません。 指定された CancellationToken は、アプリケーションのシャットダウン時に通知されます。

 <xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> は、タスクを返すコールバックを受け取ります。コールバックが戻ると、作業項目は完了したと見なされます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueBackgroundWorkItem">
      <MemberSignature Language="C#" Value="public static void QueueBackgroundWorkItem (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueueBackgroundWorkItem(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub QueueBackgroundWorkItem (workItem As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void QueueBackgroundWorkItem(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="static member QueueBackgroundWorkItem : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workItem">実行の単位。</param>
        <summary>どの要求とも独立した形で、バック グラウンドで実行するタスクをスケジュールします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 は、この API で登録された作業項目の数を現在実行していることを ASP.NET が追跡できるように、通常の ThreadPool 作業項目とは異なります。また、ASP.NET ランタイムは、これらの作業項目の実行が完了するまで、AppDomain のシャットダウンを遅らせようとします。 この API は、ASP.NET によって管理される AppDomain の外部で呼び出すことはできません。 指定された CancellationToken は、アプリケーションのシャットダウン時に通知されます。

 <xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> は、タスクを返すコールバックを受け取ります。返されたタスクがターミナル状態に遷移すると、作業項目は完了したと見なされます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (System.Web.Hosting.IRegisteredObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class System.Web.Hosting.IRegisteredObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterObject (obj As IRegisteredObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterObject(System::Web::Hosting::IRegisteredObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member RegisterObject : System.Web.Hosting.IRegisteredObject -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.RegisterObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Web.Hosting.IRegisteredObject" />
      </Parameters>
      <Docs>
        <param name="obj">登録するオブジェクト。</param>
        <summary>アプリケーションの登録済みオブジェクトのリストにオブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.ApplicationManager> クラスを使用すると、現在のアプリケーションドメインの外部にあるメソッドで、現在のアプリケーションドメイン内のオブジェクトの作成、管理、および破棄を行うことができます。 <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> メソッドは、以前に作成したオブジェクトをホスト環境に登録するために使用されます。 <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> メソッドに登録されたオブジェクトは、<xref:System.Web.Hosting.IRegisteredObject> インターフェイスを実装する必要があります。

 登録済みのオブジェクトを使用するには、次の手順を実行します。

1.  <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType> メソッドを呼び出して、登録されたオブジェクトの新しいインスタンスを作成します。

2.  型固有のメソッドを呼び出して、新しいオブジェクトを初期化します。 初期化メソッドで、<xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> メソッドを呼び出して、登録されているオブジェクトの一覧にオブジェクトを追加します。

3.  <xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=nameWithType> メソッドを呼び出して、必要に応じて登録済みオブジェクトを返します。

4.  オブジェクトを停止する場合は、<xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> メソッドを呼び出します。 <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> メソッドは、<xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> メソッドを呼び出します。

5.  <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> メソッドで、オブジェクトが <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> メソッドを呼び出すようにします。



## Examples
 次のコード例は、登録されているオブジェクトの `Start` メソッドを実装したものです。 例を実行するために必要な完全なコードについては、<xref:System.Web.Hosting.IRegisteredObject> インターフェイスの概要に関するトピックの「例」のセクションを参照してください。

 [!code-csharp[System.Web.Hosting.ApplicationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#2)]
 [!code-vb[System.Web.Hosting.ApplicationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
        <altmember cref="T:System.Web.Hosting.IRegisteredObject" />
        <altmember cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterVirtualPathProvider">
      <MemberSignature Language="C#" Value="public static void RegisterVirtualPathProvider (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterVirtualPathProvider(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterVirtualPathProvider(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="static member RegisterVirtualPathProvider : System.Web.Hosting.VirtualPathProvider -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider virtualPathProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider">コンパイル システムに追加する新しい <see cref="T:System.Web.Hosting.VirtualPathProvider" /> インスタンス。</param>
        <summary>ASP.NET コンパイル システムに新しい <see cref="T:System.Web.Hosting.VirtualPathProvider" /> インスタンスを登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A> メソッドは、指定された <xref:System.Web.Hosting.VirtualPathProvider> インスタンスを、アプリケーションの仮想パスプロバイダーの一覧に追加します。

 詳細については、「<xref:System.Web.Hosting.VirtualPathProvider> クラスの概要」を参照してください。



## Examples
 次のコード例は、カスタム <xref:System.Web.Hosting.VirtualPathProvider> インスタンスをコンパイルシステムに登録するアプリケーションのスタートアップメソッドの一部です。 例を実行するために必要な完全なコードについては、<xref:System.Web.Hosting.VirtualPathProvider> クラスの概要に関するトピックの「例」のセクションを参照してください。

 [!code-csharp[System.Web.Hosting.VirtualPathProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#11)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#11)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCultures">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在のスレッドのカルチャ情報を設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCultures">
      <MemberSignature Language="C#" Value="public static IDisposable SetCultures ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable SetCultures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.SetCultures" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCultures () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ SetCultures();" />
      <MemberSignature Language="F#" Value="static member SetCultures : unit -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.SetCultures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のスレッドを、アプリケーションの構成ファイルで指定されたカルチャに設定します。</summary>
        <returns>変更前のカルチャを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のカルチャに戻すことができます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> メソッドは、アプリケーションの構成ファイルの[グローバリゼーション要素 (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100))要素で指定されているカルチャに現在のスレッドを設定します。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCultures">
      <MemberSignature Language="C#" Value="public static IDisposable SetCultures (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable SetCultures(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCultures (virtualPath As String) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ SetCultures(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member SetCultures : string -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.SetCultures virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">カルチャ情報を格納するパス。</param>
        <summary>現在のカルチャを、指定した仮想パスのカルチャに設定します。</summary>
        <returns>変更前のカルチャを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のカルチャに戻すことができます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> メソッドは、指定された仮想パスに影響を与える構成ファイル内のすべての要素を適用した後に生成されるカルチャに、現在のスレッドを設定します。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownReason">
      <MemberSignature Language="C#" Value="public static System.Web.ApplicationShutdownReason ShutdownReason { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.ApplicationShutdownReason ShutdownReason" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ShutdownReason" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ShutdownReason As ApplicationShutdownReason" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::ApplicationShutdownReason ShutdownReason { System::Web::ApplicationShutdownReason get(); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownReason : System.Web.ApplicationShutdownReason" Usage="System.Web.Hosting.HostingEnvironment.ShutdownReason" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ApplicationShutdownReason</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの終了理由を示す列挙値を返します。</summary>
        <value><see cref="T:System.Web.ApplicationShutdownReason" /> 値のいずれか 1 つです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteName">
      <MemberSignature Language="C#" Value="public static string SiteName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SiteName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.SiteName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SiteName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SiteName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SiteName : string" Usage="System.Web.Hosting.HostingEnvironment.SiteName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイトの名前を取得します。</summary>
        <value>サイトの名前。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public static event EventHandler StopListening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StopListening" />
      <MemberSignature Language="DocId" Value="E:System.Web.Hosting.HostingEnvironment.StopListening" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event StopListening As EventHandler " FrameworkAlternate="netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ StopListening;" />
      <MemberSignature Language="F#" Value="member this.StopListening : EventHandler " Usage="member this.StopListening : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event StopListening As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[.NET Framework 4.5.1 のみでサポート]

 発生した時、ワーカーの処理か、このホストに関連付けられているアプリケーション プールが新しい要求のリッスンを停止して、最終的にシャット ダウンされるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 アプリケーションプールとそれに関連付けられているワーカープロセスが IIS によってシャットダウンされている場合 (たとえば、アプリケーションプールがスケジュールされたリサイクル間隔に達した場合)、IIS は、アプリケーションがシャットダウンしていることを ASP.NET ランタイムに通知し、次のワーカープロセスを実行します。アプリケーションプールは、新しい要求のリッスンを停止します。 実行時間の長い要求を使用するアプリケーション ( [SignalR](https://go.microsoft.com/fwlink/?LinkID=285432)アプリケーションなど) は、アプリケーションプールとそれに関連付けられているワーカープロセスのシャットダウンを IIS が開始したときに、<xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントをリッスンし、実行時間の長い操作を適切にシャットダウンすることができます。

> [!WARNING]
>  <xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントを実装する際には、開発者が考慮する必要がある設計上の考慮事項がいくつかあります。
>
> 1. <xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントは、IIS 統合パイプラインを使用するように構成されているアプリケーションでのみ使用できます。
> 2. 開発者は、<xref:System.Web.Hosting.HostingEnvironment.StopListening> の実装からエラーをスローすることはできません。エラーをスローすると、予測できない結果になります。
> 3. ASP.NET 内の操作の同時実行の性質により、開発者によって実装された場合に、ASP.NET が <xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントを呼び出すことは保証されません。
> 4. <xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントは、他の <xref:System.Web.Hosting.IRegisteredObject> 通知と同時に実行できます。
> 5. 開発者は、ASP.NET が <xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントの実行中にアプリケーションドメインをシャットダウンし、その可能性を処理するように実装を設計する必要があることに注意する必要があります。
> 6. <xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントハンドラーをブロックすることはできません。ブロック実装を行うとデッドロックが発生し、ラピッドフェール保護間隔に達したときに IIS はワーカープロセスを終了します。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterObject">
      <MemberSignature Language="C#" Value="public static void UnregisterObject (System.Web.Hosting.IRegisteredObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterObject(class System.Web.Hosting.IRegisteredObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnregisterObject (obj As IRegisteredObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnregisterObject(System::Web::Hosting::IRegisteredObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member UnregisterObject : System.Web.Hosting.IRegisteredObject -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.UnregisterObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Web.Hosting.IRegisteredObject" />
      </Parameters>
      <Docs>
        <param name="obj">削除するオブジェクトです。</param>
        <summary>アプリケーションの登録済みのオブジェクトのリストからオブジェクトを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Hosting.ApplicationManager> クラスを使用すると、現在のアプリケーションドメインの外部にあるメソッドで、現在のアプリケーションドメイン内のオブジェクトの作成、管理、および破棄を行うことができます。 <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> メソッドは、ホスト環境から以前に登録されたオブジェクトを削除するために使用されます。



## Examples
 次のコード例は、登録されているオブジェクトの <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> メソッドです。 例を実行するために必要な完全なコードについては、<xref:System.Web.Hosting.IRegisteredObject> インターフェイスの概要に関するトピックの「例」のセクションを参照してください。

 [!code-csharp[System.Web.Hosting.ApplicationManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#3)]
 [!code-vb[System.Web.Hosting.ApplicationManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
        <altmember cref="T:System.Web.Hosting.IRegisteredObject" />
        <altmember cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.VirtualPathProvider VirtualPathProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.VirtualPathProvider VirtualPathProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property VirtualPathProvider As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::VirtualPathProvider ^ VirtualPathProvider { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathProvider : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このアプリケーションの仮想パス プロバイダーを取得します。</summary>
        <value>このアプリケーションの <see cref="T:System.Web.Hosting.VirtualPathProvider" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 複数の <xref:System.Web.Hosting.VirtualPathProvider> インスタンスが登録されると、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトが呼び出しチェーンを管理します。 仮想パスプロバイダーが呼び出される順序を制御することはできません。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
