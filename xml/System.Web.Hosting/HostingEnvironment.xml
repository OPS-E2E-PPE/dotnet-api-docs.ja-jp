<Type Name="HostingEnvironment" FullName="System.Web.Hosting.HostingEnvironment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54b0d7098d27da4a2d97f1fa0c8e03243e6825b1" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78776306" /></Metadata><TypeSignature Language="C#" Value="public sealed class HostingEnvironment : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostingEnvironment extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.HostingEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostingEnvironment&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostingEnvironment sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type HostingEnvironment = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bbfc9-101">アプリケーション ドメイン内でマネージド アプリケーションにアプリケーション管理機能およびアプリケーション サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-101">Provides application-management functions and application services to a managed application within its application domain.</span></span> <span data-ttu-id="bbfc9-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-103">各マネージアプリケーションドメインには、アプリケーション管理機能とアプリケーションサービスへのアクセスを提供する <xref:System.Web.Hosting.HostingEnvironment> クラスの静的インスタンスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-103">Each managed application domain contains a static instance of the <xref:System.Web.Hosting.HostingEnvironment> class, which provides access to application-management functions and application services.</span></span>



## Examples
 <span data-ttu-id="bbfc9-104">次のコード例は、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトから入手できるアプリケーション情報を表示する web ページです。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-104">The following code example is a webpage that displays the application information available from the <xref:System.Web.Hosting.HostingEnvironment> object.</span></span>

 [!code-aspx-csharp[System.Web.Hosting.HostingEnvironment#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.HostingEnvironment/CS/hostingEnvironmentcs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.HostingEnvironment#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.HostingEnvironment/VB/hostingEnvironmentvb.aspx#1)]

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostingEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostingEnvironment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbfc9-105"><see cref="T:System.Web.Hosting.HostingEnvironment" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-105">Initializes a new instance of the <see cref="T:System.Web.Hosting.HostingEnvironment" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-106"><xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> コンストラクターは、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-106">The <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> constructor initializes the <xref:System.Web.Hosting.HostingEnvironment> object.</span></span> <span data-ttu-id="bbfc9-107"><xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> コンストラクターは、アプリケーションの <xref:System.Web.Hosting.ApplicationManager> オブジェクトによって1回だけ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-107">The <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> constructor is called only once by the application's <xref:System.Web.Hosting.ApplicationManager> object.</span></span> <span data-ttu-id="bbfc9-108"><xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> コンストラクターを複数回呼び出すと、<xref:System.InvalidOperationException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-108">Calling the <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> constructor more than once will cause an <xref:System.InvalidOperationException> exception to be thrown.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bbfc9-109"><see cref="M:System.Web.Hosting.HostingEnvironment.#ctor" /> コンストラクターが、何度も呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-109">The <see cref="M:System.Web.Hosting.HostingEnvironment.#ctor" /> constructor is called more than once.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationHost">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.IApplicationHost ApplicationHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.IApplicationHost ApplicationHost" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationHost" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationHost As IApplicationHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::IApplicationHost ^ ApplicationHost { System::Web::Hosting::IApplicationHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationHost : System.Web.Hosting.IApplicationHost" Usage="System.Web.Hosting.HostingEnvironment.ApplicationHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IApplicationHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-110">このプロパティは [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-110">This property supports the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <value><span data-ttu-id="bbfc9-111">アプリケーション ホストについての情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-111">An object that contains information about the application host.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f75a72de-e2f2-4a7a-9574-3f278684ea90"><span data-ttu-id="bbfc9-112">.NET Framework 3.5 アーキテクチャ</span><span class="sxs-lookup"><span data-stu-id="bbfc9-112">The .NET Framework 3.5 Architecture</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationID">
      <MemberSignature Language="C#" Value="public static string ApplicationID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationID" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationID : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-113">アプリケーションの一意の識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-113">Gets the unique identifier of the application.</span></span></summary>
        <value><span data-ttu-id="bbfc9-114">アプリケーションの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-114">The unique identifier of the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-115"><xref:System.Web.Hosting.HostingEnvironment.ApplicationID%2A> プロパティにアクセスするには、<xref:System.Web.AspNetHostingPermissionLevel> を高い信頼に設定してアプリケーションを実行している必要があります。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-115">The application must be running with <xref:System.Web.AspNetHostingPermissionLevel> set to high trust to access the <xref:System.Web.Hosting.HostingEnvironment.ApplicationID%2A> property.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationMonitors">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationMonitors ApplicationMonitors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.ApplicationMonitors ApplicationMonitors" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationMonitors As ApplicationMonitors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::ApplicationMonitors ^ ApplicationMonitors { System::Web::Hosting::ApplicationMonitors ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationMonitors : System.Web.Hosting.ApplicationMonitors" Usage="System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationMonitors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-116">アプリケーションを正常な状態に保つために ASP.NET サブシステムによって使用されている置き換え可能なモニター オブジェクトのグループを取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-116">Gets a group of replaceable monitor objects used by ASP.NET subsystems to maintain application health.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPhysicalPath">
      <MemberSignature Language="C#" Value="public static string ApplicationPhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationPhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationPhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationPhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPhysicalPath : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-117">アプリケーションのディレクトリへのディスク上の物理パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-117">Gets the physical path on disk to the application's directory.</span></span></summary>
        <value><span data-ttu-id="bbfc9-118">アプリケーションのディレクトリへのディスク上の物理パス。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-118">The physical path on disk to the application's directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="bbfc9-119">次のコード例では、<xref:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath%2A> プロパティを使用して、アプリケーションの App_Data ディレクトリ内のデータファイルへのパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-119">The following code example uses the <xref:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath%2A> property to construct a path to a data file in the application's App_Data directory.</span></span> <span data-ttu-id="bbfc9-120">例を実行するために必要な完全なコードについては、<xref:System.Web.Hosting.VirtualPathProvider> クラスの概要に関するトピックの「例」のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-120">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>

 [!code-csharp[System.Web.Hosting.VirtualPathProvider#27](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#27)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#27](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#27)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationVirtualPath">
      <MemberSignature Language="C#" Value="public static string ApplicationVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationVirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationVirtualPath : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-121">アプリケーションのルートへの仮想パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-121">Gets the root virtual path of the application.</span></span></summary>
        <value><span data-ttu-id="bbfc9-122">末尾のスラッシュ (/) を除いた、アプリケーションのルートへの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-122">The root virtual path of the application with no trailing slash (/).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-123"><xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> プロパティは常に、戻り値の最初の文字として "`/"` を返します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-123">The <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> property always returns "`/"` as the first character of the returned value.</span></span> <span data-ttu-id="bbfc9-124">アプリケーションが web サイトのルートにある場合、戻り値は "`/"`だけです。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-124">If the application is located in the root of the website, the return value is just "`/"`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public static System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.Caching.Cache" Usage="System.Web.Hosting.HostingEnvironment.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-125">現在のアプリケーションに対する <see cref="T:System.Web.Caching.Cache" /> インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-125">Gets the <see cref="T:System.Web.Caching.Cache" /> instance for the current application.</span></span></summary>
        <value><span data-ttu-id="bbfc9-126">現在の <see cref="T:System.Web.Caching.Cache" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-126">The current <see cref="T:System.Web.Caching.Cache" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecrementBusyCount">
      <MemberSignature Language="C#" Value="public static void DecrementBusyCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecrementBusyCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DecrementBusyCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DecrementBusyCount();" />
      <MemberSignature Language="F#" Value="static member DecrementBusyCount : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.DecrementBusyCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbfc9-127">ホスト環境のビジー オブジェクトの数を 1 つ減らします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-127">Reduces the count of busy objects in the hosted environment by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-128">ビジー状態の登録済みオブジェクトがその処理を完了すると、<xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> メソッドを呼び出して、処理が完了した <xref:System.Web.Hosting.HostingEnvironment> オブジェクトを通知し、ビジー状態のオブジェクトの数を1つ減らします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-128">When a busy registered object finishes its work, it calls the <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> method to signal the <xref:System.Web.Hosting.HostingEnvironment> object that it has completed processing and to reduce the count of busy objects by one.</span></span>

 <span data-ttu-id="bbfc9-129">ビジー状態の数が0より大きい場合、保留中の要求がない場合でも、ホスティングアプリケーションはタイムアウトしません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-129">If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</span></span>

 <span data-ttu-id="bbfc9-130"><xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> メソッドを呼び出すたびに、<xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-130">There must be a call to the <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> method for each call to the <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbfc9-131">コードによって別のユーザーを偽装できるようにします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-131">Allows code to impersonate a different user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate();" />
      <MemberSignature Language="F#" Value="static member Impersonate : unit -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbfc9-132">アプリケーション ID によって表されるユーザーを偽装します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-132">Impersonates the user represented by the application identity.</span></span></summary>
        <returns><span data-ttu-id="bbfc9-133">偽装前の Windows ユーザーを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-133">An <see cref="T:System.IDisposable" /> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="bbfc9-134">プロセスは偽装できません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-134">The process cannot impersonate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate (IntPtr token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate(native int token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (token As IntPtr) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate(IntPtr token);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="bbfc9-135">Windows アカウント トークンのハンドル。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-135">The handle of a Windows account token.</span></span></param>
        <summary><span data-ttu-id="bbfc9-136">指定したユーザー トークンによって表されるユーザーを偽装します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-136">Impersonates the user represented by the specified user token.</span></span></summary>
        <returns><span data-ttu-id="bbfc9-137">偽装前の Windows ユーザーを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-137">An <see cref="T:System.IDisposable" /> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="bbfc9-138">プロセスは偽装できません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-138">The process cannot impersonate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate (IntPtr userToken, string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate(native int userToken, string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr, virtualPath As String) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate(IntPtr userToken, System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint * string -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate (userToken, virtualPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="bbfc9-139">Windows アカウント トークンのハンドル。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-139">The handle of a Windows account token.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="bbfc9-140">要求されたリソースへのパス。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-140">The path to the requested resource.</span></span></param>
        <summary><span data-ttu-id="bbfc9-141">指定した仮想パスまたは指定したユーザー トークンについて構成設定で指定されたユーザーを偽装します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-141">Impersonates the user specified by the configuration settings for the specified virtual path, or the specified user token.</span></span></summary>
        <returns><span data-ttu-id="bbfc9-142">偽装前の Windows ユーザーを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-142">An <see cref="T:System.IDisposable" /> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-143"><xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> メソッドは、指定された仮想パスに影響する構成設定のすべての要素を適用した後に、結果として得られるユーザーを偽装します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-143">The <xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> method impersonates the user that results after applying all  elements in the configuration settings affecting the specified virtual path.</span></span> <span data-ttu-id="bbfc9-144">仮想パスに `identity` 要素が指定されていない場合、<xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> メソッドは、指定された Windows アカウントの権限を借用します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-144">If an `identity` element is not specified for the virtual path, the <xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> method impersonates the specified Windows account.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="bbfc9-145">プロセスは偽装できません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-145">The process cannot impersonate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InClientBuildManager">
      <MemberSignature Language="C#" Value="public static bool InClientBuildManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool InClientBuildManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InClientBuildManager As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool InClientBuildManager { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InClientBuildManager : bool" Usage="System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-146">ホスティング環境が ASP.NET ビルド システムにアクセスできるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-146">Gets a value that indicates whether the hosting environment has access to the ASP.NET build system.</span></span></summary>
        <value><span data-ttu-id="bbfc9-147">アプリケーション ドメインが <see langword="true" /> のシナリオで使用される ASP.NET ホストのアプリケーション ドメインである場合は <see langword="ClientBuildManager" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-147"><see langword="true" /> if the application domain is the ASP.NET hosted application domain used in <see langword="ClientBuildManager" /> scenarios; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementBusyCount">
      <MemberSignature Language="C#" Value="public static void IncrementBusyCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncrementBusyCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IncrementBusyCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void IncrementBusyCount();" />
      <MemberSignature Language="F#" Value="static member IncrementBusyCount : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.IncrementBusyCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbfc9-148">ホスト環境のビジー オブジェクトの数を 1 つ増やします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-148">Increases the count of busy objects in the hosted environment by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-149">登録済みオブジェクトは、実行されている <xref:System.Web.Hosting.HostingEnvironment> オブジェクトを通知し、ビジー状態のオブジェクトの数を1つ増やします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-149">Registered objects signal the <xref:System.Web.Hosting.HostingEnvironment> object that it is running and to increase the count of busy objects by one.</span></span>

 <span data-ttu-id="bbfc9-150">ビジー状態の数が0より大きい場合、保留中の要求がない場合でも、ホスティングアプリケーションはタイムアウトしません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-150">If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</span></span>

 <span data-ttu-id="bbfc9-151"><xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> メソッドを呼び出すたびに、<xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-151">There must be a call to the <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> method for each call to the <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationException">
      <MemberSignature Language="C#" Value="public static Exception InitializationException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Exception InitializationException" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.InitializationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InitializationException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Exception ^ InitializationException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitializationException : Exception" Usage="System.Web.Hosting.HostingEnvironment.InitializationException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-152"><see cref="T:System.Web.Hosting.HostingEnvironment" /> オブジェクトの初期化中にスローされた例外を取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-152">Gets any exception thrown during initialization of the <see cref="T:System.Web.Hosting.HostingEnvironment" /> object.</span></span></summary>
        <value><span data-ttu-id="bbfc9-153"><see cref="T:System.Web.Hosting.HostingEnvironment" /> オブジェクトの初期化中にスローされた例外。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-153">The exception thrown during initialization of the <see cref="T:System.Web.Hosting.HostingEnvironment" /> object.</span></span> <span data-ttu-id="bbfc9-154">例外がスローされなかった場合は、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-154">If no exception was thrown, returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="hostingEnvironment.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbfc9-155">リースが作成されないようにすることで、<see cref="T:System.Web.Hosting.HostingEnvironment" /> オブジェクトに無期限の有効期間を指定します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-155">Gives the <see cref="T:System.Web.Hosting.HostingEnvironment" /> object an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="bbfc9-156">常に <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-156">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-157">このメソッドは、基本クラスの <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-157">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="bbfc9-158">常に `null` を返し、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトの有効期間を制限するリースが作成されないようにします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-158">It always returns `null` and prevents a lease from being created that would limit the <xref:System.Web.Hosting.HostingEnvironment> object's lifetime.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateShutdown">
      <MemberSignature Language="C#" Value="public static void InitiateShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitiateShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitiateShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitiateShutdown();" />
      <MemberSignature Language="F#" Value="static member InitiateShutdown : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.InitiateShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbfc9-159">このホストに関連付けられている web アプリケーションのシャットダウンを開始し、登録済みのオブジェクトをシステムから削除します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-159">Starts shutting down the web application associated with this host and removes registered objects from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-160"><xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A> メソッドを使用して、web アプリケーションドメインを停止し、<xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> メソッドに登録されているオブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-160">Use the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A> method to stop a web application domain and remove any objects registered with the <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> method.</span></span> <span data-ttu-id="bbfc9-161">シャットダウンが完了する前に、このメソッドは直ちにを返します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-161">This method returns immediately, before the shutdown is complete.</span></span>

 <span data-ttu-id="bbfc9-162">渡されたパラメーターを `false` に設定して、登録されている各オブジェクトに対して <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> メソッドが呼び出されます。これにより、登録された各オブジェクトを非同期にシャットダウンできます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-162">The <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method is called on each registered object with the passed parameter set to `false` to allow each registered object to shut down asynchronously.</span></span> <span data-ttu-id="bbfc9-163">`<hostingEnvironment>` 構成要素の `shutdownTimeout` 属性に指定された時間が経過すると、<xref:System.Web.Hosting.IRegisteredObject.Stop%2A> メソッドが呼び出され、渡されたパラメーターが残りの登録済みオブジェクトごとに `true` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-163">After waiting for the amount of time specified in the `shutdownTimeout` attribute of the `<hostingEnvironment>` configuration element, the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method is called again with the passed parameter set to `true` for each registered object remaining.</span></span>

 <span data-ttu-id="bbfc9-164">登録されているすべてのオブジェクトのシャットダウンが完了すると、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトがアプリケーションドメインをシャットダウンします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-164">Once all registered objects have finished shutting down, the <xref:System.Web.Hosting.HostingEnvironment> objects shuts down the application domain.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevelopmentEnvironment">
      <MemberSignature Language="C#" Value="public static bool IsDevelopmentEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsDevelopmentEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsDevelopmentEnvironment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsDevelopmentEnvironment { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDevelopmentEnvironment : bool" Usage="System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-165">現在のアプリケーションが開発環境で実行されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-165">Gets a value that indicates whether the current application is in a development environment.</span></span></summary>
        <value><span data-ttu-id="bbfc9-166">アプリケーションが開発環境にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-166"><see langword="true" /> if the application is in a development environment; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHosted">
      <MemberSignature Language="C#" Value="public static bool IsHosted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsHosted" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.IsHosted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsHosted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsHosted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHosted : bool" Usage="System.Web.Hosting.HostingEnvironment.IsHosted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-167">現在のアプリケーション ドメインが <see cref="T:System.Web.Hosting.ApplicationManager" /> オブジェクトによってホストされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-167">Gets a value indicating whether the current application domain is being hosted by an <see cref="T:System.Web.Hosting.ApplicationManager" /> object.</span></span></summary>
        <value><span data-ttu-id="bbfc9-168">アプリケーション ドメインが <see langword="true" /> オブジェクトによってホストされている場合は <see cref="T:System.Web.Hosting.ApplicationManager" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-168"><see langword="true" /> if the application domain is hosted by an <see cref="T:System.Web.Hosting.ApplicationManager" /> object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public static string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member MapPath : string -&gt; string" Usage="System.Web.Hosting.HostingEnvironment.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="bbfc9-169">(絶対または相対) 仮想パス。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-169">The virtual path (absolute or relative).</span></span></param>
        <summary><span data-ttu-id="bbfc9-170">サーバー上の物理パスに仮想パスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-170">Maps a virtual path to a physical path on the server.</span></span></summary>
        <returns><span data-ttu-id="bbfc9-171"><paramref name="virtualPath" /> で指定されたサーバー上の物理パス。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-171">The physical path on the server specified by <paramref name="virtualPath" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentRequestsPerCPU">
      <MemberSignature Language="C#" Value="public static int MaxConcurrentRequestsPerCPU { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxConcurrentRequestsPerCPU" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxConcurrentRequestsPerCPU As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxConcurrentRequestsPerCPU { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentRequestsPerCPU : int with get, set" Usage="System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-172">CPU あたりの同時実行される要求の最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-172">Gets or sets the maximum concurrent requests per CPU.</span></span></summary>
        <value><span data-ttu-id="bbfc9-173">CPU あたりの同時実行される要求の最大数。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-173">The maximum concurrent requests per CPU.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentThreadsPerCPU">
      <MemberSignature Language="C#" Value="public static int MaxConcurrentThreadsPerCPU { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxConcurrentThreadsPerCPU" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxConcurrentThreadsPerCPU As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxConcurrentThreadsPerCPU { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentThreadsPerCPU : int with get, set" Usage="System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-174">CPU あたりの同時実行されるスレッドの最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-174">Gets or sets the maximum concurrent threads per CPU.</span></span></summary>
        <value><span data-ttu-id="bbfc9-175">CPU あたりの同時実行されるスレッドの最大数。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-175">The maximum concurrent threads per CPU.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageReceived">
      <MemberSignature Language="C#" Value="public static void MessageReceived ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MessageReceived() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.MessageReceived" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MessageReceived ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MessageReceived();" />
      <MemberSignature Language="F#" Value="static member MessageReceived : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.MessageReceived " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbfc9-176">このメソッドは [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-176">This method supports the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f75a72de-e2f2-4a7a-9574-3f278684ea90"><span data-ttu-id="bbfc9-177">.NET Framework 3.5 アーキテクチャ</span><span class="sxs-lookup"><span data-stu-id="bbfc9-177">The .NET Framework 3.5 Architecture</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="QueueBackgroundWorkItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbfc9-178">どの要求とも独立した形で、バック グラウンドで実行するタスクをスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-178">Schedules a task which can run in the background, independent of any request.</span></span>

<span data-ttu-id="bbfc9-179">このオーバーロードされたメソッドは、呼び出した側から呼び出された側に <see cref="T:System.Threading.ExecutionContext" /> または <see cref="T:System.Security.SecurityContext" /> をフローさせません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-179">This overloaded method doesn't flow the <see cref="T:System.Threading.ExecutionContext" /> or <see cref="T:System.Security.SecurityContext" /> from the caller to the callee.</span></span> <span data-ttu-id="bbfc9-180">そのため、それらのオブジェクトのメンバー (<see cref="P:System.Threading.Thread.CurrentPrincipal" /> プロパティなど) は、呼び出した側から呼び出された側にフローしません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-180">Therefore, members of those objects, such as the <see cref="P:System.Threading.Thread.CurrentPrincipal" /> property, will not flow from the caller to the callee.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QueueBackgroundWorkItem">
      <MemberSignature Language="C#" Value="public static void QueueBackgroundWorkItem (Action&lt;System.Threading.CancellationToken&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueueBackgroundWorkItem(class System.Action`1&lt;valuetype System.Threading.CancellationToken&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub QueueBackgroundWorkItem (workItem As Action(Of CancellationToken))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void QueueBackgroundWorkItem(Action&lt;System::Threading::CancellationToken&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="static member QueueBackgroundWorkItem : Action&lt;System.Threading.CancellationToken&gt; -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Action&lt;System.Threading.CancellationToken&gt;" Index="0" FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workItem"><span data-ttu-id="bbfc9-181">実行の単位。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-181">A unit of execution.</span></span></param>
        <summary><span data-ttu-id="bbfc9-182">どの要求とも独立した形で、バック グラウンドで実行するタスクをスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-182">Schedules a task which can run in the background, independent of any request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-183">は、この API で登録された作業項目の数を現在実行していることを ASP.NET が追跡できるように、通常の ThreadPool 作業項目とは異なります。また、ASP.NET ランタイムは、これらの作業項目の実行が完了するまで、AppDomain のシャットダウンを遅らせようとします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-183">Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</span></span> <span data-ttu-id="bbfc9-184">この API は、ASP.NET によって管理される AppDomain の外部で呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-184">This API cannot be called outside of an ASP.NET-managed AppDomain.</span></span> <span data-ttu-id="bbfc9-185">指定された CancellationToken は、アプリケーションのシャットダウン時に通知されます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-185">The provided CancellationToken will be signaled when the application is shutting down.</span></span>

 <span data-ttu-id="bbfc9-186"><xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> は、タスクを返すコールバックを受け取ります。コールバックが戻ると、作業項目は完了したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-186"><xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> takes a Task-returning callback; the work item will be considered finished when the callback returns.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueBackgroundWorkItem">
      <MemberSignature Language="C#" Value="public static void QueueBackgroundWorkItem (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueueBackgroundWorkItem(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub QueueBackgroundWorkItem (workItem As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void QueueBackgroundWorkItem(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="static member QueueBackgroundWorkItem : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workItem"><span data-ttu-id="bbfc9-187">実行の単位。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-187">A unit of execution.</span></span></param>
        <summary><span data-ttu-id="bbfc9-188">どの要求とも独立した形で、バック グラウンドで実行するタスクをスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-188">Schedules a task which can run in the background, independent of any request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-189">は、この API で登録された作業項目の数を現在実行していることを ASP.NET が追跡できるように、通常の ThreadPool 作業項目とは異なります。また、ASP.NET ランタイムは、これらの作業項目の実行が完了するまで、AppDomain のシャットダウンを遅らせようとします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-189">Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</span></span> <span data-ttu-id="bbfc9-190">この API は、ASP.NET によって管理される AppDomain の外部で呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-190">This API cannot be called outside of an ASP.NET-managed AppDomain.</span></span> <span data-ttu-id="bbfc9-191">指定された CancellationToken は、アプリケーションのシャットダウン時に通知されます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-191">The provided CancellationToken will be signaled when the application is shutting down.</span></span>

 <span data-ttu-id="bbfc9-192"><xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> は、タスクを返すコールバックを受け取ります。返されたタスクがターミナル状態に遷移すると、作業項目は完了したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-192"><xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> takes a Task-returning callback; the work item will be considered finished when the returned Task transitions to a terminal state.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (System.Web.Hosting.IRegisteredObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class System.Web.Hosting.IRegisteredObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterObject (obj As IRegisteredObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterObject(System::Web::Hosting::IRegisteredObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member RegisterObject : System.Web.Hosting.IRegisteredObject -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.RegisterObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Web.Hosting.IRegisteredObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="bbfc9-193">登録するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-193">The object to register.</span></span></param>
        <summary><span data-ttu-id="bbfc9-194">アプリケーションの登録済みオブジェクトのリストにオブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-194">Places an object in the list of registered objects for the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-195"><xref:System.Web.Hosting.ApplicationManager> クラスを使用すると、現在のアプリケーションドメインの外部にあるメソッドで、現在のアプリケーションドメイン内のオブジェクトの作成、管理、および破棄を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-195">The <xref:System.Web.Hosting.ApplicationManager> class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</span></span> <span data-ttu-id="bbfc9-196"><xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> メソッドは、以前に作成したオブジェクトをホスト環境に登録するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-196">The <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> method is used to register previously created objects with the hosting environment.</span></span> <span data-ttu-id="bbfc9-197"><xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> メソッドに登録されたオブジェクトは、<xref:System.Web.Hosting.IRegisteredObject> インターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-197">Objects registered with the <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> method must implement the <xref:System.Web.Hosting.IRegisteredObject> interface.</span></span>

 <span data-ttu-id="bbfc9-198">登録済みのオブジェクトを使用するには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-198">To use a registered object, follow these steps:</span></span>

1.  <span data-ttu-id="bbfc9-199"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType> メソッドを呼び出して、登録されたオブジェクトの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-199">Create a new instance of your registered object by calling the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType> method.</span></span>

2.  <span data-ttu-id="bbfc9-200">型固有のメソッドを呼び出して、新しいオブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-200">Call a type-specific method to initialize your new object.</span></span> <span data-ttu-id="bbfc9-201">初期化メソッドで、<xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> メソッドを呼び出して、登録されているオブジェクトの一覧にオブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-201">In the initialization method, call the <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> method to add the object to the list of registered objects.</span></span>

3.  <span data-ttu-id="bbfc9-202"><xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=nameWithType> メソッドを呼び出して、必要に応じて登録済みオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-202">Call the <xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=nameWithType> method to return the registered object when required.</span></span>

4.  <span data-ttu-id="bbfc9-203">オブジェクトを停止する場合は、<xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-203">When you wish to stop your object, call the <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bbfc9-204"><xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> メソッドは、<xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-204">The <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> method in turn calls the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> method.</span></span>

5.  <span data-ttu-id="bbfc9-205"><xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> メソッドで、オブジェクトが <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> メソッドを呼び出すようにします。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-205">In the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> method, have your object call the <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> method.</span></span>



## Examples
 <span data-ttu-id="bbfc9-206">次のコード例は、登録されているオブジェクトの `Start` メソッドを実装したものです。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-206">The following code example is an implementation of a `Start` method for a registered object.</span></span> <span data-ttu-id="bbfc9-207">例を実行するために必要な完全なコードについては、<xref:System.Web.Hosting.IRegisteredObject> インターフェイスの概要に関するトピックの「例」のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-207">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.IRegisteredObject> interface overview topic.</span></span>

 [!code-csharp[System.Web.Hosting.ApplicationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#2)]
 [!code-vb[System.Web.Hosting.ApplicationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
        <altmember cref="T:System.Web.Hosting.IRegisteredObject" />
        <altmember cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterVirtualPathProvider">
      <MemberSignature Language="C#" Value="public static void RegisterVirtualPathProvider (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterVirtualPathProvider(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterVirtualPathProvider (virtualPathProvider As VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterVirtualPathProvider(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="static member RegisterVirtualPathProvider : System.Web.Hosting.VirtualPathProvider -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider virtualPathProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider"><span data-ttu-id="bbfc9-208">コンパイル システムに追加する新しい <see cref="T:System.Web.Hosting.VirtualPathProvider" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-208">The new <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance to add to the compilation system.</span></span></param>
        <summary><span data-ttu-id="bbfc9-209">ASP.NET コンパイル システムに新しい <see cref="T:System.Web.Hosting.VirtualPathProvider" /> インスタンスを登録します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-209">Registers a new <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance with the ASP.NET compilation system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-210"><xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A> メソッドは、指定された <xref:System.Web.Hosting.VirtualPathProvider> インスタンスを、アプリケーションの仮想パスプロバイダーの一覧に追加します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-210">The <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A> method adds the specified <xref:System.Web.Hosting.VirtualPathProvider> instance to the application's list of virtual-path providers.</span></span>

 <span data-ttu-id="bbfc9-211">詳細については、「<xref:System.Web.Hosting.VirtualPathProvider> クラスの概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-211">For more information, see the <xref:System.Web.Hosting.VirtualPathProvider> class overview.</span></span>



## Examples
 <span data-ttu-id="bbfc9-212">次のコード例は、カスタム <xref:System.Web.Hosting.VirtualPathProvider> インスタンスをコンパイルシステムに登録するアプリケーションのスタートアップメソッドの一部です。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-212">The following code example is part of an application startup method that registers a custom <xref:System.Web.Hosting.VirtualPathProvider> instance with the compilation system.</span></span> <span data-ttu-id="bbfc9-213">例を実行するために必要な完全なコードについては、<xref:System.Web.Hosting.VirtualPathProvider> クラスの概要に関するトピックの「例」のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-213">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>

 [!code-csharp[System.Web.Hosting.VirtualPathProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#11)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#11)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCultures">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbfc9-214">現在のスレッドのカルチャ情報を設定します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-214">Sets culture information for the current thread.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCultures">
      <MemberSignature Language="C#" Value="public static IDisposable SetCultures ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable SetCultures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.SetCultures" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCultures () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ SetCultures();" />
      <MemberSignature Language="F#" Value="static member SetCultures : unit -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.SetCultures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbfc9-215">現在のスレッドを、アプリケーションの構成ファイルで指定されたカルチャに設定します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-215">Sets the current thread to the culture specified in the application configuration file.</span></span></summary>
        <returns><span data-ttu-id="bbfc9-216">変更前のカルチャを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のカルチャに戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-216">An <see cref="T:System.IDisposable" /> object that represents the culture prior to changing; this object can be used to revert to the previous culture.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-217"><xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> メソッドは、アプリケーションの構成ファイルの[グローバリゼーション要素 (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100))要素で指定されているカルチャに現在のスレッドを設定します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-217">The <xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> method sets the current thread to the culture specified in the [globalization Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100)) element in the application's configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCultures">
      <MemberSignature Language="C#" Value="public static IDisposable SetCultures (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable SetCultures(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCultures (virtualPath As String) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ SetCultures(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member SetCultures : string -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.SetCultures virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="bbfc9-218">カルチャ情報を格納するパス。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-218">The path that contains the culture information.</span></span></param>
        <summary><span data-ttu-id="bbfc9-219">現在のカルチャを、指定した仮想パスのカルチャに設定します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-219">Sets the current thread to the culture of the specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="bbfc9-220">変更前のカルチャを表す <see cref="T:System.IDisposable" /> オブジェクト。このオブジェクトを使用して、元のカルチャに戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-220">An <see cref="T:System.IDisposable" /> object that represents the culture prior to changing; this object can be used to revert to the previous culture.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-221"><xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> メソッドは、指定された仮想パスに影響を与える構成ファイル内のすべての要素を適用した後に生成されるカルチャに、現在のスレッドを設定します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-221">The <xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> method sets the current thread to the culture that results after applying all  elements in the configuration files affecting the specified virtual path.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownReason">
      <MemberSignature Language="C#" Value="public static System.Web.ApplicationShutdownReason ShutdownReason { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.ApplicationShutdownReason ShutdownReason" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ShutdownReason" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ShutdownReason As ApplicationShutdownReason" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::ApplicationShutdownReason ShutdownReason { System::Web::ApplicationShutdownReason get(); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownReason : System.Web.ApplicationShutdownReason" Usage="System.Web.Hosting.HostingEnvironment.ShutdownReason" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ApplicationShutdownReason</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-222">アプリケーションの終了理由を示す列挙値を返します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-222">Returns an enumerated value that indicates why the application terminated.</span></span></summary>
        <value><span data-ttu-id="bbfc9-223"><see cref="T:System.Web.ApplicationShutdownReason" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-223">One of the <see cref="T:System.Web.ApplicationShutdownReason" /> values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteName">
      <MemberSignature Language="C#" Value="public static string SiteName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SiteName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.SiteName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SiteName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SiteName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SiteName : string" Usage="System.Web.Hosting.HostingEnvironment.SiteName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-224">サイトの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-224">Gets the name of the site.</span></span></summary>
        <value><span data-ttu-id="bbfc9-225">サイトの名前。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-225">The name of the site.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public static event EventHandler StopListening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StopListening" />
      <MemberSignature Language="DocId" Value="E:System.Web.Hosting.HostingEnvironment.StopListening" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event StopListening As EventHandler " FrameworkAlternate="netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ StopListening;" />
      <MemberSignature Language="F#" Value="member this.StopListening : EventHandler " Usage="member this.StopListening : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event StopListening As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-226">[.NET Framework 4.5.1 のみでサポート]</span><span class="sxs-lookup"><span data-stu-id="bbfc9-226">[Supported in the .NET Framework 4.5.1 only]</span></span>

 <span data-ttu-id="bbfc9-227">発生した時、ワーカーの処理か、このホストに関連付けられているアプリケーション プールが新しい要求のリッスンを停止して、最終的にシャット ダウンされるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-227">Occurs when the worker process or application pool associated with this host has stopped listening for new requests and will eventually shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-228">アプリケーションプールとそれに関連付けられているワーカープロセスが IIS によってシャットダウンされている場合 (たとえば、アプリケーションプールがスケジュールされたリサイクル間隔に達した場合)、IIS は、アプリケーションがシャットダウンしていることを ASP.NET ランタイムに通知し、次のワーカープロセスを実行します。アプリケーションプールは、新しい要求のリッスンを停止します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-228">When an application pool and its associated worker processes are being shut down by IIS, for example when an application pool has reached a scheduled recycle interval, IIS notifies the ASP.NET runtime that the application is shutting down and the worker process for the application pool stops listening for new requests.</span></span> <span data-ttu-id="bbfc9-229">実行時間の長い要求を使用するアプリケーション ( [SignalR](https://go.microsoft.com/fwlink/?LinkID=285432)アプリケーションなど) は、アプリケーションプールとそれに関連付けられているワーカープロセスのシャットダウンを IIS が開始したときに、<xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントをリッスンし、実行時間の長い操作を適切にシャットダウンすることができます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-229">Applications that use long-running requests, for example [SignalR](https://go.microsoft.com/fwlink/?LinkID=285432) applications, can listen for the <xref:System.Web.Hosting.HostingEnvironment.StopListening> event and gracefully shut down their long-running operations when IIS has initiated the shutdown of an application pool and its associated worker processes.</span></span>

> [!WARNING]
>  <span data-ttu-id="bbfc9-230"><xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントを実装する際には、開発者が考慮する必要がある設計上の考慮事項がいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-230">There are several design considerations that a developer must consider when implementing the <xref:System.Web.Hosting.HostingEnvironment.StopListening> event:</span></span>
>
> 1. <span data-ttu-id="bbfc9-231"><xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントは、IIS 統合パイプラインを使用するように構成されているアプリケーションでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-231">The <xref:System.Web.Hosting.HostingEnvironment.StopListening> event is only available for applications that are configured to use the IIS integrated pipeline.</span></span>
> 2. <span data-ttu-id="bbfc9-232">開発者は、<xref:System.Web.Hosting.HostingEnvironment.StopListening> の実装からエラーをスローすることはできません。エラーをスローすると、予測できない結果になります。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-232">Developers must not throw errors from their <xref:System.Web.Hosting.HostingEnvironment.StopListening> implementations; throwing errors will have unpredictable results.</span></span>
> 3. <span data-ttu-id="bbfc9-233">ASP.NET 内の操作の同時実行の性質により、開発者によって実装された場合に、ASP.NET が <xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントを呼び出すことは保証されません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-233">Due to the concurrent nature of operations within ASP.NET, there is no guarantee that ASP.NET will call a <xref:System.Web.Hosting.HostingEnvironment.StopListening> event once it has been implemented by a developer.</span></span>
> 4. <span data-ttu-id="bbfc9-234"><xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントは、他の <xref:System.Web.Hosting.IRegisteredObject> 通知と同時に実行できます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-234">The <xref:System.Web.Hosting.HostingEnvironment.StopListening> event can execute concurrently with other <xref:System.Web.Hosting.IRegisteredObject> notifications.</span></span>
> 5. <span data-ttu-id="bbfc9-235">開発者は、ASP.NET が <xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントの実行中にアプリケーションドメインをシャットダウンし、その可能性を処理するように実装を設計する必要があることに注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-235">Developers need to be aware that ASP.NET may shut down the application domain while their <xref:System.Web.Hosting.HostingEnvironment.StopListening> event is executing and design their implementations to handle that possibility.</span></span>
> 6. <span data-ttu-id="bbfc9-236"><xref:System.Web.Hosting.HostingEnvironment.StopListening> イベントハンドラーをブロックすることはできません。ブロック実装を行うとデッドロックが発生し、ラピッドフェール保護間隔に達したときに IIS はワーカープロセスを終了します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-236"><xref:System.Web.Hosting.HostingEnvironment.StopListening> event handlers must not block; blocking implementations will result in deadlocks, and IIS will terminate the worker process when the rapid fail protection interval is reached.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterObject">
      <MemberSignature Language="C#" Value="public static void UnregisterObject (System.Web.Hosting.IRegisteredObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterObject(class System.Web.Hosting.IRegisteredObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnregisterObject (obj As IRegisteredObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnregisterObject(System::Web::Hosting::IRegisteredObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member UnregisterObject : System.Web.Hosting.IRegisteredObject -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.UnregisterObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Web.Hosting.IRegisteredObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="bbfc9-237">削除するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-237">The object to remove.</span></span></param>
        <summary><span data-ttu-id="bbfc9-238">アプリケーションの登録済みのオブジェクトのリストからオブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-238">Removes an object from the list of registered objects for the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-239"><xref:System.Web.Hosting.ApplicationManager> クラスを使用すると、現在のアプリケーションドメインの外部にあるメソッドで、現在のアプリケーションドメイン内のオブジェクトの作成、管理、および破棄を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-239">The <xref:System.Web.Hosting.ApplicationManager> class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</span></span> <span data-ttu-id="bbfc9-240"><xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> メソッドは、ホスト環境から以前に登録されたオブジェクトを削除するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-240">The <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> method is used to remove previously registered objects from the hosting environment.</span></span>



## Examples
 <span data-ttu-id="bbfc9-241">次のコード例は、登録されているオブジェクトの <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-241">The following code example is the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method for a registered object.</span></span> <span data-ttu-id="bbfc9-242">例を実行するために必要な完全なコードについては、<xref:System.Web.Hosting.IRegisteredObject> インターフェイスの概要に関するトピックの「例」のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-242">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.IRegisteredObject> interface overview topic.</span></span>

 [!code-csharp[System.Web.Hosting.ApplicationManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#3)]
 [!code-vb[System.Web.Hosting.ApplicationManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
        <altmember cref="T:System.Web.Hosting.IRegisteredObject" />
        <altmember cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.VirtualPathProvider VirtualPathProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.VirtualPathProvider VirtualPathProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property VirtualPathProvider As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::VirtualPathProvider ^ VirtualPathProvider { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathProvider : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbfc9-243">このアプリケーションの仮想パス プロバイダーを取得します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-243">Gets the virtual path provider for this application.</span></span></summary>
        <value><span data-ttu-id="bbfc9-244">このアプリケーションの <see cref="T:System.Web.Hosting.VirtualPathProvider" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-244">The <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance for this application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="bbfc9-245">複数の <xref:System.Web.Hosting.VirtualPathProvider> インスタンスが登録されると、<xref:System.Web.Hosting.HostingEnvironment> オブジェクトが呼び出しチェーンを管理します。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-245">When more than one <xref:System.Web.Hosting.VirtualPathProvider> instance is registered, the <xref:System.Web.Hosting.HostingEnvironment> object manages the call chain.</span></span> <span data-ttu-id="bbfc9-246">仮想パスプロバイダーが呼び出される順序を制御することはできません。</span><span class="sxs-lookup"><span data-stu-id="bbfc9-246">You cannot control the order in which virtual path providers are called.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
