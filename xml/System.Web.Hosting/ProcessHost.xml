<Type Name="ProcessHost" FullName="System.Web.Hosting.ProcessHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26c84c25984ab81cfb7308022f892b0e7e94893c" /><Meta Name="ms.sourcegitcommit" Value="2b0967e04b047f6709322418d97215dfcef6a938" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/20/2019" /><Meta Name="ms.locfileid" Value="74236847" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProcessHost : MarshalByRefObject, System.Web.Hosting.IAdphManager, System.Web.Hosting.IApplicationPreloadManager, System.Web.Hosting.IPphManager, System.Web.Hosting.IProcessHost, System.Web.Hosting.IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProcessHost extends System.MarshalByRefObject implements class System.Web.Hosting.IAdphManager, class System.Web.Hosting.IApplicationPreloadManager, class System.Web.Hosting.IPphManager, class System.Web.Hosting.IProcessHost, class System.Web.Hosting.IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ProcessHost" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessHost&#xA;Inherits MarshalByRefObject&#xA;Implements IAdphManager, IApplicationPreloadManager, IPphManager, IProcessHost, IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessHost sealed : MarshalByRefObject, System::Web::Hosting::IAdphManager, System::Web::Hosting::IApplicationPreloadManager, System::Web::Hosting::IPphManager, System::Web::Hosting::IProcessHost, System::Web::Hosting::IProcessHostIdleAndHealthCheck" />
  <TypeSignature Language="F#" Value="type ProcessHost = class&#xA;    inherit MarshalByRefObject&#xA;    interface IProcessHost&#xA;    interface IAdphManager&#xA;    interface IPphManager&#xA;    interface IProcessHostIdleAndHealthCheck&#xA;    interface IApplicationPreloadManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Hosting.IAdphManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IApplicationPreloadManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IPphManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IProcessHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IProcessHostIdleAndHealthCheck</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b75b9-101">プロセス ホストを表します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-101">Represents a process host.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75b9-102"><xref:System.Web.Hosting.ProcessHost> は [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で導入されました。</span><span class="sxs-lookup"><span data-stu-id="b75b9-102"><xref:System.Web.Hosting.ProcessHost> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="b75b9-103">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b75b9-103">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="EnumerateAppDomains">
      <MemberSignature Language="C#" Value="public void EnumerateAppDomains (out System.Web.Hosting.IAppDomainInfoEnum appDomainInfoEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumerateAppDomains([out] class System.Web.Hosting.IAppDomainInfoEnum&amp; appDomainInfoEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumerateAppDomains (ByRef appDomainInfoEnum As IAppDomainInfoEnum)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnumerateAppDomains([Runtime::InteropServices::Out] System::Web::Hosting::IAppDomainInfoEnum ^ % appDomainInfoEnum);" />
      <MemberSignature Language="F#" Value="abstract member EnumerateAppDomains : IAppDomainInfoEnum -&gt; unit&#xA;override this.EnumerateAppDomains : IAppDomainInfoEnum -&gt; unit" Usage="processHost.EnumerateAppDomains appDomainInfoEnum" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfoEnum" Type="System.Web.Hosting.IAppDomainInfoEnum" RefType="out" />
      </Parameters>
      <Docs>
        <param name="appDomainInfoEnum"><span data-ttu-id="b75b9-104">アプリケーション ドメインに関する情報。</span><span class="sxs-lookup"><span data-stu-id="b75b9-104">Information about the application domains.</span></span></param>
        <summary><span data-ttu-id="b75b9-105">アプリケーション ドメインの列挙可能なセットへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-105">Provides access to an enumerable set of application domains.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="processHost.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b75b9-106">リースが作成されないようにすることで、プロセス ホストに無期限の有効期間を指定します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-106">Gives the process host an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="b75b9-107"><see langword="null" /> 値を返し、リースが無期限に有効であることを示します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-107">Returns a <see langword="null" /> value to indicate that the lease never expires.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75b9-108"><xref:System.Web.Hosting.ProcessHost.InitializeLifetimeService%2A> は [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で導入されました。</span><span class="sxs-lookup"><span data-stu-id="b75b9-108"><xref:System.Web.Hosting.ProcessHost.InitializeLifetimeService%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="b75b9-109">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b75b9-109">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsIdle();" />
      <MemberSignature Language="F#" Value="abstract member IsIdle : unit -&gt; bool&#xA;override this.IsIdle : unit -&gt; bool" Usage="processHost.IsIdle " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.IsIdle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b75b9-110">プロセスの状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-110">Gets the state of a process.</span></span></summary>
        <returns><span data-ttu-id="b75b9-111">プロセス ホストがアイドル状態の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b75b9-111"><see langword="true" /> if the process host is idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75b9-112"><xref:System.Web.Hosting.ProcessHost.IsIdle%2A> は [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で導入されました。</span><span class="sxs-lookup"><span data-stu-id="b75b9-112"><xref:System.Web.Hosting.ProcessHost.IsIdle%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="b75b9-113">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b75b9-113">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public void Ping (System.Web.Hosting.IProcessPingCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Ping(class System.Web.Hosting.IProcessPingCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.Ping(System.Web.Hosting.IProcessPingCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ping (callback As IProcessPingCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Ping(System::Web::Hosting::IProcessPingCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Ping : System.Web.Hosting.IProcessPingCallback -&gt; unit&#xA;override this.Ping : System.Web.Hosting.IProcessPingCallback -&gt; unit" Usage="processHost.Ping callback" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHostIdleAndHealthCheck.Ping(System.Web.Hosting.IProcessPingCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Hosting.IProcessPingCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b75b9-114">ping 応答を処理するためのコールバック。</span><span class="sxs-lookup"><span data-stu-id="b75b9-114">The callback to handle the ping response.</span></span></param>
        <summary><span data-ttu-id="b75b9-115">プロセスに対して ping を実行します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-115">Pings a process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75b9-116"><xref:System.Web.Hosting.ProcessHost.Ping%2A> は [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で導入されました。</span><span class="sxs-lookup"><span data-stu-id="b75b9-116"><xref:System.Web.Hosting.ProcessHost.Ping%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="b75b9-117">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b75b9-117">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationPreloadState">
      <MemberSignature Language="C#" Value="public void SetApplicationPreloadState (string context, string appId, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationPreloadState(string context, string appId, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadState(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetApplicationPreloadState (context As String, appId As String, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetApplicationPreloadState(System::String ^ context, System::String ^ appId, bool enabled);" />
      <MemberSignature Language="F#" Value="abstract member SetApplicationPreloadState : string * string * bool -&gt; unit&#xA;override this.SetApplicationPreloadState : string * string * bool -&gt; unit" Usage="processHost.SetApplicationPreloadState (context, appId, enabled)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState(System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="appId" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enabled" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b75b9-118">アプリケーションのコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="b75b9-118">The application context.</span></span></param>
        <param name="appId"><span data-ttu-id="b75b9-119">アプリケーションの一意の ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-119">The unique ID of the application.</span></span></param>
        <param name="enabled"><span data-ttu-id="b75b9-120">アプリケーションをプリロードする必要があることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b75b9-120"><see langword="true" /> to indicate the application should be preloaded; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b75b9-121">[!INCLUDE[iisver](~/includes/iisver-md.md)] で実行されている特定のアプリケーションがプリロードされるように構成されていることを、ASP.NET に通知します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-121">Notifies ASP.NET that a particular application that is running on [!INCLUDE[iisver](~/includes/iisver-md.md)] is configured to be preloaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75b9-122">このメソッドは、<xref:System.Web.Hosting.IApplicationPreloadManager> インターフェイスの <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-122">This method implements the <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> method of the <xref:System.Web.Hosting.IApplicationPreloadManager> interface.</span></span> [!INCLUDE[iisver](~/includes/iisver-md.md)] <span data-ttu-id="b75b9-123">は <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> メソッドを呼び出して、読み込まれているアプリケーションがプリロードをサポートしているかどうかを ASP.NET に通知します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-123">calls the <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> method to notify ASP.NET whether the application that is being loaded supports preloading.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b75b9-124">この方法は、[!INCLUDE[iisver](~/includes/iisver-md.md)]で実行されるアプリケーションにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="b75b9-124">This method applies only to applications that run on [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b75b9-125">アプリケーションをプリロードするための情報を含む <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> インスタンスは、<see langword="null" /> または空です。</span><span class="sxs-lookup"><span data-stu-id="b75b9-125">The <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> instance that contains information for preloading the application is <see langword="null" /> or empty.</span></span>

<span data-ttu-id="b75b9-126">- または -</span><span class="sxs-lookup"><span data-stu-id="b75b9-126">-or-</span></span>

<span data-ttu-id="b75b9-127"><paramref name="appId" /> が <see langword="null" /> または空です。</span><span class="sxs-lookup"><span data-stu-id="b75b9-127"><paramref name="appId" /> is <see langword="null" /> or empty.</span></span>

<span data-ttu-id="b75b9-128">- または -</span><span class="sxs-lookup"><span data-stu-id="b75b9-128">-or-</span></span>

<span data-ttu-id="b75b9-129"><paramref name="enabled" /> が <see langword="true" /> に設定され、プロセス ホストは前もって <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> インターフェイスをその <see cref="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" /> メソッドに渡しませんでした。</span><span class="sxs-lookup"><span data-stu-id="b75b9-129"><paramref name="enabled" /> is set to <see langword="true" /> and the process host was not previously passed an <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> interface to its <see cref="M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" /> method</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationPreloadUtil">
      <MemberSignature Language="C#" Value="public void SetApplicationPreloadUtil (System.Web.Hosting.IApplicationPreloadUtil applicationPreloadUtil);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationPreloadUtil(class System.Web.Hosting.IApplicationPreloadUtil applicationPreloadUtil) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetApplicationPreloadUtil (applicationPreloadUtil As IApplicationPreloadUtil)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetApplicationPreloadUtil(System::Web::Hosting::IApplicationPreloadUtil ^ applicationPreloadUtil);" />
      <MemberSignature Language="F#" Value="abstract member SetApplicationPreloadUtil : System.Web.Hosting.IApplicationPreloadUtil -&gt; unit&#xA;override this.SetApplicationPreloadUtil : System.Web.Hosting.IApplicationPreloadUtil -&gt; unit" Usage="processHost.SetApplicationPreloadUtil applicationPreloadUtil" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationPreloadUtil" Type="System.Web.Hosting.IApplicationPreloadUtil" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="applicationPreloadUtil"><span data-ttu-id="b75b9-130">情報を取得するために ASP.NET が呼び出す [!INCLUDE[iisver](~/includes/iisver-md.md)] のアンマネージ インターフェイスのハンドルです。</span><span class="sxs-lookup"><span data-stu-id="b75b9-130">The handle to an unmanaged interface in [!INCLUDE[iisver](~/includes/iisver-md.md)] that ASP.NET calls to get information.</span></span></param>
        <summary><span data-ttu-id="b75b9-131">アプリケーションをプリロードするために必要な情報を取得するために [!INCLUDE[iisver](~/includes/iisver-md.md)] を呼び出す型を作成します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-131">Creates a type that calls [!INCLUDE[iisver](~/includes/iisver-md.md)] to get information that is required in order to preload an application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75b9-132">このメソッドは、<xref:System.Web.Hosting.IApplicationPreloadManager> インターフェイスの <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil%2A> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-132">This method implements the <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil%2A> method of the <xref:System.Web.Hosting.IApplicationPreloadManager> interface.</span></span> <span data-ttu-id="b75b9-133">メソッドは <xref:System.Web.Hosting.IApplicationPreloadUtil> 型のインスタンスを作成します。このインスタンスは [!INCLUDE[iisver](~/includes/iisver-md.md)] を呼び出して、プリロード情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-133">The method creates an instance of the <xref:System.Web.Hosting.IApplicationPreloadUtil> type, which calls into [!INCLUDE[iisver](~/includes/iisver-md.md)] to get preloading information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b75b9-134">この方法は、[!INCLUDE[iisver](~/includes/iisver-md.md)]で実行されるアプリケーションにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="b75b9-134">This method applies only to applications that run on [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b75b9-135">アプリケーションをプリロードするための情報を含む <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> インスタンスは、<see langword="null" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b75b9-135">The <see cref="T:System.Web.Hosting.IApplicationPreloadUtil" /> instance that contains information for preloading the application is not <see langword="null" />.</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="processHost.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHost.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b75b9-136">プロセス ホストをアンロードします。</span><span class="sxs-lookup"><span data-stu-id="b75b9-136">Unloads the process host.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShutdownApplication(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="abstract member ShutdownApplication : string -&gt; unit&#xA;override this.ShutdownApplication : string -&gt; unit" Usage="processHost.ShutdownApplication appId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHost.ShutdownApplication(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b75b9-137">終了するアプリケーションの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="b75b9-137">The unique identifier of the application to shut down.</span></span></param>
        <summary><span data-ttu-id="b75b9-138">指定したアプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-138">Shuts down the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75b9-139"><xref:System.Web.Hosting.ProcessHost.ShutdownApplication%2A> は [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で導入されました。</span><span class="sxs-lookup"><span data-stu-id="b75b9-139"><xref:System.Web.Hosting.ProcessHost.ShutdownApplication%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="b75b9-140">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b75b9-140">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StartAppDomainProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StartAppDomainProtocolListenerChannel (string appId, string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAppDomainProtocolListenerChannel(string appId, string protocolId, class System.Web.Hosting.IListenerChannelCallback listenerChannelCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartAppDomainProtocolListenerChannel (appId As String, protocolId As String, listenerChannelCallback As IListenerChannelCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartAppDomainProtocolListenerChannel(System::String ^ appId, System::String ^ protocolId, System::Web::Hosting::IListenerChannelCallback ^ listenerChannelCallback);" />
      <MemberSignature Language="F#" Value="abstract member StartAppDomainProtocolListenerChannel : string * string * System.Web.Hosting.IListenerChannelCallback -&gt; unit&#xA;override this.StartAppDomainProtocolListenerChannel : string * string * System.Web.Hosting.IListenerChannelCallback -&gt; unit" Usage="processHost.StartAppDomainProtocolListenerChannel (appId, protocolId, listenerChannelCallback)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IAdphManager.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelCallback" Type="System.Web.Hosting.IListenerChannelCallback" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b75b9-141">アプリケーション ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-141">The application ID.</span></span></param>
        <param name="protocolId"><span data-ttu-id="b75b9-142">プロトコル ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-142">The protocol ID.</span></span></param>
        <param name="listenerChannelCallback"><span data-ttu-id="b75b9-143">プロトコル リスナー チャネル コールバック。</span><span class="sxs-lookup"><span data-stu-id="b75b9-143">The protocol listener channel callback.</span></span></param>
        <summary><span data-ttu-id="b75b9-144">アプリケーション ドメイン プロトコル リスナー チャネルを開始します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-144">Starts an application domain protocol listener channel.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StartApplication">
      <MemberSignature Language="C#" Value="public void StartApplication (string appId, string appPath, out object runtimeInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartApplication(string appId, string appPath, [out] object&amp; runtimeInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StartApplication(System.String,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartApplication (appId As String, appPath As String, ByRef runtimeInterface As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartApplication(System::String ^ appId, System::String ^ appPath, [Runtime::InteropServices::Out] System::Object ^ % runtimeInterface);" />
      <MemberSignature Language="F#" Value="abstract member StartApplication : string * string * obj -&gt; unit&#xA;override this.StartApplication : string * string * obj -&gt; unit" Usage="processHost.StartApplication (appId, appPath, runtimeInterface)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IProcessHost.StartApplication(System.String,System.String,System.Object@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="appPath" Type="System.String" />
        <Parameter Name="runtimeInterface" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b75b9-145">アプリケーション ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-145">The application ID.</span></span></param>
        <param name="appPath"><span data-ttu-id="b75b9-146">アプリケーションへの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="b75b9-146">The virtual path to the application.</span></span></param>
        <param name="runtimeInterface"><span data-ttu-id="b75b9-147">ランタイム マネージャー インターフェイス</span><span class="sxs-lookup"><span data-stu-id="b75b9-147">A runtime manager interface.</span></span></param>
        <summary><span data-ttu-id="b75b9-148">指定したアプリケーションを開始します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-148">Starts the specified application.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StartProcessProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StartProcessProtocolListenerChannel (string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartProcessProtocolListenerChannel(string protocolId, class System.Web.Hosting.IListenerChannelCallback listenerChannelCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartProcessProtocolListenerChannel (protocolId As String, listenerChannelCallback As IListenerChannelCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartProcessProtocolListenerChannel(System::String ^ protocolId, System::Web::Hosting::IListenerChannelCallback ^ listenerChannelCallback);" />
      <MemberSignature Language="F#" Value="abstract member StartProcessProtocolListenerChannel : string * System.Web.Hosting.IListenerChannelCallback -&gt; unit&#xA;override this.StartProcessProtocolListenerChannel : string * System.Web.Hosting.IListenerChannelCallback -&gt; unit" Usage="processHost.StartProcessProtocolListenerChannel (protocolId, listenerChannelCallback)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IPphManager.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelCallback" Type="System.Web.Hosting.IListenerChannelCallback" />
      </Parameters>
      <Docs>
        <param name="protocolId"><span data-ttu-id="b75b9-149">プロトコル ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-149">The protocol ID.</span></span></param>
        <param name="listenerChannelCallback"><span data-ttu-id="b75b9-150">プロトコル リスナー チャネル コールバック。</span><span class="sxs-lookup"><span data-stu-id="b75b9-150">The protocol listener channel callback.</span></span></param>
        <summary><span data-ttu-id="b75b9-151">プロセス プロトコル リスナー チャネルを開始します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-151">Starts a process protocol listener channel.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StopAppDomainProtocol">
      <MemberSignature Language="C#" Value="public void StopAppDomainProtocol (string appId, string protocolId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopAppDomainProtocol(string appId, string protocolId, bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocol(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopAppDomainProtocol (appId As String, protocolId As String, immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopAppDomainProtocol(System::String ^ appId, System::String ^ protocolId, bool immediate);" />
      <MemberSignature Language="F#" Value="abstract member StopAppDomainProtocol : string * string * bool -&gt; unit&#xA;override this.StopAppDomainProtocol : string * string * bool -&gt; unit" Usage="processHost.StopAppDomainProtocol (appId, protocolId, immediate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IAdphManager.StopAppDomainProtocol(System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b75b9-152">アプリケーション ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-152">The application ID.</span></span></param>
        <param name="protocolId"><span data-ttu-id="b75b9-153">プロトコル ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-153">The protocol ID.</span></span></param>
        <param name="immediate"><span data-ttu-id="b75b9-154">プロトコルを直ちに停止するかどうか。</span><span class="sxs-lookup"><span data-stu-id="b75b9-154">Whether to stop the protocol immediately.</span></span></param>
        <summary><span data-ttu-id="b75b9-155">アプリケーション ドメイン プロトコル リスナー チャネルを停止します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-155">Stops an application domain protocol listener channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75b9-156"><xref:System.Web.Hosting.ProcessHost.StopAppDomainProtocol%2A> は [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で導入されました。</span><span class="sxs-lookup"><span data-stu-id="b75b9-156"><xref:System.Web.Hosting.ProcessHost.StopAppDomainProtocol%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="b75b9-157">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b75b9-157">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StopAppDomainProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StopAppDomainProtocolListenerChannel (string appId, string protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopAppDomainProtocolListenerChannel(string appId, string protocolId, int32 listenerChannelId, bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopAppDomainProtocolListenerChannel (appId As String, protocolId As String, listenerChannelId As Integer, immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopAppDomainProtocolListenerChannel(System::String ^ appId, System::String ^ protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="F#" Value="abstract member StopAppDomainProtocolListenerChannel : string * string * int * bool -&gt; unit&#xA;override this.StopAppDomainProtocolListenerChannel : string * string * int * bool -&gt; unit" Usage="processHost.StopAppDomainProtocolListenerChannel (appId, protocolId, listenerChannelId, immediate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IAdphManager.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelId" Type="System.Int32" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b75b9-158">アプリケーション ID</span><span class="sxs-lookup"><span data-stu-id="b75b9-158">The application ID</span></span></param>
        <param name="protocolId"><span data-ttu-id="b75b9-159">プロトコル ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-159">The protocol ID.</span></span></param>
        <param name="listenerChannelId"><span data-ttu-id="b75b9-160">プロトコル リスナー チャネル ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-160">The protocol listener channel ID.</span></span></param>
        <param name="immediate"><span data-ttu-id="b75b9-161">プロトコル リスナー チャネルを直ちに停止するかどうか。</span><span class="sxs-lookup"><span data-stu-id="b75b9-161">Whether to stop the protocol listener channel immediately.</span></span></param>
        <summary><span data-ttu-id="b75b9-162">アプリケーション ドメイン プロトコル リスナー チャネルを停止します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-162">Stops an application domain protocol listener channel.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StopProcessProtocol">
      <MemberSignature Language="C#" Value="public void StopProcessProtocol (string protocolId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessProtocol(string protocolId, bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StopProcessProtocol(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopProcessProtocol (protocolId As String, immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopProcessProtocol(System::String ^ protocolId, bool immediate);" />
      <MemberSignature Language="F#" Value="abstract member StopProcessProtocol : string * bool -&gt; unit&#xA;override this.StopProcessProtocol : string * bool -&gt; unit" Usage="processHost.StopProcessProtocol (protocolId, immediate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IPphManager.StopProcessProtocol(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protocolId"><span data-ttu-id="b75b9-163">プロトコル ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-163">The protocol ID.</span></span></param>
        <param name="immediate"><span data-ttu-id="b75b9-164">プロトコルを直ちに停止するかどうか。</span><span class="sxs-lookup"><span data-stu-id="b75b9-164">Whether to stop the protocol immediately.</span></span></param>
        <summary><span data-ttu-id="b75b9-165">プロセス プロトコルを停止します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-165">Stops a process protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75b9-166"><xref:System.Web.Hosting.ProcessHost.StopProcessProtocol%2A> は [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で導入されました。</span><span class="sxs-lookup"><span data-stu-id="b75b9-166"><xref:System.Web.Hosting.ProcessHost.StopProcessProtocol%2A> is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="b75b9-167">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b75b9-167">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StopProcessProtocolListenerChannel">
      <MemberSignature Language="C#" Value="public void StopProcessProtocolListenerChannel (string protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessProtocolListenerChannel(string protocolId, int32 listenerChannelId, bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopProcessProtocolListenerChannel (protocolId As String, listenerChannelId As Integer, immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopProcessProtocolListenerChannel(System::String ^ protocolId, int listenerChannelId, bool immediate);" />
      <MemberSignature Language="F#" Value="abstract member StopProcessProtocolListenerChannel : string * int * bool -&gt; unit&#xA;override this.StopProcessProtocolListenerChannel : string * int * bool -&gt; unit" Usage="processHost.StopProcessProtocolListenerChannel (protocolId, listenerChannelId, immediate)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IPphManager.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolId" Type="System.String" />
        <Parameter Name="listenerChannelId" Type="System.Int32" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protocolId"><span data-ttu-id="b75b9-168">プロトコル ID。</span><span class="sxs-lookup"><span data-stu-id="b75b9-168">The protocol ID.</span></span></param>
        <param name="listenerChannelId"><span data-ttu-id="b75b9-169">プロトコル リスナー チャネル コールバック。</span><span class="sxs-lookup"><span data-stu-id="b75b9-169">The protocol listener channel callback.</span></span></param>
        <param name="immediate"><span data-ttu-id="b75b9-170">プロトコル リスナー チャネルを直ちに停止するかどうか。</span><span class="sxs-lookup"><span data-stu-id="b75b9-170">Whether to stop the protocol listener channel immediately.</span></span></param>
        <summary><span data-ttu-id="b75b9-171">プロトコル リスナー チャネルを停止します。</span><span class="sxs-lookup"><span data-stu-id="b75b9-171">Stops a protocol listener channel.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
