<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a44e1a9e3adacfb0a936f45893826a441075f09" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78776358" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type ApplicationManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b1ad6-101">ASP.NET ホスト アプリケーションの ASP.NET アプリケーション ドメインを管理します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-102"><xref:System.Web.Hosting.ApplicationManager> オブジェクトは、ASP.NET アプリケーションのホスト環境におけるオブジェクトの有効期間の管理を提供します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="b1ad6-103">以下の処理を担当します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="b1ad6-104">ASP.NET アプリケーションのアクティブ化と初期化。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="b1ad6-105">アプリケーションの有効期間と、アプリケーションに登録されているオブジェクトの有効期間を管理します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="b1ad6-106">ASP.NET アプリケーション要求を処理するために、ホスティング環境によって使用されるオブジェクトを公開します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="b1ad6-107">任意の時点でホストプロセスで実行されているアプリケーションの一覧を提供します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="applicationManager.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1ad6-108">すべてのアプリケーション ドメインをシャットダウンします。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-108">Shuts down all application domains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-109"><xref:System.Web.Hosting.ApplicationManager.Close%2A> メソッドを呼び出すと、アプリケーションマネージャーを使用しているアプリケーションの参照カウントが0に減少した場合、<xref:System.Web.Hosting.ApplicationManager.Close%2A> メソッドは <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1ad6-110">指定したアプリケーション ドメインおよびオブジェクト型のオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-110">Creates an object for the specified application domain and object type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (appHost As IApplicationHost, type As Type) As IRegisteredObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : System.Web.Hosting.IApplicationHost * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appHost, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="b1ad6-111"><see cref="T:System.Web.Hosting.IApplicationHost" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span></span></param>
        <param name="type"><span data-ttu-id="b1ad6-112">作成するオブジェクトの種類。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-112">The type of the object to create.</span></span></param>
        <summary><span data-ttu-id="b1ad6-113">種類に基づいて、指定されたアプリケーション ドメインのオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-113">Creates an object for the specified application domain, based on type.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-114"><paramref name="type" /> で指定された型の新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-114">A new object of the type specified in <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> は .NET Framework バージョン3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="b1ad6-116">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1ad6-117">アプリケーションの物理パスが存在しません。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-117">A physical path for the application does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ad6-118"><paramref name="appHost" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-118"><paramref name="appHost" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1ad6-119">- または -</span><span class="sxs-lookup"><span data-stu-id="b1ad6-119">-or-</span></span> 
 <span data-ttu-id="b1ad6-120"><paramref name="type" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-120"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (appId As String, type As Type, virtualPath As String, physicalPath As String, failIfExists As Boolean) As IRegisteredObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b1ad6-121">オブジェクトを所有するアプリケーションの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-121">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="b1ad6-122">作成するオブジェクトの種類。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-122">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="b1ad6-123">アプリケーションへの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-123">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="b1ad6-124">アプリケーションへの物理パス。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-124">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="b1ad6-125">指定した型のオブジェクトが現在登録されている場合に例外をスローするには <see langword="true" />。指定した型の既存の登録済みオブジェクトを返すには <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-125"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <summary><span data-ttu-id="b1ad6-126">型、仮想パスと物理パス、および、指定した型のオブジェクトが既に存在する場合のエラー動作を示すブール値に基づいて、指定したアプリケーション ドメインのオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-127">指定した <paramref name="type" /> の新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-127">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-128"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> メソッドは、アプリケーションでオブジェクトを作成および登録するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="b1ad6-129">作成できるオブジェクトは、型ごとに1つだけです。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-129">Only one object of each type can be created.</span></span> <span data-ttu-id="b1ad6-130">同じ種類の複数のオブジェクトを作成する必要がある場合は、オブジェクトファクトリを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="b1ad6-131">詳細については、このトピックのコード例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="b1ad6-132">一意のアプリケーション識別子によって識別される各アプリケーションは、独自のアプリケーションドメインで実行されます。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="b1ad6-133"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> メソッドは、`appID` パラメーターで指定されたアプリケーションのアプリケーションドメインに、指定された型のオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="b1ad6-134">指定されたアプリケーションのアプリケーションドメインが存在しない場合は、オブジェクトが作成される前にそのドメインが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="b1ad6-135">`failIfExists` パラメーターは、指定された型のオブジェクトが既にアプリケーションに存在する場合の、<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> メソッドの動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="b1ad6-136">`failIfExists` が `true`場合、<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> メソッドは <xref:System.InvalidOperationException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="b1ad6-137">`failIfExists` が `false`場合、<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> メソッドは、指定された型の既存の登録済みオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="b1ad6-138"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> メソッドは、`throwOnError` を `false`に設定して追加の `throwOnError` パラメーターを受け取るオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1ad6-139">次のコード例は、登録されているオブジェクトのオブジェクトファクトリデザインパターンを実装したものです。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="b1ad6-140">ファクトリパターンを使用すると、オブジェクトの複数のインスタンスを登録できます。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="b1ad6-141">この例には、`SampleComponent`という2つのオブジェクトが含まれています。これは、アプリケーションがの複数のインスタンスを使用するオブジェクトで、`SampleComponent` インスタンスのリストを管理する `SampleComponentFactory`です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1ad6-142"><paramref name="physicalPath" /> は <see langword="null" /> です</span><span class="sxs-lookup"><span data-stu-id="b1ad6-142"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="b1ad6-143">- または -</span><span class="sxs-lookup"><span data-stu-id="b1ad6-143">-or-</span></span> 
 <span data-ttu-id="b1ad6-144"><paramref name="physicalPath" /> が有効なアプリケーション パスではありません。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-144"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="b1ad6-145">- または -</span><span class="sxs-lookup"><span data-stu-id="b1ad6-145">-or-</span></span> 
 <span data-ttu-id="b1ad6-146"><paramref name="type" /> が <see cref="T:System.Web.Hosting.IRegisteredObject" /> インターフェイスを実装していません。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-146"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ad6-147"><paramref name="appID" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-147"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1ad6-148">- または -</span><span class="sxs-lookup"><span data-stu-id="b1ad6-148">-or-</span></span> 
 <span data-ttu-id="b1ad6-149"><paramref name="type" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-149"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1ad6-150"><paramref name="failIfExists" /> が <see langword="true" /> で、指定した型のオブジェクトが既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-150"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (appId As String, type As Type, virtualPath As String, physicalPath As String, failIfExists As Boolean, throwOnError As Boolean) As IRegisteredObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b1ad6-151">オブジェクトを所有するアプリケーションの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-151">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="b1ad6-152">作成するオブジェクトの種類。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-152">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="b1ad6-153">アプリケーションへの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-153">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="b1ad6-154">アプリケーションへの物理パス。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-154">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="b1ad6-155">指定した型のオブジェクトが現在登録されている場合に例外をスローするには <see langword="true" />。指定した型の既存の登録済みオブジェクトを返すには <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-155"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="b1ad6-156">ホスト初期化エラーの例外をスローする場合は <see langword="true" />。ホスト初期化例外をスローしない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-156"><see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span></span></param>
        <summary><span data-ttu-id="b1ad6-157">型、仮想パスと物理パス、指定した型のオブジェクトが既に存在する場合のエラー動作を示すブール値、および、ホスト初期化エラーの例外をスローするかどうかを示すブール値に基づいて、指定したアプリケーション ドメインのオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-158">指定した <paramref name="type" /> の新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-158">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-159"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> メソッドのこのオーバーロードには、ホスト初期化例外がスローされるかどうかを制御できるようにする、`throwOnError` パラメーターが用意されています。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="b1ad6-160">`throwOnError` を提供しない <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> メソッドのオーバーロードは、パラメーターを `false`に設定してこのオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1ad6-161"><paramref name="physicalPath" /> は <see langword="null" /> です</span><span class="sxs-lookup"><span data-stu-id="b1ad6-161"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="b1ad6-162">- または -</span><span class="sxs-lookup"><span data-stu-id="b1ad6-162">-or-</span></span> 
 <span data-ttu-id="b1ad6-163"><paramref name="physicalPath" /> が有効なアプリケーション パスではありません。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-163"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="b1ad6-164">- または -</span><span class="sxs-lookup"><span data-stu-id="b1ad6-164">-or-</span></span> 
 <span data-ttu-id="b1ad6-165"><paramref name="type" /> が <see cref="T:System.Web.Hosting.IRegisteredObject" /> インターフェイスを実装していません。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-165"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ad6-166"><paramref name="appID" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-166"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1ad6-167">- または -</span><span class="sxs-lookup"><span data-stu-id="b1ad6-167">-or-</span></span> 
 <span data-ttu-id="b1ad6-168"><paramref name="type" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-168"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b1ad6-169"><paramref name="failIfExists" /> が <see langword="true" /> で、指定した型のオブジェクトが既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-169"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1ad6-170">指定したアプリケーションのアプリケーション ドメインを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-170">Gets the application domain of a specified application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : string -&gt; AppDomain" Usage="applicationManager.GetAppDomain appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b1ad6-171">アプリケーションの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-171">The unique identifier for the application.</span></span></param>
        <summary><span data-ttu-id="b1ad6-172">指定したアプリケーションのアプリケーション ドメインを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-172">Gets the application domain of the specified application.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-173">アプリケーションのアプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-173">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : System.Web.Hosting.IApplicationHost -&gt; AppDomain" Usage="applicationManager.GetAppDomain appHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="b1ad6-174">アプリケーション ドメインを取得する対象のホスト。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-174">The host to get the application domain for.</span></span></param>
        <summary><span data-ttu-id="b1ad6-175">指定したホストを使用して、アプリケーションのアプリケーション ドメインを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-175">Gets the application domain of an application using the specified host.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-176">アプリケーションのアプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-176">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberSignature Language="F#" Value="static member GetApplicationManager : unit -&gt; System.Web.Hosting.ApplicationManager" Usage="System.Web.Hosting.ApplicationManager.GetApplicationManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1ad6-177">この ASP.NET ホスト プロセスに関連付けられている <see cref="T:System.Web.Hosting.ApplicationManager" /> オブジェクトの単一のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-178">実行中の ASP.NET ホスト プロセスに関連付けられている <see cref="T:System.Web.Hosting.ApplicationManager" /> オブジェクトの単一のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-179">既定のアプリケーションドメインの ASP.NET ホストプロセスによって作成されるのは、<xref:System.Web.Hosting.ApplicationManager> オブジェクトの1つのインスタンスだけです。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="b1ad6-180"><xref:System.Web.Hosting.ApplicationManager> クラスのインスタンスが使用できない場合、<xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> メソッドは最初に <xref:System.Web.Hosting.ApplicationManager> クラスのインスタンスを作成し、新しく作成されたオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="b1ad6-181"><xref:System.Web.Hosting.ApplicationManager> クラスのインスタンスが既に作成されている場合、<xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> メソッドは既存のオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1ad6-182">次のコード例では、<xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> メソッドを使用して、Web アプリケーションの <xref:System.Web.Hosting.ApplicationManager> インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObject (appId As String, type As Type) As IRegisteredObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetObject : string * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.GetObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b1ad6-183">オブジェクトを所有するアプリケーションの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-183">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="b1ad6-184">返すオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-184">The type of the object to return.</span></span></param>
        <summary><span data-ttu-id="b1ad6-185">指定したアプリケーションから、指定した型の登録済みオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-185">Returns the registered object of the specified type from the specified application.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-186">指定した型の登録済みオブジェクト。<see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> メソッドの呼び出しによってこの型が登録されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ad6-187"><paramref name="appId" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-187"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1ad6-188">- または -</span><span class="sxs-lookup"><span data-stu-id="b1ad6-188">-or-</span></span> 
 <span data-ttu-id="b1ad6-189"><paramref name="type" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-189"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberSignature Language="F#" Value="member this.GetRunningApplications : unit -&gt; System.Web.Hosting.ApplicationInfo[]" Usage="applicationManager.GetRunningApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1ad6-190">実行中のアプリケーションのスナップショットを返します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-190">Returns a snapshot of running applications.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-191">この <see cref="T:System.Web.Hosting.ApplicationInfo" /> インスタンスによって管理されているアプリケーションに関する情報を格納している <see cref="T:System.Web.Hosting.ApplicationManager" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1ad6-192">次のコード例では、<xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> メソッドを使用して、<xref:System.Web.Hosting.ApplicationManager> インスタンスによって管理されるアプリケーションに関する情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="applicationManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1ad6-193">リースが作成されないようにすることで、アプリケーション ドメインに無期限の有効期間を指定します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-194">常に <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-194">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-195">このメソッドは、基本クラスの <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="b1ad6-196">常に `null` を返し、その結果、アプリケーションドメインの有効期間を制限するリースが作成されないようにします。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberSignature Language="F#" Value="member this.IsIdle : unit -&gt; bool" Usage="applicationManager.IsIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1ad6-197">プロセスによってホストされているすべてのアプリケーションがアイドル状態であり、要求を処理していないかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span></span></summary>
        <returns><span data-ttu-id="b1ad6-198">プロセス内のすべてのアプリケーションがアイドル状態の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-198"><see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-199"><xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> メソッドは、プロセスによってホストされるすべてのアプリケーションがアイドル状態の場合に `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="applicationManager.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1ad6-200">アプリケーション マネージャー インスタンスのユーザー参照カウントまでスレッド セーフなインクリメントを行います。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberSignature Language="F#" Value="member this.ShutdownAll : unit -&gt; unit" Usage="applicationManager.ShutdownAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1ad6-201">すべてのアプリケーション リソースをアンロードします。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-201">Unloads all application resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-202"><xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> メソッドを呼び出すことは、この <xref:System.Web.Hosting.ApplicationManager> インスタンスによって管理されるすべてのアプリケーションドメインで <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> メソッドを呼び出すことと同じです。ただし、<xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> メソッドは、マネージアプリケーションドメインの外部から呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.ShutdownApplication : string -&gt; unit" Usage="applicationManager.ShutdownApplication appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b1ad6-203">アンロードするアプリケーションの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-203">The unique identifier of the application to unload.</span></span></param>
        <summary><span data-ttu-id="b1ad6-204">指定したアプリケーションをアンロードします。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-204">Unloads the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ad6-205"><xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> メソッドを呼び出すことは、特定のアプリケーションドメインに対して <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> メソッドを呼び出すことと同じです。ただし、<xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> メソッドは、マネージアプリケーションドメインの外部から呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ad6-206"><paramref name="appId" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-206"><paramref name="appId" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopObject (appId As String, type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.StopObject : string * Type -&gt; unit" Usage="applicationManager.StopObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="b1ad6-207">オブジェクトを所有するアプリケーションの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-207">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="b1ad6-208">アンロードするオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-208">The type of the object to unload.</span></span></param>
        <summary><span data-ttu-id="b1ad6-209">アプリケーションの登録済みオブジェクトのリストから、指定したオブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-209">Removes the specified object from the list of registered objects in an application.</span></span> <span data-ttu-id="b1ad6-210">アプリケーションの登録済みオブジェクトのリストに最後に残っているオブジェクトを削除すると、そのアプリケーションはアンロードされます。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ad6-211"><paramref name="appId" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-211"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1ad6-212">- または -</span><span class="sxs-lookup"><span data-stu-id="b1ad6-212">-or-</span></span> 
 <span data-ttu-id="b1ad6-213"><paramref name="type" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1ad6-213"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
