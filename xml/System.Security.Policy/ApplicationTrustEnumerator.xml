<Type Name="ApplicationTrustEnumerator" FullName="System.Security.Policy.ApplicationTrustEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6021bc574b537eddeb08ccd9871bdf95989cd562" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75161756" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationTrustEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.ApplicationTrustEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationTrustEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationTrustEnumerator sealed : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type ApplicationTrustEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dbea3-101"><see cref="T:System.Security.Policy.ApplicationTrust" /> コレクションに含まれる <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> オブジェクトの列挙子を表します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-101">Represents the enumerator for <see cref="T:System.Security.Policy.ApplicationTrust" /> objects in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbea3-102">列挙子は、コレクションのデータの読み取りのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-102">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="dbea3-103">列挙子を使用して、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="dbea3-103">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="dbea3-104">最初、列挙子はコレクションの先頭の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-104">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="dbea3-105"><xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> メソッドは、この位置に列挙子を戻します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-105">The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="dbea3-106">この位置で、<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> プロパティを呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-106">At this position, calling the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="dbea3-107">したがって、<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> プロパティの値を読み取る前に、<xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> メソッドを呼び出して、列挙子をコレクションの最初の要素に進めておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="dbea3-107">Therefore, you must call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="dbea3-108"><xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> は、<xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> または <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-108"><xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the same object until either <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="dbea3-109"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> は、<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-109"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> sets <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="dbea3-110">コレクションの末尾を過ぎると、列挙子はコレクションの最後の要素の後ろに配置され、<xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> を呼び出すと `false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-110">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="dbea3-111"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> の最後の呼び出しが `false`返された場合、<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> を呼び出すと例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-111">If the last call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="dbea3-112"><xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> をコレクションの最初の要素にリセットするには、<xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> を呼び出し、その後に <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-112">To reset <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> followed by a call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="dbea3-113">列挙子は、コレクションが変更されない限り有効です。</span><span class="sxs-lookup"><span data-stu-id="dbea3-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="dbea3-114">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子はなりに無効になり、次に <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> または <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> を呼び出すと <xref:System.InvalidOperationException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException> exception.</span></span> <span data-ttu-id="dbea3-115"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> と <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>の呼び出しの間でコレクションが変更された場合、列挙子が既に無効になっていても、<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> は現在設定されている要素を返します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-115">If the collection is modified between calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> and <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="dbea3-116">列挙子はコレクションに排他アクセスできないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="dbea3-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="dbea3-117">コレクションが同期されていても、他のスレッドがコレクションを変更する場合があり、このときは列挙子から例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-117">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="dbea3-118">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="dbea3-118">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.ApplicationTrust Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.ApplicationTrustEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::ApplicationTrust ^ Current { System::Security::Policy::ApplicationTrust ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Security.Policy.ApplicationTrust" Usage="System.Security.Policy.ApplicationTrustEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbea3-119"><see cref="T:System.Security.Policy.ApplicationTrust" /> コレクション内の現在の <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-119">Gets the current <see cref="T:System.Security.Policy.ApplicationTrust" /> object in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="dbea3-120"><see cref="T:System.Security.Policy.ApplicationTrust" /> 内の現在の <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</span><span class="sxs-lookup"><span data-stu-id="dbea3-120">The current <see cref="T:System.Security.Policy.ApplicationTrust" /> in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbea3-121">列挙子が作成されると、オブジェクトを指していないので、<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> プロパティは無効になり、アクセスされた場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="dbea3-121">When the enumerator is created, it does not point to an object, so the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="dbea3-122">まず、<xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> メソッドを呼び出して、カーソルをコレクション内の最初のオブジェクトに配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dbea3-122">You must first call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.</span></span>  
  
 <span data-ttu-id="dbea3-123"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> の呼び出しが介在しない <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> を複数回呼び出すと、同じ <xref:System.Security.Policy.ApplicationTrust> オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-123">Multiple calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> with no intervening calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return the same <xref:System.Security.Policy.ApplicationTrust> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="applicationTrustEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dbea3-124"><see cref="T:System.Security.Policy.ApplicationTrustCollection" /> コレクションの次の要素に移動します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-124">Moves to the next element in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
        <returns><span data-ttu-id="dbea3-125">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dbea3-125"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbea3-126"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> メソッドは、コレクション内にオブジェクトが存在しない場合は、すぐに `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-126">The <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method immediately returns `false` if there are no objects in the collection.</span></span>  
  
 <span data-ttu-id="dbea3-127"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> は、コレクションの末尾に到達するまで `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-127"><xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="dbea3-128">その後、後続の各呼び出しに対して `false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-128">It will then return `false` for each successive call.</span></span> <span data-ttu-id="dbea3-129">ただし、<xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> が `false`を返した後、<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> プロパティにアクセスすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-129">However, after <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property will throw an exception.</span></span>  
  
 <span data-ttu-id="dbea3-130">作成時に、列挙子はコレクション内の最初の <xref:System.Security.Policy.ApplicationTrust> オブジェクトの前に配置され、<xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> の最初の呼び出しでは、列挙子がコレクション内の最初のオブジェクトに配置されます。</span><span class="sxs-lookup"><span data-stu-id="dbea3-130">Upon creation, an enumerator is positioned before the first <xref:System.Security.Policy.ApplicationTrust> object in the collection, and the first call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> positions the enumerator at the first object in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.ApplicationTrustEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="applicationTrustEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dbea3-131">列挙子を <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> コレクションの先頭にリセットします。</span><span class="sxs-lookup"><span data-stu-id="dbea3-131">Resets the enumerator to the beginning of the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbea3-132">列挙子は順方向専用に移動します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-132">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="dbea3-133">このメソッドを使用して、<xref:System.Security.Policy.ApplicationTrust> オブジェクトのコレクションの先頭に列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-133">Use this method to return the enumerator to the beginning of the collection of <xref:System.Security.Policy.ApplicationTrust> objects.</span></span>  
  
 <span data-ttu-id="dbea3-134"><xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> メソッドは、カーソルをコレクション内の最初のオブジェクトに配置します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-134">The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method positions the cursor at the first object in the collection.</span></span> <span data-ttu-id="dbea3-135"><xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>を呼び出した後、<xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> メソッドを呼び出して、カーソルを最初のオブジェクトに移動する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="dbea3-135">After calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>, you do not need to call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to move the cursor forward to the first object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbea3-136"><see cref="T:System.Object" /> コレクション内の現在の <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="dbea3-136">Gets the current <see cref="T:System.Object" /> in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="dbea3-137"><see cref="T:System.Object" /> 内の現在の <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</span><span class="sxs-lookup"><span data-stu-id="dbea3-137">The current <see cref="T:System.Object" /> in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbea3-138">このメソッドは呼び出さないでください。代わりに、<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> プロパティを使用してください。</span><span class="sxs-lookup"><span data-stu-id="dbea3-138">Do not call this method; use the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
