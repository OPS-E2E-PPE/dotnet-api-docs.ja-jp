<Type Name="StringSegment" FullName="Microsoft.Extensions.Primitives.StringSegment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6aae866b64cc6e86bfb5021975a80e5c12a5caa" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73406448" /></Metadata><TypeSignature Language="C#" Value="public struct StringSegment : IEquatable&lt;Microsoft.Extensions.Primitives.StringSegment&gt;, IEquatable&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit StringSegment extends System.ValueType implements class System.IEquatable`1&lt;string&gt;, class System.IEquatable`1&lt;valuetype Microsoft.Extensions.Primitives.StringSegment&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Primitives.StringSegment" />
  <TypeSignature Language="VB.NET" Value="Public Structure StringSegment&#xA;Implements IEquatable(Of String), IEquatable(Of StringSegment)" />
  <TypeSignature Language="C++ CLI" Value="public value class StringSegment : IEquatable&lt;Microsoft::Extensions::Primitives::StringSegment&gt;, IEquatable&lt;System::String ^&gt;" />
  <TypeSignature Language="F#" Value="type StringSegment = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Extensions.Primitives.StringSegment&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.String&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="56530-101">部分文字列の最適化された表現。</span><span class="sxs-lookup"><span data-stu-id="56530-101">An optimized representation of a substring.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringSegment (string buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringSegment(System::String ^ buffer);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Primitives.StringSegment : string -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="new Microsoft.Extensions.Primitives.StringSegment buffer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="56530-102">元の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="56530-102">The original <see cref="T:System.String" />.</span></span> <span data-ttu-id="56530-103"><see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> には、<see cref="T:System.String" /> 全体が含まれています。</span><span class="sxs-lookup"><span data-stu-id="56530-103">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> includes the whole <see cref="T:System.String" />.</span></span></param>
        <summary><span data-ttu-id="56530-104"><see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 構造体のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="56530-104">Initializes an instance of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> struct.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringSegment (string buffer, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string buffer, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As String, offset As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringSegment(System::String ^ buffer, int offset, int length);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Primitives.StringSegment : string * int * int -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="new Microsoft.Extensions.Primitives.StringSegment (buffer, offset, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="56530-105">バッファーとして使用される元の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="56530-105">The original <see cref="T:System.String" /> used as buffer.</span></span></param>
        <param name="offset"><span data-ttu-id="56530-106"><paramref name="buffer" /> 内のセグメントのオフセット。</span><span class="sxs-lookup"><span data-stu-id="56530-106">The offset of the segment within the <paramref name="buffer" />.</span></span></param>
        <param name="length"><span data-ttu-id="56530-107">セグメントの長さ。</span><span class="sxs-lookup"><span data-stu-id="56530-107">The length of the segment.</span></span></param>
        <summary><span data-ttu-id="56530-108"><see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 構造体のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="56530-108">Initializes an instance of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> struct.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56530-109"><paramref name="buffer" /> が</span><span class="sxs-lookup"><span data-stu-id="56530-109"><paramref name="buffer" /> is</span></span> <code>null</code><span data-ttu-id="56530-110">.</span><span class="sxs-lookup"><span data-stu-id="56530-110">.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-111"><paramref name="offset" /> または <paramref name="length" /> が 0 未満です。または、<paramref name="offset" /> +
            <paramref name="length" /> が <paramref name="buffer" /> 内の文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="56530-111"><paramref name="offset" /> or <paramref name="length" /> is less than zero, or <paramref name="offset" /> +
            <paramref name="length" /> is greater than the number of characters in <paramref name="buffer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsMemory">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;char&gt; AsMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;char&gt; AsMemory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.AsMemory" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMemory () As ReadOnlyMemory(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;char&gt; AsMemory();" />
      <MemberSignature Language="F#" Value="member this.AsMemory : unit -&gt; ReadOnlyMemory&lt;char&gt;" Usage="stringSegment.AsMemory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56530-112">現在の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> から <see cref="T:System.ReadOnlyMemory`1" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-112">Gets a <see cref="T:System.ReadOnlyMemory`1" /> from the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></summary>
        <returns><span data-ttu-id="56530-113">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の <see cref="T:System.ReadOnlyMemory`1" />。</span><span class="sxs-lookup"><span data-stu-id="56530-113">The <see cref="T:System.ReadOnlyMemory`1" /> from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsSpan">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;char&gt; AsSpan ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlySpan`1&lt;char&gt; AsSpan() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.AsSpan" />
      <MemberSignature Language="VB.NET" Value="Public Function AsSpan () As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan&lt;char&gt; AsSpan();" />
      <MemberSignature Language="F#" Value="member this.AsSpan : unit -&gt; ReadOnlySpan&lt;char&gt;" Usage="stringSegment.AsSpan " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56530-114">現在の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> から <see cref="T:System.ReadOnlySpan`1" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-114">Gets a <see cref="T:System.ReadOnlySpan`1" /> from the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></summary>
        <returns><span data-ttu-id="56530-115">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の <see cref="T:System.ReadOnlySpan`1" />。</span><span class="sxs-lookup"><span data-stu-id="56530-115">The <see cref="T:System.ReadOnlySpan`1" /> from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public string Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Buffer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Buffer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : string" Usage="Microsoft.Extensions.Primitives.StringSegment.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56530-116">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の <see cref="T:System.String" /> バッファーを取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-116">Gets the <see cref="T:System.String" /> buffer for this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (Microsoft.Extensions.Primitives.StringSegment a, Microsoft.Extensions.Primitives.StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype Microsoft.Extensions.Primitives.StringSegment a, valuetype Microsoft.Extensions.Primitives.StringSegment b, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Compare(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As StringSegment, b As StringSegment, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(Microsoft::Extensions::Primitives::StringSegment a, Microsoft::Extensions::Primitives::StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment * StringComparison -&gt; int" Usage="Microsoft.Extensions.Primitives.StringSegment.Compare (a, b, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="b" Type="Microsoft.Extensions.Primitives.StringSegment" Index="1" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="56530-117">比較対象となる最初の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-117">The first <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare.</span></span></param>
        <param name="b"><span data-ttu-id="56530-118">比較対象となる 2 番目の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-118">The second <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="56530-119">比較の規則を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="56530-119">One of the enumeration values that specifies the rules for the comparison.</span></span></param>
        <summary><span data-ttu-id="56530-120">指定した規則を使用して、指定した 2 つの <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> オブジェクトの部分文字列を比較し、並べ替え順序におけるそれらの相対位置を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="56530-120">Compares substrings of two specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> objects using the specified rules, and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <returns><span data-ttu-id="56530-121">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="56530-121">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>
<span data-ttu-id="56530-122"><paramref name="a" /> が <paramref name="b" /> 未満の場合は負、2 つの比較対照値が等しい場合は 0、<paramref name="a" /> が <paramref name="b" /> より大きい場合は正の値です。</span><span class="sxs-lookup"><span data-stu-id="56530-122">The value is negative if <paramref name="a" /> is less than <paramref name="b" />, 0 if the two comparands are equal, and positive if <paramref name="a" /> is greater than <paramref name="b" />.</span></span>
<span data-ttu-id="56530-123">.</span><span class="sxs-lookup"><span data-stu-id="56530-123">.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Extensions.Primitives.StringSegment Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Microsoft.Extensions.Primitives.StringSegment Empty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Extensions.Primitives.StringSegment.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As StringSegment " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Extensions::Primitives::StringSegment Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Extensions.Primitives.StringSegment.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56530-124"><see cref="F:System.String.Empty" /> の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-124">A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> for <see cref="F:System.String.Empty" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string text, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string text, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.EndsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (text As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ text, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * StringComparison -&gt; bool" Usage="stringSegment.EndsWith (text, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="56530-125">比較対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="56530-125">The <see cref="T:System.String" />to compare.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="56530-126">比較で使用する規則を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="56530-126">One of the enumeration values that specifies the rules to use in the comparison.</span></span></param>
        <summary><span data-ttu-id="56530-127">指定した <paramref name="comparisonType" /> を使用して比較した場合に、<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の末尾が指定した <see cref="T:System.String" /> と一致するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="56530-127">Checks if the end of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> matches the specified <see cref="T:System.String" /> when compared using the specified <paramref name="comparisonType" />.</span></span></summary>
        <returns><code>true</code> <span data-ttu-id="56530-128">(<paramref name="text" /> がこの <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の末尾と一致する場合)。それ以外の場合は</span><span class="sxs-lookup"><span data-stu-id="56530-128">if <paramref name="text" /> matches the end of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; otherwise,</span></span> <code>false</code><span data-ttu-id="56530-129">.</span><span class="sxs-lookup"><span data-stu-id="56530-129">.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56530-130"><paramref name="text" /> が</span><span class="sxs-lookup"><span data-stu-id="56530-130"><paramref name="text" /> is</span></span> <code>null</code><span data-ttu-id="56530-131">.</span><span class="sxs-lookup"><span data-stu-id="56530-131">.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Extensions.Primitives.StringSegment other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::Extensions::Primitives::StringSegment other);" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="stringSegment.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="56530-132">このオブジェクトと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="56530-132">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="56530-133">現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="56530-133">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><code>true</code> <span data-ttu-id="56530-134">(現在のオブジェクトがその他のパラメーターと等しい場合)。それ以外の場合は</span><span class="sxs-lookup"><span data-stu-id="56530-134">if the current object is equal to the other parameter; otherwise,</span></span> <code>false</code><span data-ttu-id="56530-135">.</span><span class="sxs-lookup"><span data-stu-id="56530-135">.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringSegment.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.Equals : string -&gt; bool" Usage="stringSegment.Equals text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="56530-136">現在の <see cref="T:System.String" /> と比較する <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-136">The <see cref="T:System.String" /> to compare with the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></param>
        <summary><span data-ttu-id="56530-137">指定した <see cref="T:System.String" /> が現在の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> と等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="56530-137">Checks if the specified <see cref="T:System.String" /> is equal to the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></summary>
        <returns><code>true</code> <span data-ttu-id="56530-138">(指定した <see cref="T:System.String" /> が現在の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> と等しい場合)。それ以外の場合は</span><span class="sxs-lookup"><span data-stu-id="56530-138">if the specified <see cref="T:System.String" /> is equal to the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; otherwise,</span></span> <code>false</code><span data-ttu-id="56530-139">.</span><span class="sxs-lookup"><span data-stu-id="56530-139">.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Extensions.Primitives.StringSegment other, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment other, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As StringSegment, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Microsoft::Extensions::Primitives::StringSegment other, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Extensions.Primitives.StringSegment * StringComparison -&gt; bool" Usage="stringSegment.Equals (other, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="56530-140">このオブジェクトと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="56530-140">An object to compare with this object.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="56530-141">比較で使用する規則を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="56530-141">One of the enumeration values that specifies the rules to use in the comparison.</span></span></param>
        <summary><span data-ttu-id="56530-142">現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="56530-142">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><code>true</code> <span data-ttu-id="56530-143">(現在のオブジェクトがその他のパラメーターと等しい場合)。それ以外の場合は</span><span class="sxs-lookup"><span data-stu-id="56530-143">if the current object is equal to the other parameter; otherwise,</span></span> <code>false</code><span data-ttu-id="56530-144">.</span><span class="sxs-lookup"><span data-stu-id="56530-144">.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string text, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(string text, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (text As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::String ^ text, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * StringComparison -&gt; bool" Usage="stringSegment.Equals (text, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="56530-145">現在の <see cref="T:System.String" /> と比較する <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-145">The <see cref="T:System.String" /> to compare with the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="56530-146">比較で使用する規則を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="56530-146">One of the enumeration values that specifies the rules to use in the comparison.</span></span></param>
        <summary><span data-ttu-id="56530-147">指定した <see cref="T:System.String" /> が現在の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> と等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="56530-147">Checks if the specified <see cref="T:System.String" /> is equal to the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></summary>
        <returns><code>true</code> <span data-ttu-id="56530-148">(指定した <see cref="T:System.String" /> が現在の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> と等しい場合)。それ以外の場合は</span><span class="sxs-lookup"><span data-stu-id="56530-148">if the specified <see cref="T:System.String" /> is equal to the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; otherwise,</span></span> <code>false</code><span data-ttu-id="56530-149">.</span><span class="sxs-lookup"><span data-stu-id="56530-149">.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56530-150"><paramref name="text" /> が</span><span class="sxs-lookup"><span data-stu-id="56530-150"><paramref name="text" /> is</span></span> <code>null</code><span data-ttu-id="56530-151">.</span><span class="sxs-lookup"><span data-stu-id="56530-151">.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (Microsoft.Extensions.Primitives.StringSegment a, Microsoft.Extensions.Primitives.StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment a, valuetype Microsoft.Extensions.Primitives.StringSegment b, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As StringSegment, b As StringSegment, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(Microsoft::Extensions::Primitives::StringSegment a, Microsoft::Extensions::Primitives::StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Equals : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment * StringComparison -&gt; bool" Usage="Microsoft.Extensions.Primitives.StringSegment.Equals (a, b, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="b" Type="Microsoft.Extensions.Primitives.StringSegment" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="56530-152">比較対象となる最初の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-152">The first <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare.</span></span></param>
        <param name="b"><span data-ttu-id="56530-153">比較対象となる 2 番目の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-153">The second <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="56530-154">比較の規則を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="56530-154">One of the enumeration values that specifies the rules for the comparison.</span></span></param>
        <summary><span data-ttu-id="56530-155">指定した 2 つの <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> オブジェクトの値が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="56530-155">Determines whether two specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> objects have the same value.</span></span> <span data-ttu-id="56530-156">比較に使用するカルチャ、大文字と小文字の区別、および、並べ替え規則をパラメーターで指定します。</span><span class="sxs-lookup"><span data-stu-id="56530-156">A parameter specifies the culture, case, and sort rules used in the comparison.</span></span></summary>
        <returns><code>true</code> <span data-ttu-id="56530-157">(オブジェクトが等しい場合)。それ以外の場合は</span><span class="sxs-lookup"><span data-stu-id="56530-157">if the objects are equal; otherwise,</span></span> <code>false</code><span data-ttu-id="56530-158">.</span><span class="sxs-lookup"><span data-stu-id="56530-158">.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringSegment.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks><span data-ttu-id="56530-159">この GetHashCode は、すべての呼び出しに割り当てられるため、コストが高くなります。</span><span class="sxs-lookup"><span data-stu-id="56530-159">This GetHashCode is expensive since it allocates on every call.</span></span>
<span data-ttu-id="56530-160">ただし、これは、文字列の動作 (ハッシュコードのランダム化など) を保持するために必要です。GetHashCode にはがあります。</span><span class="sxs-lookup"><span data-stu-id="56530-160">However this is required to ensure we retain any behavior (such as hash code randomization) that string.GetHashCode has.</span></span></remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="Microsoft.Extensions.Primitives.StringSegment.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56530-161">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> に有効な値が含まれているかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-161">Gets whether this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> contains a valid value.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (c As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char c);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char -&gt; int" Usage="stringSegment.IndexOf c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="56530-162">シークする Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="56530-162">The Unicode character to seek.</span></span></param>
        <summary><span data-ttu-id="56530-163">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内で最初に見つかった文字 <paramref name="c" /> の 0 から始まるインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-163">Gets the zero-based index of the first occurrence of the character <paramref name="c" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></summary>
        <returns><span data-ttu-id="56530-164">その文字が見つかった場合は、<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の先頭からの、<paramref name="c" /> の 0 から始まるインデックス位置。見つからなかった場合は、-1。</span><span class="sxs-lookup"><span data-stu-id="56530-164">The zero-based index position of <paramref name="c" /> from the beginning of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> if that character is found, or -1 if it is not.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char c, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char c, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (c As Char, start As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char c, int start);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int -&gt; int" Usage="stringSegment.IndexOf (c, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="56530-165">シークする Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="56530-165">The Unicode character to seek.</span></span></param>
        <param name="start"><span data-ttu-id="56530-166">検索を開始する位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="56530-166">The zero-based index position at which the search starts.</span></span></param>
        <summary><span data-ttu-id="56530-167">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内で最初に見つかった文字 <paramref name="c" /> の 0 から始まるインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-167">Gets the zero-based index of the first occurrence of the character <paramref name="c" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span>
<span data-ttu-id="56530-168">検索は <paramref name="start" /> から開始されます。</span><span class="sxs-lookup"><span data-stu-id="56530-168">The search starts at <paramref name="start" />.</span></span></summary>
        <returns><span data-ttu-id="56530-169">その文字が見つかった場合は、<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の先頭からの、<paramref name="c" /> の 0 から始まるインデックス位置。見つからなかった場合は、-1。</span><span class="sxs-lookup"><span data-stu-id="56530-169">The zero-based index position of <paramref name="c" /> from the beginning of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> if that character is found, or -1 if it is not.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-170"><paramref name="start" /> が <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> 以上であるか、0 未満です。</span><span class="sxs-lookup"><span data-stu-id="56530-170"><paramref name="start" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char c, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char c, int32 start, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (c As Char, start As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char c, int start, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int * int -&gt; int" Usage="stringSegment.IndexOf (c, start, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="56530-171">シークする Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="56530-171">The Unicode character to seek.</span></span></param>
        <param name="start"><span data-ttu-id="56530-172">検索を開始する位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="56530-172">The zero-based index position at which the search starts.</span></span></param>
        <param name="count"><span data-ttu-id="56530-173">検査する文字数。</span><span class="sxs-lookup"><span data-stu-id="56530-173">The number of characters to examine.</span></span></param>
        <summary><span data-ttu-id="56530-174">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内で最初に見つかった文字 <paramref name="c" /> の 0 から始まるインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-174">Gets the zero-based index of the first occurrence of the character <paramref name="c" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span>
<span data-ttu-id="56530-175">検索は <paramref name="start" /> から開始され、指定した数の <paramref name="count" /> 文字位置が検査されます。</span><span class="sxs-lookup"><span data-stu-id="56530-175">The search starts at <paramref name="start" /> and examines a specified number of <paramref name="count" /> character positions.</span></span></summary>
        <returns><span data-ttu-id="56530-176">その文字が見つかった場合は、<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の先頭からの、<paramref name="c" /> の 0 から始まるインデックス位置。見つからなかった場合は、-1。</span><span class="sxs-lookup"><span data-stu-id="56530-176">The zero-based index position of <paramref name="c" /> from the beginning of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> if that character is found, or -1 if it is not.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-177"><paramref name="start" /> または <paramref name="count" /> が 0 未満であるか、<paramref name="start" /> + <paramref name="count" /> が <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="56530-177"><paramref name="start" /> or <paramref name="count" /> is less than zero, or <paramref name="start" /> + <paramref name="count" /> is greater than <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] -&gt; int" Usage="stringSegment.IndexOfAny anyOf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="anyOf"><span data-ttu-id="56530-178">シークする 1 つ以上の文字を格納している、Unicode 文字の配列。</span><span class="sxs-lookup"><span data-stu-id="56530-178">A Unicode character array containing one or more characters to seek.</span></span></param>
        <summary><span data-ttu-id="56530-179">Unicode 文字の指定した配列内にある文字がこのインスタンスで最初に見つかった位置の 0 から始まるインデックスをレポートします。</span><span class="sxs-lookup"><span data-stu-id="56530-179">Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="56530-180"><paramref name="anyOf" /> 内の文字がこのインスタンスで最初に見つかった場所の 0 から始まるインデックスでの位置。<paramref name="anyOf" /> 内に文字が見つからなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="56530-180">The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int -&gt; int" Usage="stringSegment.IndexOfAny (anyOf, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="anyOf"><span data-ttu-id="56530-181">シークする 1 つ以上の文字を格納している、Unicode 文字の配列。</span><span class="sxs-lookup"><span data-stu-id="56530-181">A Unicode character array containing one or more characters to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="56530-182">検索が開始される位置。</span><span class="sxs-lookup"><span data-stu-id="56530-182">The search starting position.</span></span></param>
        <summary><span data-ttu-id="56530-183">Unicode 文字の指定した配列内にある文字がこのインスタンスで最初に見つかった位置の 0 から始まるインデックスをレポートします。</span><span class="sxs-lookup"><span data-stu-id="56530-183">Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span></span> <span data-ttu-id="56530-184">検索は、指定した文字位置から開始されます。</span><span class="sxs-lookup"><span data-stu-id="56530-184">The search starts at a specified character position.</span></span></summary>
        <returns><span data-ttu-id="56530-185"><paramref name="anyOf" /> 内の文字がこのインスタンスで最初に見つかった場所の 0 から始まるインデックスでの位置。<paramref name="anyOf" /> 内に文字が見つからなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="56530-185">The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-186"><paramref name="startIndex" /> が <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> 以上であるか、0 未満です。</span><span class="sxs-lookup"><span data-stu-id="56530-186"><paramref name="startIndex" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int * int -&gt; int" Usage="stringSegment.IndexOfAny (anyOf, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="anyOf"><span data-ttu-id="56530-187">シークする 1 つ以上の文字を格納している、Unicode 文字の配列。</span><span class="sxs-lookup"><span data-stu-id="56530-187">A Unicode character array containing one or more characters to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="56530-188">検索が開始される位置。</span><span class="sxs-lookup"><span data-stu-id="56530-188">The search starting position.</span></span></param>
        <param name="count"><span data-ttu-id="56530-189">検査する文字位置の数。</span><span class="sxs-lookup"><span data-stu-id="56530-189">The number of character positions to examine.</span></span></param>
        <summary><span data-ttu-id="56530-190">Unicode 文字の指定した配列内にある文字がこのインスタンスで最初に見つかった位置の 0 から始まるインデックスをレポートします。</span><span class="sxs-lookup"><span data-stu-id="56530-190">Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span></span> <span data-ttu-id="56530-191">検索は指定した文字位置から開始され、指定した数の文字位置が検査されます。</span><span class="sxs-lookup"><span data-stu-id="56530-191">The search starts at a specified character position and examines a specified number of character positions.</span></span></summary>
        <returns><span data-ttu-id="56530-192"><paramref name="anyOf" /> 内の文字がこのインスタンスで最初に見つかった場所の 0 から始まるインデックスでの位置。<paramref name="anyOf" /> 内に文字が見つからなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="56530-192">The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56530-193"><paramref name="anyOf" /> が</span><span class="sxs-lookup"><span data-stu-id="56530-193"><paramref name="anyOf" /> is</span></span> <code>null</code><span data-ttu-id="56530-194">.</span><span class="sxs-lookup"><span data-stu-id="56530-194">.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-195"><paramref name="startIndex" /> または <paramref name="count" /> が 0 未満であるか、<paramref name="startIndex" /> + <paramref name="count" /> が <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />を超えています。</span><span class="sxs-lookup"><span data-stu-id="56530-195"><paramref name="startIndex" /> or <paramref name="count" /> is less than zero, or <paramref name="startIndex" /> + <paramref name="count" /> is greater than <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullOrEmpty">
      <MemberSignature Language="C#" Value="public static bool IsNullOrEmpty (Microsoft.Extensions.Primitives.StringSegment value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNullOrEmpty(valuetype Microsoft.Extensions.Primitives.StringSegment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IsNullOrEmpty(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNullOrEmpty (value As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNullOrEmpty(Microsoft::Extensions::Primitives::StringSegment value);" />
      <MemberSignature Language="F#" Value="static member IsNullOrEmpty : Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="Microsoft.Extensions.Primitives.StringSegment.IsNullOrEmpty value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="56530-196">テスト対象の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-196">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to test.</span></span></param>
        <summary><span data-ttu-id="56530-197">指定された <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> が null または空の文字列であることを示します。</span><span class="sxs-lookup"><span data-stu-id="56530-197">Indicates whether the specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> is null or an Empty string.</span></span></summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="Microsoft.Extensions.Primitives.StringSegment.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="56530-198"><see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> へのオフセット</span><span class="sxs-lookup"><span data-stu-id="56530-198">The offset into the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></span></span></param>
        <summary><span data-ttu-id="56530-199">現在の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内の指定された位置にある <see cref="T:System.Char" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-199">Gets the <see cref="T:System.Char" /> at a specified position in the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></summary>
        <value><span data-ttu-id="56530-200">指定した位置にある <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="56530-200">The <see cref="T:System.Char" /> at a specified position.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-201"><paramref name="index" /> が <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> 以上であるか、0 未満です。</span><span class="sxs-lookup"><span data-stu-id="56530-201"><paramref name="index" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.LastIndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char -&gt; int" Usage="stringSegment.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="56530-202">シークする Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="56530-202">The Unicode character to seek.</span></span></param>
        <summary><span data-ttu-id="56530-203">このインスタンス内で最後に出現する指定 Unicode 文字の 0 から始まるインデックス位置をレポートします。</span><span class="sxs-lookup"><span data-stu-id="56530-203">Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.</span></span></summary>
        <returns><span data-ttu-id="56530-204">その文字が見つかった場合は、値の 0 から始まるインデックスでの位置。見つからなかった場合は -1。</span><span class="sxs-lookup"><span data-stu-id="56530-204">The zero-based index position of value if that character is found, or -1 if it is not.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Microsoft.Extensions.Primitives.StringSegment.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56530-205">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-205">Gets the length of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="Microsoft.Extensions.Primitives.StringSegment.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56530-206">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> のバッファー内のオフセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-206">Gets the offset within the buffer for this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.Extensions.Primitives.StringSegment left, Microsoft.Extensions.Primitives.StringSegment right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.Extensions.Primitives.StringSegment left, valuetype Microsoft.Extensions.Primitives.StringSegment right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Equality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As StringSegment, right As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::Extensions::Primitives::StringSegment left, Microsoft::Extensions::Primitives::StringSegment right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="right" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="56530-207">比較対象となる最初の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。または</span><span class="sxs-lookup"><span data-stu-id="56530-207">The first <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare, or</span></span> <code>null</code><span data-ttu-id="56530-208">.</span><span class="sxs-lookup"><span data-stu-id="56530-208">.</span></span></param>
        <param name="right"><span data-ttu-id="56530-209">比較対象となる 2 番目の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。または</span><span class="sxs-lookup"><span data-stu-id="56530-209">The second <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare, or</span></span> <code>null</code><span data-ttu-id="56530-210">.</span><span class="sxs-lookup"><span data-stu-id="56530-210">.</span></span></param>
        <summary><span data-ttu-id="56530-211">指定された 2 つの <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の値が同じであるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="56530-211">Checks if two specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> have the same value.</span></span></summary>
        <returns><code>true</code> <span data-ttu-id="56530-212">(<paramref name="left" /> の値が <paramref name="right" /> の値と同じ場合)。それ以外の場合は</span><span class="sxs-lookup"><span data-stu-id="56530-212">if the value of <paramref name="left" /> is the same as the value of <paramref name="right" />; otherwise,</span></span> <code>false</code><span data-ttu-id="56530-213">.</span><span class="sxs-lookup"><span data-stu-id="56530-213">.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlyMemory&lt;char&gt; (Microsoft.Extensions.Primitives.StringSegment segment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlyMemory`1&lt;char&gt; op_Implicit(valuetype Microsoft.Extensions.Primitives.StringSegment segment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(Microsoft.Extensions.Primitives.StringSegment)~System.ReadOnlyMemory{System.Char}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (segment As StringSegment) As ReadOnlyMemory(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlyMemory&lt;char&gt;(Microsoft::Extensions::Primitives::StringSegment segment);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.Extensions.Primitives.StringSegment -&gt; ReadOnlyMemory&lt;char&gt;" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Implicit segment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segment" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="segment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlySpan&lt;char&gt; (Microsoft.Extensions.Primitives.StringSegment segment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlySpan`1&lt;char&gt; op_Implicit(valuetype Microsoft.Extensions.Primitives.StringSegment segment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(Microsoft.Extensions.Primitives.StringSegment)~System.ReadOnlySpan{System.Char}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (segment As StringSegment) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlySpan&lt;char&gt;(Microsoft::Extensions::Primitives::StringSegment segment);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.Extensions.Primitives.StringSegment -&gt; ReadOnlySpan&lt;char&gt;" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Implicit segment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segment" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="segment">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.Extensions.Primitives.StringSegment (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Microsoft.Extensions.Primitives.StringSegment op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(System.String)~Microsoft.Extensions.Primitives.StringSegment" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::Extensions::Primitives::StringSegment(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="56530-214"><see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> に変換する <see cref="T:System.String" /></span><span class="sxs-lookup"><span data-stu-id="56530-214">The <see cref="T:System.String" /> to convert to a <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></span></span></param>
        <summary><span data-ttu-id="56530-215">特定の <see cref="T:System.String" /> から新しい <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="56530-215">Creates a new <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> from the given <see cref="T:System.String" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.Extensions.Primitives.StringSegment left, Microsoft.Extensions.Primitives.StringSegment right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.Extensions.Primitives.StringSegment left, valuetype Microsoft.Extensions.Primitives.StringSegment right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Inequality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As StringSegment, right As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::Extensions::Primitives::StringSegment left, Microsoft::Extensions::Primitives::StringSegment right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="right" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="56530-216">比較対象となる最初の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。または</span><span class="sxs-lookup"><span data-stu-id="56530-216">The first <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare, or</span></span> <code>null</code><span data-ttu-id="56530-217">.</span><span class="sxs-lookup"><span data-stu-id="56530-217">.</span></span></param>
        <param name="right"><span data-ttu-id="56530-218">比較対象となる 2 番目の <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。または</span><span class="sxs-lookup"><span data-stu-id="56530-218">The second <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare, or</span></span> <code>null</code><span data-ttu-id="56530-219">.</span><span class="sxs-lookup"><span data-stu-id="56530-219">.</span></span></param>
        <summary><span data-ttu-id="56530-220">指定された 2 つの <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の値が異なるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="56530-220">Checks if two specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> have different values.</span></span></summary>
        <returns><code>true</code> <span data-ttu-id="56530-221">(<paramref name="left" /> の値が <paramref name="right" /> の値と異なる場合)。それ以外の場合は</span><span class="sxs-lookup"><span data-stu-id="56530-221">if the value of <paramref name="left" /> is different from the value of <paramref name="right" />; otherwise,</span></span> <code>false</code><span data-ttu-id="56530-222">.</span><span class="sxs-lookup"><span data-stu-id="56530-222">.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringTokenizer Split (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringTokenizer Split(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Split(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (chars As Char()) As StringTokenizer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringTokenizer Split(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] -&gt; Microsoft.Extensions.Primitives.StringTokenizer" Usage="stringSegment.Split chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringTokenizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="56530-223">この文字列から部分文字列を取り出すために区切り文字として使用する文字配列、区切り文字が含まれていない空の配列、または null。</span><span class="sxs-lookup"><span data-stu-id="56530-223">A character array that delimits the substrings in this string, an empty array that contains no delimiters, or null.</span></span></param>
        <summary><span data-ttu-id="56530-224">配列内の文字に基づいて文字列を <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> に分割します。</span><span class="sxs-lookup"><span data-stu-id="56530-224">Splits a string into <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />s that are based on the characters in an array.</span></span></summary>
        <returns><span data-ttu-id="56530-225">このインスタンスを <paramref name="chars" /> の 1 つ以上の文字で区切った <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> を要素に格納する <see cref="T:Microsoft.Extensions.Primitives.StringTokenizer" />。</span><span class="sxs-lookup"><span data-stu-id="56530-225">An <see cref="T:Microsoft.Extensions.Primitives.StringTokenizer" /> whose elements contain the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />s from this instance that are delimited by one or more characters in <paramref name="chars" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string text, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string text, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.StartsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (text As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ text, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * StringComparison -&gt; bool" Usage="stringSegment.StartsWith (text, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="56530-226">比較対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="56530-226">The <see cref="T:System.String" />to compare.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="56530-227">比較で使用する規則を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="56530-227">One of the enumeration values that specifies the rules to use in the comparison.</span></span></param>
        <summary><span data-ttu-id="56530-228">指定した <paramref name="comparisonType" /> を使用して比較した場合に、この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の先頭が指定した <see cref="T:System.String" /> と一致するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="56530-228">Checks if the beginning of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> matches the specified <see cref="T:System.String" /> when compared using the specified <paramref name="comparisonType" />.</span></span></summary>
        <returns><code>true</code> <span data-ttu-id="56530-229">(<paramref name="text" /> がこの <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> の先頭と一致する場合)。それ以外の場合は</span><span class="sxs-lookup"><span data-stu-id="56530-229">if <paramref name="text" /> matches the beginning of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; otherwise,</span></span> <code>false</code><span data-ttu-id="56530-230">.</span><span class="sxs-lookup"><span data-stu-id="56530-230">.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56530-231"><paramref name="text" /> が</span><span class="sxs-lookup"><span data-stu-id="56530-231"><paramref name="text" /> is</span></span> <code>null</code><span data-ttu-id="56530-232">.</span><span class="sxs-lookup"><span data-stu-id="56530-232">.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Subsegment">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Subsegment (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment Subsegment(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Subsegment(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subsegment (offset As Integer) As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment Subsegment(int offset);" />
      <MemberSignature Language="F#" Value="member this.Subsegment : int -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.Subsegment offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="56530-233">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内の部分文字列の 0 から始まる開始文字位置。</span><span class="sxs-lookup"><span data-stu-id="56530-233">The zero-based starting character position of a substring in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></param>
        <summary><span data-ttu-id="56530-234">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> から、部分文字列を表す <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-234">Retrieves a <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that represents a substring from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span>
<span data-ttu-id="56530-235"><see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> は、<paramref name="offset" /> によって指定された位置から始まります。</span><span class="sxs-lookup"><span data-stu-id="56530-235">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> starts at the position specified by <paramref name="offset" />.</span></span></summary>
        <returns><span data-ttu-id="56530-236">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内の <paramref name="offset" /> から始まり、その残りを長さに持つ <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-236">A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that begins at <paramref name="offset" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> whose length is the remainder.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-237"><paramref name="offset" /> が <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> 以上であるか、0 未満です。</span><span class="sxs-lookup"><span data-stu-id="56530-237"><paramref name="offset" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Subsegment">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Subsegment (int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment Subsegment(int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Subsegment(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subsegment (offset As Integer, length As Integer) As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment Subsegment(int offset, int length);" />
      <MemberSignature Language="F#" Value="member this.Subsegment : int * int -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.Subsegment (offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="56530-238">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内の部分文字列の 0 から始まる開始文字位置。</span><span class="sxs-lookup"><span data-stu-id="56530-238">The zero-based starting character position of a substring in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></param>
        <param name="length"><span data-ttu-id="56530-239">部分文字列の文字数。</span><span class="sxs-lookup"><span data-stu-id="56530-239">The number of characters in the substring.</span></span></param>
        <summary><span data-ttu-id="56530-240">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> から、部分文字列を表す <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-240">Retrieves a <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that represents a substring from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span>
<span data-ttu-id="56530-241"><see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> は <paramref name="offset" /> によって指定された位置から始まり、指定された <paramref name="length" /> を持ちます。</span><span class="sxs-lookup"><span data-stu-id="56530-241">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> starts at the position specified by <paramref name="offset" /> and has the specified <paramref name="length" />.</span></span></summary>
        <returns><span data-ttu-id="56530-242">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内の <paramref name="offset" /> から始まる、長さ <paramref name="length" /> の部分文字列と等価な <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></span><span class="sxs-lookup"><span data-stu-id="56530-242">A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that is equivalent to the substring of length <paramref name="length" /> that begins at <paramref name="offset" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-243"><paramref name="offset" /> または <paramref name="length" /> が 0 未満であるか、<paramref name="offset" /> + <paramref name="length" /> が <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="56530-243"><paramref name="offset" /> or <paramref name="length" /> is less than zero, or <paramref name="offset" /> + <paramref name="length" /> is greater than <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Substring(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (offset As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int offset);" />
      <MemberSignature Language="F#" Value="member this.Substring : int -&gt; string" Usage="stringSegment.Substring offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="56530-244">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内の部分文字列の 0 から始まる開始文字位置。</span><span class="sxs-lookup"><span data-stu-id="56530-244">The zero-based starting character position of a substring in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></param>
        <summary><span data-ttu-id="56530-245">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> から部分文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-245">Retrieves a substring from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span>
<span data-ttu-id="56530-246">部分文字列は、<paramref name="offset" /> によって指定された位置から始まり、その残りを長さに持ちます。</span><span class="sxs-lookup"><span data-stu-id="56530-246">The substring starts at the position specified by <paramref name="offset" /> and has the remaining length.</span></span></summary>
        <returns><span data-ttu-id="56530-247">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内の <paramref name="offset" /> から始まり、その残りの長さである部分文字列と等価な <see cref="T:System.String" /></span><span class="sxs-lookup"><span data-stu-id="56530-247">A <see cref="T:System.String" /> that is equivalent to the substring of remaining length that begins at <paramref name="offset" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-248"><paramref name="offset" /> が <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> 以上であるか、0 未満です。</span><span class="sxs-lookup"><span data-stu-id="56530-248"><paramref name="offset" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Substring(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int offset, int length);" />
      <MemberSignature Language="F#" Value="member this.Substring : int * int -&gt; string" Usage="stringSegment.Substring (offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="56530-249">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内の部分文字列の 0 から始まる開始文字位置。</span><span class="sxs-lookup"><span data-stu-id="56530-249">The zero-based starting character position of a substring in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></param>
        <param name="length"><span data-ttu-id="56530-250">部分文字列の文字数。</span><span class="sxs-lookup"><span data-stu-id="56530-250">The number of characters in the substring.</span></span></param>
        <summary><span data-ttu-id="56530-251">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> から部分文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-251">Retrieves a substring from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span>
<span data-ttu-id="56530-252">部分文字列は、<paramref name="offset" /> によって指定された位置から始まり、指定された <paramref name="length" /> を持ちます。</span><span class="sxs-lookup"><span data-stu-id="56530-252">The substring starts at the position specified by <paramref name="offset" /> and has the specified <paramref name="length" />.</span></span></summary>
        <returns><span data-ttu-id="56530-253">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 内の <paramref name="offset" /> から始まる、長さが <paramref name="length" /> である部分文字列と等価な <see cref="T:System.String" /></span><span class="sxs-lookup"><span data-stu-id="56530-253">A <see cref="T:System.String" /> that is equivalent to the substring of length <paramref name="length" /> that begins at <paramref name="offset" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56530-254"><paramref name="offset" /> または <paramref name="length" /> が 0 未満であるか、<paramref name="offset" /> + <paramref name="length" /> が <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="56530-254"><paramref name="offset" /> or <paramref name="length" /> is less than zero, or <paramref name="offset" /> + <paramref name="length" /> is greater than <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringSegment.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56530-255">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> が表す <see cref="T:System.String" />を返します。または</span><span class="sxs-lookup"><span data-stu-id="56530-255">Returns the <see cref="T:System.String" /> represented by this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> or</span></span> <code>String.Empty</code> <span data-ttu-id="56530-256">(<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> に値が含まれていない場合)。</span><span class="sxs-lookup"><span data-stu-id="56530-256">if the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> does not contain a value.</span></span></summary>
        <returns><span data-ttu-id="56530-257">この <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> が表す <see cref="T:System.String" />、または</span><span class="sxs-lookup"><span data-stu-id="56530-257">The <see cref="T:System.String" /> represented by this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> or</span></span> <code>String.Empty</code> <span data-ttu-id="56530-258">(<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> に値が含まれていない場合)。</span><span class="sxs-lookup"><span data-stu-id="56530-258">if the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> does not contain a value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Trim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment Trim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Trim" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim () As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment Trim();" />
      <MemberSignature Language="F#" Value="member this.Trim : unit -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.Trim " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56530-259">先頭と末尾の空白文字をすべて削除します。</span><span class="sxs-lookup"><span data-stu-id="56530-259">Removes all leading and trailing whitespaces.</span></span></summary>
        <returns><span data-ttu-id="56530-260">トリミングされた <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-260">The trimmed <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment TrimEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment TrimEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.TrimEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd () As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment TrimEnd();" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : unit -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.TrimEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56530-261">末尾の空白文字をすべて削除します。</span><span class="sxs-lookup"><span data-stu-id="56530-261">Removes all trailing whitespaces.</span></span></summary>
        <returns><span data-ttu-id="56530-262">トリミングされた <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-262">The trimmed <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment TrimStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment TrimStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.TrimStart" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart () As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment TrimStart();" />
      <MemberSignature Language="F#" Value="member this.TrimStart : unit -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.TrimStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56530-263">先頭の空白文字をすべて削除します。</span><span class="sxs-lookup"><span data-stu-id="56530-263">Removes all leading whitespaces.</span></span></summary>
        <returns><span data-ttu-id="56530-264">トリミングされた <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</span><span class="sxs-lookup"><span data-stu-id="56530-264">The trimmed <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="Microsoft.Extensions.Primitives.StringSegment.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56530-265">このセグメントの値を <see cref="T:System.String" /> として取得します。</span><span class="sxs-lookup"><span data-stu-id="56530-265">Gets the value of this segment as a <see cref="T:System.String" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
