<Type Name="StringSegmentComparer" FullName="Microsoft.Extensions.Primitives.StringSegmentComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="939e1c4b3043a7403b9edc99eadb509d61782d53" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83528527" /></Metadata><TypeSignature Language="C#" Value="public class StringSegmentComparer : System.Collections.Generic.IEqualityComparer&lt;Microsoft.Extensions.Primitives.StringSegment&gt;" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringSegmentComparer extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;valuetype Microsoft.Extensions.Primitives.StringSegment&gt;" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Primitives.StringSegmentComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class StringSegmentComparer&#xA;Implements IEqualityComparer(Of StringSegment)" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringSegmentComparer : System::Collections::Generic::IEqualityComparer&lt;Microsoft::Extensions::Primitives::StringSegment&gt;" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1" />
  <TypeSignature Language="F#" Value="type StringSegmentComparer = class&#xA;    interface IEqualityComparer&lt;StringSegment&gt;" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1" />
  <TypeSignature Language="C#" Value="public class StringSegmentComparer : System.Collections.Generic.IComparer&lt;Microsoft.Extensions.Primitives.StringSegment&gt;, System.Collections.Generic.IEqualityComparer&lt;Microsoft.Extensions.Primitives.StringSegment&gt;" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringSegmentComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;valuetype Microsoft.Extensions.Primitives.StringSegment&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;valuetype Microsoft.Extensions.Primitives.StringSegment&gt;" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="VB.NET" Value="Public Class StringSegmentComparer&#xA;Implements IComparer(Of StringSegment), IEqualityComparer(Of StringSegment)" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringSegmentComparer : System::Collections::Generic::IComparer&lt;Microsoft::Extensions::Primitives::StringSegment&gt;, System::Collections::Generic::IEqualityComparer&lt;Microsoft::Extensions::Primitives::StringSegment&gt;" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="F#" Value="type StringSegmentComparer = class&#xA;    interface IComparer&lt;StringSegment&gt;&#xA;    interface IEqualityComparer&lt;StringSegment&gt;" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;Microsoft.Extensions.Primitives.StringSegment&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;Microsoft.Extensions.Primitives.StringSegment&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (Microsoft.Extensions.Primitives.StringSegment x, Microsoft.Extensions.Primitives.StringSegment y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(valuetype Microsoft.Extensions.Primitives.StringSegment x, valuetype Microsoft.Extensions.Primitives.StringSegment y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegmentComparer.Compare(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As StringSegment, y As StringSegment) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(Microsoft::Extensions::Primitives::StringSegment x, Microsoft::Extensions::Primitives::StringSegment y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment -&gt; int&#xA;override this.Compare : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment -&gt; int" Usage="stringSegmentComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="y" Type="Microsoft.Extensions.Primitives.StringSegment" Index="1" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="x">比較する最初のオブジェクト。</param>
        <param name="y">比較する 2 番目のオブジェクト。</param>
        <summary>2 つのオブジェクトを比較して、一方が他方より小さいか、同じか、または大きいかを示す値を返します。</summary>
        <returns><paramref name="x" /> と <paramref name="y" /> の相対値を示す符号付き整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

このメソッドによって返される値には、次の意味があります。

| 値             | 意味                  |
|-------------------|--------------------------|
| ゼロより小さい    | `x` は `y` より小さい値です。    |
| ゼロ              | `x` と `y` は等しい。          |
| ゼロより大きい | `x` が `y` より大きくなっています。 |

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Extensions.Primitives.StringSegment x, Microsoft.Extensions.Primitives.StringSegment y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment x, valuetype Microsoft.Extensions.Primitives.StringSegment y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegmentComparer.Equals(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As StringSegment, y As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::Extensions::Primitives::StringSegment x, Microsoft::Extensions::Primitives::StringSegment y);" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="stringSegmentComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="y" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="x">比較対象の <paramref name="T" /> 型の第 1 オブジェクト。</param>
        <param name="y">比較対象の <paramref name="T" /> 型の第 2 オブジェクト。</param>
        <summary>指定したオブジェクトが等しいかどうかを判断します。</summary>
        <returns>指定したオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (Microsoft.Extensions.Primitives.StringSegment obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(valuetype Microsoft.Extensions.Primitives.StringSegment obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegmentComparer.GetHashCode(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As StringSegment) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(Microsoft::Extensions::Primitives::StringSegment obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : Microsoft.Extensions.Primitives.StringSegment -&gt; int" Usage="stringSegmentComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="obj">ハッシュ コードが返される対象の <see cref="T:System.Object" />。</param>
        <summary>指定したオブジェクトのハッシュ コードを返します。</summary>
        <returns>指定したオブジェクトのハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Primitives.StringSegmentComparer Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Extensions.Primitives.StringSegmentComparer Ordinal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegmentComparer.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Ordinal As StringSegmentComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Extensions::Primitives::StringSegmentComparer ^ Ordinal { Microsoft::Extensions::Primitives::StringSegmentComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : Microsoft.Extensions.Primitives.StringSegmentComparer" Usage="Microsoft.Extensions.Primitives.StringSegmentComparer.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegmentComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Primitives.StringSegmentComparer OrdinalIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Extensions.Primitives.StringSegmentComparer OrdinalIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegmentComparer.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OrdinalIgnoreCase As StringSegmentComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Extensions::Primitives::StringSegmentComparer ^ OrdinalIgnoreCase { Microsoft::Extensions::Primitives::StringSegmentComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrdinalIgnoreCase : Microsoft.Extensions.Primitives.StringSegmentComparer" Usage="Microsoft.Extensions.Primitives.StringSegmentComparer.OrdinalIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegmentComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
