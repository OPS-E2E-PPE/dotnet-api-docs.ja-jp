<Type Name="WindowsRuntimeStorageExtensions" FullName="System.IO.WindowsRuntimeStorageExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01b28c46c9d6a250ef56456032d2e9e0b7397cc9" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78703527" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeStorageExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeStorageExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeStorageExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows ストア アプリ開発時の Windows ランタイム内の <see cref="T:Windows.Storage.IStorageFile" /> インターフェイスおよび <see cref="T:Windows.Storage.IStorageFolder" /> インターフェイス用の拡張メソッドを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

これらの拡張メソッドは、Windows ストアアプリを開発する場合にのみ使用できます。 これらのメソッドは、Windows ストアアプリで読み取りまたは書き込みを行うためにファイルを開く便利な方法を提供します。 `WindowsRuntimeStorageExtensions` クラスのインスタンスは作成しません。代わりに、これらのメソッドを <xref:Windows.Storage.IStorageFile> および <xref:Windows.Storage.IStorageFolder> インターフェイスのインスタンスから使用します。

`WindowsRuntimeStorageExtensions` クラスには、読み取りまたは書き込み用に <xref:Windows.Storage.IStorageFile> を拡張する2つのメソッドが含まれています。

  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)>

WindowsRuntimeStorageExtensions クラスには、読み取りと書き込みのために <xref:Windows.Storage.IStorageFolder> を拡張する2つのメソッドが含まれています。
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)>

## Examples

次の例は、アプリケーションデータ内のファイルを Windows ストアアプリの <xref:System.IO.Stream> として開き、<xref:System.IO.StreamWriter> クラスのインスタンスを使用してそのファイルに書き込む方法を示しています。 次に、<xref:System.IO.StreamReader> クラスのインスタンスを使用して、ファイルの内容を読み取ります。

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

次の例は、前の例に関連付けられている XAML コードを示しています。 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateSafeFileHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>拡張される IStorage インスタンスのセーフ ファイル ハンドルへの参照を作成して返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Windows 10 周年記念の更新により、新しいインターフェイスが <xref:Windows.Storage.IStorageFile> <xref:Windows.Storage.IStorageFolder> に追加され、標準の Win32 ファイルハンドルを作成できるようになりました。これは `IStorageFolderHandleAccess` と `IStorageItemHandleAccess`です。 拡張メソッドの `CreateSafeFileHandle` グループは、これらのインターフェイスの `Create` メソッドを利用します。

API の主な利点は、仲介型 `SafeFileHandle`にアクセスすることです。 これは、 [AppContainer](https://docs.microsoft.com/windows/win32/secauthz/appcontainer-isolation)でを実行しているときに <xref:Windows.Storage.IStorageItem> または <xref:Windows.Storage.IStorageFolder> の周囲に <xref:System.IO.FileStream> を作成する場合に非常に重要です。 AppContainer で実行する場合、アプリケーションにはファイルアクセス権が非常に制限されています。 画像やドキュメントフォルダーなどでは、アプリケーションプロセス自体がほとんどのファイルに対する権限を持っていないため、ネイティブファイルハンドルを `RuntimeBroker.exe`経由でプロキシする必要があります。 この API は、プロキシ処理されたハンドルを取得します。 ユーザーデータフォルダーにアクセスする場合、またはファイルピッカーを使用する場合は、この API を常に使用して <xref:System.IO.FileStream>を作成する必要があります。 多くの場合、パスを使用すると <xref:System.AccessViolationException> がスローされます。

          ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode) As SafeFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Win32::SafeHandles::SafeFileHandle ^ CreateSafeFileHandle(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">現在のストレージ フォルダー インスタンス。</param>
        <param name="relativePath">ハンドルを取得する対象のファイルの名前。</param>
        <param name="mode">オペレーティング システムでファイルを開く必要があるモード。</param>
        <summary>現在のストレージ フォルダー インスタンス内にあるファイルのセーフ ファイル ハンドルを作成します。</summary>
        <returns>操作が成功した場合は、セーフ ファイル ハンドル インスタンス。<paramref name="rootDirectory" /> の IStorageFolderHandleAccess への変換で <see langword="null" /> が返された場合は、<see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

このメソッドを呼び出すと、指定したモードが <xref:System.IO.FileMode.Append?displayProperty=nameWithType>場合、ファイルは <xref:System.IO.FileAccess.Read?displayProperty=nameWithType> アクセス許可を使用して開かれます。 その他のモードでは、<xref:System.IO.FileAccess.ReadWrite?displayProperty=nameWithType> アクセス許可を使用してファイルが開きます。

さらに、このメソッドは、<xref:System.IO.FileShare.Read?displayProperty=nameWithType> ストリーム共有アクセスと <xref:System.IO.FileOptions.None?displayProperty=nameWithType> 高度なファイル作成オプションを使用してファイルを開きます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" /> が <see langword="null" />です。

- または -

<paramref name="relativePath" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFile windowsRuntimeFile, System.IO.FileAccess access = System.IO.FileAccess.ReadWrite, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFile windowsRuntimeFile, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFile,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (windowsRuntimeFile As IStorageFile, Optional access As FileAccess = System.IO.FileAccess.ReadWrite, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFile * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (windowsRuntimeFile, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile">ストレージ ファイル インスタンス。</param>
        <param name="access">ファイルを開くときに使用する必要があるアクセスの種類。 既定値は <see cref="F:System.IO.FileAccess.ReadWrite" /> です。</param>
        <param name="share">同じファイルに対して他の <see cref="T:System.IO.FileStream" /> オブジェクトから可能なストリーム共有アクセスの種類。 既定値は <see cref="F:System.IO.FileShare.Read" /> です。</param>
        <param name="options"><see cref="T:System.IO.FileStream" /> オブジェクトを作成するための詳細オプション。 既定値は <see cref="F:System.IO.FileOptions.None" /> です。</param>
        <summary>現在のストレージ ファイル インスタンスのセーフ ファイル ハンドルを作成します。</summary>
        <returns>操作が成功した場合は、セーフ ファイル ハンドル インスタンス。<paramref name="windowsRuntimeFile" /> の IStorageItemHandleAccess への変換で <see langword="null" /> が返された場合は、<see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeFile" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode, access As FileAccess, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="4" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">現在のストレージ フォルダー インスタンス。</param>
        <param name="relativePath">ハンドルを取得する対象のファイルの名前。</param>
        <param name="mode">オペレーティング システムでファイルを開く必要があるモード。</param>
        <param name="access">ファイルを開くときに使用する必要があるアクセスの種類。</param>
        <param name="share">同じファイルに対して他の <see cref="T:System.IO.FileStream" /> オブジェクトから可能なストリーム共有アクセスの種類。 既定値は <see cref="F:System.IO.FileShare.Read" /> です。</param>
        <param name="options"><see cref="T:System.IO.FileStream" /> オブジェクトを作成するための詳細オプション。 既定値は <see cref="F:System.IO.FileOptions.None" /> です。</param>
        <summary>現在のストレージ フォルダー インスタンス内にあるファイルのセーフ ファイル ハンドルを作成します。</summary>
        <returns>操作が成功した場合は、セーフ ファイル ハンドル インスタンス。<paramref name="rootDirectory" /> の IStorageFolderHandleAccess への変換で <see langword="null" /> が返された場合は、<see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" /> が <see langword="null" />です。

- または -

<paramref name="relativePath" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile">読み取り元の Windows ランタイム <see cref="T:Windows.Storage.IStorageFile" /> オブジェクト。</param>
        <summary>指定したファイルから読み取るストリームを取得します。</summary>
        <returns>非同期の読み取り操作を表すタスク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> Visual Basic とC#では、このメソッドを <xref:Windows.Storage.IStorageFile>型のオブジェクトのインスタンスメソッドとして呼び出すことができます。 インスタンス メソッド構文を使用してこのメソッドを呼び出す場合は、最初のパラメーターを省略します。 詳細については、「[拡張メソッド (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) 」または「[拡張メソッド (C#プログラミングガイド)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)」を参照してください。

## Examples

次の例では、Windows ストアアプリでファイルを <xref:System.IO.Stream> として開き、<xref:System.IO.StreamReader> クラスのインスタンスを使用してその内容を読み取る方法を示します。

[!code-csharp[windowsruntimestorageextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestorageextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage.xaml.vb#2)]

次の例は、前の例に関連付けられている XAML コードを示しています。 

[!code-xaml[windowsruntimestorageextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeFile" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.IO.IOException">ファイルを開くことができなかったか、ストリームとして取得できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (rootDirectory As IStorageFolder, relativePath As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFolder * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync (rootDirectory, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">読み取り元のファイルが含まれる Windows ランタイム <see cref="T:Windows.Storage.IStorageFile" /> オブジェクト。</param>
        <param name="relativePath">ルート フォルダーを基準とした、読み取りファイルのパス。</param>
        <summary>指定された親フォルダーのファイルから読み取るストリームを取得します。</summary>
        <returns>非同期の読み取り操作を表すタスク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> Visual Basic とC#では、IStorageFolder 型のオブジェクトのインスタンスメソッドとしてこのメソッドを呼び出すことができます。 インスタンス メソッド構文を使用してこのメソッドを呼び出す場合は、最初のパラメーターを省略します。 詳細については、「[拡張メソッド (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) 」または「[拡張メソッド (C#プログラミングガイド)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)」を参照してください。

## Examples

次の例では、Windows ストアアプリでファイルを <xref:System.IO.Stream> として開き、<xref:System.IO.StreamReader> クラスのインスタンスを使用してその内容を読み取る方法を示します。

[!code-csharp[windowsruntimestorageextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestorageextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage2.xaml.vb#4)]

次の例は、前の例に関連付けられている XAML コードを示しています。 

[!code-xaml[windowsruntimestorageextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" /> または <paramref name="relativePath" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relativePath" /> が空であるか、空白文字だけで構成されています。</exception>
        <exception cref="T:System.IO.IOException">ファイルを開くことができなかったか、ストリームとして取得できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForWriteAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile">書き込み先の Windows ランタイム <see cref="T:Windows.Storage.IStorageFile" /> オブジェクト。</param>
        <summary>指定したファイルへ書き込むストリームを取得します。</summary>
        <returns>非同期の書き込み操作を表すタスク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> Visual Basic とC#では、このメソッドを <xref:Windows.Storage.IStorageFile>型のオブジェクトのインスタンスメソッドとして呼び出すことができます。 インスタンス メソッド構文を使用してこのメソッドを呼び出す場合は、最初のパラメーターを省略します。 詳細については、「[拡張メソッド (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) 」または「[拡張メソッド (C#プログラミングガイド)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)」を参照してください。

## Examples

次の例は、Windows ストアアプリでファイルを <xref:System.IO.Stream> として開き、<xref:System.IO.StreamReader> クラスのインスタンスを使用してファイルに書き込む方法を示しています。

[!code-csharp[windowsruntimestorageextensions#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml.cs#6)]
[!code-vb[windowsruntimestorageextensions#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage3.xaml.vb#6)]

次の例は、前の例に関連付けられている XAML コードを示しています。 

[!code-xaml[windowsruntimestorageextensions#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml#5)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeFile" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.IO.IOException">ファイルを開くことができなかったか、ストリームとして取得できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, Windows.Storage.CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype Windows.Storage.CreationCollisionOption creationCollisionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForWriteAsync (rootDirectory As IStorageFolder, relativePath As String, creationCollisionOption As CreationCollisionOption) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, Windows::Storage::CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFolder * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync (rootDirectory, relativePath, creationCollisionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
        <Parameter Name="creationCollisionOption" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">書き込み先のファイルが含まれる Windows ランタイム <see cref="T:Windows.Storage.IStorageFile" /> オブジェクト。</param>
        <param name="relativePath">ルート フォルダーを基準とした、書き込み先のファイルのパス。</param>
        <param name="creationCollisionOption">作成するファイルの名前が既存のファイルの名前と同じになるときに使用する動作を指定する Windows ランタイム <see cref="T:Windows.Storage.CreationCollisionOption" /> 列挙値。</param>
        <summary>指定された親フォルダーのファイルへ書き込むストリームを取得します。</summary>
        <returns>非同期の書き込み操作を表すタスク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> Visual Basic とC#では、このメソッドを <xref:Windows.Storage.IStorageFolder>型のオブジェクトのインスタンスメソッドとして呼び出すことができます。 インスタンス メソッド構文を使用してこのメソッドを呼び出す場合は、最初のパラメーターを省略します。 詳細については、「[拡張メソッド (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) 」または「[拡張メソッド (C#プログラミングガイド)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)」を参照してください。

## Examples

次の例は、Windows ストアアプリでファイルを <xref:System.IO.Stream> として開き、<xref:System.IO.StreamReader> クラスのインスタンスを使用してファイルに書き込む方法を示しています。

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

次の例は、前の例に関連付けられている XAML コードを示しています。 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" /> または <paramref name="relativePath" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relativePath" /> が空であるか、空白文字だけで構成されています。</exception>
        <exception cref="T:System.IO.IOException">ファイルを開くことができなかったか、ストリームとして取得できませんでした。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
