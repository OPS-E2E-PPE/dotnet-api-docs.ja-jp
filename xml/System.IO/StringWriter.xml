<Type Name="StringWriter" FullName="System.IO.StringWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a9e9d6f1ed90b9171cdcec9fe43bc1152e45c44" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75131920" /></Metadata><TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StringWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type StringWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8e5cd-101">文字列に情報を書き込む <see cref="T:System.IO.TextWriter" /> を実装します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string.</span></span> <span data-ttu-id="8e5cd-102">情報は、基になる <see cref="T:System.Text.StringBuilder" /> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-102">The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-103"><xref:System.IO.StringWriter> を使用すると、同期的または非同期的に文字列に書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-103"><xref:System.IO.StringWriter> enables you to write to a string synchronously or asynchronously.</span></span> <span data-ttu-id="8e5cd-104"><xref:System.IO.StringWriter.Write%28System.Char%29> または <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> メソッド、<xref:System.IO.StringWriter.Write%28System.String%29> または <xref:System.IO.StringWriter.WriteAsync%28System.String%29> メソッドを使用して一度に1つの文字列を使用して、一度に1つの文字を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-104">You can write a character at a time with the <xref:System.IO.StringWriter.Write%28System.Char%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method, a string at a time using the <xref:System.IO.StringWriter.Write%28System.String%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span> <span data-ttu-id="8e5cd-105">さらに、<xref:System.IO.StringWriter.WriteLineAsync%2A> メソッドの1つを使用して、文字、文字の配列、または文字列の後に行終端記号を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-105">In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <xref:System.IO.StringWriter.WriteLineAsync%2A> methods.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="8e5cd-106">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-106">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-107">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-107">To do this...</span></span>|<span data-ttu-id="8e5cd-108">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-108">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-109">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-109">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-110">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-111">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-111">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-112">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-112">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-113">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-113">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-114">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-114">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="8e5cd-115">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-115">Append text to a file.</span></span>|[<span data-ttu-id="8e5cd-116">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="8e5cd-116">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-117">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-117">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-118">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-118">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-119">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-119">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-120">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-120">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-121">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-121">Read from a binary file.</span></span>|[<span data-ttu-id="8e5cd-122">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="8e5cd-123">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-123">Write to a binary file.</span></span>|[<span data-ttu-id="8e5cd-124">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-124">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-125">次のコード例では、2つの行間文のグループから連続する段落を作成し、その後、段落を元のテキストに変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-125">The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#1)]
 [!code-csharp[System.IO.StringReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#1)]
 [!code-vb[System.IO.StringReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.IO.StringReader" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-126">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-126">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-127">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-127">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-128">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-128">How to: Write Text to a File</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e5cd-129"><see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-129">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e5cd-130"><see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-130">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-131">新しい <xref:System.Text.StringBuilder> オブジェクトが自動的に作成され、<xref:System.IO.StringWriter> クラスの新しいインスタンスに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-131">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span> <span data-ttu-id="8e5cd-132">このコンストラクターには書式コントロールが指定されていないため、新しいインスタンスは <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>で初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-132">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8e5cd-133">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-133">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-134">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-134">To do this...</span></span>|<span data-ttu-id="8e5cd-135">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-135">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-136">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-136">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-137">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-137">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-138">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-138">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-139">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-139">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-140">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-140">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-141">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-141">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="8e5cd-142">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-142">Append text to a file.</span></span>|[<span data-ttu-id="8e5cd-143">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="8e5cd-143">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-144">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-144">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-145">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-145">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-146">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-146">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-147">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-147">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-148">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-148">Read from a binary file.</span></span>|[<span data-ttu-id="8e5cd-149">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-149">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="8e5cd-150">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-150">Write to a binary file.</span></span>|[<span data-ttu-id="8e5cd-151">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-151">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-152">次のコード例は、`StringWriter` クラスを使用して文字列を構築する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-152">The following code example demonstrates how to construct a string using the `StringWriter` class.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#1)]
 [!code-csharp[System.IO.StringWriter1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#1)]
 [!code-vb[System.IO.StringWriter1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-153">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-153">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-154">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-154">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-155">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-155">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><span data-ttu-id="8e5cd-156">書式を制御する <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-156">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span></span></param>
        <summary><span data-ttu-id="8e5cd-157">指定した書式コントロールで <see cref="T:System.IO.StringWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-157">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-158">新しい <xref:System.Text.StringBuilder> オブジェクトが自動的に作成され、<xref:System.IO.StringWriter> クラスの新しいインスタンスに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-158">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span>  
  
 <span data-ttu-id="8e5cd-159">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-159">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-160">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-160">To do this...</span></span>|<span data-ttu-id="8e5cd-161">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-161">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-162">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-162">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-163">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-163">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-164">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-164">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-165">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-165">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-166">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-166">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-167">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-167">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="8e5cd-168">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-168">Append text to a file.</span></span>|[<span data-ttu-id="8e5cd-169">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="8e5cd-169">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-170">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-170">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-171">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-171">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-172">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-172">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-173">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-173">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-174">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-174">Read from a binary file.</span></span>|[<span data-ttu-id="8e5cd-175">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-175">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="8e5cd-176">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-176">Write to a binary file.</span></span>|[<span data-ttu-id="8e5cd-177">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-177">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-178">次のコード例は、特定のカルチャで文字列を構築する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-178">The following code example demonstrates how to construct a string in a specific culture.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#1)]
 [!code-csharp[System.IO.StringWriter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#1)]
 [!code-vb[System.IO.StringWriter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-179">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-179">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-180">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-180">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-181">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-181">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter sb" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb"><span data-ttu-id="8e5cd-182">書き込み先の <see cref="T:System.Text.StringBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-182">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span></span></param>
        <summary><span data-ttu-id="8e5cd-183">指定した <see cref="T:System.IO.StringWriter" /> に書き込む <see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-183">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-184">このコンストラクターには書式コントロールが指定されていないため、新しいインスタンスは <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>で初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-184">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8e5cd-185">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-185">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-186">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-186">To do this...</span></span>|<span data-ttu-id="8e5cd-187">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-187">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-188">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-188">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-189">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-189">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-190">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-190">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-191">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-191">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-192">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-192">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-193">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-193">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="8e5cd-194">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-194">Append text to a file.</span></span>|[<span data-ttu-id="8e5cd-195">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="8e5cd-195">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-196">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-196">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-197">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-197">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-198">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-198">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-199">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-199">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-200">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-200">Read from a binary file.</span></span>|[<span data-ttu-id="8e5cd-201">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-201">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="8e5cd-202">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-202">Write to a binary file.</span></span>|[<span data-ttu-id="8e5cd-203">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-203">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-204">次のコード例では、<xref:System.Text.StringBuilder> クラスを使用して、閉じられた `StringWriter`内の基になる文字列を変更する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-204">The following code example demonstrates using the <xref:System.Text.StringBuilder> class to modify the underlying string in a closed `StringWriter`.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#1)]
 [!code-csharp[System.IO.StringWriter3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#1)]
 [!code-vb[System.IO.StringWriter3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e5cd-205"><paramref name="sb" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-205"><paramref name="sb" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-206">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-206">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-207">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-207">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-208">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-208">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder, formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder * IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter (sb, formatProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="sb"><span data-ttu-id="8e5cd-209">書き込み先の <see cref="T:System.Text.StringBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-209">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8e5cd-210">書式を制御する <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-210">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span></span></param>
        <summary><span data-ttu-id="8e5cd-211">指定した <see cref="T:System.IO.StringWriter" /> に書き込み、指定した書式プロバイダーを持つ、<see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-211">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-212">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-212">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-213">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-213">To do this...</span></span>|<span data-ttu-id="8e5cd-214">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-214">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-215">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-215">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-216">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-216">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-217">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-217">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-218">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-218">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-219">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-219">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-220">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-220">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="8e5cd-221">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-221">Append text to a file.</span></span>|[<span data-ttu-id="8e5cd-222">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="8e5cd-222">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-223">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-223">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-224">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-224">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-225">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-225">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-226">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-226">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-227">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-227">Read from a binary file.</span></span>|[<span data-ttu-id="8e5cd-228">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-228">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="8e5cd-229">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-229">Write to a binary file.</span></span>|[<span data-ttu-id="8e5cd-230">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-230">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e5cd-231"><paramref name="sb" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-231"><paramref name="sb" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-232">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-232">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-233">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-233">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-234">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-234">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e5cd-235">現在の <see cref="T:System.IO.StringWriter" />、および基になるストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-235">Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-236">ファイルを作成し、ファイルにテキストを書き込む例については、「[方法: ファイルにテキストを書き込む](~/docs/standard/io/how-to-write-text-to-a-file.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-236">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="8e5cd-237">ファイルからテキストを読み取る例については、「[方法: ファイルからテキストを読み取る](~/docs/standard/io/how-to-read-text-from-a-file.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-237">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="8e5cd-238">バイナリファイルの読み取りと書き込みの例については、「[方法: 新しく作成されたデータファイルに対して読み取りと書き込みを](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)行う」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-238">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="8e5cd-239">このメソッドは、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-239">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8e5cd-240">この `Close` の実装では、`true` 値を渡す <xref:System.IO.StringWriter.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-240">This implementation of `Close` calls the <xref:System.IO.StringWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="8e5cd-241">明示的に `Close`を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-241">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="8e5cd-242"><xref:System.IO.StreamWriter.AutoFlush%2A> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-242">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="8e5cd-243">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-243">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="8e5cd-244">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-244">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-245">このコード例は、<xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-245">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#2)]
 [!code-csharp[System.IO.StringWriter3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#2)]
 [!code-vb[System.IO.StringWriter3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-246">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-246">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-247">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-247">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-248">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-248">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8e5cd-249">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-249"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8e5cd-250"><see cref="T:System.IO.StringWriter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-250">Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-251">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.StringWriter> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-251">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringWriter> references.</span></span> <span data-ttu-id="8e5cd-252">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-252">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8e5cd-253">
            <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-253">
            <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8e5cd-254"><see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />をオーバーライドする場合は、以前に <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-254">When overriding <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-255">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-255">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-256">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-256">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-257">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-257">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StringWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.StringWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e5cd-258">出力の書き込みに使用する <see cref="T:System.Text.Encoding" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-258">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span></span></summary>
        <value><span data-ttu-id="8e5cd-259">出力の書き込みに使用する <see langword="Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-259">The <see langword="Encoding" /> in which the output is written.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-260">このプロパティは、`StringWriter`によって使用されるエンコーディングを含むヘッダーを書き込む必要がある一部の XML シナリオで必要です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-260">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `StringWriter`.</span></span> <span data-ttu-id="8e5cd-261">これにより、XML コードは任意の `StringWriter` を使用し、正しい XML ヘッダーを生成することができます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-261">This allows the XML code to consume an arbitrary `StringWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="8e5cd-262">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-262">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-263">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-263">To do this...</span></span>|<span data-ttu-id="8e5cd-264">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-264">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-265">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-265">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-266">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-266">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-267">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-267">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-268">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-268">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-269">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-269">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-270">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-270">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-271">このコード例は、<xref:System.IO.StringWriter.%23ctor> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-271">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#4)]
 [!code-csharp[System.IO.StringWriter1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#4)]
 [!code-vb[System.IO.StringWriter1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-272">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-272">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-273">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-273">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-274">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-274">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="stringWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e5cd-275">現在のライターのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-275">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-276">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-276">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.GetStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStringBuilder () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::StringBuilder ^ GetStringBuilder();" />
      <MemberSignature Language="F#" Value="abstract member GetStringBuilder : unit -&gt; System.Text.StringBuilder&#xA;override this.GetStringBuilder : unit -&gt; System.Text.StringBuilder" Usage="stringWriter.GetStringBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e5cd-277">基になる <see cref="T:System.Text.StringBuilder" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-277">Returns the underlying <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-278">基になる <see langword="StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-278">The underlying <see langword="StringBuilder" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-279">これは、コンストラクターに渡された `StringBuilder` か、自動的に作成された `StringBuilder` です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-279">This is either the `StringBuilder` that was passed to the constructor, or the `StringBuilder` that was automatically created.</span></span>  
  
 <span data-ttu-id="8e5cd-280">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-280">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-281">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-281">To do this...</span></span>|<span data-ttu-id="8e5cd-282">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-282">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-283">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-283">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-284">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-284">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-285">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-285">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-286">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-286">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-287">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-287">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-288">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-288">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-289">このコード例は、<xref:System.IO.StringWriter.%23ctor> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-289">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#3)]
 [!code-csharp[System.IO.StringWriter1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#3)]
 [!code-vb[System.IO.StringWriter1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-290">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-290">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-291">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-291">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-292">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-292">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringWriter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e5cd-293">現在の <see langword="StringWriter" /> にこれまでに書き込まれた文字を格納する文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-293">Returns a string containing the characters written to the current <see langword="StringWriter" /> so far.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-294">現在の <see langword="StringWriter" /> に書き込まれた文字を格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-294">The string containing the characters written to the current <see langword="StringWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-295">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-295">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-296">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-296">To do this...</span></span>|<span data-ttu-id="8e5cd-297">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-297">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-298">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-298">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-299">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-299">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-300">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-300">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-301">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-301">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-302">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-302">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-303">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-303">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-304">このコード例は、<xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-304">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#2)]
 [!code-csharp[System.IO.StringWriter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#2)]
 [!code-vb[System.IO.StringWriter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-305">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-305">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-306">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-306">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-307">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-307">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e5cd-308">文字列にデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-308">Writes data to the string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-309">書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-309">The character to write.</span></span></param>
        <summary><span data-ttu-id="8e5cd-310">文字列に文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-310">Writes a character to the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-311">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-311">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8e5cd-312">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-312">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-313">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-313">To do this...</span></span>|<span data-ttu-id="8e5cd-314">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-314">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-315">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-315">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-316">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-316">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-317">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-317">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-318">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-318">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-319">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-319">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-320">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-320">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="8e5cd-321">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-321">Append text to a file.</span></span>|[<span data-ttu-id="8e5cd-322">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="8e5cd-322">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-323">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-323">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-324">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-324">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-325">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-325">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-326">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-326">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-327">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-327">Read from a binary file.</span></span>|[<span data-ttu-id="8e5cd-328">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-328">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="8e5cd-329">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-329">Write to a binary file.</span></span>|[<span data-ttu-id="8e5cd-330">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-330">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-331">このコード例は、<xref:System.IO.StringWriter.%23ctor> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-331">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8e5cd-332">ライターが閉じています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-332">The writer is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-333">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-333">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-334">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-334">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-335">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-335">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e5cd-336">文字列に書き込む文字のスパン。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-336">A span of chars to write to the string.</span></span></param>
        <summary><span data-ttu-id="8e5cd-337">文字のスパンの文字列形式を現在の文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-337">Writes the string representation of a span of chars to the current string.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-338">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-338">The string to write.</span></span></param>
        <summary><span data-ttu-id="8e5cd-339">現在の文字列に文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-339">Writes a string to the current string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-340">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-340">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8e5cd-341">指定した文字列が `null`場合は、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-341">If the specified string is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="8e5cd-342">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-342">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-343">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-343">To do this...</span></span>|<span data-ttu-id="8e5cd-344">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-344">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-345">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-345">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-346">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-346">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-347">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-347">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-348">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-348">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-349">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-349">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-350">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-350">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="8e5cd-351">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-351">Append text to a file.</span></span>|[<span data-ttu-id="8e5cd-352">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="8e5cd-352">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-353">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-353">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-354">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-354">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-355">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-355">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-356">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-356">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-357">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-357">Read from a binary file.</span></span>|[<span data-ttu-id="8e5cd-358">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-358">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="8e5cd-359">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-359">Write to a binary file.</span></span>|[<span data-ttu-id="8e5cd-360">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-360">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-361">このコード例は、<xref:System.IO.StringWriter> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-361">This code example is part of a larger example provided for the <xref:System.IO.StringWriter> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8e5cd-362">ライターが閉じています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-362">The writer is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-363">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-363">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-364">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-364">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-365">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-365">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Text.StringBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Text.StringBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Text::StringBuilder ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : System.Text.StringBuilder -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-366">文字列に書き込む文字列ビルダー。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-366">The string builder to write to the string.</span></span></param>
        <summary><span data-ttu-id="8e5cd-367">文字列ビルダーの文字列形式を現在の文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-367">Writes the string representation of a string builder to the current string.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="stringWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e5cd-368">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-368">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="8e5cd-369">データの読み取りを開始する、バッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-369">The position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="8e5cd-370">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-370">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="8e5cd-371">文字列に文字配列の一部を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-371">Writes a subarray of characters to the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e5cd-372">このメソッドは、<xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-372">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8e5cd-373">このメソッドは `buffer`からこの `StringWriter` に `count` 文字のデータを書き込みます。開始位置は `index`です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-373">This method writes `count` characters of data to this `StringWriter` from `buffer`, starting at position `index`.</span></span>  
  
 <span data-ttu-id="8e5cd-374">次の表に、その他の一般的な i/o タスクと関連する i/o タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-374">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="8e5cd-375">目的</span><span class="sxs-lookup"><span data-stu-id="8e5cd-375">To do this...</span></span>|<span data-ttu-id="8e5cd-376">参照項目</span><span class="sxs-lookup"><span data-stu-id="8e5cd-376">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="8e5cd-377">テキスト ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-377">Create a text file.</span></span>|[<span data-ttu-id="8e5cd-378">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-378">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-379">テキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-379">Write to a text file.</span></span>|[<span data-ttu-id="8e5cd-380">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-380">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="8e5cd-381">テキストファイルからの読み取り。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-381">Read from a text file.</span></span>|[<span data-ttu-id="8e5cd-382">方法: ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-382">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="8e5cd-383">ファイルにテキストを追加します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-383">Append text to a file.</span></span>|[<span data-ttu-id="8e5cd-384">方法: ログ ファイルを開いて情報を追加する</span><span class="sxs-lookup"><span data-stu-id="8e5cd-384">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-385">ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-385">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-386">ファイルの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-386">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-387">ファイルの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-387">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-388">ファイルが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-388">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="8e5cd-389">バイナリファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-389">Read from a binary file.</span></span>|[<span data-ttu-id="8e5cd-390">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-390">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="8e5cd-391">バイナリファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-391">Write to a binary file.</span></span>|[<span data-ttu-id="8e5cd-392">方法: 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="8e5cd-392">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8e5cd-393">このコード例は、<xref:System.IO.StringWriter.%23ctor> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-393">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e5cd-394"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-394"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e5cd-395"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-395"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e5cd-396">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="8e5cd-396">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span></span> <span data-ttu-id="8e5cd-397"><see langword="Length" /> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-397"><see langword="Length" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8e5cd-398">ライターが閉じています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-398">The writer is closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="8e5cd-399">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="8e5cd-399">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="8e5cd-400">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="8e5cd-400">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="8e5cd-401">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="8e5cd-401">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e5cd-402">文字列にデータを非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-402">Writes data to the string asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-403">文字列に書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-403">The character to write to the string.</span></span></param>
        <summary><span data-ttu-id="8e5cd-404">文字を非同期で文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-404">Writes a character to the string asynchronously.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-405">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-405">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8e5cd-406">次の例は、<xref:System.IO.StringWriter.WriteAsync%28System.Char%29> メソッドを使用して文字を書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-406">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example5.cs#5)]
 [!code-vb[System.IO.StringWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8e5cd-407">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-407">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e5cd-408">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-408">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-409">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-409">The string to write.</span></span> <span data-ttu-id="8e5cd-410"><paramref name="value" /> が <see langword="null" /> の場合は、何もテキスト ストリームに書き込みません。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-410">If <paramref name="value" /> is <see langword="null" />, nothing is written to the text stream.</span></span></param>
        <summary><span data-ttu-id="8e5cd-411">現在の文字列に文字列を非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-411">Writes a string to the current string asynchronously.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-412">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-412">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8e5cd-413">次の例は、<xref:System.IO.StringWriter.WriteAsync%28System.String%29> メソッドを使用して文字列を書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-413">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example4.cs#4)]
 [!code-vb[System.IO.StringWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8e5cd-414">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-414">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e5cd-415">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-415">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e5cd-416">文字列に書き込む文字メモリ領域。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-416">The character memory region to write to the string.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="8e5cd-417">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-417">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="8e5cd-418">既定値は <see cref="P:System.Threading.CancellationToken.None" />です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-418">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="8e5cd-419">文字のメモリ領域を文字列に非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-419">Asynchronously writes a memory region of characters to the string.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-420">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-420">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (System.Text.StringBuilder value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(class System.Text.StringBuilder value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-421">文字列に書き込む文字列ビルダー。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-421">The string builder to write to the string.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="8e5cd-422">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-422">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="8e5cd-423">既定値は <see cref="P:System.Threading.CancellationToken.None" />です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-423">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="8e5cd-424">文字列ビルダーのテキスト表現を文字列に非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-424">Asynchronously writes the text representation of a string builder to the string.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-425">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-425">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e5cd-426">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-426">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="8e5cd-427">データの読み取りを開始する、バッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-427">The position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="8e5cd-428">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-428">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="8e5cd-429">文字の部分配列を文字列に非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-429">Writes a subarray of characters to the string asynchronously.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-430">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-430">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8e5cd-431">次の例は、<xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> メソッドを使用して文字を書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-431">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example6.cs#6)]
 [!code-vb[System.IO.StringWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e5cd-432"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-432"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e5cd-433"><paramref name="index" /> に <paramref name="count" /> を加算した値がバッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-433">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e5cd-434"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-434"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8e5cd-435">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-435">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e5cd-436">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-436">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e5cd-437">文字列に書き込む文字のスパン。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-437">The span of characters to write to the string.</span></span></param>
        <summary><span data-ttu-id="8e5cd-438">テキスト表現、文字のスパンを、続いて行終端記号を文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-438">Writes the text representation a span of characters to the string, followed by a line terminator.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (System.Text.StringBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(class System.Text.StringBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Text::StringBuilder ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : System.Text.StringBuilder -&gt; unit" Usage="stringWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-439">文字列に書き込む、文字列ビルダーとしての文字列。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-439">The string, as a string builder, to write to the string.</span></span></param>
        <summary><span data-ttu-id="8e5cd-440">文字列ビルダーのテキスト表現を、続いて行終端記号を文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-440">Writes the text representation of a string builder to the string, followed by a line terminator.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e5cd-441">データを、続いて行終端記号を非同期で文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-441">Asynchronously writes data to the string, followed by a line terminator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-442">文字列に書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-442">The character to write to the string.</span></span></param>
        <summary><span data-ttu-id="8e5cd-443">文字を、続いて行終端記号を非同期で文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-443">Asynchronously writes a character to the string, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-444">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-444">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="8e5cd-445">行終端記号は、<xref:System.IO.TextWriter.NewLine%2A> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-445">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A> property.</span></span>

## Examples

<span data-ttu-id="8e5cd-446">次の例は、<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> メソッドを使用して文字を書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-446">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> method.</span></span>

[!code-csharp[System.IO.StringWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example2.cs#2)]
[!code-vb[System.IO.StringWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example2.vb#2)]

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8e5cd-447">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-447">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e5cd-448">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-448">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-449">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-449">The string to write.</span></span> <span data-ttu-id="8e5cd-450">値が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-450">If the value is <see langword="null" />, only a line terminator is written.</span></span></param>
        <summary><span data-ttu-id="8e5cd-451">文字列を、続いて行終端記号を非同期で現在の文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-451">Asynchronously writes a string to the current string, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-452">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-452">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="8e5cd-453">行終端記号は、<xref:System.IO.TextWriter.NewLine%2A> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-453">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A> property.</span></span>

## Examples

<span data-ttu-id="8e5cd-454">次の例は、<xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> メソッドを使用して文字列を書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-454">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> method.</span></span>

[!code-csharp[System.IO.StringWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example.cs#1)]
[!code-vb[System.IO.StringWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example.vb#1)]
          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8e5cd-455">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-455">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e5cd-456">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-456">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e5cd-457">文字列に書き込む文字のメモリ領域。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-457">A memory region of characters to write to the string.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="8e5cd-458">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-458">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="8e5cd-459">既定値は <see cref="P:System.Threading.CancellationToken.None" />です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-459">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="8e5cd-460">文字のメモリ領域の文字列形式を、続いて行終端記号を非同期で現在の文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-460">Asynchronously writes the string representation of the memory region of characters to the current string, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-461">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-461">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (System.Text.StringBuilder value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(class System.Text.StringBuilder value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e5cd-462">文字列に書き込む文字列ビルダー。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-462">The string builder to write to the string.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="8e5cd-463">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-463">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="8e5cd-464">既定値は <see cref="P:System.Threading.CancellationToken.None" />です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-464">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="8e5cd-465">文字列ビルダーの文字列形式を、続いて行終端記号を非同期で現在の文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-465">Asynchronously writes the string representation of the string builder to the current string, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-466">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-466">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e5cd-467">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-467">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="8e5cd-468">データの読み取りを開始する、バッファー内の位置。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-468">The position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="8e5cd-469">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-469">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="8e5cd-470">文字列の部分配列を、続いて行終端記号を非同期で文字列に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-470">asynchronously writes a subarray of characters to the string, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="8e5cd-471">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-471">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="8e5cd-472">行終端記号は、<xref:System.IO.TextWriter.NewLine%2A> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-472">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A> property.</span></span>

## Examples

<span data-ttu-id="8e5cd-473">次の例は、<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> メソッドを使用して文字を書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-473">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>

[!code-csharp[System.IO.StringWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example3.cs#3)]
[!code-vb[System.IO.StringWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example3.vb#3)]  

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e5cd-474"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-474"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e5cd-475"><paramref name="index" /> に <paramref name="count" /> を加算した値がバッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-475">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e5cd-476"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-476"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8e5cd-477">文字列ライターが破棄されています。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-477">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e5cd-478">文字列ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="8e5cd-478">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
