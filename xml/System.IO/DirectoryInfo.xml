<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9bdb0de9e87c454de3444dabe42f0223ca57d0fd" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83959250" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.FileSystem" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c3eb7-101">ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="c3eb7-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-103">ディレクトリのコピー、移動、名前の変更、作成、削除などの一般的な操作には、<xref:System.IO.DirectoryInfo> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="c3eb7-104">オブジェクトを何度も再利用する場合は、セキュリティチェックが必ずしも必要ではないため、<xref:System.IO.Directory> クラスの対応する静的メソッドではなく、<xref:System.IO.DirectoryInfo> のインスタンスメソッドを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3eb7-105">パスを入力文字列として受け取るメンバーでは、そのパスは適切な形式である必要があります。そうでない場合、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="c3eb7-106">たとえば、パスが完全修飾されていても、スペースで始まる場合は、クラスのメソッドでパスがトリムされません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="c3eb7-107">そのため、パスの形式が正しくないため、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="c3eb7-108">同様に、パスまたはパスの組み合わせを2回完全に修飾することはできません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="c3eb7-109">たとえば、"c:\temp c:\windows" は、ほとんどの場合に例外を発生させます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="c3eb7-110">パス文字列を受け取るメソッドを使用する場合は、パスが適切な形式であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="c3eb7-111">パスを受け入れるメンバーでは、ファイルまたはディレクトリのみを参照できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="c3eb7-112">指定されたパスは、サーバーと共有名の相対パスまたは UNC (汎用名前付け規則) パスを参照することもできます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="c3eb7-113">たとえば、次のすべてが許容されるパスです。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="c3eb7-114">Visual Basic の "c:\\\MyDir\\\MyFile.txt C#" または "c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="c3eb7-115">Visual Basic の "c:\\\MyDir C#"、または "c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="c3eb7-116">"の MyDir\\\MySubdir" C#、または Visual Basic の "MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="c3eb7-117">"\\\\\\\ MyServer\\\MyShare" C#、または\\の "Visual Basic 「\myserver\myshare」"。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="c3eb7-118">既定では、すべてのユーザーに対して、新しいディレクトリへの完全な読み取り/書き込みアクセス権が付与されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="c3eb7-119">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-119">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-120">次の例は、`DirectoryInfo` クラスの主なメンバーの一部を示しています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="c3eb7-121">次の例では、ディレクトリとその内容をコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-122">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-122">File and Stream I/O</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-123">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-124">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file"><span data-ttu-id="c3eb7-125">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="c3eb7-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c3eb7-126"><see langword="DirectoryInfo" />を作成する対象のパスを指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="c3eb7-127">指定したパスに対する、<see cref="T:System.IO.DirectoryInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-128">このコンストラクターは、ディレクトリが存在するかどうかを確認しません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="c3eb7-129">このコンストラクターは、後続の操作でディスクにアクセスするために使用される文字列のプレースホルダーです。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="c3eb7-130">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c3eb7-131">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="c3eb7-132">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-132">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-133">次の例では、このコンストラクターを使用して、指定したディレクトリとサブディレクトリを作成し、サブディレクトリを含むディレクトリを削除できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-134"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-135">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-136"><paramref name="path" /> に、"、&lt;、&gt;、| など、無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c3eb7-137">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-138">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-138">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-139">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-139">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-140">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-140">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-141">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-141">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-142">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-142">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="c3eb7-143">ディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-143">If the directory already exists, this method does nothing.</span></span>  

 <span data-ttu-id="c3eb7-144">このメソッドを呼び出す前にディレクトリが存在しない場合は、作成が成功すると、ディレクトリに関するキャッシュされた属性情報がフラッシュされます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-144">If the directory did not exist before calling this method, then any cached attribute information about the directory will be flushed if the creation is successful.</span></span>  
  
 <span data-ttu-id="c3eb7-145">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-145">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-146">次の例では、指定されたディレクトリが存在するかどうかを確認し、ディレクトリが存在しない場合は作成して、ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-146">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c3eb7-147">ディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-147">The directory cannot be created.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-148">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-148">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-149">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-149">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-150">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-150">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="c3eb7-151">ディレクトリに適用するアクセス制御。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-151">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="c3eb7-152"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトを使用してディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-152">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-153">このメソッドオーバーロードを使用してアクセス制御を持つディレクトリを作成するため、セキュリティが適用される前にディレクトリにアクセスできる可能性はありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-153">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="c3eb7-154">ディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-154">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="c3eb7-155">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-155">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="c3eb7-156">このメソッドは、`System.Security.AccessControl` アセンブリ: <xref:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)>の一部として、`FileSystemAclExtensions` クラスの拡張メソッドとして .NET Core 3.1 に移植されました。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-156">This method was ported to .NET Core 3.1 as an extension method of the `FileSystemAclExtensions` class as part of the `System.Security.AccessControl` assembly: <xref:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)>.</span></span>

## Examples

<span data-ttu-id="c3eb7-157">次のコード例では、指定されたディレクトリセキュリティ属性を使用して、ユーザーの一時フォルダー内に新しいディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-157">The following code example creates a new directory inside the user's temporary folder with the specified directory security attributes:</span></span>

```csharp
using System.IO;
using System.Security.AccessControl;
using System.Security.Principal;
namespace ConsoleApp
{
    class Program
    {
        static void Main()
        {
            DirectorySecurity security = new DirectorySecurity();
            SecurityIdentifier identity = new SecurityIdentifier(WellKnownSidType.BuiltinUsersSid, null);
            FileSystemAccessRule accessRule = new FileSystemAccessRule(identity, FileSystemRights.FullControl, AccessControlType.Allow);
            security.AddAccessRule(accessRule);
            string path = Path.Combine(Path.GetTempPath(), "directoryToCreate");
            DirectoryInfo dirInfo = new DirectoryInfo(path);
            dirInfo.Create(security);
        }
    }
}
```

 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c3eb7-158"><paramref name="path" /> によって指定されたディレクトリが、読み取り専用であるか、空ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-158">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c3eb7-159">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-159">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-160"><paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-160"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-161"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-161"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c3eb7-162">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-162">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-163">マップされていないドライブにあるなど、指定されたパスが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-163">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c3eb7-164">コロン (:) 文字だけで、ディレクトリを作成しようとしました。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-164">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-165">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-165">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="c3eb7-166">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-166">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c3eb7-167">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-167">The specified path.</span></span> <span data-ttu-id="c3eb7-168">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-168">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="c3eb7-169">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="c3eb7-170">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-171"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-171">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-172">`path` の一部が無効な場合を除き、`path` で指定されたすべてのディレクトリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-172">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="c3eb7-173">`path` パラメーターは、ファイルパスではなく、ディレクトリパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-173">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="c3eb7-174">サブディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-174">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="c3eb7-175">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-175">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-176">次の例は、サブディレクトリを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-176">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="c3eb7-177">この例では、作成されたディレクトリは作成後に削除されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-177">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="c3eb7-178">したがって、このサンプルをテストするには、コード内の削除行をコメントアウトします。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-178">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-179"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-179"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-180"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-180"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-181">マップされていないドライブにあるなど、指定されたパスが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-181">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c3eb7-182">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-182">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="c3eb7-183">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-183">-or-</span></span> 
<span data-ttu-id="c3eb7-184"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-184">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c3eb7-185">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-185">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-186">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-186">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="c3eb7-187">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-187">-or-</span></span> 
<span data-ttu-id="c3eb7-188">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-188">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="c3eb7-189"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-189">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c3eb7-190"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-190"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-191">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-191">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-192">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-192">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-193">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-193">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String, directorySecurity As DirectorySecurity) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c3eb7-194">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-194">The specified path.</span></span> <span data-ttu-id="c3eb7-195">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-195">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="c3eb7-196">適用するセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-196">The security to apply.</span></span></param>
        <summary><span data-ttu-id="c3eb7-197">適用するセキュリティを指定して、指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-197">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="c3eb7-198">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-198">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-199"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-199">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-200">`path` の一部が無効な場合を除き、`path` で指定されたすべてのディレクトリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-200">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="c3eb7-201">`path` パラメーターは、ファイルパスではなく、ディレクトリパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-201">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="c3eb7-202">サブディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-202">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="c3eb7-203">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-203">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-204"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-204"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-205"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-205"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-206">マップされていないドライブにあるなど、指定されたパスが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-206">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c3eb7-207">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-207">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="c3eb7-208">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-208">-or-</span></span> 
<span data-ttu-id="c3eb7-209"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-209">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c3eb7-210">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-210">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-211">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-211">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="c3eb7-212">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-212">-or-</span></span> 
<span data-ttu-id="c3eb7-213">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-213">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="c3eb7-214"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-214">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c3eb7-215"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-215"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-216">パスから <see cref="T:System.IO.DirectoryInfo" /> とその内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-216">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-217"><see cref="T:System.IO.DirectoryInfo" /> が空の場合に、そのインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-217">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-218">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-218">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-219">次の例では、空でないディレクトリを削除しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-219">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c3eb7-220">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-220">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-221">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-221">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c3eb7-222">ディレクトリが空ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-222">The directory is not empty.</span></span>  
  
<span data-ttu-id="c3eb7-223">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-223">-or-</span></span> 
<span data-ttu-id="c3eb7-224">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-224">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="c3eb7-225">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-225">-or-</span></span> 
<span data-ttu-id="c3eb7-226">ディレクトリに開いているハンドルがあり、オペレーティング システムが Windows XP かそれ以前のバージョンです。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-226">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="c3eb7-227">このハンドルが開いている原因は、ディレクトリを列挙したことにある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-227">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="c3eb7-228">詳細については、「 [方法: ディレクトリとファイルを列挙する](/dotnet/standard/io/how-to-enumerate-directories-and-files)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-228">For more information, see [How to: Enumerate Directories and Files](/dotnet/standard/io/how-to-enumerate-directories-and-files).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-229">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-229">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-230">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-230">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-231">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-231">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-232">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-232">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="c3eb7-233">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-233"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c3eb7-234">中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<see cref="T:System.IO.DirectoryInfo" /> のインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-234">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-235">`DirectoryInfo` にファイルまたはサブディレクトリがない場合、このメソッドは `recursive` が `false`されていても `DirectoryInfo` を削除します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-235">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="c3eb7-236">`recursive` が `false` ときに空ではない `DirectoryInfo` を削除しようとすると、<xref:System.IO.IOException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-236">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="c3eb7-237">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-237">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-238">次の例は、ディレクトリを削除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-238">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="c3eb7-239">ディレクトリが削除されているため、最初に `Delete` 行をコメントアウトして、ディレクトリが存在することをテストします。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-239">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="c3eb7-240">次に、同じコード行のコメントを解除して、ディレクトリが正常に削除されたことをテストします。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-240">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c3eb7-241">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-241">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-242">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-242">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c3eb7-243">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-243">The directory is read-only.</span></span>  
  
<span data-ttu-id="c3eb7-244">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-244">-or-</span></span> 
<span data-ttu-id="c3eb7-245">ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、<paramref name="recursive" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-245">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="c3eb7-246">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-246">-or-</span></span> 
<span data-ttu-id="c3eb7-247">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-247">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="c3eb7-248">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-248">-or-</span></span> 
<span data-ttu-id="c3eb7-249">ディレクトリまたはそのファイルのうちの 1 つについて開かれているハンドルがあり、かつオペレーティング システムが Windows XP 以前です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-249">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="c3eb7-250">このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-250">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="c3eb7-251">詳細については、「 [方法: ディレクトリとファイルを列挙する](/dotnet/standard/io/how-to-enumerate-directories-and-files)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-251">For more information, see [How to: Enumerate Directories and Files](/dotnet/standard/io/how-to-enumerate-directories-and-files).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-252">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-252">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-253">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-253">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-254">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-254">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-255">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-255">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-256">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-256">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-257">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-257">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-258">現在のディレクトリ内の列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-258">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-259"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-259">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-260"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-260">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-261"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-261">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-262">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-262">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-263">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-263">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c3eb7-264">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-264">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-265">次の例では、C:\Program Files ディレクトリの下にあるサブディレクトリを列挙し、LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> プロパティの値を確認することにより、2009より前に作成されたすべてのディレクトリの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-265">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="c3eb7-266">サブディレクトリの名前のみが必要な場合は、静的 <xref:System.IO.Directory> クラスを使用してパフォーマンスを向上させます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-266">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="c3eb7-267">例については、<xref:System.IO.Directory.EnumerateDirectories%28System.String%29> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-267">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-268"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-268">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-269">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-269">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-270">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-270">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c3eb7-271">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-271">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c3eb7-272">指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-272">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-273"><paramref name="searchPattern" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-273">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-274">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-274">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-275">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-275">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-276">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-276">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-277">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-277">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-278">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-278">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-279">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-279">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-280">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-280">?</span></span> <span data-ttu-id="c3eb7-281">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-281">(question mark)</span></span>|<span data-ttu-id="c3eb7-282">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-282">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-283">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-283">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-284">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-284">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-285">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-285">".</span></span> <span data-ttu-id="c3eb7-286">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-286">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-287"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-287">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-288"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-288">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-289"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-289">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-290">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-290">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-291">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-291">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c3eb7-292">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-292">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-293"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-293"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-294"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-294">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-295">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-295">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String, enumerationOptions As EnumerationOptions) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-296">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-296">The search string to match against the names of directories.</span></span> <span data-ttu-id="c3eb7-297">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-297">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c3eb7-298">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-298">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c3eb7-299">指定した検索パターンおよび列挙オプションに一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-299">Returns an enumerable collection of directory information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-300"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-300">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-301">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-301">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-302">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-302">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-303">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-303">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-304">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-304">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-305">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-305">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-306">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-306">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-307">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-307">?</span></span> <span data-ttu-id="c3eb7-308">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-308">(question mark)</span></span>|<span data-ttu-id="c3eb7-309">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-309">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-310">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-310">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-311">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-311">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-312">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-312">".</span></span> <span data-ttu-id="c3eb7-313">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-313">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-314"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-314">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-315"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-315">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-316"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-316">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-317">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-317">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-318">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-318">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c3eb7-319">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-319">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-320"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-320"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-321"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-321">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-322">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-322">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String, searchOption As SearchOption) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-323">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-323">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c3eb7-324">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-324">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c3eb7-325">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-325">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="c3eb7-326">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-326">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="c3eb7-327">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-327">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-328"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-328">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-329">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-329">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-330">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-330">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-331">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-331">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-332">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-332">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-333">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-333">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-334">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-334">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-335">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-335">?</span></span> <span data-ttu-id="c3eb7-336">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-336">(question mark)</span></span>|<span data-ttu-id="c3eb7-337">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-337">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-338">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-338">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-339">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-339">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-340">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-340">".</span></span> <span data-ttu-id="c3eb7-341">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-341">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-342"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-342">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-343"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-343">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-344"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-344">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-345">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-345">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-346">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-346">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c3eb7-347">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-347">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-348">次の例では、指定されたディレクトリから開始し、このメソッドと <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドを使用して、start ディレクトリ内のファイルとディレクトリを列挙し、サイズが 10 MB を超えるファイルの詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-348">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-349"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-349"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3eb7-350"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-350"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-351"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-352">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-352">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-353">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-353">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-354">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-354">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-355">現在のディレクトリ内の列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-355">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-356"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-356">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-357"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-357">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-358"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-358">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-359">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-359">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-360">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-360">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="c3eb7-361">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-361">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-362">次の例では、指定されたディレクトリにあるファイルを列挙し、LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> プロパティの値を確認することにより、2009より前に作成されたすべてのファイルの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-362">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="c3eb7-363">ファイル名のみが必要な場合は、静的 <xref:System.IO.Directory> クラスを使用してパフォーマンスを向上させてください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-363">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="c3eb7-364">例については、<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-364">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="c3eb7-365">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-365">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="c3eb7-366">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-366">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-367"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-367">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-368">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-368">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-369">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-369">The search string to match against the names of files.</span></span>  <span data-ttu-id="c3eb7-370">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-370">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c3eb7-371">検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-371">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-372"><paramref name="searchPattern" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-372">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-373">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-373">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-374">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-374">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-375">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-375">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-376">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-376">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-377">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-377">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-378">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-378">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-379">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-379">?</span></span> <span data-ttu-id="c3eb7-380">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-380">(question mark)</span></span>|<span data-ttu-id="c3eb7-381">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-381">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-382">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-382">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-383">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-383">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-384">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-384">".</span></span> <span data-ttu-id="c3eb7-385">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-385">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-386"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-386">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-387"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-387">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-388"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-388">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-389">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-389">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-390">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-390">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="c3eb7-391">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-391">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-392">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-392">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="c3eb7-393">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-393">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-394"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-394"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-395"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-395">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-396">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-396">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String, enumerationOptions As EnumerationOptions) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-397">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-397">The search string to match against the names of files.</span></span> <span data-ttu-id="c3eb7-398">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-398">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c3eb7-399">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-399">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c3eb7-400">指定された検索パターンと列挙オプションに一致するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-400">Returns an enumerable collection of file information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-401"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-401">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-402">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-402">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-403">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-403">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-404">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-404">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-405">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-405">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-406">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-406">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-407">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-407">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-408">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-408">?</span></span> <span data-ttu-id="c3eb7-409">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-409">(question mark)</span></span>|<span data-ttu-id="c3eb7-410">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-410">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-411">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-411">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-412">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-412">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-413">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-413">".</span></span> <span data-ttu-id="c3eb7-414">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-414">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-415"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-415">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-416"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-416">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-417"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-417">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-418">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-418">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-419">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-419">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="c3eb7-420">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-420">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-421"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-421"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-422"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトでカプセル化されたパスが無効です (割り当てられていないドライブであるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-422">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-423">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-423">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String, searchOption As SearchOption) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-424">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-424">The search string to match against the names of files.</span></span>  <span data-ttu-id="c3eb7-425">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-425">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c3eb7-426">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-426">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="c3eb7-427">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-427">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="c3eb7-428">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-428">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-429"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-429">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-430">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-430">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-431">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-431">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-432">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-432">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-433">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-433">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-434">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-434">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-435">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-435">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-436">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-436">?</span></span> <span data-ttu-id="c3eb7-437">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-437">(question mark)</span></span>|<span data-ttu-id="c3eb7-438">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-438">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-439">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-439">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-440">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-440">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-441">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-441">".</span></span> <span data-ttu-id="c3eb7-442">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-442">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-443"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-443">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-444"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-444">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-445"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-445">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-446">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-446">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-447">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-447">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="c3eb7-448">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-448">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-449">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-449">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="c3eb7-450">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-450">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-451"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-451"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3eb7-452"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-452"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-453"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-453">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-454">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-454">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-455">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-455">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-456">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-456">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-457">現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-457">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-458"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-458">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-459"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-459">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-460"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-460">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-461">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-461">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-462">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-462">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c3eb7-463">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-463">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-464"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-464">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-465">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-465">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-466">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-466">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c3eb7-467">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-467">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c3eb7-468">指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-468">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-469"><paramref name="searchPattern" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-469">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-470">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-470">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-471">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-471">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-472">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-472">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-473">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-473">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-474">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-474">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-475">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-475">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-476">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-476">?</span></span> <span data-ttu-id="c3eb7-477">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-477">(question mark)</span></span>|<span data-ttu-id="c3eb7-478">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-478">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-479">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-479">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-480">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-480">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-481">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-481">".</span></span> <span data-ttu-id="c3eb7-482">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-482">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-483"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-483">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-484"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-484">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-485"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-485">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-486">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-486">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-487">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-487">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c3eb7-488">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-488">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-489"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-489"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-490"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-490">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-491">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-491">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String, enumerationOptions As EnumerationOptions) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-492">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-492">The search string to match against the names of directories.</span></span> <span data-ttu-id="c3eb7-493">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-493">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c3eb7-494">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-494">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c3eb7-495">指定した検索パターンと列挙オプションに一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-495">Returns an enumerable collection of file system information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-496"><paramref name="searchPattern" /> および <paramref name="enumerationOptions" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-496">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-497">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-497">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-498">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-498">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-499">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-499">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-500">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-500">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-501">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-501">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-502">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-502">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-503">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-503">?</span></span> <span data-ttu-id="c3eb7-504">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-504">(question mark)</span></span>|<span data-ttu-id="c3eb7-505">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-505">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-506">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-506">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-507">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-507">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-508">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-508">".</span></span> <span data-ttu-id="c3eb7-509">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-509">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-510"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-510">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-511"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-511">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-512"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-512">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-513">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-513">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-514">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-514">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c3eb7-515">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-515">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-516"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-516"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-517"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-517">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-518">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-518">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String, searchOption As SearchOption) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-519">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-519">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c3eb7-520">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-520">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c3eb7-521">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-521">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="c3eb7-522">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-522">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="c3eb7-523">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-523">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-524"><paramref name="searchPattern" /> および <paramref name="searchOption" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-524">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-525">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-525">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-526">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-526">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-527">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-527">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-528">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-528">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-529">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-529">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-530">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-530">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-531">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-531">?</span></span> <span data-ttu-id="c3eb7-532">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-532">(question mark)</span></span>|<span data-ttu-id="c3eb7-533">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-533">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-534">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-534">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-535">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-535">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-536">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-536">".</span></span> <span data-ttu-id="c3eb7-537">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-537">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-538"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-538">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-539"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-539">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-540"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-540">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-541">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-541">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-542">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-542">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c3eb7-543">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-543">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-544"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-544"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3eb7-545"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-545"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-546"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-546">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-547">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-547">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3eb7-548">ディレクトリが存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-548">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="c3eb7-549">ディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-549"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-550"><xref:System.IO.DirectoryInfo.Exists%2A> プロパティは、指定されたファイルが存在するかどうかを判断する際にエラーが発生した場合に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-550">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="c3eb7-551">これは、無効な文字を含むファイル名の受け渡し、文字の数が多すぎる、ディスクの障害が発生した、または呼び出し元にファイルの読み取りアクセス許可がないなどの例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-551">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-552">次の例は、ソースディレクトリをターゲットディレクトリにコピーするコンテキストでの `Exists` プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-552">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-553">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-553">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-554">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-554">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-555">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-555">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3eb7-556">ディレクトリの絶対パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-556">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="c3eb7-557">絶対パスを含んでいる文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-557">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-558">現在のディレクトリのアクセス制御リスト (ACL: Access Control List) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-558">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-559"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-559">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="c3eb7-560">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-560">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-561">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトで記述されるディレクトリのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-561">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-562">ディレクトリのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-562">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-563">このメソッドのオーバーロードを呼び出すことは、<xref:System.IO.Directory.GetAccessControl%2A> メソッドのオーバーロードを呼び出し、アクセス制御&#124;セクション&#124; <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>) を指定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-563">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="c3eb7-564"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-564">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="c3eb7-565">ACL は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-565">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="c3eb7-566">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-566">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-567">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A> および <xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドを使用して、ディレクトリからアクセス制御リスト (ACL) エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-567">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="c3eb7-568">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-568">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c3eb7-569">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-569">The directory is read-only.</span></span>  
  
 <span data-ttu-id="c3eb7-570">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-570">-or-</span></span>  
  
 <span data-ttu-id="c3eb7-571">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-571">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="c3eb7-572">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-572">-or-</span></span>  
  
 <span data-ttu-id="c3eb7-573">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-573">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c3eb7-574">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-574">An I/O error occurred while opening the directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="c3eb7-575">取得するアクセス制御リスト (ACL) の情報の型を指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-575">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="c3eb7-576">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトによって記述されるディレクトリに関する指定された型のアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-576">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-577"><paramref name="path" /> パラメーターによって記述されるファイルのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-577">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="c3eb7-578">例外</span><span class="sxs-lookup"><span data-stu-id="c3eb7-578">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="c3eb7-579">例外の種類</span><span class="sxs-lookup"><span data-stu-id="c3eb7-579">Exception type</span></span> 
 </term><description> <span data-ttu-id="c3eb7-580">条件</span><span class="sxs-lookup"><span data-stu-id="c3eb7-580">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="c3eb7-581">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-581">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="c3eb7-582">現在のプロセスには、ディレクトリを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-582">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="c3eb7-583">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-583">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="c3eb7-584">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-584">The directory is read-only.</span></span>  
  
<span data-ttu-id="c3eb7-585">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-585">-or-</span></span> 
<span data-ttu-id="c3eb7-586">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-586">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="c3eb7-587">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-587">-or-</span></span> 
<span data-ttu-id="c3eb7-588">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-588">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-589"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-589">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="c3eb7-590">ACL は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-590">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="c3eb7-591">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-591">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-592">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-592">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-593">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-593">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-594"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-594">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-595">サブディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-595">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="c3eb7-596">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-596">This method is not recursive.</span></span>  
  
 <span data-ttu-id="c3eb7-597">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-597">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-598">次の例では、ルートディレクトリ内のすべてのディレクトリを取得し、ディレクトリ名を表示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-598">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-599"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-599">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-600">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-600">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c3eb7-601">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-601">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-602">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-602">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-603">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-603">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-604">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-604">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-605">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-605">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c3eb7-606">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-606">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c3eb7-607">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-607">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-608"><paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-608">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-609">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-609">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-610">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-610">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-611">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-611">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-612">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-612">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-613">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-613">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-614">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-614">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-615">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-615">?</span></span> <span data-ttu-id="c3eb7-616">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-616">(question mark)</span></span>|<span data-ttu-id="c3eb7-617">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-617">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-618">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-618">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-619">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-619">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-620">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-620">".</span></span> <span data-ttu-id="c3eb7-621">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-621">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-622">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-622">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-623">次の例では、指定された文字を含むパス内のディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-623">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-624"><paramref name="searchPattern" /> に、 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義された 1 つ以上の使用できない文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-624"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-625"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-625"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-626"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-626">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c3eb7-627">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-627">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-628">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-628">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-629">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-629">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-630">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-630">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String, enumerationOptions As EnumerationOptions) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-631">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-631">The search string to match against the names of directories.</span></span> <span data-ttu-id="c3eb7-632">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-632">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c3eb7-633">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-633">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c3eb7-634">指定した検索パターンと列挙オプションに一致する、現在の <see cref="T:System.IO.DirectoryInfo" /> 内のディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-634">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-635"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-635">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-636">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-636">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-637">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-637">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-638">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-638">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-639">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-639">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-640">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-640">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-641">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-641">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-642">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-642">?</span></span> <span data-ttu-id="c3eb7-643">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-643">(question mark)</span></span>|<span data-ttu-id="c3eb7-644">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-644">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-645">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-645">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-646">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-646">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-647">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-647">".</span></span> <span data-ttu-id="c3eb7-648">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-648">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-649">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-649">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-650"><paramref name="searchPattern" /> に、 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義された 1 つ以上の使用できない文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-650"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-651"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-651"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-652"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-652">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c3eb7-653">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-653">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String, searchOption As SearchOption) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-654">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-654">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c3eb7-655">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-655">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c3eb7-656">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-656">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="c3eb7-657">指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つ、現在の <see cref="T:System.IO.DirectoryInfo" /> 内のディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-657">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-658"><paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-658">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-659">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-659">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-660">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-660">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-661">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-661">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-662">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-662">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-663">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-663">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-664">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-664">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-665">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-665">?</span></span> <span data-ttu-id="c3eb7-666">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-666">(question mark)</span></span>|<span data-ttu-id="c3eb7-667">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-667">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-668">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-668">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-669">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-669">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-670">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-670">".</span></span> <span data-ttu-id="c3eb7-671">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-671">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-672">サブディレクトリが存在しない場合、または `searchPattern` パラメーターに一致するサブディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-672">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c3eb7-673">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-673">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-674">次の例では、"c:\\" の文字 "c" で始まるすべてのディレクトリとファイルを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-674">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-675"><paramref name="searchPattern" /> に、 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義された 1 つ以上の使用できない文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-675"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-676"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-676"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3eb7-677"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-677"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-678"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-678">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c3eb7-679">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-679">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-680">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-680">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-681">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-681">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-682">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-682">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-683">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-683">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-684">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-684">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-685"><see cref="T:System.IO.FileInfo" /> 型の配列です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-685">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-686"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-686">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-687"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-687">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-688"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-688">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-689">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-689">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-690"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-690">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c3eb7-691">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-691">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="c3eb7-692">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-692">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-693">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-693">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="c3eb7-694">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-694">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-695">マップされていないドライブにあるなど、パスが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-695">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-696">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-696">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-697">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-697">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-698">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-698">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-699">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-699">The search string to match against the names of files.</span></span>  <span data-ttu-id="c3eb7-700">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-700">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c3eb7-701">現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-701">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-702"><see cref="T:System.IO.FileInfo" /> 型の配列です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-702">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-703">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-703">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-704">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-704">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-705">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-705">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-706">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-706">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-707">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-707">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-708">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-708">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-709">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-709">?</span></span> <span data-ttu-id="c3eb7-710">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-710">(question mark)</span></span>|<span data-ttu-id="c3eb7-711">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-711">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-712">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-712">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-713">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-713">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-714">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-714">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-715"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-715">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-716"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-716">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-717"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-717">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-718">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-718">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-719"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-719">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c3eb7-720">`searchPattern` パラメーターでは、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-720">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="c3eb7-721">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="c3eb7-721">Wildcard character</span></span>|<span data-ttu-id="c3eb7-722">説明</span><span class="sxs-lookup"><span data-stu-id="c3eb7-722">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="c3eb7-723">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-723">Zero or more characters.</span></span>|  
|<span data-ttu-id="c3eb7-724">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-724">?</span></span>|<span data-ttu-id="c3eb7-725">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-725">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="c3eb7-726">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-726">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="c3eb7-727">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-727">Wildcards are permitted.</span></span> <span data-ttu-id="c3eb7-728">たとえば、`searchPattern` 文字列 "\* .txt" は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-728">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="c3eb7-729">`searchPattern` 文字列 "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-729">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="c3eb7-730">ファイルがない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-730">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3eb7-731">`searchPattern` でアスタリスクのワイルドカード文字 ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-731">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="c3eb7-732">ファイル拡張子が3文字の `searchPattern` は、3文字以上の拡張子を持つファイルを返します。最初の3文字は、`searchPattern`で指定されたファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-732">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c3eb7-733">ファイル拡張子が1、2、または3文字を超える `searchPattern` は、`searchPattern`で指定されたファイル拡張子と完全に一致する拡張子を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-733">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c3eb7-734">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-734">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="c3eb7-735">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、" file\*.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-735">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3eb7-736">このメソッドは、8.3 ファイル名形式と長いファイル名形式の両方を含むファイル名をチェックするため、"\* 1\*.txt" に類似した検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-736">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="c3eb7-737">たとえば、"\*1\*.txt" という検索パターンを使用すると、8.3 ファイル名の形式が "longfilename ~ 1 .txt" になるため、"longfilename. .txt" が返されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-737">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="c3eb7-738">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-738">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-739">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-739">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="c3eb7-740">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-740">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-741"><paramref name="searchPattern" /> に、 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義された 1 つ以上の使用できない文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-741"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-742"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-742"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-743">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-743">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-744">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-744">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-745">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-745">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-746">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-746">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-747">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-747">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String, enumerationOptions As EnumerationOptions) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-748">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-748">The search string to match against the names of files.</span></span> <span data-ttu-id="c3eb7-749">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-749">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c3eb7-750">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-750">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c3eb7-751">指定した検索パターンと列挙オプションに一致する現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-751">Returns a file list from the current directory matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-752"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する、厳密に型指定された <see cref="T:System.IO.FileInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-752">An array of strongly typed <see cref="T:System.IO.FileInfo" /> objects that match <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-753">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-753">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-754">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-754">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-755">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-755">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-756">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-756">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-757">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-757">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-758">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-758">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-759">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-759">?</span></span> <span data-ttu-id="c3eb7-760">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-760">(question mark)</span></span>|<span data-ttu-id="c3eb7-761">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-761">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-762">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-762">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-763">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-763">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-764">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-764">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-765"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-765">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-766"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-766">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-767"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-767">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-768">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-768">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-769"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-769">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c3eb7-770">`searchPattern` パラメーターでは、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-770">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="c3eb7-771">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="c3eb7-771">Wildcard character</span></span>|<span data-ttu-id="c3eb7-772">説明</span><span class="sxs-lookup"><span data-stu-id="c3eb7-772">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="c3eb7-773">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-773">Zero or more characters.</span></span>|  
|<span data-ttu-id="c3eb7-774">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-774">?</span></span>|<span data-ttu-id="c3eb7-775">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-775">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="c3eb7-776">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-776">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="c3eb7-777">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-777">Wildcards are permitted.</span></span> <span data-ttu-id="c3eb7-778">たとえば、`searchPattern` 文字列 "\* .txt" は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-778">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="c3eb7-779">`searchPattern` 文字列 "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-779">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="c3eb7-780">ファイルがない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-780">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3eb7-781">`searchPattern` でアスタリスクのワイルドカード文字 ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-781">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="c3eb7-782">ファイル拡張子が3文字の `searchPattern` は、3文字以上の拡張子を持つファイルを返します。最初の3文字は、`searchPattern`で指定されたファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-782">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c3eb7-783">ファイル拡張子が1、2、または3文字を超える `searchPattern` は、`searchPattern`で指定されたファイル拡張子と完全に一致する拡張子を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-783">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c3eb7-784">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-784">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="c3eb7-785">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、" file\*.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-785">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3eb7-786">このメソッドは、8.3 ファイル名形式と長いファイル名形式の両方を含むファイル名をチェックするため、"\* 1\*.txt" に類似した検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-786">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="c3eb7-787">たとえば、"\*1\*.txt" という検索パターンを使用すると、8.3 ファイル名の形式が "longfilename ~ 1 .txt" になるため、"longfilename. .txt" が返されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-787">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="c3eb7-788">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-788">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-789"><paramref name="searchPattern" /> に、 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義された 1 つ以上の使用できない文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-789"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-790"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-790"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-791">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-791">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-792">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-792">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String, searchOption As SearchOption) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-793">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-793">The search string to match against the names of files.</span></span>  <span data-ttu-id="c3eb7-794">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-794">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c3eb7-795">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-795">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="c3eb7-796">現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-796">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-797"><see cref="T:System.IO.FileInfo" /> 型の配列です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-797">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-798"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-798">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c3eb7-799"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-799">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c3eb7-800"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-800">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c3eb7-801">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-801">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c3eb7-802"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-802">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c3eb7-803">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-803">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-804">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="c3eb7-804">Wildcard character</span></span>|<span data-ttu-id="c3eb7-805">説明</span><span class="sxs-lookup"><span data-stu-id="c3eb7-805">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="c3eb7-806">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-806">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-807">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-807">Zero or more characters.</span></span>|  
|<span data-ttu-id="c3eb7-808">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-808">?</span></span> <span data-ttu-id="c3eb7-809">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-809">(question mark)</span></span>|<span data-ttu-id="c3eb7-810">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-810">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="c3eb7-811">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-811">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="c3eb7-812">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-812">Wildcards are permitted.</span></span> <span data-ttu-id="c3eb7-813">たとえば、`searchPattern` 文字列 "\* .txt" は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-813">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="c3eb7-814">`searchPattern` 文字列 "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-814">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="c3eb7-815">ファイルがない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-815">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3eb7-816">`searchPattern` でアスタリスクのワイルドカード文字 ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-816">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="c3eb7-817">ファイル拡張子が3文字の `searchPattern` は、3文字以上の拡張子を持つファイルを返します。最初の3文字は、`searchPattern`で指定されたファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-817">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c3eb7-818">ファイル拡張子が1、2、または3文字を超える `searchPattern` は、`searchPattern`で指定されたファイル拡張子と完全に一致する拡張子を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-818">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c3eb7-819">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-819">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="c3eb7-820">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、" file\*.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-820">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="c3eb7-821">次の一覧は、`searchPattern` パラメーターのさまざまな長さの動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-821">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="c3eb7-822">"\* abc" は、拡張子が abc、abcd、abcde...z、abcdef などのファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-822">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="c3eb7-823">"\* abcd" は、拡張子が abcd のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-823">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="c3eb7-824">"\* abcde...z" は拡張子が abcde...z のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-824">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="c3eb7-825">"\* abcdef" は拡張子が abcdef のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-825">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3eb7-826">このメソッドは、8.3 ファイル名形式と長いファイル名形式の両方を含むファイル名をチェックするため、"\* 1\*.txt" に類似した検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-826">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="c3eb7-827">たとえば、"\*1\*.txt" という検索パターンを使用すると、8.3 ファイル名の形式が "longfilename ~ 1 .txt" になるため、"longfilename. .txt" が返されます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-827">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="c3eb7-828">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-828">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-829">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-829">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="c3eb7-830">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-830">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-831"><paramref name="searchPattern" /> に、 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義された 1 つ以上の使用できない文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-831"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-832"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-832"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3eb7-833"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-833"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-834">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-834">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-835">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-835">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-836">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-836">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-837">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-837">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-838">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-838">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eb7-839">現在のディレクトリのファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-839">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-840">ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-840">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-841">厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-841">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-842"><xref:System.IO.DirectoryInfo>にファイルまたはディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-842">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="c3eb7-843">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-843">This method is not recursive.</span></span>  
  
 <span data-ttu-id="c3eb7-844">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-844">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="c3eb7-845"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-845">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="c3eb7-846">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-846">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-847">次の例では、指定されたディレクトリにあるファイルとディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-847">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-848">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-848">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-849">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-849">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-850">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-850">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-851">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-851">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-852">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-852">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="c3eb7-853">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-853">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c3eb7-854">指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-854">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-855">検索基準に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-855">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-856">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-856">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-857">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-857">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-858">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-858">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-859">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-859">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-860">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-860">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-861">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-861">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-862">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-862">?</span></span> <span data-ttu-id="c3eb7-863">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-863">(question mark)</span></span>|<span data-ttu-id="c3eb7-864">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-864">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-865">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-865">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-866">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-866">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-867">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-867">".</span></span> <span data-ttu-id="c3eb7-868">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-868">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-869">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-869">This method is not recursive.</span></span>  
  
 <span data-ttu-id="c3eb7-870">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-870">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="c3eb7-871"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-871">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="c3eb7-872">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-872">Wild cards are permitted.</span></span> <span data-ttu-id="c3eb7-873">たとえば、`searchPattern` 文字列 "\*t" は、末尾が文字 "t" である `path` 内のすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-873">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-874">`searchPattern` 文字列 "s\*" は、`path` 内の文字 "s" で始まるすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-874">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-875">文字列 ".." は、ディレクトリ名 "a. のように有効なディレクトリ名の一部として指定されている場合にのみ、`searchPattern` で使用できます。b "のようになります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-875">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="c3eb7-876">ディレクトリ階層の上に移動するために使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-876">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="c3eb7-877">ファイルまたはディレクトリが存在しない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルやディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-877">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c3eb7-878">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-878">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-879">次の例では、指定した検索パターンに一致するファイルとディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-879">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-880"><paramref name="searchPattern" /> に、 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義された 1 つ以上の使用できない文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-880"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-881"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-881"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-882">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-882">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-883">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-883">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-884">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-884">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-885">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-885">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-886">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-886">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String, enumerationOptions As EnumerationOptions) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-887">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-887">The search string to match against the names of directories and files.</span></span> <span data-ttu-id="c3eb7-888">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-888">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c3eb7-889">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-889">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c3eb7-890">指定した検索パターンと列挙オプションに一致するファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-890">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-891"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-891">An array of strongly typed <see langword="FileSystemInfo" /> objects matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-892">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-892">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-893">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-893">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-894">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-894">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-895">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-895">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-896">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-896">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-897">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-897">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-898">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-898">?</span></span> <span data-ttu-id="c3eb7-899">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-899">(question mark)</span></span>|<span data-ttu-id="c3eb7-900">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-900">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-901">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-901">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-902">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-902">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-903">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-903">".</span></span> <span data-ttu-id="c3eb7-904">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-904">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-905">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-905">This method is not recursive.</span></span>  
  
 <span data-ttu-id="c3eb7-906">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-906">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="c3eb7-907"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-907">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="c3eb7-908">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-908">Wild cards are permitted.</span></span> <span data-ttu-id="c3eb7-909">たとえば、`searchPattern` 文字列 "\*t" は、末尾が文字 "t" である `path` 内のすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-909">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-910">`searchPattern` 文字列 "s\*" は、`path` 内の文字 "s" で始まるすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-910">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-911">文字列 ".." は、ディレクトリ名 "a. のように有効なディレクトリ名の一部として指定されている場合にのみ、`searchPattern` で使用できます。b "のようになります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-911">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="c3eb7-912">ディレクトリ階層の上に移動するために使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-912">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="c3eb7-913">ファイルまたはディレクトリが存在しない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルやディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-913">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c3eb7-914">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-914">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-915"><paramref name="searchPattern" /> に、 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義された 1 つ以上の使用できない文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-915"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-916"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-916"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-917">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-917">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-918">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-918">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String, searchOption As SearchOption) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c3eb7-919">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-919">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="c3eb7-920">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-920">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c3eb7-921">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-921">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="c3eb7-922">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-922">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="c3eb7-923">指定した検索条件に一致するファイルおよびサブディレクトリを表す <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-923">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-924">検索条件に一致するファイル システム エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-924">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-925">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-925">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c3eb7-926">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-926">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c3eb7-927">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="c3eb7-927">Wildcard specifier</span></span>|<span data-ttu-id="c3eb7-928">次と一致する</span><span class="sxs-lookup"><span data-stu-id="c3eb7-928">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c3eb7-929">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-929">\* (asterisk)</span></span>|<span data-ttu-id="c3eb7-930">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-930">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c3eb7-931">?</span><span class="sxs-lookup"><span data-stu-id="c3eb7-931">?</span></span> <span data-ttu-id="c3eb7-932">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="c3eb7-932">(question mark)</span></span>|<span data-ttu-id="c3eb7-933">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-933">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c3eb7-934">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-934">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c3eb7-935">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-935">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c3eb7-936">" でサポートされていないデータ型です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-936">".</span></span> <span data-ttu-id="c3eb7-937">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-937">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c3eb7-938">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-938">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="c3eb7-939"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-939">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="c3eb7-940">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-940">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-941"><paramref name="searchPattern" /> に、 <see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドで定義された 1 つ以上の使用できない文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-941"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-942"><paramref name="searchPattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-942"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3eb7-943"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-943"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-944">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-944">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-945">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-945">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="c3eb7-946">このディレクトリの移動先の名前とパス。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-946">The name and path to which to move this directory.</span></span> <span data-ttu-id="c3eb7-947">別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-947">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="c3eb7-948">このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-948">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="c3eb7-949"><see cref="T:System.IO.DirectoryInfo" /> のインスタンスとその内容を新しいパスに移動します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-949">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-950">たとえば、c:\mydir を c:\ に移動しようとしていて、c:\ パブリックが既に存在する場合、このメソッドは <xref:System.IO.IOException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-950">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="c3eb7-951">"C:\\\ public\\\mydir" を `destDirName` パラメーターとして指定するか、"c:\\\ newdir" のような新しいディレクトリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-951">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="c3eb7-952">この方法を使うと、ディレクトリを読み取り専用ディレクトリに移動できます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-952">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="c3eb7-953">どちらのディレクトリの読み取り/書き込み属性も影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-953">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="c3eb7-954">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-954">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-955">次の例では、ディレクトリの移動を示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-955">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-956"><paramref name="destDirName" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-956"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eb7-957"><paramref name="destDirName" /> が空の文字列 (''") です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-957"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c3eb7-958">ディレクトリを別のボリュームに移動しようとしました。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-958">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="c3eb7-959">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-959">-or-</span></span> 
 <span data-ttu-id="c3eb7-960"><paramref name="destDirName" /> が既に存在します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-960"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="c3eb7-961">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-961">-or-</span></span> 
<span data-ttu-id="c3eb7-962">このパスへのアクセスが許可されていません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-962">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="c3eb7-963">または</span><span class="sxs-lookup"><span data-stu-id="c3eb7-963">-or-</span></span> 
<span data-ttu-id="c3eb7-964">移動するディレクトリと対象のディレクトリの名前が同じです。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-964">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-965">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-965">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c3eb7-966">対象のディレクトリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-966">The destination directory cannot be found.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-967">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-967">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-968">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-968">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-969">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-969">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3eb7-970"><see cref="T:System.IO.DirectoryInfo" /> の現在のインスタンスの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-970">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="c3eb7-971">ディレクトリ名。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-971">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-972">この <xref:System.IO.DirectoryInfo.Name%2A> プロパティは、ディレクトリの名前 ("Bin" など) のみを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-972">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="c3eb7-973">"C:\ Public\bin" のような完全なパスを取得するには、<xref:System.IO.FileSystemInfo.FullName%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-973">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="c3eb7-974"><xref:System.IO.DirectoryInfo> の <xref:System.IO.DirectoryInfo.Name%2A> プロパティには、(<xref:System.IO.DirectoryInfo.Exists%2A>を構築するために必要なディレクトリへの読み取りアクセス許可を超える) アクセス許可は必要ありませんが、ディレクトリ名を指定することはできます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-974">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="c3eb7-975">暗号化された安全な名前で保護されたディレクトリに <xref:System.IO.DirectoryInfo> を渡す必要がある場合は、信頼されていないコードの使用用のダミーディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-975">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="c3eb7-976">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-976">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-977">次の例では、現在の `DirectoryInfo` インスタンスの名前のみを表示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-977">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-978">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-978">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-979">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-979">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-980">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-980">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3eb7-981">指定されたサブディレクトリの親ディレクトリを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-981">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="c3eb7-982">親ディレクトリ。パスが null の場合、またはファイルパスがルート (`\`、`C:\`、`\\server\share`など) を示している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-982">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as `\`, `C:\`, or `\\server\share`).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="c3eb7-983">.NET Framework では、`Parent` は相対パスを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-983">In .NET Framework, `Parent` returns a relative path.</span></span>
> <span data-ttu-id="c3eb7-984">.NET Core では、`Parent` は完全修飾パスを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-984">In .NET Core, `Parent` returns a fully qualified path.</span></span>

<span data-ttu-id="c3eb7-985">バージョン間で一貫性のある動作を確保し、インテントを明示的にするには、`Parent`によって返される <xref:System.IO.DirectoryInfo> インスタンスで、次のいずれかのプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-985">To ensure consistent behavior across versions and to make your intent explicit, retrieve the value of one of the following properties on the <xref:System.IO.DirectoryInfo> instance returned by `Parent`.</span></span>
- <span data-ttu-id="c3eb7-986"><xref:System.IO.DirectoryInfo.Name>。ディレクトリの簡易名を返します (`bin`など)。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-986"><xref:System.IO.DirectoryInfo.Name>, which returns the simple name of the directory (such as `bin`).</span></span>
- <span data-ttu-id="c3eb7-987"><xref:System.IO.DirectoryInfo.FullName>。ディレクトリの絶対パスを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-987"><xref:System.IO.DirectoryInfo.FullName>, which returns the absolute path of the directory.</span></span> 


<span data-ttu-id="c3eb7-988">共通 I/O タスクの一覧は、 [共通 I/O タスク](/dotnet/standard/io/common-i-o-tasks) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-988">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>


## Examples

<span data-ttu-id="c3eb7-989">次の例では、指定されたディレクトリの親ディレクトリを参照します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-989">The following example refers to the parent directory of a specified directory.</span></span>

[!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
[!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
[!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]

          ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-990">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-990">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-991">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-991">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-992">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-992">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-993">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-993">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c3eb7-994">ディレクトリのルート部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-994">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="c3eb7-995">ディレクトリのルートを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-995">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c3eb7-996">次の例では、指定したディレクトリのルートの場所を表示します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-996">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c3eb7-997">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-997">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-998">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-998">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-999">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-999">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-1000">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1000">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessControl (directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="c3eb7-1001"><paramref name="path" /> パラメーターが示すディレクトリに適用する ACL エントリを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1001">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="c3eb7-1002"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の <see cref="T:System.IO.DirectoryInfo" /> オブジェクトが示すディレクトリに適用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1002">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eb7-1003">アクセス制御リスト (ACL) は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していないユーザーまたはグループを表します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1003">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="c3eb7-1004">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1004">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
 <span data-ttu-id="c3eb7-1005"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドは、継承されていない ACL リストを表す ACL エントリをファイルに適用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1005">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c3eb7-1006">`directorySecurity` に指定された ACL は、ディレクトリの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1006">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="c3eb7-1007">新しいユーザーにアクセス許可を追加するには、<xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して既存の ACL を取得し、変更します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1007">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="c3eb7-1008"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドは、オブジェクトの作成後に変更された <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトのみを保持します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1008">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="c3eb7-1009"><xref:System.Security.AccessControl.DirectorySecurity> オブジェクトが変更されていない場合は、ファイルに保存されません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1009">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="c3eb7-1010">そのため、1つのファイルから <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを取得し、別のファイルに同じオブジェクトを再適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1010">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="c3eb7-1011">ACL 情報をあるファイルから別のファイルにコピーするには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1011">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="c3eb7-1012"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、ソースファイルから <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1012">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="c3eb7-1013">コピー先ファイルの新しい <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1013">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="c3eb7-1014">ACL 情報を取得するには、ソース <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトの <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> または <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1014">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="c3eb7-1015">手順 3. で取得した情報をターゲット <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトにコピーするには、<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> または <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1015">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="c3eb7-1016"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドを使用して、変換先の <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを変換先ファイルに設定します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1016">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3eb7-1017">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A> および <xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドを使用して、ディレクトリからアクセス制御リスト (ACL) エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1017">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eb7-1018"><paramref name="directorySecurity" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1018">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="c3eb7-1019">ファイルが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1019">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c3eb7-1020">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1020">The current process does not have access to open the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eb7-1021"><see cref="T:System.IO.DirectoryInfo" /> コンストラクターに渡された元のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1021">Returns the original path that was passed to the <see cref="T:System.IO.DirectoryInfo" /> constructor.</span></span> <span data-ttu-id="c3eb7-1022">このメソッドの代わりに、完全なパスの <see cref="P:System.IO.DirectoryInfo.FullName" /> または <see cref="P:System.IO.DirectoryInfo.Name" /> のプロパティ、またはファイル名またはディレクトリ名を使用します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1022">Use the <see cref="P:System.IO.DirectoryInfo.FullName" /> or <see cref="P:System.IO.DirectoryInfo.Name" /> properties for the full path or file/directory name instead of this method.</span></span></summary>
        <returns><span data-ttu-id="c3eb7-1023">ユーザーから渡された元のパス。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1023">The original path that was passed by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="c3eb7-1024"><xref:System.IO.DirectoryInfo.ToString%2A> メソッドによって返される文字列は、<xref:System.IO.DirectoryInfo> コンストラクターに渡されたパスを表します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1024">The string returned by the <xref:System.IO.DirectoryInfo.ToString%2A> method represents the path that was passed to the <xref:System.IO.DirectoryInfo> constructor.</span></span> <span data-ttu-id="c3eb7-1025">`ToString` メソッドを呼び出す代わりに、目的に応じて、次のいずれかのプロパティの値を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1025">Instead of calling the `ToString` method, you should retrieve the value of either of the following properties, depending on your intent:</span></span>
> - <span data-ttu-id="c3eb7-1026">親パス情報を含まない、ディレクトリの名前を取得するために <xref:System.IO.DirectoryInfo.Name>します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1026"><xref:System.IO.DirectoryInfo.Name>, to get the name of the directory, without any parent path information.</span></span>
> - <span data-ttu-id="c3eb7-1027"><xref:System.IO.DirectoryInfo.FullName>、ディレクトリの完全修飾パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1027"><xref:System.IO.DirectoryInfo.FullName>, to get the fully qualified path of the directory.</span></span>

          ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c3eb7-1028">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1028">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c3eb7-1029">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1029">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c3eb7-1030">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="c3eb7-1030">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
