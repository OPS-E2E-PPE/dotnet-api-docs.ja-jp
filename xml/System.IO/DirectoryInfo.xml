<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abb71d42226a6807d21f231a68e7c7c93f4130db" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77225281" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f91ed-101">ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="f91ed-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-103">ディレクトリのコピー、移動、名前の変更、作成、削除などの一般的な操作には、<xref:System.IO.DirectoryInfo> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="f91ed-104">オブジェクトを何度も再利用する場合は、セキュリティチェックが必ずしも必要ではないため、<xref:System.IO.Directory> クラスの対応する静的メソッドではなく、<xref:System.IO.DirectoryInfo> のインスタンスメソッドを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f91ed-105">パスを入力文字列として受け取るメンバーでは、そのパスは適切な形式である必要があります。そうでない場合、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="f91ed-106">たとえば、パスが完全修飾されていても、スペースで始まる場合は、クラスのメソッドでパスがトリムされません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="f91ed-107">そのため、パスの形式が正しくないため、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="f91ed-108">同様に、パスまたはパスの組み合わせを2回完全に修飾することはできません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="f91ed-109">たとえば、"c:\temp c:\windows" は、ほとんどの場合に例外を発生させます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="f91ed-110">パス文字列を受け取るメソッドを使用する場合は、パスが適切な形式であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="f91ed-111">パスを受け入れるメンバーでは、ファイルまたはディレクトリのみを参照できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="f91ed-112">指定されたパスは、サーバーと共有名の相対パスまたは UNC (汎用名前付け規則) パスを参照することもできます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="f91ed-113">たとえば、次のすべてが許容されるパスです。</span><span class="sxs-lookup"><span data-stu-id="f91ed-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="f91ed-114">Visual Basic の "c:\\\MyDir\\\MyFile.txt C#" または "c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="f91ed-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="f91ed-115">Visual Basic の "c:\\\MyDir C#"、または "c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="f91ed-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="f91ed-116">"の MyDir\\\MySubdir" C#、または Visual Basic の "MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="f91ed-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="f91ed-117">"\\\\\\\ MyServer\\\MyShare" C#、または\\の "Visual Basic 「\myserver\myshare」"。</span><span class="sxs-lookup"><span data-stu-id="f91ed-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="f91ed-118">既定では、すべてのユーザーに対して、新しいディレクトリへの完全な読み取り/書き込みアクセス権が付与されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="f91ed-119">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-120">次の例は、`DirectoryInfo` クラスの主なメンバーの一部を示しています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="f91ed-121">次の例では、ディレクトリとその内容をコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-122">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-122">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-123">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-124">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="f91ed-125">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="f91ed-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f91ed-126"><see langword="DirectoryInfo" /> を作成する対象のパスを指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="f91ed-127">指定したパスに対する、<see cref="T:System.IO.DirectoryInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-128">このコンストラクターは、ディレクトリが存在するかどうかを確認しません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="f91ed-129">このコンストラクターは、後続の操作でディスクにアクセスするために使用される文字列のプレースホルダーです。</span><span class="sxs-lookup"><span data-stu-id="f91ed-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="f91ed-130">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f91ed-131">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="f91ed-132">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-132">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-133">次の例では、このコンストラクターを使用して、指定したディレクトリとサブディレクトリを作成し、サブディレクトリを含むディレクトリを削除できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-134"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-135">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-136"><paramref name="path" /> に、"、&lt;、&gt;、| など、無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="f91ed-137">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-138">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-138">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-139">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-139">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-140">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-140">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-141">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-141">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-142">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-142">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-143">ディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-143">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="f91ed-144">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-144">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-145">次の例では、指定されたディレクトリが存在するかどうかを確認し、ディレクトリが存在しない場合は作成して、ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-145">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f91ed-146">ディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-146">The directory cannot be created.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-147">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-147">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-148">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-148">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-149">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-149">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="f91ed-150">ディレクトリに適用するアクセス制御。</span><span class="sxs-lookup"><span data-stu-id="f91ed-150">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="f91ed-151"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトを使用してディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-151">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-152">このメソッドオーバーロードを使用してアクセス制御を持つディレクトリを作成するため、セキュリティが適用される前にディレクトリにアクセスできる可能性はありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-152">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="f91ed-153">ディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-153">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="f91ed-154">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-154">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="f91ed-155">このメソッドは、`System.Security.AccessControl` アセンブリ: <xref:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)>の一部として、`FileSystemAclExtensions` クラスの拡張メソッドとして .NET Core 3.1 に移植されました。</span><span class="sxs-lookup"><span data-stu-id="f91ed-155">This method was ported to .NET Core 3.1 as an extension method of the `FileSystemAclExtensions` class as part of the `System.Security.AccessControl` assembly: <xref:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)>.</span></span>

## Examples

<span data-ttu-id="f91ed-156">次のコード例では、指定されたディレクトリセキュリティ属性を使用して、ユーザーの一時フォルダー内に新しいディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-156">The following code example creates a new directory inside the user's temporary folder with the specified directory security attributes:</span></span>

```csharp
using System.IO;
using System.Security.AccessControl;
using System.Security.Principal;
namespace ConsoleApp
{
    class Program
    {
        static void Main()
        {
            DirectorySecurity security = new DirectorySecurity();
            SecurityIdentifier identity = new SecurityIdentifier(WellKnownSidType.BuiltinUsersSid, null);
            FileSystemAccessRule accessRule = new FileSystemAccessRule(identity, FileSystemRights.FullControl, AccessControlType.Allow);
            security.AddAccessRule(accessRule);
            string path = Path.Combine(Path.GetTempPath(), "directoryToCreate");
            DirectoryInfo dirInfo = new DirectoryInfo(path);
            dirInfo.Create(security);
        }
    }
}
```

 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f91ed-157"><paramref name="path" /> で指定されたディレクトリは読み取り専用であるか、空ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-157">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="f91ed-158">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-158">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-159"><paramref name="path" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-159"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-160"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-160"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="f91ed-161">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-161">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-162">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-162">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f91ed-163">コロン (:) 文字だけで、ディレクトリを作成しようとしました。</span><span class="sxs-lookup"><span data-stu-id="f91ed-163">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-164">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-164">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="f91ed-165">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-165">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f91ed-166">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="f91ed-166">The specified path.</span></span> <span data-ttu-id="f91ed-167">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-167">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="f91ed-168">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-168">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="f91ed-169">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-169">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="f91ed-170"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="f91ed-170">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-171">`path` の一部が無効な場合を除き、`path` で指定されたすべてのディレクトリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-171">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="f91ed-172">`path` パラメーターは、ファイルパスではなく、ディレクトリパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-172">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="f91ed-173">サブディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-173">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="f91ed-174">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-174">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-175">次の例は、サブディレクトリを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-175">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="f91ed-176">この例では、作成されたディレクトリは作成後に削除されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-176">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="f91ed-177">したがって、このサンプルをテストするには、コード内の削除行をコメントアウトします。</span><span class="sxs-lookup"><span data-stu-id="f91ed-177">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-178"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-178"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-179"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-179"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-180">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-180">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f91ed-181">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-181">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="f91ed-182">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-182">-or-</span></span> 
<span data-ttu-id="f91ed-183"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-183">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="f91ed-184">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-184">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-185">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-185">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="f91ed-186">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-186">-or-</span></span> 
<span data-ttu-id="f91ed-187">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-187">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="f91ed-188"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-188">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f91ed-189"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-189"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-190">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-190">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-191">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-191">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-192">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-192">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f91ed-193">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="f91ed-193">The specified path.</span></span> <span data-ttu-id="f91ed-194">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-194">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="f91ed-195">適用するセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="f91ed-195">The security to apply.</span></span></param>
        <summary><span data-ttu-id="f91ed-196">適用するセキュリティを指定して、指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-196">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="f91ed-197">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-197">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="f91ed-198"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="f91ed-198">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-199">`path` の一部が無効な場合を除き、`path` で指定されたすべてのディレクトリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-199">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="f91ed-200">`path` パラメーターは、ファイルパスではなく、ディレクトリパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-200">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="f91ed-201">サブディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-201">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="f91ed-202">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-202">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-203"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-203"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-204"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-204"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-205">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-205">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f91ed-206">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-206">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="f91ed-207">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-207">-or-</span></span> 
<span data-ttu-id="f91ed-208"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-208">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="f91ed-209">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-209">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-210">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-210">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="f91ed-211">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-211">-or-</span></span> 
<span data-ttu-id="f91ed-212">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-212">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="f91ed-213"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-213">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f91ed-214"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-214"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-215">パスから <see cref="T:System.IO.DirectoryInfo" /> とその内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-215">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-216"><see cref="T:System.IO.DirectoryInfo" /> が空の場合に、そのインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-216">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-217">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-217">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-218">次の例では、空でないディレクトリを削除しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-218">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="f91ed-219">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-219">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-220">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="f91ed-220">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f91ed-221">ディレクトリが空ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-221">The directory is not empty.</span></span>  
  
<span data-ttu-id="f91ed-222">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-222">-or-</span></span> 
<span data-ttu-id="f91ed-223">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="f91ed-223">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="f91ed-224">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-224">-or-</span></span> 
<span data-ttu-id="f91ed-225">ディレクトリに開いているハンドルがあり、オペレーティング システムが Windows XP かそれ以前のバージョンです。</span><span class="sxs-lookup"><span data-stu-id="f91ed-225">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="f91ed-226">このハンドルが開いている原因は、ディレクトリを列挙したことにある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-226">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="f91ed-227">詳細については、「[方法: ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-227">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-228">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-228">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-229">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-229">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-230">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-230">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-231">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-231">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="f91ed-232">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f91ed-232"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f91ed-233">中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<see cref="T:System.IO.DirectoryInfo" /> のインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-233">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-234">`DirectoryInfo` にファイルまたはサブディレクトリがない場合、このメソッドは `recursive` が `false`されていても `DirectoryInfo` を削除します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-234">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="f91ed-235">`recursive` が `false` ときに空ではない `DirectoryInfo` を削除しようとすると、<xref:System.IO.IOException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-235">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="f91ed-236">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-236">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-237">次の例は、ディレクトリを削除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-237">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="f91ed-238">ディレクトリが削除されているため、最初に `Delete` 行をコメントアウトして、ディレクトリが存在することをテストします。</span><span class="sxs-lookup"><span data-stu-id="f91ed-238">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="f91ed-239">次に、同じコード行のコメントを解除して、ディレクトリが正常に削除されたことをテストします。</span><span class="sxs-lookup"><span data-stu-id="f91ed-239">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="f91ed-240">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-240">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-241">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="f91ed-241">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f91ed-242">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-242">The directory is read-only.</span></span>  
  
<span data-ttu-id="f91ed-243">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-243">-or-</span></span> 
<span data-ttu-id="f91ed-244">ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、かつ <paramref name="recursive" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-244">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="f91ed-245">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-245">-or-</span></span> 
<span data-ttu-id="f91ed-246">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="f91ed-246">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="f91ed-247">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-247">-or-</span></span> 
<span data-ttu-id="f91ed-248">ディレクトリまたはそのファイルのうちの 1 つについて開かれているハンドルがあり、かつオペレーティング システムが Windows XP 以前です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-248">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="f91ed-249">このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-249">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="f91ed-250">詳細については、「[方法: ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-250">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-251">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-251">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-252">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-252">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-253">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-253">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-254">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-254">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-255">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-255">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-256">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-256">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="f91ed-257">現在のディレクトリ内の列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-257">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-258"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-258">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-259"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-259">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-260"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-260">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-261">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-261">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-262">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-262">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="f91ed-263">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-263">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-264">次の例では、C:\Program Files ディレクトリの下にあるサブディレクトリを列挙し、LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> プロパティの値を確認することにより、2009より前に作成されたすべてのディレクトリの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-264">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="f91ed-265">サブディレクトリの名前のみが必要な場合は、静的 <xref:System.IO.Directory> クラスを使用してパフォーマンスを向上させます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-265">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="f91ed-266">例については、<xref:System.IO.Directory.EnumerateDirectories%28System.String%29> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-266">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-267"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-267">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-268">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-268">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-269">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-269">The search string to match against the names of directories.</span></span>  <span data-ttu-id="f91ed-270">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-270">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="f91ed-271">指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-271">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="f91ed-272"><paramref name="searchPattern" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-272">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-273">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-273">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-274">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-274">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-275">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-275">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-276">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-276">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-277">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-277">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-278">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-278">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-279">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-279">?</span></span> <span data-ttu-id="f91ed-280">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-280">(question mark)</span></span>|<span data-ttu-id="f91ed-281">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-281">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-282">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-282">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-283">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-283">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-284">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-284">".</span></span> <span data-ttu-id="f91ed-285">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-285">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-286"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-286">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-287"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-287">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-288"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-288">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-289">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-289">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-290">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-290">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="f91ed-291">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-291">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-292"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-292"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-293"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-293">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-294">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-294">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-295">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-295">The search string to match against the names of directories.</span></span> <span data-ttu-id="f91ed-296">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-296">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="f91ed-297">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-297">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="f91ed-298">指定した検索パターンおよび列挙オプションに一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-298">Returns an enumerable collection of directory information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="f91ed-299"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-299">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-300">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-300">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-301">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-301">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-302">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-302">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-303">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-303">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-304">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-304">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-305">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-305">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-306">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-306">?</span></span> <span data-ttu-id="f91ed-307">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-307">(question mark)</span></span>|<span data-ttu-id="f91ed-308">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-308">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-309">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-309">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-310">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-310">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-311">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-311">".</span></span> <span data-ttu-id="f91ed-312">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-312">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-313"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-313">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-314"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-314">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-315"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-315">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-316">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-316">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-317">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-317">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="f91ed-318">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-318">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-319"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-319"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-320"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-320">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-321">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-321">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-322">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-322">The search string to match against the names of directories.</span></span>  <span data-ttu-id="f91ed-323">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-323">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="f91ed-324">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f91ed-324">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="f91ed-325">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-325">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="f91ed-326">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-326">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="f91ed-327"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-327">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-328">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-328">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-329">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-329">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-330">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-330">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-331">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-331">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-332">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-332">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-333">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-333">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-334">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-334">?</span></span> <span data-ttu-id="f91ed-335">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-335">(question mark)</span></span>|<span data-ttu-id="f91ed-336">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-336">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-337">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-337">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-338">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-338">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-339">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-339">".</span></span> <span data-ttu-id="f91ed-340">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-340">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-341"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-341">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-342"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-342">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-343"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-343">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-344">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-344">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-345">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-345">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="f91ed-346">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-346">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-347">次の例では、指定されたディレクトリから開始し、このメソッドと <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドを使用して、start ディレクトリ内のファイルとディレクトリを列挙し、サイズが 10 MB を超えるファイルの詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-347">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-348"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-348"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f91ed-349"><paramref name="searchOption" /> が有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-349"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-350"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-350">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-351">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-351">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-352">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-352">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-353">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-353">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="f91ed-354">現在のディレクトリ内の列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-354">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-355"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-355">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-356"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-356">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-357"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-357">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-358">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-358">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-359">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-359">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="f91ed-360">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-360">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-361">次の例では、指定されたディレクトリにあるファイルを列挙し、LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> プロパティの値を確認することにより、2009より前に作成されたすべてのファイルの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-361">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="f91ed-362">ファイル名のみが必要な場合は、静的 <xref:System.IO.Directory> クラスを使用してパフォーマンスを向上させてください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-362">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="f91ed-363">例については、<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-363">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="f91ed-364">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-364">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="f91ed-365">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-365">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-366"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-366">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-367">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-367">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-368">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-368">The search string to match against the names of files.</span></span>  <span data-ttu-id="f91ed-369">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-369">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="f91ed-370">検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-370">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="f91ed-371"><paramref name="searchPattern" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-371">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-372">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-372">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-373">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-373">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-374">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-374">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-375">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-375">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-376">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-376">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-377">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-377">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-378">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-378">?</span></span> <span data-ttu-id="f91ed-379">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-379">(question mark)</span></span>|<span data-ttu-id="f91ed-380">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-380">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-381">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-381">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-382">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-382">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-383">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-383">".</span></span> <span data-ttu-id="f91ed-384">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-384">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-385"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-385">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-386"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-386">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-387"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-387">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-388">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-388">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-389">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-389">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="f91ed-390">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-390">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-391">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-391">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="f91ed-392">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-392">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-393"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-393"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-394"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-394">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-395">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-395">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-396">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-396">The search string to match against the names of files.</span></span> <span data-ttu-id="f91ed-397">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-397">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="f91ed-398">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-398">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="f91ed-399">指定された検索パターンと列挙オプションに一致するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-399">Returns an enumerable collection of file information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="f91ed-400"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-400">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-401">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-401">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-402">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-402">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-403">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-403">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-404">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-404">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-405">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-405">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-406">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-406">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-407">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-407">?</span></span> <span data-ttu-id="f91ed-408">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-408">(question mark)</span></span>|<span data-ttu-id="f91ed-409">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-409">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-410">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-410">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-411">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-411">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-412">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-412">".</span></span> <span data-ttu-id="f91ed-413">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-413">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-414"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-414">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-415"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-415">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-416"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-416">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-417">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-417">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-418">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-418">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="f91ed-419">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-419">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-420"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-420"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-421"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-421">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-422">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-422">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-423">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-423">The search string to match against the names of files.</span></span>  <span data-ttu-id="f91ed-424">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-424">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="f91ed-425">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f91ed-425">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="f91ed-426">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-426">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="f91ed-427">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-427">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="f91ed-428"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-428">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-429">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-429">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-430">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-430">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-431">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-431">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-432">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-432">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-433">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-433">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-434">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-434">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-435">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-435">?</span></span> <span data-ttu-id="f91ed-436">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-436">(question mark)</span></span>|<span data-ttu-id="f91ed-437">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-437">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-438">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-438">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-439">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-439">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-440">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-440">".</span></span> <span data-ttu-id="f91ed-441">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-441">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-442"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-442">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-443"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-443">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-444"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-444">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-445">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-445">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-446">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-446">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="f91ed-447">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-447">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-448">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-448">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="f91ed-449">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-449">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-450"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-450"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f91ed-451"><paramref name="searchOption" /> が有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-451"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-452"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-452">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-453">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-453">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-454">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-454">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-455">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-455">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="f91ed-456">現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-456">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-457"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-457">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-458"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-458">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-459"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-459">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-460">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-460">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-461">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-461">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="f91ed-462">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-462">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-463"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-463">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-464">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-464">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-465">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-465">The search string to match against the names of directories.</span></span>  <span data-ttu-id="f91ed-466">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-466">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="f91ed-467">指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-467">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="f91ed-468"><paramref name="searchPattern" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-468">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-469">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-469">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-470">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-470">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-471">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-471">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-472">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-472">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-473">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-473">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-474">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-474">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-475">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-475">?</span></span> <span data-ttu-id="f91ed-476">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-476">(question mark)</span></span>|<span data-ttu-id="f91ed-477">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-477">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-478">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-478">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-479">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-479">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-480">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-480">".</span></span> <span data-ttu-id="f91ed-481">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-481">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-482"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-482">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-483"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-483">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-484"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-484">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-485">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-485">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-486">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-486">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="f91ed-487">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-487">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-488"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-488"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-489"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-489">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-490">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-490">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-491">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-491">The search string to match against the names of directories.</span></span> <span data-ttu-id="f91ed-492">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-492">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="f91ed-493">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-493">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="f91ed-494">指定した検索パターンと列挙オプションに一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-494">Returns an enumerable collection of file system information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="f91ed-495"><paramref name="searchPattern" /> および <paramref name="enumerationOptions" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-495">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-496">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-496">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-497">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-497">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-498">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-498">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-499">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-499">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-500">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-500">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-501">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-501">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-502">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-502">?</span></span> <span data-ttu-id="f91ed-503">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-503">(question mark)</span></span>|<span data-ttu-id="f91ed-504">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-504">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-505">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-505">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-506">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-506">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-507">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-507">".</span></span> <span data-ttu-id="f91ed-508">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-508">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-509"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-509">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-510"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-510">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-511"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-511">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-512">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-512">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-513">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-513">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="f91ed-514">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-514">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-515"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-515"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-516"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-516">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-517">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-517">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-518">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-518">The search string to match against the names of directories.</span></span>  <span data-ttu-id="f91ed-519">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-519">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="f91ed-520">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f91ed-520">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="f91ed-521">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-521">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="f91ed-522">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-522">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="f91ed-523"><paramref name="searchPattern" /> および <paramref name="searchOption" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f91ed-523">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-524">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-524">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-525">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-525">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-526">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-526">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-527">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-527">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-528">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-528">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-529">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-529">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-530">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-530">?</span></span> <span data-ttu-id="f91ed-531">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-531">(question mark)</span></span>|<span data-ttu-id="f91ed-532">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-532">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-533">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-533">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-534">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-534">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-535">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-535">".</span></span> <span data-ttu-id="f91ed-536">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-536">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-537"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-537">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-538"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-538">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-539"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-539">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-540">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-540">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-541">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-541">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="f91ed-542">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-542">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-543"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-543"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f91ed-544"><paramref name="searchOption" /> が有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-544"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-545"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-545">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-546">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-546">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f91ed-547">ディレクトリが存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-547">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="f91ed-548">ディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f91ed-548"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-549"><xref:System.IO.DirectoryInfo.Exists%2A> プロパティは、指定されたファイルが存在するかどうかを判断する際にエラーが発生した場合に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-549">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="f91ed-550">これは、無効な文字を含むファイル名の受け渡し、文字の数が多すぎる、ディスクの障害が発生した、または呼び出し元にファイルの読み取りアクセス許可がないなどの例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-550">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-551">次の例は、ソースディレクトリをターゲットディレクトリにコピーするコンテキストでの `Exists` プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-551">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-552">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-552">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-553">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-553">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-554">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-554">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f91ed-555">ディレクトリの絶対パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-555">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="f91ed-556">絶対パスを含んでいる文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-556">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-557">現在のディレクトリのアクセス制御リスト (ACL: Access Control List) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-557">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-558"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-558">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="f91ed-559">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-559">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-560">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-560">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="f91ed-561">ディレクトリのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-561">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-562">このメソッドのオーバーロードを呼び出すことは、<xref:System.IO.Directory.GetAccessControl%2A> メソッドのオーバーロードを呼び出し、アクセス制御&#124;セクション&#124; <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>) を指定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="f91ed-562">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="f91ed-563"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-563">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="f91ed-564">ACL は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-564">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="f91ed-565">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-565">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-566">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A> および <xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドを使用して、ディレクトリからアクセス制御リスト (ACL) エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-566">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="f91ed-567">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-567">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="f91ed-568">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-568">The directory is read-only.</span></span>  
  
 <span data-ttu-id="f91ed-569">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-569">-or-</span></span>  
  
 <span data-ttu-id="f91ed-570">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-570">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="f91ed-571">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-571">-or-</span></span>  
  
 <span data-ttu-id="f91ed-572">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-572">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f91ed-573">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="f91ed-573">An I/O error occurred while opening the directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="f91ed-574">取得するアクセス制御リスト (ACL) の情報の型を指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f91ed-574">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="f91ed-575">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトによって記述されるディレクトリに関する指定された型のアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-575">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="f91ed-576"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> パラメーターによって記述されるファイルのアクセス制御規則をカプセル化する <paramref name="path" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-576">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="f91ed-577">例外</span><span class="sxs-lookup"><span data-stu-id="f91ed-577">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="f91ed-578">例外の種類</span><span class="sxs-lookup"><span data-stu-id="f91ed-578">Exception type</span></span> 
 </term><description> <span data-ttu-id="f91ed-579">条件</span><span class="sxs-lookup"><span data-stu-id="f91ed-579">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="f91ed-580">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-580">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="f91ed-581">現在のプロセスには、ディレクトリを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-581">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="f91ed-582">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="f91ed-582">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="f91ed-583">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-583">The directory is read-only.</span></span>  
  
<span data-ttu-id="f91ed-584">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-584">-or-</span></span> 
<span data-ttu-id="f91ed-585">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-585">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="f91ed-586">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-586">-or-</span></span> 
<span data-ttu-id="f91ed-587">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-587">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-588"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-588">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="f91ed-589">ACL は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-589">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="f91ed-590">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-590">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-591">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-591">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-592">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-592">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="f91ed-593"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトの配列です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-593">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-594">サブディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-594">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="f91ed-595">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-595">This method is not recursive.</span></span>  
  
 <span data-ttu-id="f91ed-596">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-596">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-597">次の例では、ルートディレクトリ内のすべてのディレクトリを取得し、ディレクトリ名を表示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-597">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-598"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-598">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-599">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-599">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="f91ed-600">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-600">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-601">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-601">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-602">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-602">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-603">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-603">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-604">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-604">The search string to match against the names of directories.</span></span>  <span data-ttu-id="f91ed-605">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-605">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="f91ed-606">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-606">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="f91ed-607"><see langword="DirectoryInfo" /> に一致する <paramref name="searchPattern" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-607">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-608">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-608">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-609">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-609">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-610">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-610">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-611">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-611">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-612">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-612">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-613">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-613">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-614">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-614">?</span></span> <span data-ttu-id="f91ed-615">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-615">(question mark)</span></span>|<span data-ttu-id="f91ed-616">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-616">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-617">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-617">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-618">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-618">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-619">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-619">".</span></span> <span data-ttu-id="f91ed-620">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-620">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-621">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-621">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-622">次の例では、指定された文字を含むパス内のディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="f91ed-622">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-623"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-623"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-624"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-624"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-625"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-625">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="f91ed-626">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-626">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-627">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-627">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-628">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-628">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-629">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-629">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-630">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-630">The search string to match against the names of directories.</span></span> <span data-ttu-id="f91ed-631">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-631">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="f91ed-632">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-632">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="f91ed-633">指定した検索パターンと列挙オプションに一致する、現在の <see cref="T:System.IO.DirectoryInfo" /> 内のディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-633">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="f91ed-634"><see langword="DirectoryInfo" /> と <paramref name="searchPattern" /> に一致する <paramref name="enumerationOptions" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-634">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-635">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-635">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-636">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-636">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-637">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-637">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-638">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-638">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-639">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-639">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-640">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-640">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-641">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-641">?</span></span> <span data-ttu-id="f91ed-642">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-642">(question mark)</span></span>|<span data-ttu-id="f91ed-643">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-643">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-644">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-644">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-645">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-645">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-646">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-646">".</span></span> <span data-ttu-id="f91ed-647">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-647">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-648">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-648">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-649"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-649"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-650"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-650"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-651"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-651">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="f91ed-652">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-652">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-653">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-653">The search string to match against the names of directories.</span></span>  <span data-ttu-id="f91ed-654">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-654">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="f91ed-655">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f91ed-655">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="f91ed-656">指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つ、現在の <see cref="T:System.IO.DirectoryInfo" /> 内のディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-656">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="f91ed-657"><see langword="DirectoryInfo" /> に一致する <paramref name="searchPattern" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-657">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-658">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-658">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-659">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-659">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-660">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-660">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-661">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-661">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-662">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-662">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-663">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-663">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-664">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-664">?</span></span> <span data-ttu-id="f91ed-665">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-665">(question mark)</span></span>|<span data-ttu-id="f91ed-666">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-666">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-667">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-667">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-668">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-668">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-669">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-669">".</span></span> <span data-ttu-id="f91ed-670">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-670">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-671">サブディレクトリが存在しない場合、または `searchPattern` パラメーターに一致するサブディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-671">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="f91ed-672">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-672">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-673">次の例では、"c:\\" の文字 "c" で始まるすべてのディレクトリとファイルを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-673">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-674"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-674"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-675"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-675"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f91ed-676"><paramref name="searchOption" /> が有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-676"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-677"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-677">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="f91ed-678">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-678">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-679">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-679">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-680">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-680">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-681">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-681">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-682">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-682">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-683">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-683">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="f91ed-684"><see cref="T:System.IO.FileInfo" /> 型の配列です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-684">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-685"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-685">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-686"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-686">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-687"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-687">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-688">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-688">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-689"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-689">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="f91ed-690">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-690">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="f91ed-691">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-691">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-692">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-692">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="f91ed-693">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-693">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-694">マップされていないドライブにあるなど、パスが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-694">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-695">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-695">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-696">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-696">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-697">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-697">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-698">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-698">The search string to match against the names of files.</span></span>  <span data-ttu-id="f91ed-699">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-699">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="f91ed-700">現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-700">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="f91ed-701"><see cref="T:System.IO.FileInfo" /> 型の配列です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-701">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-702">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-702">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-703">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-703">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-704">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-704">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-705">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-705">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-706">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-706">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-707">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-707">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-708">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-708">?</span></span> <span data-ttu-id="f91ed-709">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-709">(question mark)</span></span>|<span data-ttu-id="f91ed-710">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-710">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-711">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-711">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-712">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-712">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-713">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-713">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-714"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-714">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-715"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-715">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-716"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-716">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-717">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-717">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-718"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-718">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="f91ed-719">`searchPattern` パラメーターでは、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-719">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="f91ed-720">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="f91ed-720">Wildcard character</span></span>|<span data-ttu-id="f91ed-721">説明</span><span class="sxs-lookup"><span data-stu-id="f91ed-721">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="f91ed-722">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-722">Zero or more characters.</span></span>|  
|<span data-ttu-id="f91ed-723">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-723">?</span></span>|<span data-ttu-id="f91ed-724">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-724">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="f91ed-725">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-725">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="f91ed-726">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-726">Wildcards are permitted.</span></span> <span data-ttu-id="f91ed-727">たとえば、`searchPattern` 文字列 "\* .txt" は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-727">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="f91ed-728">`searchPattern` 文字列 "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-728">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="f91ed-729">ファイルがない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-729">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f91ed-730">`searchPattern` でアスタリスクのワイルドカード文字 ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-730">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="f91ed-731">ファイル拡張子が3文字の `searchPattern` は、3文字以上の拡張子を持つファイルを返します。最初の3文字は、`searchPattern`で指定されたファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-731">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="f91ed-732">ファイル拡張子が1、2、または3文字を超える `searchPattern` は、`searchPattern`で指定されたファイル拡張子と完全に一致する拡張子を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-732">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="f91ed-733">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-733">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="f91ed-734">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、" file\*.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-734">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f91ed-735">このメソッドは、8.3 ファイル名形式と長いファイル名形式の両方を含むファイル名をチェックするため、"\* 1\*.txt" に類似した検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-735">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="f91ed-736">たとえば、"\*1\*.txt" という検索パターンを使用すると、8.3 ファイル名の形式が "longfilename ~ 1 .txt" になるため、"longfilename. .txt" が返されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-736">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="f91ed-737">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-737">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-738">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-738">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="f91ed-739">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-739">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-740"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-740"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-741"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-741"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-742">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-742">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-743">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-743">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-744">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-744">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-745">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-745">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-746">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-746">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-747">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-747">The search string to match against the names of files.</span></span> <span data-ttu-id="f91ed-748">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-748">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="f91ed-749">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-749">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="f91ed-750">指定した検索パターンと列挙オプションに一致する現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-750">Returns a file list from the current directory matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="f91ed-751"><see cref="T:System.IO.FileInfo" /> と <paramref name="searchPattern" /> に一致する、厳密に型指定された <paramref name="enumerationOptions" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-751">An array of strongly typed <see cref="T:System.IO.FileInfo" /> objects that match <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-752">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-752">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-753">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-753">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-754">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-754">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-755">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-755">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-756">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-756">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-757">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-757">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-758">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-758">?</span></span> <span data-ttu-id="f91ed-759">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-759">(question mark)</span></span>|<span data-ttu-id="f91ed-760">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-760">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-761">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-761">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-762">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-762">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-763">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-763">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-764"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-764">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-765"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-765">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-766"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-766">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-767">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-767">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-768"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-768">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="f91ed-769">`searchPattern` パラメーターでは、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-769">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="f91ed-770">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="f91ed-770">Wildcard character</span></span>|<span data-ttu-id="f91ed-771">説明</span><span class="sxs-lookup"><span data-stu-id="f91ed-771">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="f91ed-772">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-772">Zero or more characters.</span></span>|  
|<span data-ttu-id="f91ed-773">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-773">?</span></span>|<span data-ttu-id="f91ed-774">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-774">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="f91ed-775">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-775">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="f91ed-776">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-776">Wildcards are permitted.</span></span> <span data-ttu-id="f91ed-777">たとえば、`searchPattern` 文字列 "\* .txt" は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-777">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="f91ed-778">`searchPattern` 文字列 "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-778">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="f91ed-779">ファイルがない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-779">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f91ed-780">`searchPattern` でアスタリスクのワイルドカード文字 ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-780">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="f91ed-781">ファイル拡張子が3文字の `searchPattern` は、3文字以上の拡張子を持つファイルを返します。最初の3文字は、`searchPattern`で指定されたファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-781">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="f91ed-782">ファイル拡張子が1、2、または3文字を超える `searchPattern` は、`searchPattern`で指定されたファイル拡張子と完全に一致する拡張子を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-782">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="f91ed-783">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-783">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="f91ed-784">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、" file\*.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-784">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f91ed-785">このメソッドは、8.3 ファイル名形式と長いファイル名形式の両方を含むファイル名をチェックするため、"\* 1\*.txt" に類似した検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-785">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="f91ed-786">たとえば、"\*1\*.txt" という検索パターンを使用すると、8.3 ファイル名の形式が "longfilename ~ 1 .txt" になるため、"longfilename. .txt" が返されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-786">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="f91ed-787">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-787">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-788"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-788"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-789"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-789"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-790">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-790">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-791">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-791">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-792">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-792">The search string to match against the names of files.</span></span>  <span data-ttu-id="f91ed-793">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-793">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="f91ed-794">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f91ed-794">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="f91ed-795">現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-795">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="f91ed-796"><see cref="T:System.IO.FileInfo" /> 型の配列です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-796">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-797"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-797">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="f91ed-798"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-798">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="f91ed-799"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-799">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="f91ed-800">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-800">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="f91ed-801"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-801">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="f91ed-802">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-802">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-803">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="f91ed-803">Wildcard character</span></span>|<span data-ttu-id="f91ed-804">説明</span><span class="sxs-lookup"><span data-stu-id="f91ed-804">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="f91ed-805">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-805">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-806">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-806">Zero or more characters.</span></span>|  
|<span data-ttu-id="f91ed-807">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-807">?</span></span> <span data-ttu-id="f91ed-808">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-808">(question mark)</span></span>|<span data-ttu-id="f91ed-809">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-809">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="f91ed-810">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-810">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="f91ed-811">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-811">Wildcards are permitted.</span></span> <span data-ttu-id="f91ed-812">たとえば、`searchPattern` 文字列 "\* .txt" は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-812">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="f91ed-813">`searchPattern` 文字列 "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-813">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="f91ed-814">ファイルがない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-814">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f91ed-815">`searchPattern` でアスタリスクのワイルドカード文字 ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-815">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="f91ed-816">ファイル拡張子が3文字の `searchPattern` は、3文字以上の拡張子を持つファイルを返します。最初の3文字は、`searchPattern`で指定されたファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-816">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="f91ed-817">ファイル拡張子が1、2、または3文字を超える `searchPattern` は、`searchPattern`で指定されたファイル拡張子と完全に一致する拡張子を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-817">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="f91ed-818">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-818">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="f91ed-819">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、" file\*.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-819">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="f91ed-820">次の一覧は、`searchPattern` パラメーターのさまざまな長さの動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-820">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="f91ed-821">"\* abc" は、拡張子が abc、abcd、abcde...z、abcdef などのファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-821">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="f91ed-822">"\* abcd" は、拡張子が abcd のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-822">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="f91ed-823">"\* abcde...z" は拡張子が abcde...z のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-823">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="f91ed-824">"\* abcdef" は拡張子が abcdef のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-824">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f91ed-825">このメソッドは、8.3 ファイル名形式と長いファイル名形式の両方を含むファイル名をチェックするため、"\* 1\*.txt" に類似した検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-825">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="f91ed-826">たとえば、"\*1\*.txt" という検索パターンを使用すると、8.3 ファイル名の形式が "longfilename ~ 1 .txt" になるため、"longfilename. .txt" が返されます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-826">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="f91ed-827">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-827">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-828">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-828">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="f91ed-829">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-829">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-830"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-830"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-831"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-831"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f91ed-832"><paramref name="searchOption" /> が有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-832"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-833">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-833">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-834">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-834">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-835">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-835">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-836">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-836">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-837">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-837">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f91ed-838">現在のディレクトリのファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-838">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-839">ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-839">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="f91ed-840">厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-840">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-841"><xref:System.IO.DirectoryInfo>にファイルまたはディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-841">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="f91ed-842">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-842">This method is not recursive.</span></span>  
  
 <span data-ttu-id="f91ed-843">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-843">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="f91ed-844"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-844">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="f91ed-845">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-845">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-846">次の例では、指定されたディレクトリにあるファイルとディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="f91ed-846">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-847">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-847">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-848">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-848">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-849">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-849">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-850">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-850">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-851">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-851">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="f91ed-852">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-852">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="f91ed-853">指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-853">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="f91ed-854">検索基準に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-854">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-855">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-855">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-856">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-856">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-857">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-857">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-858">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-858">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-859">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-859">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-860">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-860">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-861">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-861">?</span></span> <span data-ttu-id="f91ed-862">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-862">(question mark)</span></span>|<span data-ttu-id="f91ed-863">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-863">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-864">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-864">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-865">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-865">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-866">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-866">".</span></span> <span data-ttu-id="f91ed-867">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-867">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-868">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-868">This method is not recursive.</span></span>  
  
 <span data-ttu-id="f91ed-869">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-869">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="f91ed-870"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-870">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="f91ed-871">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-871">Wild cards are permitted.</span></span> <span data-ttu-id="f91ed-872">たとえば、`searchPattern` 文字列 "\*t" は、末尾が文字 "t" である `path` 内のすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-872">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="f91ed-873">`searchPattern` 文字列 "s\*" は、`path` 内の文字 "s" で始まるすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-873">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-874">文字列 ".." は、ディレクトリ名 "a. のように有効なディレクトリ名の一部として指定されている場合にのみ、`searchPattern` で使用できます。b "のようになります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-874">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="f91ed-875">ディレクトリ階層の上に移動するために使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-875">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="f91ed-876">ファイルまたはディレクトリが存在しない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルやディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-876">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="f91ed-877">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-877">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-878">次の例では、指定した検索パターンに一致するファイルとディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="f91ed-878">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-879"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-879"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-880"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-880"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-881">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-881">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-882">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-882">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-883">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-883">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-884">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-884">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-885">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-885">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-886">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-886">The search string to match against the names of directories and files.</span></span> <span data-ttu-id="f91ed-887">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-887">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="f91ed-888">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-888">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="f91ed-889">指定した検索パターンと列挙オプションに一致するファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-889">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="f91ed-890"><see langword="FileSystemInfo" /> と <paramref name="searchPattern" /> に一致する、厳密に型指定された <paramref name="enumerationOptions" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-890">An array of strongly typed <see langword="FileSystemInfo" /> objects matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-891">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-891">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-892">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-892">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-893">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-893">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-894">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-894">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-895">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-895">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-896">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-896">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-897">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-897">?</span></span> <span data-ttu-id="f91ed-898">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-898">(question mark)</span></span>|<span data-ttu-id="f91ed-899">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-899">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-900">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-900">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-901">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-901">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-902">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-902">".</span></span> <span data-ttu-id="f91ed-903">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-903">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-904">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-904">This method is not recursive.</span></span>  
  
 <span data-ttu-id="f91ed-905">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-905">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="f91ed-906"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-906">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="f91ed-907">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-907">Wild cards are permitted.</span></span> <span data-ttu-id="f91ed-908">たとえば、`searchPattern` 文字列 "\*t" は、末尾が文字 "t" である `path` 内のすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-908">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="f91ed-909">`searchPattern` 文字列 "s\*" は、`path` 内の文字 "s" で始まるすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-909">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-910">文字列 ".." は、ディレクトリ名 "a. のように有効なディレクトリ名の一部として指定されている場合にのみ、`searchPattern` で使用できます。b "のようになります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-910">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="f91ed-911">ディレクトリ階層の上に移動するために使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-911">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="f91ed-912">ファイルまたはディレクトリが存在しない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルやディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-912">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="f91ed-913">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-913">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-914"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-914"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-915"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-915"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-916">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-916">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-917">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-917">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="f91ed-918">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-918">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="f91ed-919">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-919">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="f91ed-920">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f91ed-920">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="f91ed-921">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-921">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="f91ed-922">指定した検索条件に一致するファイルおよびサブディレクトリを表す <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-922">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="f91ed-923">検索条件に一致するファイル システム エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="f91ed-923">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-924">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-924">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="f91ed-925">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-925">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="f91ed-926">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="f91ed-926">Wildcard specifier</span></span>|<span data-ttu-id="f91ed-927">次と一致する</span><span class="sxs-lookup"><span data-stu-id="f91ed-927">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="f91ed-928">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="f91ed-928">\* (asterisk)</span></span>|<span data-ttu-id="f91ed-929">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-929">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="f91ed-930">?</span><span class="sxs-lookup"><span data-stu-id="f91ed-930">?</span></span> <span data-ttu-id="f91ed-931">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="f91ed-931">(question mark)</span></span>|<span data-ttu-id="f91ed-932">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="f91ed-932">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="f91ed-933">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-933">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="f91ed-934">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-934">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="f91ed-935">" など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-935">".</span></span> <span data-ttu-id="f91ed-936">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-936">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="f91ed-937">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-937">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="f91ed-938"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-938">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="f91ed-939">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-939">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-940"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f91ed-940"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-941"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-941"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f91ed-942"><paramref name="searchOption" /> が有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-942"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-943">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-943">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-944">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-944">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="f91ed-945">このディレクトリの移動先の名前とパス。</span><span class="sxs-lookup"><span data-stu-id="f91ed-945">The name and path to which to move this directory.</span></span> <span data-ttu-id="f91ed-946">別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-946">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="f91ed-947">このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-947">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="f91ed-948"><see cref="T:System.IO.DirectoryInfo" /> のインスタンスとその内容を新しいパスに移動します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-948">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-949">たとえば、c:\mydir を c:\ に移動しようとしていて、c:\ パブリックが既に存在する場合、このメソッドは <xref:System.IO.IOException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="f91ed-949">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="f91ed-950">"C:\\\ public\\\mydir" を `destDirName` パラメーターとして指定するか、"c:\\\ newdir" のような新しいディレクトリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-950">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="f91ed-951">この方法を使うと、ディレクトリを読み取り専用ディレクトリに移動できます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-951">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="f91ed-952">どちらのディレクトリの読み取り/書き込み属性も影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-952">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="f91ed-953">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-953">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-954">次の例では、ディレクトリの移動を示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-954">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-955"><paramref name="destDirName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-955"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f91ed-956"><paramref name="destDirName" /> が空の文字列 (''") です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-956"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f91ed-957">ディレクトリを別のボリュームに移動しようとしました。</span><span class="sxs-lookup"><span data-stu-id="f91ed-957">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="f91ed-958">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-958">-or-</span></span> 
 <span data-ttu-id="f91ed-959"><paramref name="destDirName" /> が既に存在します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-959"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="f91ed-960">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-960">-or-</span></span> 
<span data-ttu-id="f91ed-961">このパスへのアクセスが許可されていません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-961">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="f91ed-962">または</span><span class="sxs-lookup"><span data-stu-id="f91ed-962">-or-</span></span> 
<span data-ttu-id="f91ed-963">移動するディレクトリと対象のディレクトリの名前が同じです。</span><span class="sxs-lookup"><span data-stu-id="f91ed-963">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-964">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-964">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="f91ed-965">対象のディレクトリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-965">The destination directory cannot be found.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-966">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-966">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-967">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-967">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-968">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-968">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f91ed-969"><see cref="T:System.IO.DirectoryInfo" /> の現在のインスタンスの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-969">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="f91ed-970">ディレクトリ名。</span><span class="sxs-lookup"><span data-stu-id="f91ed-970">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-971">この <xref:System.IO.DirectoryInfo.Name%2A> プロパティは、ディレクトリの名前 ("Bin" など) のみを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-971">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="f91ed-972">"C:\ Public\bin" のような完全なパスを取得するには、<xref:System.IO.FileSystemInfo.FullName%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-972">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="f91ed-973"><xref:System.IO.DirectoryInfo> の <xref:System.IO.DirectoryInfo.Name%2A> プロパティには、(<xref:System.IO.DirectoryInfo.Exists%2A>を構築するために必要なディレクトリへの読み取りアクセス許可を超える) アクセス許可は必要ありませんが、ディレクトリ名を指定することはできます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-973">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="f91ed-974">暗号化された安全な名前で保護されたディレクトリに <xref:System.IO.DirectoryInfo> を渡す必要がある場合は、信頼されていないコードの使用用のダミーディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-974">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="f91ed-975">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-975">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-976">次の例では、現在の `DirectoryInfo` インスタンスの名前のみを表示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-976">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-977">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-977">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-978">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-978">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-979">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-979">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f91ed-980">指定されたサブディレクトリの親ディレクトリを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-980">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="f91ed-981">親ディレクトリ。パスが null の場合、またはファイルパスがルート (`\`、`C:\`、`\\server\share`など) を示している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f91ed-981">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as `\`, `C:\`, or `\\server\share`).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="f91ed-982">.NET Framework では、`Parent` は相対パスを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-982">In .NET Framework, `Parent` returns a relative path.</span></span>
> <span data-ttu-id="f91ed-983">.NET Core では、`Parent` は完全修飾パスを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-983">In .NET Core, `Parent` returns a fully qualified path.</span></span>

<span data-ttu-id="f91ed-984">バージョン間で一貫性のある動作を確保し、インテントを明示的にするには、`Parent`によって返される <xref:System.IO.DirectoryInfo> インスタンスで、次のいずれかのプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-984">To ensure consistent behavior across versions and to make your intent explicit, retrieve the value of one of the following properties on the <xref:System.IO.DirectoryInfo> instance returned by `Parent`.</span></span>
- <span data-ttu-id="f91ed-985"><xref:System.IO.DirectoryInfo.Name>。ディレクトリの簡易名を返します (`bin`など)。</span><span class="sxs-lookup"><span data-stu-id="f91ed-985"><xref:System.IO.DirectoryInfo.Name>, which returns the simple name of the directory (such as `bin`).</span></span>
- <span data-ttu-id="f91ed-986"><xref:System.IO.DirectoryInfo.FullName>。ディレクトリの絶対パスを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-986"><xref:System.IO.DirectoryInfo.FullName>, which returns the absolute path of the directory.</span></span> 


<span data-ttu-id="f91ed-987">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-987">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>


## Examples

<span data-ttu-id="f91ed-988">次の例では、指定されたディレクトリの親ディレクトリを参照します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-988">The following example refers to the parent directory of a specified directory.</span></span>

[!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
[!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
[!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]

          ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-989">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-989">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-990">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-990">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-991">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-991">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-992">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-992">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f91ed-993">ディレクトリのルート部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-993">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="f91ed-994">ディレクトリのルートを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-994">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f91ed-995">次の例では、指定したディレクトリのルートの場所を表示します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-995">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f91ed-996">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-996">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-997">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-997">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-998">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-998">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-999">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-999">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="f91ed-1000"><paramref name="path" /> パラメーターが示すディレクトリに適用する ACL エントリを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1000">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="f91ed-1001"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の<see cref="T:System.IO.DirectoryInfo" /> オブジェクトが示すディレクトリに適用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1001">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f91ed-1002">アクセス制御リスト (ACL) は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していないユーザーまたはグループを表します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1002">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="f91ed-1003">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1003">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="f91ed-1004"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドは、継承されていない ACL リストを表す ACL エントリをファイルに適用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1004">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f91ed-1005">`directorySecurity` に指定された ACL は、ディレクトリの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1005">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="f91ed-1006">新しいユーザーにアクセス許可を追加するには、<xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して既存の ACL を取得し、変更します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1006">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="f91ed-1007"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドは、オブジェクトの作成後に変更された <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトのみを保持します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1007">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="f91ed-1008"><xref:System.Security.AccessControl.DirectorySecurity> オブジェクトが変更されていない場合は、ファイルに保存されません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1008">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="f91ed-1009">そのため、1つのファイルから <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを取得し、別のファイルに同じオブジェクトを再適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1009">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="f91ed-1010">ACL 情報をあるファイルから別のファイルにコピーするには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1010">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="f91ed-1011"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、ソースファイルから <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1011">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="f91ed-1012">コピー先ファイルの新しい <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1012">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="f91ed-1013">ACL 情報を取得するには、ソース <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトの <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> または <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1013">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="f91ed-1014">手順 3. で取得した情報をターゲット <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトにコピーするには、<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> または <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1014">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="f91ed-1015"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドを使用して、変換先の <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを変換先ファイルに設定します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1015">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f91ed-1016">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A> および <xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドを使用して、ディレクトリからアクセス制御リスト (ACL) エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1016">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f91ed-1017"><paramref name="directorySecurity" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1017">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="f91ed-1018">ファイルを検出または変更できませんでした。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1018">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="f91ed-1019">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1019">The current process does not have access to open the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f91ed-1020"><see cref="T:System.IO.DirectoryInfo" /> コンストラクターに渡された元のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1020">Returns the original path that was passed to the <see cref="T:System.IO.DirectoryInfo" /> constructor.</span></span> <span data-ttu-id="f91ed-1021">このメソッドの代わりに、完全なパスの <see cref="P:System.IO.DirectoryInfo.FullName" /> または <see cref="P:System.IO.DirectoryInfo.Name" /> のプロパティ、またはファイル名またはディレクトリ名を使用します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1021">Use the <see cref="P:System.IO.DirectoryInfo.FullName" /> or <see cref="P:System.IO.DirectoryInfo.Name" /> properties for the full path or file/directory name instead of this method.</span></span></summary>
        <returns><span data-ttu-id="f91ed-1022">ユーザーから渡された元のパス。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1022">The original path that was passed by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="f91ed-1023"><xref:System.IO.DirectoryInfo.ToString%2A> メソッドによって返される文字列は、<xref:System.IO.DirectoryInfo> コンストラクターに渡されたパスを表します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1023">The string returned by the <xref:System.IO.DirectoryInfo.ToString%2A> method represents the path that was passed to the <xref:System.IO.DirectoryInfo> constructor.</span></span> <span data-ttu-id="f91ed-1024">`ToString` メソッドを呼び出す代わりに、目的に応じて、次のいずれかのプロパティの値を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1024">Instead of calling the `ToString` method, you should retrieve the value of either of the following properties, depending on your intent:</span></span>
> - <span data-ttu-id="f91ed-1025">親パス情報を含まない、ディレクトリの名前を取得するために <xref:System.IO.DirectoryInfo.Name>します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1025"><xref:System.IO.DirectoryInfo.Name>, to get the name of the directory, without any parent path information.</span></span>
> - <span data-ttu-id="f91ed-1026"><xref:System.IO.DirectoryInfo.FullName>、ディレクトリの完全修飾パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="f91ed-1026"><xref:System.IO.DirectoryInfo.FullName>, to get the fully qualified path of the directory.</span></span>

          ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f91ed-1027">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="f91ed-1027">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f91ed-1028">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="f91ed-1028">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f91ed-1029">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="f91ed-1029">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
