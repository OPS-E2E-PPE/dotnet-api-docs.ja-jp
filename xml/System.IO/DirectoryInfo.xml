<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5205a327f40e6d4e37c451f4d85bac47f1b7b58" /><Meta Name="ms.sourcegitcommit" Value="6c0b6310824199ff476e4a9eec6e9ed0bd1a51c9" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/06/2019" /><Meta Name="ms.locfileid" Value="74385478" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="39895-101">ディレクトリとサブディレクトリを作成、削除、および列挙するためのインスタンス メソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="39895-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="39895-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="39895-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-103">ディレクトリのコピー、移動、名前の変更、作成、削除などの一般的な操作には、<xref:System.IO.DirectoryInfo> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="39895-104">オブジェクトを何度も再利用する場合は、セキュリティチェックが必ずしも必要ではないため、<xref:System.IO.Directory> クラスの対応する静的メソッドではなく、<xref:System.IO.DirectoryInfo> のインスタンスメソッドを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="39895-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39895-105">パスを入力文字列として受け取るメンバーでは、そのパスは適切な形式である必要があります。そうでない場合、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="39895-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="39895-106">たとえば、パスが完全修飾されていても、スペースで始まる場合は、クラスのメソッドでパスがトリムされません。</span><span class="sxs-lookup"><span data-stu-id="39895-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="39895-107">そのため、パスの形式が正しくないため、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="39895-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="39895-108">同様に、パスまたはパスの組み合わせを2回完全に修飾することはできません。</span><span class="sxs-lookup"><span data-stu-id="39895-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="39895-109">たとえば、"c:\temp c:\windows" は、ほとんどの場合に例外を発生させます。</span><span class="sxs-lookup"><span data-stu-id="39895-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="39895-110">パス文字列を受け取るメソッドを使用する場合は、パスが適切な形式であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="39895-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="39895-111">パスを受け入れるメンバーでは、ファイルまたはディレクトリのみを参照できます。</span><span class="sxs-lookup"><span data-stu-id="39895-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="39895-112">指定されたパスは、サーバーと共有名の相対パスまたは UNC (汎用名前付け規則) パスを参照することもできます。</span><span class="sxs-lookup"><span data-stu-id="39895-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="39895-113">たとえば、次のすべてが許容されるパスです。</span><span class="sxs-lookup"><span data-stu-id="39895-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="39895-114">Visual Basic の "c:\\\MyDir\\\MyFile.txt C#" または "c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="39895-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="39895-115">Visual Basic の "c:\\\MyDir C#"、または "c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="39895-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="39895-116">"の MyDir\\\MySubdir" C#、または Visual Basic の "MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="39895-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="39895-117">"\\\\\\\ MyServer\\\MyShare" C#、または\\の "Visual Basic 「\myserver\myshare」"。</span><span class="sxs-lookup"><span data-stu-id="39895-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="39895-118">既定では、すべてのユーザーに対して、新しいディレクトリへの完全な読み取り/書き込みアクセス権が付与されます。</span><span class="sxs-lookup"><span data-stu-id="39895-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="39895-119">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-120">次の例は、`DirectoryInfo` クラスの主なメンバーの一部を示しています。</span><span class="sxs-lookup"><span data-stu-id="39895-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="39895-121">次の例では、ディレクトリとその内容をコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="39895-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-122">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-122">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-123">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-124">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="39895-125">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="39895-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="39895-126"><see langword="DirectoryInfo" /> を作成する対象のパスを指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="39895-127">指定したパスに対する、<see cref="T:System.IO.DirectoryInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="39895-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-128">このコンストラクターは、ディレクトリが存在するかどうかを確認しません。</span><span class="sxs-lookup"><span data-stu-id="39895-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="39895-129">このコンストラクターは、後続の操作でディスクにアクセスするために使用される文字列のプレースホルダーです。</span><span class="sxs-lookup"><span data-stu-id="39895-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="39895-130">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="39895-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="39895-131">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="39895-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="39895-132">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-132">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-133">次の例では、このコンストラクターを使用して、指定したディレクトリとサブディレクトリを作成し、サブディレクトリを含むディレクトリを削除できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="39895-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-134"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-135">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-136"><paramref name="path" /> に、"、&lt;、&gt;、| など、無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="39895-137">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="39895-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-138">ファイルとディレクトリから読み取りを行う場合。</span><span class="sxs-lookup"><span data-stu-id="39895-138">for reading from files and directories.</span></span> <span data-ttu-id="39895-139">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="39895-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-140">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-140">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-141">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-141">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-142">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-142">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-143">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="39895-143">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-144">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="39895-144">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-145">ディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="39895-145">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="39895-146">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-147">次の例では、指定されたディレクトリが存在するかどうかを確認し、ディレクトリが存在しない場合は作成して、ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="39895-147">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39895-148">ディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="39895-148">The directory cannot be created.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-149">ファイルの書き込みに使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-149">for writing files.</span></span> <span data-ttu-id="39895-150">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="39895-150">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-151">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-151">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-152">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-152">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-153">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-153">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="39895-154">ディレクトリに適用するアクセス制御。</span><span class="sxs-lookup"><span data-stu-id="39895-154">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="39895-155"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトを使用してディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="39895-155">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-156">このメソッドオーバーロードを使用してアクセス制御を持つディレクトリを作成するため、セキュリティが適用される前にディレクトリにアクセスできる可能性はありません。</span><span class="sxs-lookup"><span data-stu-id="39895-156">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="39895-157">ディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="39895-157">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="39895-158">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39895-159"><paramref name="path" /> によって指定されたディレクトリが、読み取り専用であるか、空ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-159">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="39895-160">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-160">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-161"><paramref name="path" /> は長さ 0 の文字列であるか、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の使用できない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="39895-161"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-162"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="39895-163">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="39895-163">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-164">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="39895-164">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39895-165">コロン (:) 文字だけで、ディレクトリを作成しようとしました。</span><span class="sxs-lookup"><span data-stu-id="39895-165">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-166">ディレクトリを作成するためのアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="39895-166">for permission to create a directory.</span></span> <span data-ttu-id="39895-167">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="39895-167">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="39895-168">関連付けられた列挙型: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="39895-168">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-169">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="39895-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="39895-170">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="39895-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="39895-171">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="39895-171">The specified path.</span></span> <span data-ttu-id="39895-172">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="39895-172">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="39895-173">指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="39895-173">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="39895-174">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="39895-174">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="39895-175"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="39895-175">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-176">`path` の一部が無効な場合を除き、`path` で指定されたすべてのディレクトリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="39895-176">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="39895-177">`path` パラメーターは、ファイルパスではなく、ディレクトリパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="39895-177">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="39895-178">サブディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="39895-178">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="39895-179">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-179">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-180">次の例は、サブディレクトリを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="39895-180">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="39895-181">この例では、作成されたディレクトリは作成後に削除されます。</span><span class="sxs-lookup"><span data-stu-id="39895-181">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="39895-182">したがって、このサンプルをテストするには、コード内の削除行をコメントアウトします。</span><span class="sxs-lookup"><span data-stu-id="39895-182">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-183"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="39895-183"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-184"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-184"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-185">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="39895-185">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39895-186">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="39895-186">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="39895-187">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-187">-or-</span></span> 
<span data-ttu-id="39895-188"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="39895-188">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="39895-189">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="39895-189">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-190">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-190">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="39895-191">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-191">-or-</span></span> 
<span data-ttu-id="39895-192">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-192">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="39895-193"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="39895-193">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39895-194"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-194"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-195">ファイルの読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="39895-195">for reading and writing files.</span></span> <span data-ttu-id="39895-196">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="39895-196">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-197">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-197">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-198">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-198">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-199">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-199">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="39895-200">指定するパス。</span><span class="sxs-lookup"><span data-stu-id="39895-200">The specified path.</span></span> <span data-ttu-id="39895-201">異なるディスク ボリュームまたは UNC (Universal Naming Convention) 名は指定できません。</span><span class="sxs-lookup"><span data-stu-id="39895-201">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="39895-202">適用するセキュリティ。</span><span class="sxs-lookup"><span data-stu-id="39895-202">The security to apply.</span></span></param>
        <summary><span data-ttu-id="39895-203">適用するセキュリティを指定して、指定したパスに 1 つ以上のサブディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="39895-203">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="39895-204">パスは、この <see cref="T:System.IO.DirectoryInfo" /> クラスのインスタンスに対する相対パスで指定できます。</span><span class="sxs-lookup"><span data-stu-id="39895-204">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="39895-205"><paramref name="path" /> に指定された最後のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="39895-205">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-206">`path` の一部が無効な場合を除き、`path` で指定されたすべてのディレクトリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="39895-206">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="39895-207">`path` パラメーターは、ファイルパスではなく、ディレクトリパスを指定します。</span><span class="sxs-lookup"><span data-stu-id="39895-207">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="39895-208">サブディレクトリが既に存在する場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="39895-208">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="39895-209">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-210"><paramref name="path" /> は有効なファイル パスを指定していないか、または無効な <see langword="DirectoryInfo" /> 文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="39895-210"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-211"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-211"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-212">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="39895-212">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39895-213">サブディレクトリを作成できません。</span><span class="sxs-lookup"><span data-stu-id="39895-213">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="39895-214">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-214">-or-</span></span> 
<span data-ttu-id="39895-215"><paramref name="path" /> で指定された名前がファイルまたはディレクトリに既にあります。</span><span class="sxs-lookup"><span data-stu-id="39895-215">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="39895-216">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="39895-216">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-217">呼び出し元には、ディレクトリを作成するためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-217">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="39895-218">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-218">-or-</span></span> 
<span data-ttu-id="39895-219">呼び出し元には、返された <see cref="T:System.IO.DirectoryInfo" /> オブジェクトで記述されているディレクトリを読み取るためのコード アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-219">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="39895-220"><paramref name="path" /> パラメーターが既存のディレクトリを記述する場合、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="39895-220">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39895-221"><paramref name="path" /> に、ドライブ ラベル ("C:\\") の一部ではないコロン文字 (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-221"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-222">ファイルの読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="39895-222">for reading and writing files.</span></span> <span data-ttu-id="39895-223">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="39895-223">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-224">パスから <see cref="T:System.IO.DirectoryInfo" /> とその内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="39895-224">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-225"><see cref="T:System.IO.DirectoryInfo" /> が空の場合に、そのインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="39895-225">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-226">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-226">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-227">次の例では、空でないディレクトリを削除しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="39895-227">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="39895-228">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-228">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-229">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトに記述されているディレクトリが存在しないか、見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="39895-229">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39895-230">ディレクトリが空ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-230">The directory is not empty.</span></span>  
  
<span data-ttu-id="39895-231">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-231">-or-</span></span> 
<span data-ttu-id="39895-232">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="39895-232">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="39895-233">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-233">-or-</span></span> 
<span data-ttu-id="39895-234">開いているハンドルがディレクトリに対して存在し、オペレーティング システムが Windows XP またはそれ以前のものです。</span><span class="sxs-lookup"><span data-stu-id="39895-234">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="39895-235">開いているハンドルは、ディレクトリを列挙する際に発生した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="39895-235">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="39895-236">詳細については、「[方法 : ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="39895-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-237">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-237">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-238">ディレクトリの作成に使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-238">for writing directories.</span></span> <span data-ttu-id="39895-239">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="39895-239">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-240">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-240">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-241">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-241">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-242">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-242">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="39895-243">このディレクトリ、そのサブディレクトリ、およびすべてのファイルを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="39895-243"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="39895-244">中に含まれているサブディレクトリとファイルを削除するかどうかを指定して、<see cref="T:System.IO.DirectoryInfo" /> のインスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="39895-244">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-245">`DirectoryInfo` にファイルまたはサブディレクトリがない場合、このメソッドは `recursive` が `false`されていても `DirectoryInfo` を削除します。</span><span class="sxs-lookup"><span data-stu-id="39895-245">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="39895-246">`recursive` が `false` ときに空ではない `DirectoryInfo` を削除しようとすると、<xref:System.IO.IOException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="39895-246">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="39895-247">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-247">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-248">次の例は、ディレクトリを削除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="39895-248">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="39895-249">ディレクトリが削除されているため、最初に `Delete` 行をコメントアウトして、ディレクトリが存在することをテストします。</span><span class="sxs-lookup"><span data-stu-id="39895-249">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="39895-250">次に、同じコード行のコメントを解除して、ディレクトリが正常に削除されたことをテストします。</span><span class="sxs-lookup"><span data-stu-id="39895-250">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="39895-251">ディレクトリに読み取り専用のファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-251">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-252">この <see cref="T:System.IO.DirectoryInfo" /> オブジェクトによって記述されるディレクトリは存在しないか、または見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="39895-252">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39895-253">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="39895-253">The directory is read-only.</span></span>  
  
<span data-ttu-id="39895-254">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-254">-or-</span></span> 
<span data-ttu-id="39895-255">ディレクトリに 1 つ以上のファイルまたはサブディレクトリが含まれており、<paramref name="recursive" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-255">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="39895-256">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-256">-or-</span></span> 
<span data-ttu-id="39895-257">ディレクトリはアプリケーションの現在の作業ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="39895-257">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="39895-258">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-258">-or-</span></span> 
<span data-ttu-id="39895-259">開いているハンドルがディレクトリまたはそのディレクトリ内のファイルに対して存在し、オペレーティング システムが Windows XP またはそれ以前のものです。</span><span class="sxs-lookup"><span data-stu-id="39895-259">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="39895-260">このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="39895-260">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="39895-261">詳細については、[ ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="39895-261">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-262">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-262">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess"><span data-ttu-id="39895-263">削除する <see langword="DirectoryInfo" /> およびサブディレクトリへの書き込みアクセス許可には書き込みフラグが必要です。</span><span class="sxs-lookup"><span data-stu-id="39895-263">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-264">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-264">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-265">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-265">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-266">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-266">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-267">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-267">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-268">現在のディレクトリの列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-268">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="39895-269">現在のディレクトリ内の列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-269">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-270"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-271"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-272"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-273">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-274">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="39895-275">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-276">次の例では、C:\Program Files ディレクトリの下にあるサブディレクトリを列挙し、LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> プロパティの値を確認することにより、2009より前に作成されたすべてのディレクトリの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-276">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="39895-277">サブディレクトリの名前のみが必要な場合は、静的 <xref:System.IO.Directory> クラスを使用してパフォーマンスを向上させます。</span><span class="sxs-lookup"><span data-stu-id="39895-277">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="39895-278">例については、<xref:System.IO.Directory.EnumerateDirectories%28System.String%29> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-278">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-279"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-279">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-280">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-280">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-281">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-281">The search string to match against the names of directories.</span></span>  <span data-ttu-id="39895-282">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-282">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="39895-283">指定された検索パターンに一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-283">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="39895-284"><paramref name="searchPattern" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-284">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-285">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-286">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-287">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-287">Wildcard specifier</span></span>|<span data-ttu-id="39895-288">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-289">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-289">\* (asterisk)</span></span>|<span data-ttu-id="39895-290">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-291">?</span><span class="sxs-lookup"><span data-stu-id="39895-291">?</span></span> <span data-ttu-id="39895-292">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-292">(question mark)</span></span>|<span data-ttu-id="39895-293">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-294">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-295">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-295">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-296">".</span><span class="sxs-lookup"><span data-stu-id="39895-296">".</span></span> <span data-ttu-id="39895-297">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-298"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-299"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-300"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-301">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-302">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="39895-303">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-304"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-304"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-305"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-305">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-306">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-306">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-307">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-307">The search string to match against the names of directories.</span></span> <span data-ttu-id="39895-308">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-308">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="39895-309">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-309">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="39895-310">指定した検索パターンおよび列挙オプションに一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-310">Returns an enumerable collection of directory information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="39895-311"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-311">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-312">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-312">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-313">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-313">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-314">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-314">Wildcard specifier</span></span>|<span data-ttu-id="39895-315">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-315">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-316">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-316">\* (asterisk)</span></span>|<span data-ttu-id="39895-317">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-317">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-318">?</span><span class="sxs-lookup"><span data-stu-id="39895-318">?</span></span> <span data-ttu-id="39895-319">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-319">(question mark)</span></span>|<span data-ttu-id="39895-320">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-320">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-321">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-321">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-322">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-322">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-323">".</span><span class="sxs-lookup"><span data-stu-id="39895-323">".</span></span> <span data-ttu-id="39895-324">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-324">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-325"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-325">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-326"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-326">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-327"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-327">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-328">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-328">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-329">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-329">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="39895-330">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-330">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-331"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-331"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-332"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-332">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-333">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-333">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-334">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-334">The search string to match against the names of directories.</span></span>  <span data-ttu-id="39895-335">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-335">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="39895-336">検索操作に現在のディレクトリのみを含めるのか、すべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="39895-336">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="39895-337">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-337">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="39895-338">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なディレクトリ情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-338">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="39895-339"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なディレクトリのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-339">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-340">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-340">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-341">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-341">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-342">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-342">Wildcard specifier</span></span>|<span data-ttu-id="39895-343">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-343">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-344">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-344">\* (asterisk)</span></span>|<span data-ttu-id="39895-345">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-345">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-346">?</span><span class="sxs-lookup"><span data-stu-id="39895-346">?</span></span> <span data-ttu-id="39895-347">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-347">(question mark)</span></span>|<span data-ttu-id="39895-348">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-348">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-349">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-349">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-350">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-350">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-351">".</span><span class="sxs-lookup"><span data-stu-id="39895-351">".</span></span> <span data-ttu-id="39895-352">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-352">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-353"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> メソッドと <xref:System.IO.DirectoryInfo.GetDirectories%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-353">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-354"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.DirectoryInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-354">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-355"><xref:System.IO.DirectoryInfo.GetDirectories%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.DirectoryInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-355">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-356">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-356">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-357">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-357">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="39895-358">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-358">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-359">次の例では、指定されたディレクトリから開始し、このメソッドと <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドを使用して、start ディレクトリ内のファイルとディレクトリを列挙し、サイズが 10 MB を超えるファイルの詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="39895-359">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-360"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-360"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39895-361"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-361"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-362"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-362">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-363">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-363">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-364">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-364">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-365">現在のディレクトリに存在するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-365">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="39895-366">現在のディレクトリ内の列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-366">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-367"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-367">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-368"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-368">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-369"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-369">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-370">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-370">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-371">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-371">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="39895-372">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-372">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-373">次の例では、指定されたディレクトリにあるファイルを列挙し、LINQ クエリを使用して、<xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> プロパティの値を確認することにより、2009より前に作成されたすべてのファイルの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-373">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="39895-374">ファイル名のみが必要な場合は、静的 <xref:System.IO.Directory> クラスを使用してパフォーマンスを向上させてください。</span><span class="sxs-lookup"><span data-stu-id="39895-374">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="39895-375">例については、<xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-375">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="39895-376">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="39895-376">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="39895-377">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="39895-377">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-378"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-378">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-379">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-379">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-380">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-380">The search string to match against the names of files.</span></span>  <span data-ttu-id="39895-381">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-381">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="39895-382">検索パターンに一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-382">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="39895-383"><paramref name="searchPattern" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-383">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-384">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-384">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-385">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-385">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-386">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-386">Wildcard specifier</span></span>|<span data-ttu-id="39895-387">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-387">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-388">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-388">\* (asterisk)</span></span>|<span data-ttu-id="39895-389">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-389">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-390">?</span><span class="sxs-lookup"><span data-stu-id="39895-390">?</span></span> <span data-ttu-id="39895-391">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-391">(question mark)</span></span>|<span data-ttu-id="39895-392">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-392">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-393">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-393">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-394">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-394">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-395">".</span><span class="sxs-lookup"><span data-stu-id="39895-395">".</span></span> <span data-ttu-id="39895-396">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-396">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-397"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-397">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-398"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-398">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-399"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-399">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-400">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-400">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-401">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-401">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="39895-402">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-402">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-403">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="39895-403">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="39895-404">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="39895-404">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-405"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-405"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-406"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-406">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-407">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-407">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-408">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-408">The search string to match against the names of files.</span></span> <span data-ttu-id="39895-409">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-409">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="39895-410">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-410">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="39895-411">指定された検索パターンと列挙オプションに一致するファイル情報の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-411">Returns an enumerable collection of file information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="39895-412"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-412">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-413">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-413">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-414">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-414">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-415">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-415">Wildcard specifier</span></span>|<span data-ttu-id="39895-416">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-416">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-417">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-417">\* (asterisk)</span></span>|<span data-ttu-id="39895-418">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-418">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-419">?</span><span class="sxs-lookup"><span data-stu-id="39895-419">?</span></span> <span data-ttu-id="39895-420">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-420">(question mark)</span></span>|<span data-ttu-id="39895-421">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-421">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-422">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-422">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-423">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-423">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-424">".</span><span class="sxs-lookup"><span data-stu-id="39895-424">".</span></span> <span data-ttu-id="39895-425">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-425">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-426"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-426">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-427"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-427">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-428"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-428">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-429">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-429">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-430">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-430">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="39895-431">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-431">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-432"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-432"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-433"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-433">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-434">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-434">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-435">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-435">The search string to match against the names of files.</span></span>  <span data-ttu-id="39895-436">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-436">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="39895-437">検索操作に現在のディレクトリのみを含めるのか、すべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="39895-437">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="39895-438">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-438">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="39895-439">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-439">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="39895-440"><paramref name="searchPattern" /> と <paramref name="searchOption" /> に一致する列挙可能なファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-440">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-441">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-441">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-442">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-442">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-443">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-443">Wildcard specifier</span></span>|<span data-ttu-id="39895-444">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-444">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-445">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-445">\* (asterisk)</span></span>|<span data-ttu-id="39895-446">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-446">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-447">?</span><span class="sxs-lookup"><span data-stu-id="39895-447">?</span></span> <span data-ttu-id="39895-448">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-448">(question mark)</span></span>|<span data-ttu-id="39895-449">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-449">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-450">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-450">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-451">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-451">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-452">".</span><span class="sxs-lookup"><span data-stu-id="39895-452">".</span></span> <span data-ttu-id="39895-453">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-453">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-454"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-454">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-455"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-455">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-456"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-456">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-457">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-457">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-458">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-458">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="39895-459">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-459">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-460">次の例では、別の検索オプションを使用してディレクトリ内のファイルを列挙する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="39895-460">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="39895-461">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="39895-461">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-462"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-462"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39895-463"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-463"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-464"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-464">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-465">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-465">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-466">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-466">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-467">現在のディレクトリ内の列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-467">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="39895-468">現在のディレクトリ内の列挙可能なファイル システム情報のコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-468">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-469"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-469">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-470"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-470">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-471"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-471">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-472">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-472">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-473">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-473">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="39895-474">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-474">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-475"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-475">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-476">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-476">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-477">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-477">The search string to match against the names of directories.</span></span>  <span data-ttu-id="39895-478">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-478">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="39895-479">指定された検索パターンに一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-479">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="39895-480"><paramref name="searchPattern" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-480">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-481">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-481">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-482">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-482">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-483">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-483">Wildcard specifier</span></span>|<span data-ttu-id="39895-484">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-484">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-485">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-485">\* (asterisk)</span></span>|<span data-ttu-id="39895-486">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-486">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-487">?</span><span class="sxs-lookup"><span data-stu-id="39895-487">?</span></span> <span data-ttu-id="39895-488">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-488">(question mark)</span></span>|<span data-ttu-id="39895-489">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-489">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-490">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-490">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-491">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-491">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-492">".</span><span class="sxs-lookup"><span data-stu-id="39895-492">".</span></span> <span data-ttu-id="39895-493">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-493">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-494"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-494">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-495"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-495">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-496"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-496">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-497">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-497">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-498">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-498">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="39895-499">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-499">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-500"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-500"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-501"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-501">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-502">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-502">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-503">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-503">The search string to match against the names of directories.</span></span> <span data-ttu-id="39895-504">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-504">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="39895-505">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-505">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="39895-506">指定した検索パターンと列挙オプションに一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-506">Returns an enumerable collection of file system information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="39895-507"><paramref name="searchPattern" /> および <paramref name="enumerationOptions" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-507">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-508">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-508">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-509">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-509">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-510">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-510">Wildcard specifier</span></span>|<span data-ttu-id="39895-511">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-511">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-512">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-512">\* (asterisk)</span></span>|<span data-ttu-id="39895-513">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-513">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-514">?</span><span class="sxs-lookup"><span data-stu-id="39895-514">?</span></span> <span data-ttu-id="39895-515">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-515">(question mark)</span></span>|<span data-ttu-id="39895-516">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-516">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-517">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-517">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-518">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-518">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-519">".</span><span class="sxs-lookup"><span data-stu-id="39895-519">".</span></span> <span data-ttu-id="39895-520">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-520">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-521"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-521">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-522"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-522">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-523"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-523">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-524">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-524">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-525">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-525">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="39895-526">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-526">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-527"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-527"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-528"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-528">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-529">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-529">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-530">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-530">The search string to match against the names of directories.</span></span>  <span data-ttu-id="39895-531">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-531">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="39895-532">検索操作に現在のディレクトリのみを含めるのか、すべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="39895-532">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="39895-533">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-533">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="39895-534">指定された検索パターンと、サブディレクトリを検索するかどうかを指定するオプションの設定に一致する列挙可能なファイル システム情報のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-534">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="39895-535"><paramref name="searchPattern" /> および <paramref name="searchOption" /> に一致する列挙可能なファイル システム情報オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="39895-535">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-536">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-536">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-537">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-537">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-538">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-538">Wildcard specifier</span></span>|<span data-ttu-id="39895-539">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-539">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-540">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-540">\* (asterisk)</span></span>|<span data-ttu-id="39895-541">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-541">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-542">?</span><span class="sxs-lookup"><span data-stu-id="39895-542">?</span></span> <span data-ttu-id="39895-543">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-543">(question mark)</span></span>|<span data-ttu-id="39895-544">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-544">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-545">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-545">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-546">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-546">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-547">".</span><span class="sxs-lookup"><span data-stu-id="39895-547">".</span></span> <span data-ttu-id="39895-548">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-548">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-549"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-549">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-550"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileSystemInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-550">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-551"><xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileSystemInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-551">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-552">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-552">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-553">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-553">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="39895-554">返されたコレクションはキャッシュされません。コレクションの <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドを呼び出すたびに、新しい列挙が開始されます。</span><span class="sxs-lookup"><span data-stu-id="39895-554">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-555"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-555"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39895-556"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-556"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-557"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-557">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-558">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-558">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39895-559">ディレクトリが存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-559">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="39895-560">ディレクトリが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="39895-560"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-561"><xref:System.IO.DirectoryInfo.Exists%2A> プロパティは、指定されたファイルが存在するかどうかを判断する際にエラーが発生した場合に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-561">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="39895-562">これは、無効な文字を含むファイル名の受け渡し、文字の数が多すぎる、ディスクの障害が発生した、または呼び出し元にファイルの読み取りアクセス許可がないなどの例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="39895-562">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-563">次の例は、ソースディレクトリをターゲットディレクトリにコピーするコンテキストでの `Exists` プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="39895-563">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-564">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-564">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-565">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-565">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-566">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-566">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39895-567">ディレクトリの絶対パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-567">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="39895-568">絶対パスを含んでいる文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-568">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-569">現在のディレクトリのアクセス制御リスト (ACL: Access Control List) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-569">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-570"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-570">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="39895-571">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-571">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-572">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すディレクトリのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-572">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="39895-573">ディレクトリのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-573">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-574">このメソッドのオーバーロードを呼び出すことは、<xref:System.IO.Directory.GetAccessControl%2A> メソッドのオーバーロードを呼び出し、アクセス制御&#124;セクション&#124; <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>) を指定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="39895-574">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="39895-575"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-575">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="39895-576">ACL は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="39895-576">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="39895-577">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-577">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-578">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A> および <xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドを使用して、ディレクトリからアクセス制御リスト (ACL) エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="39895-578">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="39895-579">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="39895-579">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="39895-580">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="39895-580">The directory is read-only.</span></span>  
  
 <span data-ttu-id="39895-581">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-581">-or-</span></span>  
  
 <span data-ttu-id="39895-582">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-582">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="39895-583">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-583">-or-</span></span>  
  
 <span data-ttu-id="39895-584">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-584">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39895-585">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="39895-585">An I/O error occurred while opening the directory.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="39895-586">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-586">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-587">ディレクトリのアクセス制御リスト (ACL) を列挙するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="39895-587">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="39895-588">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="39895-588">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="39895-589">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="39895-589">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="39895-590">取得するアクセス制御リスト (ACL) の情報の型を指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="39895-590">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="39895-591">現在の <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトで示されるディレクトリの、指定した種類のアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-591">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="39895-592"><paramref name="path" /> パラメーターによって記述されるファイルのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-592">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="39895-593">例外</span><span class="sxs-lookup"><span data-stu-id="39895-593">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="39895-594">例外の種類</span><span class="sxs-lookup"><span data-stu-id="39895-594">Exception type</span></span> 
 </term><description> <span data-ttu-id="39895-595">条件</span><span class="sxs-lookup"><span data-stu-id="39895-595">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="39895-596">ディレクトリが見つからないか、または変更されています。</span><span class="sxs-lookup"><span data-stu-id="39895-596">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="39895-597">現在のプロセスには、ディレクトリを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-597">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="39895-598">ディレクトリを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="39895-598">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> <span data-ttu-id="39895-599">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-599">The current operating system is not Microsoft Windows 2000 or later.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="39895-600">ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="39895-600">The directory is read-only.</span></span>  
  
<span data-ttu-id="39895-601">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-601">-or-</span></span> 
<span data-ttu-id="39895-602">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-602">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="39895-603">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-603">-or-</span></span> 
<span data-ttu-id="39895-604">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-604">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-605"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-605">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="39895-606">ACL は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="39895-606">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="39895-607">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-607">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-608">ディレクトリのアクセス制御リスト (ACL) を列挙するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="39895-608">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="39895-609">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="39895-609">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="39895-610">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="39895-610">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-611">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-611">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-612">現在のディレクトリのサブディレクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-612">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="39895-613"><see cref="T:System.IO.DirectoryInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="39895-613">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-614">サブディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-614">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="39895-615">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-615">This method is not recursive.</span></span>  
  
 <span data-ttu-id="39895-616">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-616">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="39895-617">次の例では、ルートディレクトリ内のすべてのディレクトリを取得し、ディレクトリ名を表示します。</span><span class="sxs-lookup"><span data-stu-id="39895-617">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-618"><see cref="T:System.IO.DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-618">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-619">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-619">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="39895-620">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-620">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-621">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-621">for reading directories.</span></span> <span data-ttu-id="39895-622">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="39895-622">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-623">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-623">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-624">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-624">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-625">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-625">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-626">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-626">The search string to match against the names of directories.</span></span>  <span data-ttu-id="39895-627">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-627">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="39895-628">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にあり、指定した検索基準に一致するディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-628">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="39895-629"><paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="39895-629">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-630">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-630">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-631">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-631">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-632">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-632">Wildcard specifier</span></span>|<span data-ttu-id="39895-633">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-633">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-634">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-634">\* (asterisk)</span></span>|<span data-ttu-id="39895-635">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-635">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-636">?</span><span class="sxs-lookup"><span data-stu-id="39895-636">?</span></span> <span data-ttu-id="39895-637">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-637">(question mark)</span></span>|<span data-ttu-id="39895-638">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-638">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-639">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-639">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-640">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-640">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-641">".</span><span class="sxs-lookup"><span data-stu-id="39895-641">".</span></span> <span data-ttu-id="39895-642">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-642">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-643">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-643">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="39895-644">次の例では、指定された文字を含むパス内のディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="39895-644">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-645"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-645"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-646"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-646"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-647"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-647">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="39895-648">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-648">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-649">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-649">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="39895-650">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="39895-650">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-651">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-651">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-652">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-652">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-653">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-653">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-654">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-654">The search string to match against the names of directories.</span></span> <span data-ttu-id="39895-655">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-655">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="39895-656">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-656">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="39895-657">指定した検索パターンと列挙オプションに一致する、現在の <see cref="T:System.IO.DirectoryInfo" /> 内のディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-657">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="39895-658"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="39895-658">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-659">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-659">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-660">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-660">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-661">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-661">Wildcard specifier</span></span>|<span data-ttu-id="39895-662">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-662">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-663">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-663">\* (asterisk)</span></span>|<span data-ttu-id="39895-664">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-664">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-665">?</span><span class="sxs-lookup"><span data-stu-id="39895-665">?</span></span> <span data-ttu-id="39895-666">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-666">(question mark)</span></span>|<span data-ttu-id="39895-667">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-667">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-668">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-668">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-669">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-669">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-670">".</span><span class="sxs-lookup"><span data-stu-id="39895-670">".</span></span> <span data-ttu-id="39895-671">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-671">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-672">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-672">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-673"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-673"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-674"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-674"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-675"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-675">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="39895-676">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-676">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-677">ディレクトリの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-677">The search string to match against the names of directories.</span></span>  <span data-ttu-id="39895-678">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-678">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="39895-679">検索操作に現在のディレクトリのみを含めるのか、またはすべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="39895-679">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="39895-680">現在の <see cref="T:System.IO.DirectoryInfo" /> 内にある、指定した検索条件に一致し、サブディレクトリを検索するかどうかを決定する値を持つディレクトリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-680">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="39895-681"><paramref name="searchPattern" /> に一致する <see langword="DirectoryInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="39895-681">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-682">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-682">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-683">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-683">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-684">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-684">Wildcard specifier</span></span>|<span data-ttu-id="39895-685">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-685">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-686">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-686">\* (asterisk)</span></span>|<span data-ttu-id="39895-687">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-687">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-688">?</span><span class="sxs-lookup"><span data-stu-id="39895-688">?</span></span> <span data-ttu-id="39895-689">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-689">(question mark)</span></span>|<span data-ttu-id="39895-690">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-690">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-691">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-691">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-692">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-692">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-693">".</span><span class="sxs-lookup"><span data-stu-id="39895-693">".</span></span> <span data-ttu-id="39895-694">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-694">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-695">サブディレクトリが存在しない場合、または `searchPattern` パラメーターに一致するサブディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-695">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="39895-696">このメソッドは、次の <xref:System.IO.DirectoryInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-696">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="39895-697">次の例では、"c:\\" の文字 "c" で始まるすべてのディレクトリとファイルを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="39895-697">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-698"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-698"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-699"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-699"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39895-700"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-700"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-701"><see langword="DirectoryInfo" /> オブジェクト内のカプセル化されたパスが有効ではありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-701">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="39895-702">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-702">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-703">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-703">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="39895-704">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="39895-704">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-705">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-705">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-706">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-706">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-707">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-707">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-708">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-708">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-709">現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-709">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="39895-710"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="39895-710">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-711"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-711">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-712"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-712">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-713"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-713">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-714">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-714">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-715"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-715">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="39895-716">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-716">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="39895-717">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-717">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="39895-718">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="39895-718">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="39895-719">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="39895-719">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-720">マップされていないドライブにあるなど、パスが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="39895-720">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-721">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-721">for reading directories.</span></span> <span data-ttu-id="39895-722">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="39895-722">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-723">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-723">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-724">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-724">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-725">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-725">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-726">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-726">The search string to match against the names of files.</span></span>  <span data-ttu-id="39895-727">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-727">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="39895-728">現在のディレクトリから、指定した検索パターンに一致するファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-728">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="39895-729"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="39895-729">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-730">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-730">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-731">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-731">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-732">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-732">Wildcard specifier</span></span>|<span data-ttu-id="39895-733">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-733">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-734">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-734">\* (asterisk)</span></span>|<span data-ttu-id="39895-735">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-735">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-736">?</span><span class="sxs-lookup"><span data-stu-id="39895-736">?</span></span> <span data-ttu-id="39895-737">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-737">(question mark)</span></span>|<span data-ttu-id="39895-738">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-738">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-739">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-739">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-740">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-740">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-741">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-741">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-742"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-742">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-743"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-743">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-744"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-744">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-745">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-745">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-746"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-746">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="39895-747">`searchPattern` パラメーターでは、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-747">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="39895-748">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="39895-748">Wildcard character</span></span>|<span data-ttu-id="39895-749">説明</span><span class="sxs-lookup"><span data-stu-id="39895-749">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="39895-750">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-750">Zero or more characters.</span></span>|  
|<span data-ttu-id="39895-751">?</span><span class="sxs-lookup"><span data-stu-id="39895-751">?</span></span>|<span data-ttu-id="39895-752">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-752">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="39895-753">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-753">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="39895-754">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-754">Wildcards are permitted.</span></span> <span data-ttu-id="39895-755">たとえば、`searchPattern` 文字列 "\* .txt" は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-755">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="39895-756">`searchPattern` 文字列 "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-756">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="39895-757">ファイルがない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-757">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39895-758">`searchPattern` でアスタリスクのワイルドカード文字 ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-758">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="39895-759">ファイル拡張子が3文字の `searchPattern` は、3文字以上の拡張子を持つファイルを返します。最初の3文字は、`searchPattern`で指定されたファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="39895-759">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="39895-760">ファイル拡張子が1、2、または3文字を超える `searchPattern` は、`searchPattern`で指定されたファイル拡張子と完全に一致する拡張子を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-760">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="39895-761">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-761">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="39895-762">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、" file\*.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-762">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39895-763">このメソッドは、8.3 ファイル名形式と長いファイル名形式の両方を含むファイル名をチェックするため、"\* 1\*.txt" に類似した検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="39895-763">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="39895-764">たとえば、"\*1\*.txt" という検索パターンを使用すると、8.3 ファイル名の形式が "longfilename ~ 1 .txt" になるため、"longfilename. .txt" が返されます。</span><span class="sxs-lookup"><span data-stu-id="39895-764">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="39895-765">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-765">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="39895-766">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="39895-766">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="39895-767">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="39895-767">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-768"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-768"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-769"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-769"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-770">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-770">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-771">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-771">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-772">パスへのアクセス、およびファイルとディレクトリからの読み取りのために使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-772">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="39895-773">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="39895-773">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-774">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-774">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-775">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-775">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-776">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-776">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-777">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-777">The search string to match against the names of files.</span></span> <span data-ttu-id="39895-778">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-778">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="39895-779">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-779">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="39895-780">指定した検索パターンと列挙オプションに一致する現在のディレクトリからファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-780">Returns a file list from the current directory matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="39895-781"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する、厳密に型指定された <see cref="T:System.IO.FileInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="39895-781">An array of strongly typed <see cref="T:System.IO.FileInfo" /> objects that match <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-782">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-782">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-783">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-783">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-784">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-784">Wildcard specifier</span></span>|<span data-ttu-id="39895-785">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-785">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-786">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-786">\* (asterisk)</span></span>|<span data-ttu-id="39895-787">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-787">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-788">?</span><span class="sxs-lookup"><span data-stu-id="39895-788">?</span></span> <span data-ttu-id="39895-789">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-789">(question mark)</span></span>|<span data-ttu-id="39895-790">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-790">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-791">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-791">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-792">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-792">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-793">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-793">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-794"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-794">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-795"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-795">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-796"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-796">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-797">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-797">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-798"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-798">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="39895-799">`searchPattern` パラメーターでは、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-799">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="39895-800">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="39895-800">Wildcard character</span></span>|<span data-ttu-id="39895-801">説明</span><span class="sxs-lookup"><span data-stu-id="39895-801">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="39895-802">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-802">Zero or more characters.</span></span>|  
|<span data-ttu-id="39895-803">?</span><span class="sxs-lookup"><span data-stu-id="39895-803">?</span></span>|<span data-ttu-id="39895-804">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-804">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="39895-805">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-805">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="39895-806">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-806">Wildcards are permitted.</span></span> <span data-ttu-id="39895-807">たとえば、`searchPattern` 文字列 "\* .txt" は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-807">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="39895-808">`searchPattern` 文字列 "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-808">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="39895-809">ファイルがない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-809">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39895-810">`searchPattern` でアスタリスクのワイルドカード文字 ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-810">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="39895-811">ファイル拡張子が3文字の `searchPattern` は、3文字以上の拡張子を持つファイルを返します。最初の3文字は、`searchPattern`で指定されたファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="39895-811">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="39895-812">ファイル拡張子が1、2、または3文字を超える `searchPattern` は、`searchPattern`で指定されたファイル拡張子と完全に一致する拡張子を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-812">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="39895-813">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-813">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="39895-814">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、" file\*.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-814">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39895-815">このメソッドは、8.3 ファイル名形式と長いファイル名形式の両方を含むファイル名をチェックするため、"\* 1\*.txt" に類似した検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="39895-815">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="39895-816">たとえば、"\*1\*.txt" という検索パターンを使用すると、8.3 ファイル名の形式が "longfilename ~ 1 .txt" になるため、"longfilename. .txt" が返されます。</span><span class="sxs-lookup"><span data-stu-id="39895-816">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="39895-817">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-817">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-818"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-818"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-819"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-819"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-820">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-820">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-821">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-821">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-822">ファイル名と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-822">The search string to match against the names of files.</span></span>  <span data-ttu-id="39895-823">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-823">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="39895-824">検索操作に現在のディレクトリのみを含めるのか、すべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="39895-824">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="39895-825">現在のディレクトリから、指定した検索パターンに一致し、サブディレクトリを検索するかどうかを決定する値を持つファイル一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-825">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="39895-826"><see cref="T:System.IO.FileInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="39895-826">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-827"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> メソッドと <xref:System.IO.DirectoryInfo.GetFiles%2A> メソッドは次のように異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-827">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="39895-828"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>を使用すると、コレクション全体が返される前に <xref:System.IO.FileInfo> オブジェクトのコレクションの列挙を開始できます。</span><span class="sxs-lookup"><span data-stu-id="39895-828">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="39895-829"><xref:System.IO.DirectoryInfo.GetFiles%2A>を使用する場合は、配列にアクセスする前に、<xref:System.IO.FileInfo> オブジェクトの配列全体が返されるまで待機する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-829">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="39895-830">そのため、多くのファイルとディレクトリを操作している場合、<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> の方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="39895-830">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="39895-831"><xref:System.IO.DirectoryInfo>にファイルが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-831">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="39895-832">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-832">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-833">ワイルドカード文字</span><span class="sxs-lookup"><span data-stu-id="39895-833">Wildcard character</span></span>|<span data-ttu-id="39895-834">説明</span><span class="sxs-lookup"><span data-stu-id="39895-834">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="39895-835">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-835">\* (asterisk)</span></span>|<span data-ttu-id="39895-836">0個以上の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-836">Zero or more characters.</span></span>|  
|<span data-ttu-id="39895-837">?</span><span class="sxs-lookup"><span data-stu-id="39895-837">?</span></span> <span data-ttu-id="39895-838">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-838">(question mark)</span></span>|<span data-ttu-id="39895-839">0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-839">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="39895-840">返されるファイル名の順序は保証されません。特定の並べ替え順序が必要な場合は、<xref:System.Array.Sort%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-840">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="39895-841">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-841">Wildcards are permitted.</span></span> <span data-ttu-id="39895-842">たとえば、`searchPattern` 文字列 "\* .txt" は、拡張子が "txt" のすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-842">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="39895-843">`searchPattern` 文字列 "s\*" は、文字 "s" で始まるすべてのファイル名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-843">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="39895-844">ファイルがない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-844">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39895-845">`searchPattern` でアスタリスクのワイルドカード文字 ("\* .txt" など) を使用する場合、一致の動作は、指定されたファイル拡張子の長さによって異なります。</span><span class="sxs-lookup"><span data-stu-id="39895-845">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="39895-846">ファイル拡張子が3文字の `searchPattern` は、3文字以上の拡張子を持つファイルを返します。最初の3文字は、`searchPattern`で指定されたファイル拡張子と一致します。</span><span class="sxs-lookup"><span data-stu-id="39895-846">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="39895-847">ファイル拡張子が1、2、または3文字を超える `searchPattern` は、`searchPattern`で指定されたファイル拡張子と完全に一致する拡張子を持つファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-847">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="39895-848">疑問符のワイルドカード文字を使用する場合、このメソッドは、指定されたファイル拡張子に一致するファイルだけを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-848">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="39895-849">たとえば、ディレクトリに2つのファイルがある場合、"file1" と "file1" は、"file?" という検索パターンになります。txt "は最初のファイルのみを返し、" file\*.txt "の検索パターンは両方のファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-849">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="39895-850">次の一覧は、`searchPattern` パラメーターのさまざまな長さの動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="39895-850">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="39895-851">"\* abc" は、拡張子が abc、abcd、abcde...z、abcdef などのファイルを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-851">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="39895-852">"\* abcd" は、拡張子が abcd のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-852">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="39895-853">"\* abcde...z" は拡張子が abcde...z のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-853">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="39895-854">"\* abcdef" は拡張子が abcdef のファイルのみを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-854">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="39895-855">このメソッドは、8.3 ファイル名形式と長いファイル名形式の両方を含むファイル名をチェックするため、"\* 1\*.txt" に類似した検索パターンでは、予期しないファイル名が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="39895-855">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="39895-856">たとえば、"\*1\*.txt" という検索パターンを使用すると、8.3 ファイル名の形式が "longfilename ~ 1 .txt" になるため、"longfilename. .txt" が返されます。</span><span class="sxs-lookup"><span data-stu-id="39895-856">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="39895-857">このメソッドは、次の <xref:System.IO.FileInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-857">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="39895-858">次の例では、さまざまな検索オプションを使用してディレクトリからファイルの一覧を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="39895-858">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="39895-859">この例では、log1.txt、log2、test1、test2、test3 という名前のファイルを含むディレクトリと、サブファイルという名前のファイルがあるサブディレクトリを前提としています。</span><span class="sxs-lookup"><span data-stu-id="39895-859">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-860"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-860"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-861"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-861"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39895-862"><paramref name="searchOption" /> は正しい <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-862"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-863">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-863">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-864">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-864">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-865">パスへのアクセス、およびファイルとディレクトリからの読み取りのために使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-865">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="39895-866">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="39895-866">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-867">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-867">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-868">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-868">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-869">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-869">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39895-870">現在のディレクトリのファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-870">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-871">ディレクトリ内のすべてのファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-871">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="39895-872">厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="39895-872">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-873"><xref:System.IO.DirectoryInfo>にファイルまたはディレクトリが存在しない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-873">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="39895-874">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-874">This method is not recursive.</span></span>  
  
 <span data-ttu-id="39895-875">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="39895-875">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="39895-876"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="39895-876">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="39895-877">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-877">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="39895-878">次の例では、指定されたディレクトリにあるファイルとディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="39895-878">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-879">パスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-879">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-880">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-880">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-881">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-881">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-882">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-882">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-883">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-883">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="39895-884">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-884">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="39895-885">指定した検索条件に一致するファイルおよびサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-885">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="39895-886">検索基準に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="39895-886">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-887">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-887">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-888">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-888">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-889">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-889">Wildcard specifier</span></span>|<span data-ttu-id="39895-890">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-890">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-891">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-891">\* (asterisk)</span></span>|<span data-ttu-id="39895-892">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-892">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-893">?</span><span class="sxs-lookup"><span data-stu-id="39895-893">?</span></span> <span data-ttu-id="39895-894">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-894">(question mark)</span></span>|<span data-ttu-id="39895-895">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-895">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-896">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-896">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-897">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-897">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-898">".</span><span class="sxs-lookup"><span data-stu-id="39895-898">".</span></span> <span data-ttu-id="39895-899">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-899">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-900">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-900">This method is not recursive.</span></span>  
  
 <span data-ttu-id="39895-901">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="39895-901">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="39895-902"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="39895-902">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="39895-903">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-903">Wild cards are permitted.</span></span> <span data-ttu-id="39895-904">たとえば、`searchPattern` 文字列 "\*t" は、末尾が文字 "t" である `path` 内のすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-904">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="39895-905">`searchPattern` 文字列 "s\*" は、`path` 内の文字 "s" で始まるすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-905">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-906">文字列 ".." は、ディレクトリ名 "a. のように有効なディレクトリ名の一部として指定されている場合にのみ、`searchPattern` で使用できます。b "のようになります。</span><span class="sxs-lookup"><span data-stu-id="39895-906">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="39895-907">ディレクトリ階層の上に移動するために使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="39895-907">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="39895-908">ファイルまたはディレクトリが存在しない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルやディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-908">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="39895-909">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-909">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="39895-910">次の例では、指定した検索パターンに一致するファイルとディレクトリをカウントします。</span><span class="sxs-lookup"><span data-stu-id="39895-910">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-911"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-911"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-912"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-912"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-913">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-913">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-914">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-914">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-915">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-915">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="39895-916">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="39895-916">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-917">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-917">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-918">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-918">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-919">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-919">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-920">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-920">The search string to match against the names of directories and files.</span></span> <span data-ttu-id="39895-921">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-921">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="39895-922">使用する検索と列挙の構成を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-922">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="39895-923">指定した検索パターンと列挙オプションに一致するファイルとサブディレクトリを表す、厳密に型指定された <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-923">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="39895-924"><paramref name="searchPattern" /> と <paramref name="enumerationOptions" /> に一致する、厳密に型指定された <see langword="FileSystemInfo" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="39895-924">An array of strongly typed <see langword="FileSystemInfo" /> objects matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-925">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-925">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-926">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-926">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-927">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-927">Wildcard specifier</span></span>|<span data-ttu-id="39895-928">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-928">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-929">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-929">\* (asterisk)</span></span>|<span data-ttu-id="39895-930">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-930">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-931">?</span><span class="sxs-lookup"><span data-stu-id="39895-931">?</span></span> <span data-ttu-id="39895-932">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-932">(question mark)</span></span>|<span data-ttu-id="39895-933">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-933">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-934">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-934">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-935">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-935">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-936">".</span><span class="sxs-lookup"><span data-stu-id="39895-936">".</span></span> <span data-ttu-id="39895-937">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-937">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-938">このメソッドは再帰的ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-938">This method is not recursive.</span></span>  
  
 <span data-ttu-id="39895-939">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="39895-939">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="39895-940"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="39895-940">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="39895-941">ワイルドカードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-941">Wild cards are permitted.</span></span> <span data-ttu-id="39895-942">たとえば、`searchPattern` 文字列 "\*t" は、末尾が文字 "t" である `path` 内のすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-942">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="39895-943">`searchPattern` 文字列 "s\*" は、`path` 内の文字 "s" で始まるすべてのディレクトリ名を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-943">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-944">文字列 ".." は、ディレクトリ名 "a. のように有効なディレクトリ名の一部として指定されている場合にのみ、`searchPattern` で使用できます。b "のようになります。</span><span class="sxs-lookup"><span data-stu-id="39895-944">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="39895-945">ディレクトリ階層の上に移動するために使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="39895-945">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="39895-946">ファイルまたはディレクトリが存在しない場合、または <xref:System.IO.DirectoryInfo>内の `searchPattern` 文字列に一致するファイルやディレクトリがない場合、このメソッドは空の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="39895-946">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="39895-947">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-947">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-948"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-948"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-949"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-949"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-950">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-950">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-951">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-951">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="39895-952">ディレクトリおよびファイルの名前と照合する検索文字列。</span><span class="sxs-lookup"><span data-stu-id="39895-952">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="39895-953">このパラメーターには有効なリテラルのパスとワイルドカード (\* と ?) 文字の組み合わせを含めることができますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-953">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="39895-954">検索操作に現在のディレクトリのみを含めるのか、すべてのサブディレクトリを含めるのかを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="39895-954">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="39895-955">既定値は <see cref="F:System.IO.SearchOption.TopDirectoryOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-955">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="39895-956">指定した検索条件に一致するファイルおよびサブディレクトリを表す <see cref="T:System.IO.FileSystemInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-956">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="39895-957">検索条件に一致するファイル システム エントリの配列。</span><span class="sxs-lookup"><span data-stu-id="39895-957">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-958">`searchPattern` には、リテラル文字とワイルドカード文字の組み合わせを使用できますが、正規表現はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="39895-958">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="39895-959">`searchPattern`では、次のワイルドカード指定子を使用できます。</span><span class="sxs-lookup"><span data-stu-id="39895-959">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="39895-960">ワイルドカード指定子</span><span class="sxs-lookup"><span data-stu-id="39895-960">Wildcard specifier</span></span>|<span data-ttu-id="39895-961">一致件数</span><span class="sxs-lookup"><span data-stu-id="39895-961">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="39895-962">\* (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="39895-962">\* (asterisk)</span></span>|<span data-ttu-id="39895-963">その位置に0個以上の文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-963">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="39895-964">?</span><span class="sxs-lookup"><span data-stu-id="39895-964">?</span></span> <span data-ttu-id="39895-965">(疑問符)</span><span class="sxs-lookup"><span data-stu-id="39895-965">(question mark)</span></span>|<span data-ttu-id="39895-966">その位置に0個または1個の文字。</span><span class="sxs-lookup"><span data-stu-id="39895-966">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="39895-967">ワイルドカード以外の文字はリテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="39895-967">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="39895-968">たとえば、"\*t" という文字列は、末尾に文字 "t" が付いているすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-968">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="39895-969">".</span><span class="sxs-lookup"><span data-stu-id="39895-969">".</span></span> <span data-ttu-id="39895-970">`searchPattern` 文字列 "s\*" は、文字 "s" で始まる `path` 内のすべての名前を検索します。</span><span class="sxs-lookup"><span data-stu-id="39895-970">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="39895-971">サブディレクトリの場合、このメソッドによって返される <xref:System.IO.FileSystemInfo> オブジェクトは、派生クラス <xref:System.IO.DirectoryInfo>にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="39895-971">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="39895-972"><xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.IO.FileAttributes> 値を使用して、<xref:System.IO.FileSystemInfo> がファイルまたはディレクトリを表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="39895-972">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="39895-973">このメソッドは、次の <xref:System.IO.FileSystemInfo> プロパティの値を事前に設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-973">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-974"><paramref name="searchPattern" /> に、<see cref="M:System.IO.Path.GetInvalidPathChars" /> メソッドによって定義された 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="39895-974"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-975"><paramref name="searchPattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-975"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39895-976"><paramref name="searchOption" /> は有効な <see cref="T:System.IO.SearchOption" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-976"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-977">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</span><span class="sxs-lookup"><span data-stu-id="39895-977">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-978">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-978">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="39895-979">このディレクトリの移動先の名前とパス。</span><span class="sxs-lookup"><span data-stu-id="39895-979">The name and path to which to move this directory.</span></span> <span data-ttu-id="39895-980">別のディスク ボリュームまたは同じ名前のディレクトリは移動先として指定できません。</span><span class="sxs-lookup"><span data-stu-id="39895-980">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="39895-981">このディレクトリをサブディレクトリとして追加する場合は、既存のディレクトリを指定できます。</span><span class="sxs-lookup"><span data-stu-id="39895-981">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="39895-982"><see cref="T:System.IO.DirectoryInfo" /> のインスタンスとその内容を新しいパスに移動します。</span><span class="sxs-lookup"><span data-stu-id="39895-982">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-983">たとえば、c:\mydir を c:\ に移動しようとしていて、c:\ パブリックが既に存在する場合、このメソッドは <xref:System.IO.IOException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="39895-983">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="39895-984">"C:\\\ public\\\mydir" を `destDirName` パラメーターとして指定するか、"c:\\\ newdir" のような新しいディレクトリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-984">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="39895-985">この方法を使うと、ディレクトリを読み取り専用ディレクトリに移動できます。</span><span class="sxs-lookup"><span data-stu-id="39895-985">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="39895-986">どちらのディレクトリの読み取り/書き込み属性も影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="39895-986">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="39895-987">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-987">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-988">次の例では、ディレクトリの移動を示します。</span><span class="sxs-lookup"><span data-stu-id="39895-988">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-989"><paramref name="destDirName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-989"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39895-990"><paramref name="destDirName" /> が空の文字列 (''") です。</span><span class="sxs-lookup"><span data-stu-id="39895-990"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39895-991">ディレクトリを別のボリュームに移動しようとしました。</span><span class="sxs-lookup"><span data-stu-id="39895-991">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="39895-992">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-992">-or-</span></span> 
 <span data-ttu-id="39895-993"><paramref name="destDirName" /> が既に存在します。</span><span class="sxs-lookup"><span data-stu-id="39895-993"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="39895-994">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-994">-or-</span></span> 
<span data-ttu-id="39895-995">このパスへのアクセスが承認されていません。</span><span class="sxs-lookup"><span data-stu-id="39895-995">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="39895-996">- または -</span><span class="sxs-lookup"><span data-stu-id="39895-996">-or-</span></span> 
<span data-ttu-id="39895-997">移動しようとしているディレクトリと移動先のディレクトリが同じ名前です。</span><span class="sxs-lookup"><span data-stu-id="39895-997">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-998">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-998">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="39895-999">対象のディレクトリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="39895-999">The destination directory cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-1000">ファイルとディレクトリの読み取りと書き込み、および宛先ディレクトリへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-1000">for reading and writing files and directories and for access to the destination directory.</span></span> <span data-ttu-id="39895-1001">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="39895-1001">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="39895-1002">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="39895-1002">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-1003">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-1003">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-1004">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-1004">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-1005">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-1005">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39895-1006"><see cref="T:System.IO.DirectoryInfo" /> の現在のインスタンスの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-1006">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="39895-1007">ディレクトリ名。</span><span class="sxs-lookup"><span data-stu-id="39895-1007">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-1008">この <xref:System.IO.DirectoryInfo.Name%2A> プロパティは、ディレクトリの名前 ("Bin" など) のみを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-1008">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="39895-1009">"C:\ Public\bin" のような完全なパスを取得するには、<xref:System.IO.FileSystemInfo.FullName%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-1009">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="39895-1010"><xref:System.IO.DirectoryInfo> の <xref:System.IO.DirectoryInfo.Name%2A> プロパティには、(<xref:System.IO.DirectoryInfo.Exists%2A>を構築するために必要なディレクトリへの読み取りアクセス許可を超える) アクセス許可は必要ありませんが、ディレクトリ名を指定することはできます。</span><span class="sxs-lookup"><span data-stu-id="39895-1010">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="39895-1011">暗号化された安全な名前で保護されたディレクトリに <xref:System.IO.DirectoryInfo> を渡す必要がある場合は、信頼されていないコードの使用用のダミーディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="39895-1011">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="39895-1012">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-1012">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-1013">次の例では、現在の `DirectoryInfo` インスタンスの名前のみを表示します。</span><span class="sxs-lookup"><span data-stu-id="39895-1013">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-1014">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-1014">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-1015">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-1015">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-1016">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-1016">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39895-1017">指定されたサブディレクトリの親ディレクトリを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-1017">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="39895-1018">親ディレクトリ。パスが null の場合、またはファイルパスがルート (`\`、`C:\`、`\\server\share`など) を示している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="39895-1018">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as `\`, `C:\`, or `\\server\share`).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="39895-1019">.NET Framework では、`Parent` は相対パスを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-1019">In .NET Framework, `Parent` returns a relative path.</span></span>
> <span data-ttu-id="39895-1020">.NET Core では、`Parent` は完全修飾パスを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-1020">In .NET Core, `Parent` returns a fully qualified path.</span></span>

<span data-ttu-id="39895-1021">バージョン間で一貫性のある動作を確保し、インテントを明示的にするには、`Parent`によって返される <xref:System.IO.DirectoryInfo> インスタンスで、次のいずれかのプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-1021">To ensure consistent behavior across versions and to make your intent explicit, retrieve the value of one of the following properties on the <xref:System.IO.DirectoryInfo> instance returned by `Parent`.</span></span>
- <span data-ttu-id="39895-1022"><xref:System.IO.DirectoryInfo.Name>。ディレクトリの簡易名を返します (`bin`など)。</span><span class="sxs-lookup"><span data-stu-id="39895-1022"><xref:System.IO.DirectoryInfo.Name>, which returns the simple name of the directory (such as `bin`).</span></span>
- <span data-ttu-id="39895-1023"><xref:System.IO.DirectoryInfo.FullName>。ディレクトリの絶対パスを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-1023"><xref:System.IO.DirectoryInfo.FullName>, which returns the absolute path of the directory.</span></span> 


<span data-ttu-id="39895-1024">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-1024">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>


## Examples

<span data-ttu-id="39895-1025">次の例では、指定されたディレクトリの親ディレクトリを参照します。</span><span class="sxs-lookup"><span data-stu-id="39895-1025">The following example refers to the parent directory of a specified directory.</span></span>

[!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
[!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
[!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]

          ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-1026">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-1026">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-1027">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-1027">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="39895-1028">関連付けられた列挙型: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、<see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="39895-1028">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-1029">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-1029">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-1030">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-1030">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-1031">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-1031">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39895-1032">ディレクトリのルート部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-1032">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="39895-1033">ディレクトリのルートを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-1033">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="39895-1034">次の例では、指定したディレクトリのルートの場所を表示します。</span><span class="sxs-lookup"><span data-stu-id="39895-1034">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="39895-1035">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-1035">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-1036">ファイルとディレクトリからの読み取り、およびパスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-1036">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="39895-1037">関連付けられた列挙型: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、<see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="39895-1037">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-1038">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-1038">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-1039">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-1039">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-1040">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-1040">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="39895-1041"><paramref name="path" /> パラメーターが示すディレクトリに適用する ACL エントリを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="39895-1041">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="39895-1042"><see cref="T:System.Security.AccessControl.DirectorySecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の<see cref="T:System.IO.DirectoryInfo" /> オブジェクトが示すディレクトリに適用します。</span><span class="sxs-lookup"><span data-stu-id="39895-1042">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39895-1043">アクセス制御リスト (ACL) は、特定のファイルまたはディレクトリに対する特定の操作に対する権限を持っている、または所有していないユーザーまたはグループを表します。</span><span class="sxs-lookup"><span data-stu-id="39895-1043">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="39895-1044">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39895-1044">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="39895-1045"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドは、継承されていない ACL リストを表す ACL エントリをファイルに適用します。</span><span class="sxs-lookup"><span data-stu-id="39895-1045">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="39895-1046">`directorySecurity` に指定された ACL は、ディレクトリの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="39895-1046">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="39895-1047">新しいユーザーにアクセス許可を追加するには、<xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して既存の ACL を取得し、変更します。</span><span class="sxs-lookup"><span data-stu-id="39895-1047">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="39895-1048"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドは、オブジェクトの作成後に変更された <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトのみを保持します。</span><span class="sxs-lookup"><span data-stu-id="39895-1048">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="39895-1049"><xref:System.Security.AccessControl.DirectorySecurity> オブジェクトが変更されていない場合は、ファイルに保存されません。</span><span class="sxs-lookup"><span data-stu-id="39895-1049">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="39895-1050">そのため、1つのファイルから <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを取得し、別のファイルに同じオブジェクトを再適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="39895-1050">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="39895-1051">ACL 情報をあるファイルから別のファイルにコピーするには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="39895-1051">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="39895-1052"><xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドを使用して、ソースファイルから <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-1052">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="39895-1053">コピー先ファイルの新しい <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="39895-1053">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="39895-1054">ACL 情報を取得するには、ソース <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトの <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> または <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-1054">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="39895-1055">手順 3. で取得した情報をターゲット <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトにコピーするには、<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> または <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-1055">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="39895-1056"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドを使用して、変換先の <xref:System.Security.AccessControl.DirectorySecurity> オブジェクトを変換先ファイルに設定します。</span><span class="sxs-lookup"><span data-stu-id="39895-1056">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39895-1057">次の例では、<xref:System.IO.DirectoryInfo.GetAccessControl%2A> および <xref:System.IO.DirectoryInfo.SetAccessControl%2A> メソッドを使用して、ディレクトリからアクセス制御リスト (ACL) エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="39895-1057">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39895-1058"><paramref name="directorySecurity" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="39895-1058">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="39895-1059">ファイルを検出または変更できませんでした。</span><span class="sxs-lookup"><span data-stu-id="39895-1059">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="39895-1060">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="39895-1060">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="39895-1061">現在のオペレーティング システムは Microsoft Windows 2000 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="39895-1061">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="39895-1062">ディレクトリのアクセス制御リスト (ACL) を列挙するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="39895-1062">for permission to enumerate access control list (ACL) for a directory.</span></span> <span data-ttu-id="39895-1063">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="39895-1063">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="39895-1064">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="39895-1064">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39895-1065"><see cref="T:System.IO.DirectoryInfo" /> コンストラクターに渡された元のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="39895-1065">Returns the original path that was passed to the <see cref="T:System.IO.DirectoryInfo" /> constructor.</span></span> <span data-ttu-id="39895-1066">このメソッドの代わりに、完全なパスの <see cref="P:System.IO.DirectoryInfo.FullName" /> または <see cref="P:System.IO.DirectoryInfo.Name" /> のプロパティ、またはファイル名またはディレクトリ名を使用します。</span><span class="sxs-lookup"><span data-stu-id="39895-1066">Use the <see cref="P:System.IO.DirectoryInfo.FullName" /> or <see cref="P:System.IO.DirectoryInfo.Name" /> properties for the full path or file/directory name instead of this method.</span></span></summary>
        <returns><span data-ttu-id="39895-1067">ユーザーから渡された元のパス。</span><span class="sxs-lookup"><span data-stu-id="39895-1067">The original path that was passed by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="39895-1068"><xref:System.IO.DirectoryInfo.ToString%2A> メソッドによって返される文字列は、<xref:System.IO.DirectoryInfo> コンストラクターに渡されたパスを表します。</span><span class="sxs-lookup"><span data-stu-id="39895-1068">The string returned by the <xref:System.IO.DirectoryInfo.ToString%2A> method represents the path that was passed to the <xref:System.IO.DirectoryInfo> constructor.</span></span> <span data-ttu-id="39895-1069">`ToString` メソッドを呼び出す代わりに、目的に応じて、次のいずれかのプロパティの値を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39895-1069">Instead of calling the `ToString` method, you should retrieve the value of either of the following properties, depending on your intent:</span></span>
> - <span data-ttu-id="39895-1070">親パス情報を含まない、ディレクトリの名前を取得するために <xref:System.IO.DirectoryInfo.Name>します。</span><span class="sxs-lookup"><span data-stu-id="39895-1070"><xref:System.IO.DirectoryInfo.Name>, to get the name of the directory, without any parent path information.</span></span>
> - <span data-ttu-id="39895-1071"><xref:System.IO.DirectoryInfo.FullName>、ディレクトリの完全修飾パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="39895-1071"><xref:System.IO.DirectoryInfo.FullName>, to get the fully qualified path of the directory.</span></span>

          ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39895-1072">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="39895-1072">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39895-1073">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="39895-1073">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39895-1074">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="39895-1074">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
