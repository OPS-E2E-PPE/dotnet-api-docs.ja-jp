<Type Name="TextWriter" FullName="System.IO.TextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8809ae8f9a583563388d68433946a0be27973ce6" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75131894" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextWriter : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextWriter extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextWriter&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriter abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextWriter = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cb15b-101">一連の文字を書き込むことができるライターを表します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-101">Represents a writer that can write a sequential series of characters.</span></span> <span data-ttu-id="cb15b-102">このクラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-103"><xref:System.IO.TextWriter> は <xref:System.IO.StreamWriter> と <xref:System.IO.StringWriter>の抽象基本クラスであり、それぞれがストリームと文字列に文字を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-103"><xref:System.IO.TextWriter> is the abstract base class of <xref:System.IO.StreamWriter> and <xref:System.IO.StringWriter>, which write characters to streams and strings, respectively.</span></span> <span data-ttu-id="cb15b-104">オブジェクトを文字列に書き込む、ファイルに文字列を書き込む、または XML をシリアル化するための <xref:System.IO.TextWriter> のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-104">Create an instance of <xref:System.IO.TextWriter> to write an object to a string, write strings to a file, or to serialize XML.</span></span> <span data-ttu-id="cb15b-105">また、<xref:System.IO.TextWriter> のインスタンスを使用して、文字列またはストリームに使用するのと同じ Api を使用してカスタムバッキングストアにテキストを書き込んだり、テキストの書式設定のサポートを追加したりすることもできます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-105">You can also use an instance of <xref:System.IO.TextWriter> to write text to a custom backing store using the same APIs you would use for a string or a stream, or to add support for text formatting.</span></span>  
  
 <span data-ttu-id="cb15b-106">プリミティブデータ型をパラメーターとして持つ <xref:System.IO.TextWriter> のすべての `Write` メソッドは、値を文字列として書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-106">All the `Write` methods of <xref:System.IO.TextWriter> having primitive data types as parameters write out the values as strings.</span></span>  
  
 <span data-ttu-id="cb15b-107">既定では、<xref:System.IO.TextWriter> はスレッドセーフではありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-107">By default, a <xref:System.IO.TextWriter> is not thread safe.</span></span> <span data-ttu-id="cb15b-108">スレッドセーフラッパーについては、「<xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-108">See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cb15b-109">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="cb15b-110">この型から派生した任意の型の使用が完了したら、直接または間接的に破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-110">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="cb15b-111">直接的に型を破棄するには、<xref:System.IO.TextWriter.Dispose%2A>`try`/ ブロック内で `catch` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-111">To dispose of the type directly, call its <xref:System.IO.TextWriter.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="cb15b-112">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="cb15b-113">詳細については、「Dispose」と「<xref:System.IDisposable> インターフェイス」の「IDisposable を実装するオブジェクトの使用」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-113">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="cb15b-114">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-114">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb15b-115"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-115">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="cb15b-116">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-116">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="cb15b-117"><xref:System.IO.StreamWriter> クラスは <xref:System.IO.TextWriter> から派生し、ストリームへの書き込みのためのメンバーの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-117">The <xref:System.IO.StreamWriter> class derives from <xref:System.IO.TextWriter> and provides implementations of the members for writing to a stream.</span></span> <span data-ttu-id="cb15b-118">次の例では、<xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> メソッドを使用して、文字列値で構成される2つの行をテキストファイルに書き込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-118">The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="cb15b-119">派生クラスで Dispose をオーバーライドしてを指定する</span><span class="sxs-lookup"><span data-stu-id="cb15b-119">Override Dispose in a derived class to provide</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]
 [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="cb15b-120">派生クラスは、<see cref="T:System.IO.TextWriter" />の便利なインスタンスを作成するために、<see cref="M:System.IO.TextWriter.Write(System.Char)" /> メソッドを最小限に実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-120">A derived class must minimally implement the <see cref="M:System.IO.TextWriter.Write(System.Char)" /> method to make a useful instance of <see cref="T:System.IO.TextWriter" />.</span></span></para></block>
    <altmember cref="T:System.IO.StreamWriter" />
    <altmember cref="T:System.IO.StringWriter" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-121">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-121">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-122">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-122">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-123">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-123">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="cb15b-124">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="cb15b-124">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb15b-125"><see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-125">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb15b-126"><see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-126">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-127"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティに値を指定しない場合は、このコンストラクターのオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-127">Use this constructor overload when you do not want to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property.</span></span> <span data-ttu-id="cb15b-128"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティが `null`場合、現在のスレッドのカルチャが書式設定に使用されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-128">When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="cb15b-129">派生クラスには、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-129">Use this constructor for derived classes.</span></span>  
  
 <span data-ttu-id="cb15b-130">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-130">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="cb15b-131">複合書式指定</span><span class="sxs-lookup"><span data-stu-id="cb15b-131">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-132">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-132">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-133">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-133">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-134">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-134">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.TextWriter : IFormatProvider -&gt; System.IO.TextWriter" Usage="new System.IO.TextWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><span data-ttu-id="cb15b-135">書式を制御する <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-135">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span></span></param>
        <summary><span data-ttu-id="cb15b-136">指定した書式プロバイダーで <see cref="T:System.IO.TextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-136">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class with the specified format provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-137">このコンストラクターのオーバーロードを使用して、<xref:System.IO.TextWriter.FormatProvider%2A> プロパティの値を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-137">Use this constructor overload to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property.</span></span> <span data-ttu-id="cb15b-138"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティの値は、<xref:System.IO.TextWriter.Write%2A> メソッドと <xref:System.IO.TextWriter.WriteLine%2A> メソッドを呼び出すときに使用されるカルチャ固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-138">The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods.</span></span> <span data-ttu-id="cb15b-139">書式プロバイダーを提供しない場合は、<xref:System.IO.TextWriter.%23ctor> コンストラクターを使用してインスタンスを作成します。これにより、<xref:System.IO.TextWriter.FormatProvider%2A> プロパティが `null`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-139">If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`.</span></span> <span data-ttu-id="cb15b-140"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティが `null`場合、現在のスレッドのカルチャが書式設定に使用されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-140">When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="cb15b-141">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-141">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="cb15b-142">複合書式指定</span><span class="sxs-lookup"><span data-stu-id="cb15b-142">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-143">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-143">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-144">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-144">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-145">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-145">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb15b-146">現在のライターを終了し、ライターに関連付けられたすべてのシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-146">Closes the current writer and releases any system resources associated with the writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-147">この `Close` の実装は、<xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> メソッドを呼び出し、それに `true` 値を渡します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-147">This implementation of `Close` calls the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
 <span data-ttu-id="cb15b-148">明示的に <xref:System.IO.TextWriter.Flush%2A> または `Close`を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-148">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.TextWriter.Flush%2A> or `Close`.</span></span> <span data-ttu-id="cb15b-149"><xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> プロパティを `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-149">Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="cb15b-150">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-150">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="cb15b-151">このシナリオは、エンコーダーが隣接する文字を受け取った後にのみ特定の文字をエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-151">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb15b-152">派生クラスでは、<xref:System.IO.TextWriter.Close%2A> メソッドをオーバーライドしないでください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-152">In derived classes, do not override the <xref:System.IO.TextWriter.Close%2A> method.</span></span> <span data-ttu-id="cb15b-153">代わりに、<xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> メソッドをオーバーライドして、リソースを解放するためのコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-153">Instead, override the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-154">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-154">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-155">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-155">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-156">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-156">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CoreNewLine">
      <MemberSignature Language="C#" Value="protected char[] CoreNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field family char[] CoreNewLine" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextWriter.CoreNewLine" />
      <MemberSignature Language="VB.NET" Value="Protected CoreNewLine As Char() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;char&gt; ^ CoreNewLine;" />
      <MemberSignature Language="F#" Value="val mutable CoreNewLine : char[]" Usage="System.IO.TextWriter.CoreNewLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb15b-157">この <see langword="TextWriter" /> で使用する改行文字を格納します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-157">Stores the newline characters used for this <see langword="TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-158">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-159">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-159">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-160">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-160">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-161">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-161">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb15b-162">この <see cref="T:System.IO.TextWriter" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-162">Releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb15b-163">この <see cref="T:System.IO.TextWriter" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-163">Releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-164"><xref:System.IO.TextWriter.Dispose%2A> を使い終わったら、<xref:System.IO.TextWriter>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-164">Call <xref:System.IO.TextWriter.Dispose%2A> when you are finished using the <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="cb15b-165"><xref:System.IO.TextWriter.Dispose%2A>メソッドによって、<xref:System.IO.TextWriter> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-165">The <xref:System.IO.TextWriter.Dispose%2A> method leaves the <xref:System.IO.TextWriter> in an unusable state.</span></span> <span data-ttu-id="cb15b-166"><xref:System.IO.TextWriter.Dispose%2A>呼び出し後は、<xref:System.IO.TextWriter>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.IO.TextWriter> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-166">After calling <xref:System.IO.TextWriter.Dispose%2A>, you must release all references to the <xref:System.IO.TextWriter> so the garbage collector can reclaim the memory that the <xref:System.IO.TextWriter> was occupying.</span></span>  
  
 <span data-ttu-id="cb15b-167">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-167">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="cb15b-168">**メモ**<xref:System.IO.TextWriter>への最後の参照を解放する前に、常に <xref:System.IO.TextWriter.Dispose%2A> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-168">**Note** Always call <xref:System.IO.TextWriter.Dispose%2A> before you release your last reference to the <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="cb15b-169">そうしないと、ガベージ コレクターが <xref:System.IO.TextWriter> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-169">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextWriter> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="cb15b-170">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb15b-170"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="cb15b-171"><see cref="T:System.IO.TextWriter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-171">Releases the unmanaged resources used by the <see cref="T:System.IO.TextWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-172">このメソッドは `Dispose` と <xref:System.Object.Finalize%2A>によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-172">This method is called by `Dispose` and <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="cb15b-173">既定では、このメソッドは `disposing` パラメーターを `true`として指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-173">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="cb15b-174"><xref:System.Object.Finalize%2A> `disposing` パラメーターを `false`として指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-174"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="cb15b-175">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.TextWriter> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-175">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextWriter> references.</span></span> <span data-ttu-id="cb15b-176">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-176">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cb15b-177">
            <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-177">
            <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="cb15b-178">このメソッドをオーバーライドする場合は、以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-178">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="cb15b-179">このメソッドの実装方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-179">For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="cb15b-180"><see cref="M:System.IDisposable.Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-180">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-181">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-181">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-182">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-182">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-183">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-183">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="textWriter.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb15b-184"><see cref="T:System.IO.TextWriter" /> オブジェクトによって使用されるすべてのリソースを非同期でリリースします。</span><span class="sxs-lookup"><span data-stu-id="cb15b-184">Asynchronously releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <returns><span data-ttu-id="cb15b-185">非同期の破棄操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-185">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.TextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb15b-186">派生クラスによってオーバーライドされると、出力を書き込む文字エンコーディングを返します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-186">When overridden in a derived class, returns the character encoding in which the output is written.</span></span></summary>
        <value><span data-ttu-id="cb15b-187">出力の書き込み時に適用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="cb15b-187">The character encoding in which the output is written.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-188">このプロパティは、`TextWriter`によって使用されるエンコーディングを含むヘッダーを書き込む必要がある一部の XML シナリオで必要です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-188">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `TextWriter`.</span></span> <span data-ttu-id="cb15b-189">これにより、XML コードは任意の `TextWriter` を使用し、正しい XML ヘッダーを生成することができます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-189">This enables the XML code to consume an arbitrary `TextWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="cb15b-190">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-190">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-191">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-191">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-192">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-192">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-193">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-193">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="textWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb15b-194">現在のライターのすべてのバッファーをクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-194">Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-195">この既定のメソッドは何も行いませんが、派生クラスはメソッドをオーバーライドして適切な機能を提供できます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-195">This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</span></span>  
  
 <span data-ttu-id="cb15b-196">明示的に `Flush` または <xref:System.IO.TextWriter.Close%2A>を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-196">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.TextWriter.Close%2A>.</span></span> <span data-ttu-id="cb15b-197"><xref:System.IO.StreamWriter.AutoFlush%2A> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-197">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="cb15b-198">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-198">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="cb15b-199">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-199">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-200">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-200">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-201">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-201">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-202">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-202">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="textWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb15b-203">現在のライターのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-203">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span></span></summary>
        <returns><span data-ttu-id="cb15b-204">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-204">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-205">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-205">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-206">ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-206">The writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="FormatProvider">
      <MemberSignature Language="C#" Value="public virtual IFormatProvider FormatProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatProvider" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.FormatProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FormatProvider As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IFormatProvider ^ FormatProvider { IFormatProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormatProvider : IFormatProvider" Usage="System.IO.TextWriter.FormatProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb15b-207">書式を制御するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-207">Gets an object that controls formatting.</span></span></summary>
        <value><span data-ttu-id="cb15b-208">特定のカルチャ設定の <see cref="T:System.IFormatProvider" /> オブジェクト、または他のカルチャ設定が指定されていない場合は現在のカルチャ設定の書式。</span><span class="sxs-lookup"><span data-stu-id="cb15b-208">An <see cref="T:System.IFormatProvider" /> object for a specific culture, or the formatting of the current culture if no other culture is specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-209"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティの値は、<xref:System.IO.TextWriter.Write%2A> メソッドと <xref:System.IO.TextWriter.WriteLine%2A> メソッドを呼び出すときに使用されるカルチャ固有の書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-209">The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods.</span></span> <span data-ttu-id="cb15b-210">書式プロバイダーを提供しない場合は、<xref:System.IO.TextWriter.%23ctor> コンストラクターを使用してインスタンスを作成します。これにより、<xref:System.IO.TextWriter.FormatProvider%2A> プロパティが `null`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-210">If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`.</span></span> <span data-ttu-id="cb15b-211"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティに `null`が含まれている場合、現在のスレッドのカルチャが書式設定に使用されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-211">When the <xref:System.IO.TextWriter.FormatProvider%2A> property contains `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="cb15b-212">ファイルを作成し、ファイルにテキストを書き込む例については、「[方法: ファイルにテキストを書き込む](~/docs/standard/io/how-to-write-text-to-a-file.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-212">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="cb15b-213">ファイルからテキストを読み取る例については、「[方法: ファイルからテキストを読み取る](~/docs/standard/io/how-to-read-text-from-a-file.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-213">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="cb15b-214">バイナリファイルの読み取りと書き込みの例については、「[方法: 新しく作成されたデータファイルに対して読み取りと書き込みを](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)行う」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-214">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="cb15b-215">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-215">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-216">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-216">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-217">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-217">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-218">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-218">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public virtual string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.IO.TextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb15b-219">現在の <see langword="TextWriter" /> で使用される行終端文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-219">Gets or sets the line terminator string used by the current <see langword="TextWriter" />.</span></span></summary>
        <value><span data-ttu-id="cb15b-220">現在の <see langword="TextWriter" /> で使用する行終端文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-220">The line terminator string for the current <see langword="TextWriter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-221">既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-221">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="cb15b-222">行終端記号文字列は、`WriteLine` メソッドのいずれかが呼び出されるたびにテキストストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-222">The line terminator string is written to the text stream whenever one of the `WriteLine` methods is called.</span></span> <span data-ttu-id="cb15b-223">`TextWriter` によって書き込まれたテキストが <xref:System.IO.TextReader>によって読み取れるようにするには、"\n" または "\r\n" だけをターミネータ文字列として使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-223">In order for text written by the `TextWriter` to be readable by a <xref:System.IO.TextReader>, only "\n" or "\r\n" should be used as terminator strings.</span></span> <span data-ttu-id="cb15b-224">`NewLine` が `null`に設定されている場合は、既定の改行文字が代わりに使用されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-224">If `NewLine` is set to `null`, the default newline character is used instead.</span></span>  
  
 <span data-ttu-id="cb15b-225">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-225">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-226">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-226">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-227">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-227">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-228">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-228">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextWriter ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextWriter" Usage="System.IO.TextWriter.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb15b-229">バッキング ストアを持たない書き込み専用の <see langword="TextWriter" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-229">Provides a <see langword="TextWriter" /> with no backing store that can be written to, but not read from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-230">オペレーティングシステムのリソースを使用しないストリームに出力をリダイレクトするには、`Null` を使用します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-230">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span>  
  
 <span data-ttu-id="cb15b-231"><xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> メソッドが `Null`で呼び出されると、呼び出しは単にを返し、どのバッキングストアにもデータは実際には書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-231">When the <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.</span></span>  
  
 <span data-ttu-id="cb15b-232">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-232">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-233">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-233">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-234">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-234">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-235">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-235">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Synchronized (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextWriter Synchronized(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (writer As TextWriter) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextWriter ^ Synchronized(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextWriter -&gt; System.IO.TextWriter" Usage="System.IO.TextWriter.Synchronized writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="cb15b-236">同期する <see langword="TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb15b-236">The <see langword="TextWriter" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="cb15b-237">指定した <see langword="TextWriter" /> をラップするスレッド セーフ ラッパーを作成します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-237">Creates a thread-safe wrapper around the specified <see langword="TextWriter" />.</span></span></summary>
        <returns><span data-ttu-id="cb15b-238">スレッド セーフ ラッパー。</span><span class="sxs-lookup"><span data-stu-id="cb15b-238">A thread-safe wrapper.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-239">返されたラッパーに対するすべての書き込み操作は、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-239">All write operations to the returned wrapper will be thread safe.</span></span> <span data-ttu-id="cb15b-240">このメソッドを呼び出すと、一度に1つのスレッドだけが、返された <xref:System.IO.TextWriter> インスタンスでメソッドを実行できるようになります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-240">You call this method to ensure that only one thread at a time can execute the methods on the <xref:System.IO.TextWriter> instance that is returned.</span></span> <span data-ttu-id="cb15b-241">同期とスレッド処理の詳細については、「[マルチスレッドのデータの同期](~/docs/standard/threading/synchronizing-data-for-multithreading.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-241">For more information about synchronization and threading, see [Synchronizing Data for Multithreading](~/docs/standard/threading/synchronizing-data-for-multithreading.md).</span></span>  
  
 <span data-ttu-id="cb15b-242">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-242">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-243"><paramref name="writer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-243"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-244">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-244">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-245">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-245">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-246">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-246">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb15b-247">このメンバーの詳細については、「<see cref="M:System.IDisposable.Dispose" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-247">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cb15b-248">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-248">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cb15b-249">これは、<xref:System.IO.TextWriter> のインスタンスが <xref:System.IDisposable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-249">It can be used only when the <xref:System.IO.TextWriter> instance is cast to an <xref:System.IDisposable> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb15b-250">テキスト ストリームにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-250">Writes data to a text stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-251">書き込む <see langword="Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="cb15b-251">The <see langword="Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-252"><see langword="Boolean" /> 値のテキスト表現をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-252">Writes the text representation of a <see langword="Boolean" /> value to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-253">指定した値のテキスト表現は、<xref:System.Boolean.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-253">The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cb15b-254">このメソッドは、<xref:System.Boolean.TrueString?displayProperty=nameWithType> または <xref:System.Boolean.FalseString?displayProperty=nameWithType>のいずれかを出力します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-254">This method outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cb15b-255">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-255">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-256"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-256">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-257">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-257">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-258">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-258">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-259">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-259">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-260">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-260">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (char value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (value As Char)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(char value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit" Usage="textWriter.Write value" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="C#" Value="public virtual void Write (char value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Char)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(char value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="textWriter.Write value" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-261">テキスト ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="cb15b-261">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="cb15b-262">文字をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-262">Writes a character to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-263">この既定のメソッドは何も行いませんが、派生クラスはメソッドをオーバーライドして適切な機能を提供できます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-263">This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</span></span>  
  
 <span data-ttu-id="cb15b-264">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-264">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-265"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-265">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-266">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-266">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.Char)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-267">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-267">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-268">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-268">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-269">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-269">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="textWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-270">テキスト ストリームに書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-270">The character array to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="cb15b-271">文字配列をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-271">Writes a character array to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-272">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-272">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="cb15b-273">この既定のメソッドは、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> メソッドを呼び出し、文字配列全体を渡します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-273">This default method calls the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method and passes the entire character array.</span></span> <span data-ttu-id="cb15b-274">文字配列が `null`場合は、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-274">If the character array is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="cb15b-275">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-275">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-276"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-276">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-277">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-277">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char[])" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-278">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-278">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-279">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-279">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-280">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-280">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member Write : decimal -&gt; unit&#xA;override this.Write : decimal -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-281">書き込む 10 進値。</span><span class="sxs-lookup"><span data-stu-id="cb15b-281">The decimal value to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-282">10 進値のテキスト表現をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-282">Writes the text representation of a decimal value to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-283"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-283">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-284"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-284">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-285">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-285">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-286">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-286">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-287">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-287">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-288">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-288">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-289">書き込む 8 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="cb15b-289">The 8-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-290">8 バイト浮動小数点値のテキスト表現をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-290">Writes the text representation of an 8-byte floating-point value to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-291">指定した値のテキスト表現は、<xref:System.Double.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-291">The text representation of the specified value is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-292"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-292">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-293">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-293">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-294"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-294">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-295">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-295">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-296">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-296">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-297">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-297">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-298">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-298">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-299">書き込む 4 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-299">The 4-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-300">4 バイト符号付き整数のテキスト表現をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-300">Writes the text representation of a 4-byte signed integer to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-301">指定した値のテキスト表現は、<xref:System.Int32.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-301">The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-302"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-302">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-303">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-303">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-304"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-304">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-305">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-305">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-306">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-306">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-307">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-307">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-308">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-308">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-309">書き込む 8 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-309">The 8-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-310">8 バイト符号付き整数のテキスト表現をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-310">Writes the text representation of an 8-byte signed integer to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-311">指定した値のテキスト表現は、<xref:System.Int64.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-311">The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-312"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-312">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-313">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-313">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 [<span data-ttu-id="cb15b-314">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-314">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-315"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-315">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-316">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-316">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-317">書き込むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-317">The object to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-318">オブジェクトで <see langword="ToString" /> メソッドを呼び出して、そのオブジェクトのテキスト表現をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-318">Writes the text representation of an object to the text stream by calling the <see langword="ToString" /> method on that object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-319">このオーバーロードは、<xref:System.IO.TextWriter.Write%28System.String%29> のオーバーロードに相当します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-319">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%29> overload.</span></span>  
  
 <span data-ttu-id="cb15b-320">指定したオブジェクトが `null`場合、アクションは実行されず、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-320">If the specified object is `null`, no action is taken and no exception is thrown.</span></span> <span data-ttu-id="cb15b-321">それ以外の場合は、文字列形式を生成するためにオブジェクトの `ToString` メソッドが呼び出され、結果の文字列が出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-321">Otherwise, the object's `ToString` method is called to produce the string representation, and the resulting string is then written to the output stream.</span></span> <span data-ttu-id="cb15b-322"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-322">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-323">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-323">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-324"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-324">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-325">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-325">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-326">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-326">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-327">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-327">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-328">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-328">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="textWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-329">書き込む文字スパン。</span><span class="sxs-lookup"><span data-stu-id="cb15b-329">The character span to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-330">文字スパンをテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-330">Writes a character span to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cb15b-331">指定された値のテキスト表現は、ReadOnlySpan<Char>を呼び出すことによって生成され[ます。ToString](xref:System.ReadOnlySpan%601.ToString%2A)メソッド。</span><span class="sxs-lookup"><span data-stu-id="cb15b-331">The text representation of the specified value is produced by calling the [ReadOnlySpan<Char>.ToString](xref:System.ReadOnlySpan%601.ToString%2A) method.</span></span>

<span data-ttu-id="cb15b-332">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-332">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-333">書き込む 4 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="cb15b-333">The 4-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-334">4 バイト浮動小数点値のテキスト表現をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-334">Writes the text representation of a 4-byte floating-point value to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-335">指定した値のテキスト表現は、<xref:System.Single.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-335">The text representation of the specified value is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-336"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-336">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-337">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-337">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-338"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-338">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-339">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-339">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-340">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-340">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-341">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-341">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-342">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-342">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-343">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-343">The string to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-344">文字列をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-344">Writes a string to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-345">このオーバーロードは、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> のオーバーロードに相当します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-345">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="cb15b-346">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-346">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cb15b-347">`value` が `null` の場合は、何もテキスト ストリームに書き込みません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-347">If `value` is `null`, nothing is written to the text stream.</span></span>  
  
 <span data-ttu-id="cb15b-348">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-348">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-349"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-349">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-350">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-350">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.String)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.String)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-351">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-351">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-352">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-352">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-353">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-353">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (System.Text.StringBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Text.StringBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Text::StringBuilder ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Text.StringBuilder -&gt; unit&#xA;override this.Write : System.Text.StringBuilder -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-354">テキスト ストリームに書き込む文字列ビルダーとしての文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-354">The string, as a string builder, to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="cb15b-355">文字列ビルダーをテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-355">Writes a string builder to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cb15b-356">このメソッドは `Write(stringBuilder.ToString())`と同じですが、<xref:System.Text.StringBuilder.GetChunks%2A?displayProperty=nameWithType> メソッドを使用して、中間文字列を作成しないようにします。</span><span class="sxs-lookup"><span data-stu-id="cb15b-356">This method is equivalent to `Write(stringBuilder.ToString())`, but it uses the <xref:System.Text.StringBuilder.GetChunks%2A?displayProperty=nameWithType>  method to avoid creating the intermediate string.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint32 -&gt; unit&#xA;override this.Write : uint32 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-357">書き込む 4 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-357">The 4-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-358">4 バイト符号なし整数のテキスト表現をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-358">Writes the text representation of a 4-byte unsigned integer to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-359">指定した値のテキスト表現は、<xref:System.UInt32.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-359">The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-360"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-360">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-361">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-361">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-362"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-362">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-363">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-363">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-364">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-364">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-365">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-365">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-366">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-366">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint64 -&gt; unit&#xA;override this.Write : uint64 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-367">書き込む 8 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-367">The 8-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-368">8 バイト符号なし整数のテキスト表現をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-368">Writes the text representation of an 8-byte unsigned integer to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-369">指定した値のテキスト表現は、<xref:System.UInt64.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-369">The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-370"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-370">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-371">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-371">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-372"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-372">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-373">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-373">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-374">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-374">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-375">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-375">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-376">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-376">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="textWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cb15b-377">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-377">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="cb15b-378">書式設定および書き込みをするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-378">The object to format and write.</span></span></param>
        <summary><span data-ttu-id="cb15b-379"><see cref="M:System.String.Format(System.String,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-379">Writes a formatted string to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-380">このメソッドは、複合書式指定を使用して、オブジェクトの値を文字列形式に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-380">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="cb15b-381">.NET ではさまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-381">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cb15b-382">複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-382">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="cb15b-383">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-383">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-384">日付と時刻の書式指定子の詳細については、「[標準の日付と](~/docs/standard/base-types/standard-date-and-time-format-strings.md)時刻の書式指定文字列」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-384">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-385">列挙型書式指定子の詳細については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-385">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-386">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-386">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="cb15b-387">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-387">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="cb15b-388">書式設定のプロセスでは、各書式項目が対応するオブジェクトの値の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-388">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="cb15b-389">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-389">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="cb15b-390">{*index*[,*length*] [:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="cb15b-390">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="cb15b-391">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-391">Elements in square brackets are optional.</span></span> <span data-ttu-id="cb15b-392">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-392">The following table describes each element.</span></span> <span data-ttu-id="cb15b-393">書式指定項目の構文など、複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-393">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="cb15b-394">要素</span><span class="sxs-lookup"><span data-stu-id="cb15b-394">Element</span></span>|<span data-ttu-id="cb15b-395">説明</span><span class="sxs-lookup"><span data-stu-id="cb15b-395">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cb15b-396">インデックス</span><span class="sxs-lookup"><span data-stu-id="cb15b-396">index</span></span>|<span data-ttu-id="cb15b-397">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-397">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="cb15b-398">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-398">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cb15b-399">このオーバーロードのパラメーターリストにはオブジェクトが1つしかないため、 *index*の値は常に0にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-399">Because this overload has only a single object in its parameter list, the value of *index* must always be 0.</span></span> <span data-ttu-id="cb15b-400">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-400">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="cb15b-401">、*length*</span><span class="sxs-lookup"><span data-stu-id="cb15b-401">,*length*</span></span>|<span data-ttu-id="cb15b-402">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-402">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="cb15b-403">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-403">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="cb15b-404">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="cb15b-404">:*formatString*</span></span>|<span data-ttu-id="cb15b-405">書式設定するオブジェクトによってサポートされる標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-405">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="cb15b-406">*FormatString*に使用できる値は、オブジェクトの `ToString(string format)` メソッドでサポートされている値と同じです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-406">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="cb15b-407">*FormatString*が指定されておらず、書式設定されるオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`null` は <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 書式指定文字列として使用される `format` パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-407">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="cb15b-408">先頭と末尾の中かっこ文字 "{" と "}" が必要です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-408">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="cb15b-409">`format`に1つのリテラルの中かっこ文字を指定するには、2つの先頭または末尾のかっこ文字を指定します。つまり、"{{" または "}}" です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-409">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="cb15b-410">.</span><span class="sxs-lookup"><span data-stu-id="cb15b-410">.</span></span> <span data-ttu-id="cb15b-411">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-411">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cb15b-412">指定されたオブジェクトが書式指定文字列で参照されていない場合、そのオブジェクトは無視されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-412">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="cb15b-413">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-413">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-414"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-414"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-415"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-415">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-416">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-416">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cb15b-417"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-417"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="cb15b-418">または</span><span class="sxs-lookup"><span data-stu-id="cb15b-418">-or-</span></span> 
<span data-ttu-id="cb15b-419">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 1) 以上です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-419">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-420">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-420">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-421">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-421">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-422">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-422">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="textWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cb15b-423">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-423">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="cb15b-424">書式設定および書き込みをする 0 個以上のオブジェクトを含むオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-424">An object array that contains zero or more objects to format and write.</span></span></param>
        <summary><span data-ttu-id="cb15b-425"><see cref="M:System.String.Format(System.String,System.Object[])" /> メソッドと同じセマンティクスを使用して、書式設定された文字列をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-425">Writes a formatted string to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-426">このメソッドは、複合書式指定を使用して、オブジェクトの値を文字列形式に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-426">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="cb15b-427">.NET ではさまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-427">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cb15b-428">複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-428">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="cb15b-429">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-429">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-430">日付と時刻の書式指定子の詳細については、「[標準の日付と](~/docs/standard/base-types/standard-date-and-time-format-strings.md)時刻の書式指定文字列」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-430">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-431">列挙型書式指定子の詳細については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-431">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-432">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-432">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="cb15b-433">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-433">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="cb15b-434">書式設定のプロセスでは、各書式項目が対応するオブジェクトの値の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-434">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="cb15b-435">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-435">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="cb15b-436">{*index*[,*length*] [:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="cb15b-436">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="cb15b-437">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-437">Elements in square brackets are optional.</span></span> <span data-ttu-id="cb15b-438">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-438">The following table describes each element.</span></span> <span data-ttu-id="cb15b-439">書式指定項目の構文など、複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-439">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="cb15b-440">要素</span><span class="sxs-lookup"><span data-stu-id="cb15b-440">Element</span></span>|<span data-ttu-id="cb15b-441">説明</span><span class="sxs-lookup"><span data-stu-id="cb15b-441">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cb15b-442">インデックス</span><span class="sxs-lookup"><span data-stu-id="cb15b-442">index</span></span>|<span data-ttu-id="cb15b-443">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-443">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="cb15b-444">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-444">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cb15b-445">このオーバーロードでは、パラメーターリストに配列が含まれているため、*インデックス*の値は常に配列の長さよりも小さくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-445">Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array.</span></span> <span data-ttu-id="cb15b-446">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-446">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="cb15b-447">、*length*</span><span class="sxs-lookup"><span data-stu-id="cb15b-447">,*length*</span></span>|<span data-ttu-id="cb15b-448">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-448">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="cb15b-449">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-449">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="cb15b-450">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="cb15b-450">:*formatString*</span></span>|<span data-ttu-id="cb15b-451">書式設定するオブジェクトによってサポートされる標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-451">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="cb15b-452">*FormatString*に使用できる値は、オブジェクトの `ToString(string format)` メソッドでサポートされている値と同じです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-452">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="cb15b-453">*FormatString*が指定されておらず、書式設定されるオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`null` は <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 書式指定文字列として使用される `format` パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-453">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="cb15b-454">先頭と末尾の中かっこ文字 "{" と "}" が必要です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-454">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="cb15b-455">`format`に1つのリテラルの中かっこ文字を指定するには、2つの先頭または末尾のかっこ文字を指定します。つまり、"{{" または "}}" です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-455">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="cb15b-456">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-456">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cb15b-457">指定されたオブジェクトが書式指定文字列で参照されていない場合、そのオブジェクトは無視されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-457">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="cb15b-458">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-458">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-459"><paramref name="format" /> または <paramref name="arg" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-459"><paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-460"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-460">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-461">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-461">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cb15b-462"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-462"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="cb15b-463">または</span><span class="sxs-lookup"><span data-stu-id="cb15b-463">-or-</span></span> 
<span data-ttu-id="cb15b-464">書式項目のインデックスが 0 (ゼロ) 未満であるか、<paramref name="arg" /> 配列の長さ以上です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-464">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="arg" /> array.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-465">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-465">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-466">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-466">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-467">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-467">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="textWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-468">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-468">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="cb15b-469">データの取得を開始する、バッファー内の文字位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-469">The character position in the buffer at which to start retrieving data.</span></span></param>
        <param name="count"><span data-ttu-id="cb15b-470">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-470">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-471">文字の部分配列をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-471">Writes a subarray of characters to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-472">このメソッドは、`index`位置から始まる `buffer` 文字配列から、この `TextWriter` に `count` 文字のデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-472">This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.</span></span>  
  
 <span data-ttu-id="cb15b-473">このオーバーロードは、`index` と (`index` + `count`) 間の `buffer` 内の各文字の <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> オーバーロードに相当します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-473">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload for each character in `buffer` between `index` and (`index` + `count`).</span></span>  
  
 <span data-ttu-id="cb15b-474">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-474">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb15b-475">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-475">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-476"><paramref name="buffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-476">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb15b-477"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-477"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-478"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-478">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-479">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-479">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-480">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-480">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-481">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-481">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-482">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-482">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="textWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cb15b-483">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-483">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="cb15b-484">書式設定および書き込みをする最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-484">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="cb15b-485">書式設定および書き込みをする 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-485">The second object to format and write.</span></span></param>
        <summary><span data-ttu-id="cb15b-486"><see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-486">Writes a formatted string to the text stream using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-487">このメソッドは、複合書式指定を使用して、オブジェクトの値を文字列形式に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-487">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="cb15b-488">.NET ではさまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-488">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cb15b-489">複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-489">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="cb15b-490">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-490">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-491">日付と時刻の書式指定子の詳細については、「[標準の日付と](~/docs/standard/base-types/standard-date-and-time-format-strings.md)時刻の書式指定文字列」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-491">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-492">列挙型書式指定子の詳細については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-492">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-493">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-493">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="cb15b-494">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-494">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="cb15b-495">書式設定のプロセスでは、各書式項目が対応するオブジェクトの値の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-495">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="cb15b-496">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-496">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="cb15b-497">{*index*[,*length*] [:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="cb15b-497">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="cb15b-498">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-498">Elements in square brackets are optional.</span></span> <span data-ttu-id="cb15b-499">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-499">The following table describes each element.</span></span> <span data-ttu-id="cb15b-500">書式指定項目の構文など、複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-500">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="cb15b-501">要素</span><span class="sxs-lookup"><span data-stu-id="cb15b-501">Element</span></span>|<span data-ttu-id="cb15b-502">説明</span><span class="sxs-lookup"><span data-stu-id="cb15b-502">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cb15b-503">インデックス</span><span class="sxs-lookup"><span data-stu-id="cb15b-503">index</span></span>|<span data-ttu-id="cb15b-504">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-504">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="cb15b-505">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-505">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cb15b-506">このオーバーロードでは、パラメーターリストに2つのオブジェクトがあるため、 *index*の値は常に0または1である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-506">Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1.</span></span> <span data-ttu-id="cb15b-507">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-507">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="cb15b-508">、*length*</span><span class="sxs-lookup"><span data-stu-id="cb15b-508">,*length*</span></span>|<span data-ttu-id="cb15b-509">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-509">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="cb15b-510">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-510">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="cb15b-511">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="cb15b-511">:*formatString*</span></span>|<span data-ttu-id="cb15b-512">書式設定するオブジェクトによってサポートされる標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-512">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="cb15b-513">*FormatString*に使用できる値は、オブジェクトの `ToString(string format)` メソッドでサポートされている値と同じです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-513">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="cb15b-514">*FormatString*が指定されておらず、書式設定されるオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`null` は <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 書式指定文字列として使用される `format` パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-514">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="cb15b-515">先頭と末尾の中かっこ文字 "{" と "}" が必要です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-515">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="cb15b-516">`format`に1つのリテラルの中かっこ文字を指定するには、2つの先頭または末尾のかっこ文字を指定します。つまり、"{{" または "}}" です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-516">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="cb15b-517">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-517">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cb15b-518">指定されたオブジェクトが書式指定文字列で参照されていない場合、そのオブジェクトは無視されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-518">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="cb15b-519">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-519">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-520"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-520"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-521"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-521">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-522">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-522">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cb15b-523"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-523"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="cb15b-524">または</span><span class="sxs-lookup"><span data-stu-id="cb15b-524">-or-</span></span> 
<span data-ttu-id="cb15b-525">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 2) 以上です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-525">The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-526">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-526">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-527">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-527">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-528">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-528">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj * obj -&gt; unit" Usage="textWriter.Write (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cb15b-529">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-529">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="cb15b-530">書式設定および書き込みをする最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-530">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="cb15b-531">書式設定および書き込みをする 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-531">The second object to format and write.</span></span></param>
        <param name="arg2"><span data-ttu-id="cb15b-532">書式設定および書き込みをする 3 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-532">The third object to format and write.</span></span></param>
        <summary><span data-ttu-id="cb15b-533"><see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-533">Writes a formatted string to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-534">このメソッドは、複合書式指定を使用して、オブジェクトの値を文字列形式に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-534">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="cb15b-535">.NET ではさまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-535">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cb15b-536">複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-536">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="cb15b-537">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-537">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-538">日付と時刻の書式指定子の詳細については、「[標準の日付と](~/docs/standard/base-types/standard-date-and-time-format-strings.md)時刻の書式指定文字列」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-538">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-539">列挙型書式指定子の詳細については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-539">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-540">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-540">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="cb15b-541">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-541">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="cb15b-542">書式設定のプロセスでは、各書式項目が対応するオブジェクトの値の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-542">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="cb15b-543">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-543">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="cb15b-544">{*index*[,*length*] [:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="cb15b-544">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="cb15b-545">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-545">Elements in square brackets are optional.</span></span> <span data-ttu-id="cb15b-546">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-546">The following table describes each element.</span></span> <span data-ttu-id="cb15b-547">書式指定項目の構文など、複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-547">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="cb15b-548">要素</span><span class="sxs-lookup"><span data-stu-id="cb15b-548">Element</span></span>|<span data-ttu-id="cb15b-549">説明</span><span class="sxs-lookup"><span data-stu-id="cb15b-549">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cb15b-550">インデックス</span><span class="sxs-lookup"><span data-stu-id="cb15b-550">index</span></span>|<span data-ttu-id="cb15b-551">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-551">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="cb15b-552">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-552">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cb15b-553">このオーバーロードでは、パラメーターリストに3つのオブジェクトがあるため、 *index*の値は常に0、1、または2である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-553">Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2.</span></span> <span data-ttu-id="cb15b-554">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-554">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="cb15b-555">、*length*</span><span class="sxs-lookup"><span data-stu-id="cb15b-555">,*length*</span></span>|<span data-ttu-id="cb15b-556">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-556">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="cb15b-557">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-557">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="cb15b-558">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="cb15b-558">:*formatString*</span></span>|<span data-ttu-id="cb15b-559">書式設定するオブジェクトによってサポートされる標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-559">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="cb15b-560">*FormatString*に使用できる値は、オブジェクトの `ToString(string format)` メソッドでサポートされている値と同じです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-560">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="cb15b-561">*FormatString*が指定されておらず、書式設定されるオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`null` は <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 書式指定文字列として使用される `format` パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-561">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="cb15b-562">先頭と末尾の中かっこ文字 "{" と "}" が必要です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-562">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="cb15b-563">`format`に1つのリテラルの中かっこ文字を指定するには、2つの先頭または末尾のかっこ文字を指定します。つまり、"{{" または "}}" です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-563">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="cb15b-564">このメソッドでは、指定された文字列で個別の改行文字 (16 進数の 0x000a) が検索されず、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-564">This method does not search the specified string  for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cb15b-565">指定されたオブジェクトが書式指定文字列で参照されていない場合、そのオブジェクトは無視されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-565">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="cb15b-566">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-566">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-567"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-567"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-568"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-568">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-569">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-569">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cb15b-570"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-570"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="cb15b-571">または</span><span class="sxs-lookup"><span data-stu-id="cb15b-571">-or-</span></span> 
<span data-ttu-id="cb15b-572">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 3) 以上です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-572">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-573">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-573">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-574">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-574">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-575">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-575">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb15b-576">データをテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-576">Writes data to the text stream asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-577">テキスト ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="cb15b-577">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="cb15b-578">文字をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-578">Writes a character to the text stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="cb15b-579">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-579">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-580"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-580">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="cb15b-581">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-581">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="cb15b-582"><xref:System.IO.TextWriter.WriteAsync%2A> メソッドの使用例については、「<xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> メソッド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-582">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-583">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-583">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-584">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-584">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Char()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : char[] -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-585">テキスト ストリームに書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-585">The character array to write to the text stream.</span></span> <span data-ttu-id="cb15b-586"><paramref name="buffer" /> が <see langword="null" /> の場合は、何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-586">If <paramref name="buffer" /> is <see langword="null" />, nothing is written.</span></span></param>
        <summary><span data-ttu-id="cb15b-587">文字配列をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-587">Writes a character array to the text stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="cb15b-588">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-588">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-589">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-589">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-590">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-590">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-591">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-591">The string to write.</span></span> <span data-ttu-id="cb15b-592"><paramref name="value" /> が <see langword="null" /> の場合は、何もテキスト ストリームに書き込みません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-592">If <paramref name="value" /> is <see langword="null" />, nothing is written to the text stream.</span></span></param>
        <summary><span data-ttu-id="cb15b-593">文字列をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-593">Writes a string to the text stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="cb15b-594">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-594">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-595"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-595">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="cb15b-596">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-596">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="cb15b-597"><xref:System.IO.TextWriter.WriteAsync%2A> メソッドの使用例については、「<xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> メソッド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-597">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-598">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-598">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-599">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-599">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.String)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-600">テキスト ストリームに書き込む文字メモリ領域。</span><span class="sxs-lookup"><span data-stu-id="cb15b-600">The character memory region to write to the text stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="cb15b-601">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="cb15b-601">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="cb15b-602">既定値は <see cref="P:System.Threading.CancellationToken.None" />です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-602">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="cb15b-603">文字メモリ領域をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-603">Asynchronously writes a character memory region to the text stream.</span></span></summary>
        <returns><span data-ttu-id="cb15b-604">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-604">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (System.Text.StringBuilder value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(class System.Text.StringBuilder value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-605">テキスト ストリームに書き込む文字列ビルダーとしての文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-605">The string, as a string builder, to write to the text stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="cb15b-606">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="cb15b-606">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="cb15b-607">既定値は <see cref="P:System.Threading.CancellationToken.None" />です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-607">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="cb15b-608">文字列ビルダーをテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-608">Asynchronously writes a string builder to the text stream.</span></span></summary>
        <returns><span data-ttu-id="cb15b-609">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-609">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

<span data-ttu-id="cb15b-610">このメソッドは `WriteAsync(stringBuilder.ToString())`を呼び出すことと同じですが、<xref:System.Text.StringBuilder.GetChunks?displayProperty=nameWithType> メソッドを使用して中間文字列を作成しないようにします。</span><span class="sxs-lookup"><span data-stu-id="cb15b-610">This method is equivalent to calling `WriteAsync(stringBuilder.ToString())`, however, it uses the <xref:System.Text.StringBuilder.GetChunks?displayProperty=nameWithType> method to avoid creating the intermediate string.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-611">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-611">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="cb15b-612">データの取得を開始する、バッファー内の文字位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-612">The character position in the buffer at which to start retrieving data.</span></span></param>
        <param name="count"><span data-ttu-id="cb15b-613">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-613">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-614">文字の部分配列をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-614">Writes a subarray of characters to the text stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="cb15b-615">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-615">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-616"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-616">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="cb15b-617">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-617">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="cb15b-618"><xref:System.IO.TextWriter.WriteAsync%2A> メソッドの使用例については、「<xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> メソッド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-618">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-619"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-619"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb15b-620"><paramref name="index" /> に <paramref name="count" /> を加算した値がバッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-620">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb15b-621"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-621"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-622">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-622">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-623">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-623">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb15b-624">データを、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-624">Writes data to the text stream, followed by a line terminator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="textWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb15b-625">行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-625">Writes a line terminator to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cb15b-626">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-626">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="cb15b-627">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-627">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-628"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-628">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-629">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-629">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-630">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-630">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-631">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-631">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-632">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-632">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-633">書き込む <see langword="Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="cb15b-633">The <see langword="Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-634"><see langword="Boolean" /> 値のテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-634">Writes the text representation of a <see langword="Boolean" /> value to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-635">指定した値のテキスト表現は、<xref:System.Boolean.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-635">The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cb15b-636">このメソッドは、<xref:System.Boolean.TrueString?displayProperty=nameWithType> または <xref:System.Boolean.FalseString?displayProperty=nameWithType>のいずれかを出力します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-636">This method outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="cb15b-637">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-637">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-638">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-638">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-639"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-639">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-640">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-640">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-641">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-641">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-642">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-642">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-643">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-643">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-644">テキスト ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="cb15b-644">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="cb15b-645">文字を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-645">Writes a character to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-646">このオーバーロードは、<xref:System.IO.TextWriter.Write%28System.Char%29> とそれに続く <xref:System.IO.TextWriter.WriteLine> に相当します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-646">This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%29> followed by <xref:System.IO.TextWriter.WriteLine> .</span></span>  
  
 <span data-ttu-id="cb15b-647">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-647">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-648">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-648">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-649"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-649">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-650">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-650">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-651">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-651">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-652">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-652">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-653">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-653">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="textWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-654">データの読み取り元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-654">The character array from which data is read.</span></span></param>
        <summary><span data-ttu-id="cb15b-655">文字配列を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-655">Writes an array of characters to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-656">`buffer` 内のすべての文字が、基になるストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-656">All the characters in `buffer` are written to the underlying stream.</span></span> <span data-ttu-id="cb15b-657">文字配列が `null` の場合は、行終端記号だけが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-657">If the character array is `null`, only the line terminator is written.</span></span>  
  
 <span data-ttu-id="cb15b-658">このオーバーロードは、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> とそれに続く <xref:System.IO.TextWriter.WriteLine> に相当します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-658">This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> followed by <xref:System.IO.TextWriter.WriteLine> .</span></span>  
  
 <span data-ttu-id="cb15b-659">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-659">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-660">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-660">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-661"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-661">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-662">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-662">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-663">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-663">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-664">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-664">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-665">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-665">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : decimal -&gt; unit&#xA;override this.WriteLine : decimal -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-666">書き込む 10 進値。</span><span class="sxs-lookup"><span data-stu-id="cb15b-666">The decimal value to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-667">10 進値のテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-667">Writes the text representation of a decimal value to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-668"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-668">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="cb15b-669">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-669">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="cb15b-670">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-670">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-671"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-671">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-672">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-672">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-673">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-673">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-674">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-674">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-675">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-675">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-676">書き込む 8 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="cb15b-676">The 8-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-677">8 バイト浮動小数点値のテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-677">Writes the text representation of a 8-byte floating-point value to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-678"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-678">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="cb15b-679">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-679">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="cb15b-680">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-680">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-681"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-681">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-682">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-682">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-683">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-683">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-684">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-684">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-685">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-685">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-686">書き込む 4 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-686">The 4-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-687">4 バイト符号付き整数のテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-687">Writes the text representation of a 4-byte signed integer to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-688">指定した値のテキスト表現は、<xref:System.Int32.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-688">The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-689"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-689">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-690">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-690">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-691">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-691">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-692"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-692">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-693">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-693">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-694">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-694">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-695">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-695">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-696">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-696">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-697">書き込む 8 バイト符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-697">The 8-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-698">8 バイト符号付き整数のテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-698">Writes the text representation of an 8-byte signed integer to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-699">指定した値のテキスト表現は、<xref:System.Int64.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-699">The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-700"><xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-700">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-701">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-701">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-702">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-702">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-703"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-703">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-704">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-704">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-705">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-705">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-706">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-706">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-707">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-707">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-708">書き込むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-708">The object to write.</span></span> <span data-ttu-id="cb15b-709"><paramref name="value" /> が <see langword="null" /> の場合は、行終端記号だけを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-709">If <paramref name="value" /> is <see langword="null" />, only the line terminator is written.</span></span></param>
        <summary><span data-ttu-id="cb15b-710">オブジェクトで <see langword="ToString" /> メソッドを呼び出して、そのオブジェクトのテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-710">Writes the text representation of an object to the text stream, by calling the <see langword="ToString" /> method on that object, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="cb15b-711">このオーバーロードは、<xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29> のオーバーロードに相当します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-711">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29> overload.</span></span> <span data-ttu-id="cb15b-712"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-712">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>

<span data-ttu-id="cb15b-713">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-713">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="cb15b-714">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-714">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-715"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-715">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-716">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-716">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-717">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-717">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-718">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-718">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-719">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-719">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="textWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-720">テキスト ストリームに書き込む文字スパン値。</span><span class="sxs-lookup"><span data-stu-id="cb15b-720">The char span value to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="cb15b-721">文字スパンのテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-721">Writes the text representation of a character span to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="cb15b-722">指定された値のテキスト表現は、ReadOnlySpan<Char>を呼び出すことによって生成され[ます。ToString](xref:System.ReadOnlySpan%601.ToString%2A)メソッド。</span><span class="sxs-lookup"><span data-stu-id="cb15b-722">The text representation of the specified value is produced by calling the [ReadOnlySpan<Char>.ToString](xref:System.ReadOnlySpan%601.ToString%2A) method.</span></span>

<span data-ttu-id="cb15b-723">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-723">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="cb15b-724">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-724">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-725">書き込む 4 バイト浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="cb15b-725">The 4-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-726">4 バイト浮動小数点値のテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-726">Writes the text representation of a 4-byte floating-point value to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="cb15b-727"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-727">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="cb15b-728">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-728">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>

 <span data-ttu-id="cb15b-729">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-729">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-730"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-730">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-731">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-731">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-732">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-732">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-733">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-733">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-734">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-734">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-735">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-735">The string to write.</span></span> <span data-ttu-id="cb15b-736"><paramref name="value" /> が <see langword="null" /> の場合は、行終端記号だけを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-736">If <paramref name="value" /> is <see langword="null" />, only the line terminator is written.</span></span></param>
        <summary><span data-ttu-id="cb15b-737">文字列を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-737">Writes a string to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cb15b-738">このオーバーロードは、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> のオーバーロードに相当します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-738">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.</span></span>

<span data-ttu-id="cb15b-739">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-739">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="cb15b-740">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-740">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>

<span data-ttu-id="cb15b-741">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-741">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-742"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-742">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-743">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-743">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-744">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-744">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-745">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-745">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-746">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-746">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (System.Text.StringBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(class System.Text.StringBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Text::StringBuilder ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : System.Text.StringBuilder -&gt; unit&#xA;override this.WriteLine : System.Text.StringBuilder -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-747">テキスト ストリームに書き込む文字列ビルダーとしての文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-747">The string, as a string builder, to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="cb15b-748">文字列ビルダーのテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-748">Writes the text representation of a string builder to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="cb15b-749">指定した値のテキスト表現は、<xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-749">The text representation of the specified value is produced by calling the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method.</span></span>

<span data-ttu-id="cb15b-750">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-750">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="cb15b-751">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-751">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-752">書き込む 4 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-752">The 4-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-753">4 バイト符号なし整数のテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-753">Writes the text representation of a 4-byte unsigned integer to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-754">指定した値のテキスト表現は、<xref:System.UInt32.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-754">The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-755"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-755">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-756">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-756">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-757">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-757">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-758"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-758">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-759">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-759">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-760">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-760">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-761">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-761">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-762">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-762">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint64 -&gt; unit&#xA;override this.WriteLine : uint64 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-763">書き込む 8 バイト符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-763">The 8-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-764">8 バイト符号なし整数のテキスト表現を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-764">Writes the text representation of an 8-byte unsigned integer to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-765">指定した値のテキスト表現は、<xref:System.UInt64.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-765">The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="cb15b-766"><xref:System.IO.TextWriter.FormatProvider%2A> プロパティは、`null`ない場合は、カルチャ固有の書式設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-766">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="cb15b-767">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-767">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-768">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-768">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-769"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-769">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-770">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-770">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-771">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-771">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-772">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-772">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-773">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-773">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cb15b-774">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-774">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="cb15b-775">書式設定および書き込みをするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-775">The object to format and write.</span></span></param>
        <summary><span data-ttu-id="cb15b-776"><see cref="M:System.String.Format(System.String,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列と新しい行をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-776">Writes a formatted string and a new line to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-777">このメソッドは、複合書式指定を使用して、オブジェクトの値を文字列形式に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-777">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="cb15b-778">.NET ではさまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-778">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cb15b-779">複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-779">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="cb15b-780">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-780">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-781">日付と時刻の書式指定子の詳細については、「[標準の日付と](~/docs/standard/base-types/standard-date-and-time-format-strings.md)時刻の書式指定文字列」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-781">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-782">列挙型書式指定子の詳細については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-782">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-783">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-783">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="cb15b-784">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-784">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="cb15b-785">書式設定のプロセスでは、各書式項目が対応するオブジェクトの値の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-785">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="cb15b-786">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-786">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="cb15b-787">{*index*[,*length*] [:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="cb15b-787">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="cb15b-788">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-788">Elements in square brackets are optional.</span></span> <span data-ttu-id="cb15b-789">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-789">The following table describes each element.</span></span> <span data-ttu-id="cb15b-790">書式指定項目の構文など、複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-790">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="cb15b-791">要素</span><span class="sxs-lookup"><span data-stu-id="cb15b-791">Element</span></span>|<span data-ttu-id="cb15b-792">説明</span><span class="sxs-lookup"><span data-stu-id="cb15b-792">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cb15b-793">インデックス</span><span class="sxs-lookup"><span data-stu-id="cb15b-793">index</span></span>|<span data-ttu-id="cb15b-794">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-794">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="cb15b-795">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-795">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cb15b-796">このオーバーロードのパラメーターリストにはオブジェクトが1つしかないため、 *index*の値は常に0にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-796">Because this overload has only a single object in its parameter list, the value of *index* must always be 0.</span></span> <span data-ttu-id="cb15b-797">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-797">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="cb15b-798">、*length*</span><span class="sxs-lookup"><span data-stu-id="cb15b-798">,*length*</span></span>|<span data-ttu-id="cb15b-799">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-799">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="cb15b-800">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-800">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="cb15b-801">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="cb15b-801">:*formatString*</span></span>|<span data-ttu-id="cb15b-802">書式設定するオブジェクトによってサポートされる標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-802">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="cb15b-803">*FormatString*に使用できる値は、オブジェクトの `ToString(string format)` メソッドでサポートされている値と同じです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-803">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="cb15b-804">*FormatString*が指定されておらず、書式設定されるオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`null` は <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 書式指定文字列として使用される `format` パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-804">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="cb15b-805">先頭と末尾の中かっこ文字 "{" と "}" が必要です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-805">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="cb15b-806">`format`に1つのリテラルの中かっこ文字を指定するには、2つの先頭または末尾のかっこ文字を指定します。つまり、"{{" または "}}" です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-806">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="cb15b-807">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-807">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="cb15b-808">指定されたオブジェクトが書式指定文字列で参照されていない場合、そのオブジェクトは無視されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-808">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="cb15b-809">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-809">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-810">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-810">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-811"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-811"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-812"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-812">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-813">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-813">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cb15b-814"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-814"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="cb15b-815">または</span><span class="sxs-lookup"><span data-stu-id="cb15b-815">-or-</span></span> 
<span data-ttu-id="cb15b-816">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 1) 以上です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-816">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-817">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-817">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-818">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-818">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-819">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-819">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="textWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cb15b-820">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-820">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="cb15b-821">書式設定および書き込みをする 0 個以上のオブジェクトを含むオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-821">An object array that contains zero or more objects to format and write.</span></span></param>
        <summary><span data-ttu-id="cb15b-822"><see cref="M:System.String.Format(System.String,System.Object)" /> と同じセマンティクスを使用して、書式設定された文字列と新しい行をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-822">Writes out a formatted string and a new line to the text stream, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-823">このメソッドは、複合書式指定を使用して、オブジェクトの値を文字列形式に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-823">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="cb15b-824">.NET ではさまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-824">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cb15b-825">複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-825">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="cb15b-826">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-826">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-827">日付と時刻の書式指定子の詳細については、「[標準の日付と](~/docs/standard/base-types/standard-date-and-time-format-strings.md)時刻の書式指定文字列」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-827">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-828">列挙型書式指定子の詳細については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-828">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-829">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-829">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="cb15b-830">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-830">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="cb15b-831">書式設定のプロセスでは、各書式項目が対応するオブジェクトの値の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-831">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="cb15b-832">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-832">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="cb15b-833">{*index*[,*length*] [:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="cb15b-833">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="cb15b-834">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-834">Elements in square brackets are optional.</span></span> <span data-ttu-id="cb15b-835">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-835">The following table describes each element.</span></span> <span data-ttu-id="cb15b-836">書式指定項目の構文など、複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-836">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="cb15b-837">要素</span><span class="sxs-lookup"><span data-stu-id="cb15b-837">Element</span></span>|<span data-ttu-id="cb15b-838">説明</span><span class="sxs-lookup"><span data-stu-id="cb15b-838">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cb15b-839">インデックス</span><span class="sxs-lookup"><span data-stu-id="cb15b-839">index</span></span>|<span data-ttu-id="cb15b-840">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-840">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="cb15b-841">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-841">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cb15b-842">このオーバーロードでは、パラメーターリストに配列が含まれているため、*インデックス*の値は常に配列の長さよりも小さくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-842">Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array.</span></span> <span data-ttu-id="cb15b-843">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-843">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="cb15b-844">、*length*</span><span class="sxs-lookup"><span data-stu-id="cb15b-844">,*length*</span></span>|<span data-ttu-id="cb15b-845">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-845">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="cb15b-846">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-846">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="cb15b-847">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="cb15b-847">:*formatString*</span></span>|<span data-ttu-id="cb15b-848">書式設定するオブジェクトによってサポートされる標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-848">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="cb15b-849">*FormatString*に使用できる値は、オブジェクトの `ToString(string format)` メソッドでサポートされている値と同じです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-849">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="cb15b-850">*FormatString*が指定されておらず、書式設定されるオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`null` は <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 書式指定文字列として使用される `format` パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-850">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="cb15b-851">先頭と末尾の中かっこ文字 "{" と "}" が必要です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-851">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="cb15b-852">`format`に1つのリテラルの中かっこ文字を指定するには、2つの先頭または末尾のかっこ文字を指定します。つまり、"{{" または "}}" です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-852">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="cb15b-853">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-853">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="cb15b-854">指定されたオブジェクトが書式指定文字列で参照されていない場合、そのオブジェクトは無視されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-854">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="cb15b-855">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-855">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-856">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-856">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-857">文字列またはオブジェクトが <see langword="null" /> として渡されました。</span><span class="sxs-lookup"><span data-stu-id="cb15b-857">A string or object is passed in as <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-858"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-858">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-859">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-859">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cb15b-860"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-860"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="cb15b-861">または</span><span class="sxs-lookup"><span data-stu-id="cb15b-861">-or-</span></span> 
<span data-ttu-id="cb15b-862">書式項目のインデックスが 0 (ゼロ) 未満であるか、<paramref name="arg" /> 配列の長さ以上です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-862">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="arg" /> array.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-863">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-863">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-864">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-864">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-865">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-865">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="textWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-866">データの読み取り元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-866">The character array from which data is read.</span></span></param>
        <param name="index"><span data-ttu-id="cb15b-867">データの読み込みを開始する、<paramref name="buffer" /> 内の文字の位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-867">The character position in <paramref name="buffer" /> at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="cb15b-868">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-868">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-869">文字の部分配列を、続いて行終端記号をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-869">Writes a subarray of characters to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-870">このメソッドは、`index`位置から始まる `buffer` 文字配列から、この `TextWriter` に `count` 文字のデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-870">This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.</span></span>  
  
 <span data-ttu-id="cb15b-871">このオーバーロードは、<xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> メソッドを呼び出した後、`index` と (`index` + `count`) の `buffer` 内の各文字の <xref:System.IO.TextWriter.WriteLine%2A> を呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-871">This overload is equivalent to calling the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> method followed by <xref:System.IO.TextWriter.WriteLine%2A> for each character in `buffer` between `index` and (`index` + `count`).</span></span>  
  
 <span data-ttu-id="cb15b-872">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-872">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-873">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-873">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb15b-874">バッファーの長さから <paramref name="index" /> を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-874">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-875"><paramref name="buffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-875">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb15b-876"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-876"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-877"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-877">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-878">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-878">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-879">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-879">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-880">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-880">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-881">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-881">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cb15b-882">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-882">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="cb15b-883">書式設定および書き込みをする最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-883">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="cb15b-884">書式設定および書き込みをする 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-884">The second object to format and write.</span></span></param>
        <summary><span data-ttu-id="cb15b-885"><see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> メソッドと同じセマンティクスを使用して、書式設定された文字列と新しい行をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-885">Writes a formatted string and a new line to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-886">このメソッドは、複合書式指定を使用して、オブジェクトの値を文字列形式に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-886">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="cb15b-887">.NET ではさまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-887">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cb15b-888">複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-888">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="cb15b-889">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-889">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-890">日付と時刻の書式指定子の詳細については、「[標準の日付と](~/docs/standard/base-types/standard-date-and-time-format-strings.md)時刻の書式指定文字列」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-890">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-891">列挙型書式指定子の詳細については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-891">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-892">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-892">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="cb15b-893">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-893">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="cb15b-894">書式設定のプロセスでは、各書式項目が対応するオブジェクトの値の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-894">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="cb15b-895">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-895">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="cb15b-896">{*index*[,*length*] [:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="cb15b-896">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="cb15b-897">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-897">Elements in square brackets are optional.</span></span> <span data-ttu-id="cb15b-898">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-898">The following table describes each element.</span></span> <span data-ttu-id="cb15b-899">書式指定項目の構文など、複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-899">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="cb15b-900">要素</span><span class="sxs-lookup"><span data-stu-id="cb15b-900">Element</span></span>|<span data-ttu-id="cb15b-901">説明</span><span class="sxs-lookup"><span data-stu-id="cb15b-901">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cb15b-902">インデックス</span><span class="sxs-lookup"><span data-stu-id="cb15b-902">index</span></span>|<span data-ttu-id="cb15b-903">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-903">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="cb15b-904">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-904">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cb15b-905">このオーバーロードでは、パラメーターリストに2つのオブジェクトがあるため、 *index*の値は常に0または1である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-905">Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1.</span></span> <span data-ttu-id="cb15b-906">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-906">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="cb15b-907">、*length*</span><span class="sxs-lookup"><span data-stu-id="cb15b-907">,*length*</span></span>|<span data-ttu-id="cb15b-908">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-908">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="cb15b-909">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-909">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="cb15b-910">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="cb15b-910">:*formatString*</span></span>|<span data-ttu-id="cb15b-911">書式設定するオブジェクトによってサポートされる標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-911">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="cb15b-912">*FormatString*に使用できる値は、オブジェクトの `ToString(string format)` メソッドでサポートされている値と同じです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-912">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="cb15b-913">*FormatString*が指定されておらず、書式設定されるオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`null` は <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 書式指定文字列として使用される `format` パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-913">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="cb15b-914">先頭と末尾の中かっこ文字 "{" と "}" が必要です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-914">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="cb15b-915">`format`に1つのリテラルの中かっこ文字を指定するには、2つの先頭または末尾のかっこ文字を指定します。つまり、"{{" または "}}" です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-915">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="cb15b-916">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-916">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="cb15b-917">指定されたオブジェクトが書式指定文字列で参照されていない場合、そのオブジェクトは無視されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-917">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="cb15b-918">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-918">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-919">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-919">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-920"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-920"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-921"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-921">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-922">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-922">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cb15b-923"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-923"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="cb15b-924">または</span><span class="sxs-lookup"><span data-stu-id="cb15b-924">-or-</span></span> 
<span data-ttu-id="cb15b-925">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 2) 以上です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-925">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-926">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-926">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-927">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-927">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-928">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-928">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cb15b-929">複合書式設定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-929">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="cb15b-930">書式設定および書き込みをする最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-930">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="cb15b-931">書式設定および書き込みをする 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-931">The second object to format and write.</span></span></param>
        <param name="arg2"><span data-ttu-id="cb15b-932">書式設定および書き込みをする 3 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb15b-932">The third object to format and write.</span></span></param>
        <summary><span data-ttu-id="cb15b-933"><see cref="M:System.String.Format(System.String,System.Object)" /> と同じセマンティクスを使用して、書式設定された文字列と新しい行をテキスト ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-933">Writes out a formatted string and a new line to the text stream, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-934">このメソッドは、複合書式指定を使用して、オブジェクトの値を文字列形式に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-934">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="cb15b-935">.NET ではさまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-935">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cb15b-936">複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-936">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="cb15b-937">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-937">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-938">日付と時刻の書式指定子の詳細については、「[標準の日付と](~/docs/standard/base-types/standard-date-and-time-format-strings.md)時刻の書式指定文字列」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-938">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-939">列挙型書式指定子の詳細については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-939">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="cb15b-940">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-940">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="cb15b-941">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-941">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="cb15b-942">書式設定のプロセスでは、各書式項目が対応するオブジェクトの値の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-942">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="cb15b-943">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-943">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="cb15b-944">{*index*[,*length*] [:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="cb15b-944">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="cb15b-945">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-945">Elements in square brackets are optional.</span></span> <span data-ttu-id="cb15b-946">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-946">The following table describes each element.</span></span> <span data-ttu-id="cb15b-947">書式指定項目の構文など、複合書式指定機能の詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-947">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="cb15b-948">要素</span><span class="sxs-lookup"><span data-stu-id="cb15b-948">Element</span></span>|<span data-ttu-id="cb15b-949">説明</span><span class="sxs-lookup"><span data-stu-id="cb15b-949">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cb15b-950">インデックス</span><span class="sxs-lookup"><span data-stu-id="cb15b-950">index</span></span>|<span data-ttu-id="cb15b-951">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-951">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="cb15b-952">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-952">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cb15b-953">このオーバーロードでは、パラメーターリストに3つのオブジェクトがあるため、 *index*の値は常に0、1、または2である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-953">Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2.</span></span> <span data-ttu-id="cb15b-954">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-954">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="cb15b-955">、*length*</span><span class="sxs-lookup"><span data-stu-id="cb15b-955">,*length*</span></span>|<span data-ttu-id="cb15b-956">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-956">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="cb15b-957">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="cb15b-957">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="cb15b-958">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="cb15b-958">:*formatString*</span></span>|<span data-ttu-id="cb15b-959">書式設定するオブジェクトによってサポートされる標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-959">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="cb15b-960">*FormatString*に使用できる値は、オブジェクトの `ToString(string format)` メソッドでサポートされている値と同じです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-960">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="cb15b-961">*FormatString*が指定されておらず、書式設定されるオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`null` は <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 書式指定文字列として使用される `format` パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-961">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="cb15b-962">先頭と末尾の中かっこ文字 "{" と "}" が必要です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-962">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="cb15b-963">`format`に1つのリテラルの中かっこ文字を指定するには、2つの先頭または末尾のかっこ文字を指定します。つまり、"{{" または "}}" です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-963">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="cb15b-964">このメソッドは、指定した文字列で個別の改行文字 (16 進数で 0x000a) を検索しないため、改行文字は <xref:System.IO.TextWriter.NewLine%2A> に置き換えられません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-964">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="cb15b-965">指定されたオブジェクトが書式指定文字列で参照されていない場合、そのオブジェクトは無視されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-965">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="cb15b-966">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-966">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-967">共通 I/O タスクの一覧は、 [共通 I/O タスク](~/docs/standard/io/common-i-o-tasks.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-967">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-968"><paramref name="format" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-968"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-969"><see cref="T:System.IO.TextWriter" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-969">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cb15b-970">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="cb15b-970">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cb15b-971"><paramref name="format" /> は有効な復号書式指定文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-971"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="cb15b-972">または</span><span class="sxs-lookup"><span data-stu-id="cb15b-972">-or-</span></span> 
<span data-ttu-id="cb15b-973">書式指定項目のインデックスが、0 (ゼロ) より小さいか、書式設定されるオブジェクトの数 (このメソッド オーバーロードでは 3) 以上です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-973">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="cb15b-974">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="cb15b-974">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="cb15b-975">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="cb15b-975">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="cb15b-976">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="cb15b-976">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb15b-977">データを、続いて行終端記号をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-977">Asynchronously writes data to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cb15b-978"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-978">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="cb15b-979">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-979">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="cb15b-980"><xref:System.IO.TextWriter.WriteLineAsync%2A> メソッドの使用例については、「<xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> メソッド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-980">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : unit -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb15b-981">行終端記号をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-981">Asynchronously writes a line terminator to the text stream.</span></span></summary>
        <returns><span data-ttu-id="cb15b-982">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-982">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cb15b-983">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-983">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-984">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-984">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-985">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-985">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-986">テキスト ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="cb15b-986">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="cb15b-987">文字を、続いて行終端記号をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-987">Asynchronously writes a character to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="cb15b-988">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-988">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-989">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-989">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-990"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-990">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="cb15b-991">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-991">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="cb15b-992"><xref:System.IO.TextWriter.WriteLineAsync%2A> メソッドの使用例については、「<xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> メソッド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-992">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-993">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-993">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-994">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-994">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteLineAsync (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteLineAsync (buffer As Char()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.WriteLineAsync : char[] -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-995">テキスト ストリームに書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-995">The character array to write to the text stream.</span></span> <span data-ttu-id="cb15b-996">文字配列が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-996">If the character array is <see langword="null" />, only the line terminator is written.</span></span></param>
        <summary><span data-ttu-id="cb15b-997">文字配列を、続いて行終端記号をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-997">Asynchronously writes an array of characters to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="cb15b-998">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-998">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-999">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-999">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-1000">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1000">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-1001">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1001">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-1002">書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1002">The string to write.</span></span> <span data-ttu-id="cb15b-1003">値が <see langword="null" /> の場合は、行終端記号だけが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1003">If the value is <see langword="null" />, only a line terminator is written.</span></span></param>
        <summary><span data-ttu-id="cb15b-1004">文字列を、続いて行終端記号をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1004">Asynchronously writes a string to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="cb15b-1005">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1005">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb15b-1006">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1006">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="cb15b-1007"><xref:System.IO.TextWriter> クラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1007">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="cb15b-1008">そのため、コードでそれをインスタンス化することはありません。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1008">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="cb15b-1009"><xref:System.IO.TextWriter.WriteLineAsync%2A> メソッドの使用例については、「<xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> メソッド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1009">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-1010">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1010">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-1011">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1011">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.String)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-1012">テキスト ストリームに書き込む文字メモリ領域。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1012">The character memory region to write to the text stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="cb15b-1013">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1013">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="cb15b-1014">既定値は <see cref="P:System.Threading.CancellationToken.None" />です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1014">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="cb15b-1015">文字メモリ領域のテキスト表現を、続いて行終端記号をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1015">Asynchronously writes the text representation of a character memory region to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="cb15b-1016">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1016">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="cb15b-1017">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1017">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (System.Text.StringBuilder value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(class System.Text.StringBuilder value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cb15b-1018">テキスト ストリームに書き込む文字列ビルダーとしての文字列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1018">The string, as a string builder, to write to the text stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="cb15b-1019">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1019">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="cb15b-1020">既定値は <see cref="P:System.Threading.CancellationToken.None" />です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1020">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="cb15b-1021">文字列ビルダーのテキスト表現を、続いて行終端記号をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1021">Asynchronously writes the text representation of a string builder to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="cb15b-1022">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1022">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cb15b-1023">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1023">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="cb15b-1024">データの書き込み元の文字配列。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1024">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="cb15b-1025">データの取得を開始する、バッファー内の文字位置。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1025">The character position in the buffer at which to start retrieving data.</span></span></param>
        <param name="count"><span data-ttu-id="cb15b-1026">書き込む文字数。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1026">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="cb15b-1027">文字の部分配列を、続いて行終端記号をテキスト ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1027">Asynchronously writes a subarray of characters to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="cb15b-1028">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1028">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cb15b-1029">行終端記号は、<xref:System.IO.TextWriter.CoreNewLine> フィールドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1029">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cb15b-1030"><paramref name="buffer" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1030"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cb15b-1031"><paramref name="index" /> に <paramref name="count" /> を加算した値がバッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1031">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cb15b-1032"><paramref name="index" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1032"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cb15b-1033">テキスト ライターは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1033">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb15b-1034">テキスト ライターは現在、前の書き込み操作で使用中です。</span><span class="sxs-lookup"><span data-stu-id="cb15b-1034">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
