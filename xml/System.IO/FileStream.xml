<Type Name="FileStream" FullName="System.IO.FileStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b9f6bfb4fc3399a4527f017cb12c2dcc00875ee" /><Meta Name="ms.sourcegitcommit" Value="6c0b6310824199ff476e4a9eec6e9ed0bd1a51c9" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/06/2019" /><Meta Name="ms.locfileid" Value="74153952" /></Metadata><TypeSignature Language="C#" Value="public class FileStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileStream" />
  <TypeSignature Language="VB.NET" Value="Public Class FileStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type FileStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="22f3d-101">同期および非同期の読み取り操作と書き込み操作をサポートするファイル用の <see cref="T:System.IO.Stream" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-101">Provides a <see cref="T:System.IO.Stream" /> for a file, supporting both synchronous and asynchronous read and write operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-102"><xref:System.IO.FileStream> クラスを使用して、ファイルシステム上のファイルの読み取り、書き込み、オープン、終了、およびその他のファイル関連のオペレーティングシステムハンドル (パイプ、標準入力、標準出力など) の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="22f3d-102">Use the <xref:System.IO.FileStream> class to read from, write to, open, and close files on a file system, and to manipulate other file-related operating system handles, including pipes, standard input, and standard output.</span></span> <span data-ttu-id="22f3d-103"><xref:System.IO.FileStream.Read%2A>、<xref:System.IO.FileStream.Write%2A>、<xref:System.IO.Stream.CopyTo%2A>、および <xref:System.IO.FileStream.Flush%2A> メソッドを使用して同期操作を実行したり、<xref:System.IO.FileStream.ReadAsync%2A>、<xref:System.IO.FileStream.WriteAsync%2A>、<xref:System.IO.Stream.CopyToAsync%2A>、および <xref:System.IO.FileStream.FlushAsync%2A> メソッドを使用して非同期操作を実行したりできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-103">You can use the <xref:System.IO.FileStream.Read%2A>, <xref:System.IO.FileStream.Write%2A>, <xref:System.IO.Stream.CopyTo%2A>, and <xref:System.IO.FileStream.Flush%2A> methods to perform synchronous operations, or the <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.FileStream.FlushAsync%2A> methods to perform asynchronous operations.</span></span> <span data-ttu-id="22f3d-104">非同期メソッドを使用して、メインスレッドをブロックせずに、リソースを集中的に使用するファイル操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-104">Use the asynchronous methods to perform resource-intensive file operations without blocking the main thread.</span></span> <span data-ttu-id="22f3d-105">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-105">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="22f3d-106"><xref:System.IO.FileStream> は、パフォーマンス向上のために入力と出力をバッファリングします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-106"><xref:System.IO.FileStream> buffers input and output for better performance.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="22f3d-107">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="22f3d-108">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="22f3d-109">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="22f3d-110">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="22f3d-111">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="22f3d-112"><xref:System.IO.FileStream.IsAsync%2A> プロパティは、ファイルハンドルが非同期的に開かれたかどうかを検出します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-112">The <xref:System.IO.FileStream.IsAsync%2A> property detects whether the file handle was opened asynchronously.</span></span> <span data-ttu-id="22f3d-113">この値は、`isAsync`、`useAsync`、または `options` パラメーターを持つコンストラクターを使用して <xref:System.IO.FileStream> クラスのインスタンスを作成するときに指定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-113">You specify this value when you create an instance of the <xref:System.IO.FileStream> class using a constructor that has an `isAsync`, `useAsync`, or `options` parameter.</span></span> <span data-ttu-id="22f3d-114">プロパティが `true`場合、ストリームは重複 i/o を利用してファイル操作を非同期に実行します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-114">When the property is `true`, the stream utilizes overlapped I/O to perform file operations asynchronously.</span></span> <span data-ttu-id="22f3d-115">ただし、<xref:System.IO.FileStream.ReadAsync%2A>、<xref:System.IO.FileStream.WriteAsync%2A>、または <xref:System.IO.Stream.CopyToAsync%2A> メソッドを呼び出すために、<xref:System.IO.FileStream.IsAsync%2A> プロパティを `true` する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-115">However, the <xref:System.IO.FileStream.IsAsync%2A> property does not have to be `true` to call the <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, or <xref:System.IO.Stream.CopyToAsync%2A> method.</span></span> <span data-ttu-id="22f3d-116"><xref:System.IO.FileStream.IsAsync%2A> プロパティが `false`、非同期の読み取りおよび書き込み操作を呼び出すと、UI スレッドはブロックされませんが、実際の i/o 操作は同期的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-116">When the <xref:System.IO.FileStream.IsAsync%2A> property is `false` and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</span></span>  
  
 <span data-ttu-id="22f3d-117"><xref:System.IO.FileStream.Seek%2A> メソッドは、ファイルへのランダムアクセスをサポートします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-117">The <xref:System.IO.FileStream.Seek%2A> method supports random access to files.</span></span> <span data-ttu-id="22f3d-118"><xref:System.IO.FileStream.Seek%2A> を使用すると、読み取り/書き込み位置をファイル内の任意の位置に移動できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-118"><xref:System.IO.FileStream.Seek%2A> allows the read/write position to be moved to any position within the file.</span></span> <span data-ttu-id="22f3d-119">これは、バイトオフセット参照ポイントパラメーターを使用して行われます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-119">This is done with byte offset reference point parameters.</span></span> <span data-ttu-id="22f3d-120">バイトオフセットは、シーク参照ポイントに対する相対値です。これは、<xref:System.IO.SeekOrigin> 列挙体の3つのメンバーによって表される、先頭、現在位置、または基になるファイルの末尾のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-120">The byte offset is relative to the seek reference point, which can be the beginning, the current position, or the end of the underlying file, as represented by the three members of the <xref:System.IO.SeekOrigin> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-121">ディスクファイルは常にランダムアクセスをサポートします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-121">Disk files always support random access.</span></span> <span data-ttu-id="22f3d-122">構築時には、基になるファイルの種類に応じて、<xref:System.IO.FileStream.CanSeek%2A> プロパティの値が `true` または `false` に設定されます。基になるファイルの種類が FILE_TYPE_DISK の場合、winbase. h で定義されているように、<xref:System.IO.FileStream.CanSeek%2A> プロパティの値は `true`です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-122">At the time of construction, the <xref:System.IO.FileStream.CanSeek%2A> property value is set to `true` or `false` depending on the underlying file type.If the underlying file type is FILE_TYPE_DISK, as defined in winbase.h, the <xref:System.IO.FileStream.CanSeek%2A> property value is `true`.</span></span> <span data-ttu-id="22f3d-123">それ以外の場合、<xref:System.IO.FileStream.CanSeek%2A> プロパティ値は `false`です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-123">Otherwise, the <xref:System.IO.FileStream.CanSeek%2A> property value is `false`.</span></span>  
  
 <span data-ttu-id="22f3d-124">プロセスがファイルの一部で終了した場合、または未処理のロックがあるファイルを閉じた場合、動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-124">If a process terminates with part of a file locked or closes a file that has outstanding locks, the behavior is undefined.</span></span>  
  
 <span data-ttu-id="22f3d-125">ディレクトリ操作とその他のファイル操作については、<xref:System.IO.File>、<xref:System.IO.Directory>、および <xref:System.IO.Path> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-125">For directory operations and other file operations, see the <xref:System.IO.File>, <xref:System.IO.Directory>, and <xref:System.IO.Path> classes.</span></span> <span data-ttu-id="22f3d-126"><xref:System.IO.File> クラスは、主にファイルパスに基づいて <xref:System.IO.FileStream> オブジェクトを作成するための静的メソッドを持つユーティリティクラスです。</span><span class="sxs-lookup"><span data-stu-id="22f3d-126">The <xref:System.IO.File> class is a utility class that has static methods primarily for the creation of <xref:System.IO.FileStream> objects based on file paths.</span></span> <span data-ttu-id="22f3d-127"><xref:System.IO.MemoryStream> クラスは、バイト配列からストリームを作成し、<xref:System.IO.FileStream> クラスに似ています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-127">The <xref:System.IO.MemoryStream> class creates a stream from a byte array and is similar to the <xref:System.IO.FileStream> class.</span></span>  
  
 <span data-ttu-id="22f3d-128">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-128">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
## <a name="detection-of-stream-position-changes"></a><span data-ttu-id="22f3d-129">ストリーム位置の変更の検出</span><span class="sxs-lookup"><span data-stu-id="22f3d-129">Detection of Stream Position Changes</span></span>  
 <span data-ttu-id="22f3d-130"><xref:System.IO.FileStream> オブジェクトがハンドルを排他的に保持していない場合、別のスレッドがファイルハンドルに同時にアクセスし、ファイルハンドルに関連付けられているオペレーティングシステムのファイルポインターの位置を変更する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-130">When a <xref:System.IO.FileStream> object does not have an exclusive hold on its handle, another thread could access the file handle concurrently and change the position of the operating system's file pointer that is associated with the file handle.</span></span> <span data-ttu-id="22f3d-131">この場合、<xref:System.IO.FileStream> オブジェクト内のキャッシュされた位置と、バッファー内のキャッシュされたデータが危険にさらされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-131">In this case, the cached position in the <xref:System.IO.FileStream> object and the cached data in the buffer could be compromised.</span></span> <span data-ttu-id="22f3d-132"><xref:System.IO.FileStream> オブジェクトは、キャッシュされたバッファーにアクセスするメソッドに対して定期的にチェックを実行し、オペレーティングシステムのハンドル位置が、<xref:System.IO.FileStream> オブジェクトによって使用されるキャッシュ位置と同じであることを確認します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-132">The <xref:System.IO.FileStream> object routinely performs checks on methods that access the cached buffer to ensure that the operating system's handle position is the same as the cached position used by the <xref:System.IO.FileStream> object.</span></span>  
  
 <span data-ttu-id="22f3d-133"><xref:System.IO.FileStream.Read%2A> メソッドの呼び出しでハンドル位置の予期しない変更が検出された場合、.NET Framework はバッファーの内容を破棄し、ファイルからストリームを再度読み取ります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-133">If an unexpected change in the handle position is detected in a call to the <xref:System.IO.FileStream.Read%2A> method, the .NET Framework discards the contents of the buffer and reads the stream from the file again.</span></span> <span data-ttu-id="22f3d-134">これは、ファイルのサイズやファイルストリームの位置に影響する可能性があるその他のプロセスによっては、パフォーマンスに影響することがあります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-134">This can affect performance, depending on the size of the file and any other processes that could affect the position of the file stream.</span></span>  
  
 <span data-ttu-id="22f3d-135"><xref:System.IO.FileStream.Write%2A> メソッドの呼び出しでハンドル位置の予期しない変更が検出された場合、バッファーの内容は破棄され、<xref:System.IO.IOException> の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-135">If an unexpected change in the handle position is detected in a call to the <xref:System.IO.FileStream.Write%2A> method, the contents of the buffer are discarded and an <xref:System.IO.IOException> exception is thrown.</span></span>  
  
 <span data-ttu-id="22f3d-136">ハンドルを公開するために <xref:System.IO.FileStream.SafeFileHandle%2A> プロパティにアクセスする場合、または <xref:System.IO.FileStream> オブジェクトにコンストラクターの <xref:System.IO.FileStream.SafeFileHandle%2A> プロパティが指定されている場合、<xref:System.IO.FileStream> オブジェクトのハンドルは排他的に保持されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-136">A <xref:System.IO.FileStream> object will not have an exclusive hold on its handle when either the <xref:System.IO.FileStream.SafeFileHandle%2A> property is accessed to expose the handle or the <xref:System.IO.FileStream> object is given the <xref:System.IO.FileStream.SafeFileHandle%2A> property in its constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-137">次の例は、<xref:System.IO.FileStream> コンストラクターの一部を示しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-137">The following example demonstrates some of the <xref:System.IO.FileStream> constructors.</span></span>  
  
 [!code-cpp[fstream class#1](~/samples/snippets/cpp/VS_Snippets_CLR/FStream Class/CPP/fstream class.cpp#1)]
 [!code-csharp[fstream class#1](~/samples/snippets/csharp/VS_Snippets_CLR/FStream Class/CS/fstream class.cs#1)]
 [!code-vb[fstream class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FStream Class/VB/fstream class.vb#1)]  
  
 <span data-ttu-id="22f3d-138">次の例は、ファイルに非同期に書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-138">The following example shows how to write to a file asynchronously.</span></span> <span data-ttu-id="22f3d-139">このコードは、「UserInput」という名前の TextBlock と、Button_Click という名前のクリックイベントハンドラーにフックされたボタンを持つ WPF アプリで実行されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-139">This code runs in a WPF app that has a TextBlock named UserInput and a button hooked up to a Click event handler that is named Button_Click.</span></span> <span data-ttu-id="22f3d-140">ファイルパスは、コンピューター上に存在するファイルに変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-140">The file path needs to be changed to a file that exists on the computer.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="T:System.IO.FileAccess" />
    <altmember cref="T:System.IO.FileMode" />
    <altmember cref="T:System.IO.FileShare" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-141">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-141">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-142">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-142">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-143">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-143">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="22f3d-144">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="22f3d-144">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22f3d-145"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-145">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (Microsoft.Win32.SafeHandles.SafeFileHandle handle, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Win32.SafeHandles.SafeFileHandle handle, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As SafeFileHandle, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(Microsoft::Win32::SafeHandles::SafeFileHandle ^ handle, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : Microsoft.Win32.SafeHandles.SafeFileHandle * System.IO.FileAccess -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (handle, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="22f3d-146">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="22f3d-146">A file handle for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-147"><see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-147">A bitwise combination of the enumeration values that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span></param>
        <summary><span data-ttu-id="22f3d-148"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可を使用して、指定したファイル ハンドル用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-148">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-149"><xref:System.IO.Stream.Close%2A> が呼び出されると、ハンドルも閉じられ、ファイルのハンドル数が減少します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-149">When <xref:System.IO.Stream.Close%2A> is called, the handle is also closed and the file's handle count is decremented.</span></span>  
  
 <span data-ttu-id="22f3d-150">`FileStream` は、ハンドルを排他的に制御することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-150">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="22f3d-151">`FileStream` がハンドルを保持している間に読み取り、書き込み、シークを行うと、データが破損する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-151">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="22f3d-152">データの安全性を確保するには、ハンドルを使用する前に <xref:System.IO.FileStream.Flush%2A> を呼び出し、ハンドルの使用が完了した後に `Close` 以外のメソッドを呼び出さないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-152">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-153">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-153">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-154">`FileShare.Read` は、`FileShare` パラメーターを指定しない <xref:System.IO.FileStream> コンストラクターの既定値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-154">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
 <span data-ttu-id="22f3d-155">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-155">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-156"><paramref name="access" /> が <see cref="T:System.IO.FileAccess" /> のフィールドではありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-156"><paramref name="access" /> is not a field of <see cref="T:System.IO.FileAccess" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-157">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-157">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-158">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-158">An I/O error, such as a disk error, occurred.</span></span>  
  
 <span data-ttu-id="22f3d-159">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-159">-or-</span></span>  
  
 <span data-ttu-id="22f3d-160">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-160">The stream has been closed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-161"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-161">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-162">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-162">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-163">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-163">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-164">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-164">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-165">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-165">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-166">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-166">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (IntPtr handle, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(IntPtr handle, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : nativeint * System.IO.FileAccess -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (handle, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use FileStream(SafeFileHandle handle, FileAccess access) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use new FileStream(SafeFileHandle handle, FileAccess access) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use new FileStream(SafeFileHandle handle, FileAccess access) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="22f3d-167">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="22f3d-167">A file handle for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-168"><see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-168">A bitwise combination of the enumeration values that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span></param>
        <summary><span data-ttu-id="22f3d-169"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可を使用して、指定したファイル ハンドル用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-169">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-170"><xref:System.IO.Stream.Close%2A> が呼び出されると、ハンドルも閉じられ、ファイルのハンドル数が減少します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-170">When <xref:System.IO.Stream.Close%2A> is called, the handle is also closed and the file's handle count is decremented.</span></span>  
  
 <span data-ttu-id="22f3d-171">`FileStream` は、ハンドルを排他的に制御することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-171">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="22f3d-172">`FileStream` がハンドルを保持している間に読み取り、書き込み、シークを行うと、データが破損する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-172">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="22f3d-173">データの安全性を確保するには、ハンドルを使用する前に <xref:System.IO.FileStream.Flush%2A> を呼び出し、ハンドルの使用が完了した後に `Close` 以外のメソッドを呼び出さないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-173">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-174">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-174">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-175">`FileShare.Read` は、`FileShare` パラメーターを指定しない <xref:System.IO.FileStream> コンストラクターの既定値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-175">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
 <span data-ttu-id="22f3d-176">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-176">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-177"><paramref name="access" /> が <see cref="T:System.IO.FileAccess" /> のフィールドではありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-177"><paramref name="access" /> is not a field of <see cref="T:System.IO.FileAccess" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-178">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-178">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-179">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-179">An I/O error, such as a disk error, occurred.</span></span>  
  
 <span data-ttu-id="22f3d-180">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-180">-or-</span></span>  
  
 <span data-ttu-id="22f3d-181">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-181">The stream has been closed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-182"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-182">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-183">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-183">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-184">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-184">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-185">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-185">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-186">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-186">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-187">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-187">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : string * System.IO.FileMode -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (path, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="22f3d-188">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="22f3d-188">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="mode"><span data-ttu-id="22f3d-189">ファイルを開く方法または作成する方法を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-189">One of the enumeration values that determines how to open or create the file.</span></span></param>
        <summary><span data-ttu-id="22f3d-190"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパスと作成モードを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-190">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path and creation mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-191">.NET Framework は、"\\\\.\PHYSICALDRIVE0" などのデバイス名を使用した物理ディスクへの直接アクセスをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-191">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="22f3d-192">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-192">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="22f3d-193">コンストラクターには、ファイルへの読み取り/書き込みアクセス権が付与されています。また、このコンストラクターは、読み取りアクセスの共有を開いています (つまり、このまたは別のプロセスによって書き込みを行うためにファイルを開く要求は、`FileStream` オブジェクトが閉じられるまで失敗しますが、読み取り試行は成功します)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-193">The constructor is given read/write access to the file, and it is opened sharing Read access (that is, requests to open the file for writing by this or another process will fail until the `FileStream` object has been closed, but read attempts will succeed).</span></span>  
  
 <span data-ttu-id="22f3d-194">このコンストラクターを使用して読み取り専用ファイルを開くことはできません。代わりに、値が `FileAccess.Read`に設定された `FileAccess` パラメーターを受け取るコンストラクターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-194">You cannot use this constructor to open read-only files; instead, you must use a constructor that accepts a `FileAccess` parameter with the value set to `FileAccess.Read`.</span></span>  
  
 <span data-ttu-id="22f3d-195">バッファーサイズは、既定のサイズの4096バイト (4 KB) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-195">The buffer size is set to the default size of 4096 bytes (4 KB).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-196">`path` は、ディスクに格納されているファイルである必要はありません。ストリーム経由のアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-196">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="22f3d-197">たとえば、システムによっては、このクラスは物理デバイスにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-197">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="22f3d-198"><xref:System.IO.Stream.CanSeek%2A> は、ファイルをカプセル化するすべての <xref:System.IO.FileStream> オブジェクトに対して `true` ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-198"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="22f3d-199">`path` がシークをサポートしていないデバイスを示している場合は、結果の <xref:System.IO.FileStream> の <xref:System.IO.FileStream.CanSeek%2A> プロパティが `false`ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-199">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="22f3d-200">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-200">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-201">`FileShare.Read` は、`FileShare` パラメーターを指定しない <xref:System.IO.FileStream> コンストラクターの既定値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-201">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
 <span data-ttu-id="22f3d-202"><xref:System.IO.FileAccess> パラメーターを持たないコンストラクターの場合、`mode` パラメーターが <xref:System.IO.FileMode.Append>に設定されていると、<xref:System.IO.FileAccess.Write> が既定のアクセスになります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-202">For constructors without a <xref:System.IO.FileAccess> parameter, if the `mode` parameter is set to <xref:System.IO.FileMode.Append>, <xref:System.IO.FileAccess.Write> is the default access.</span></span> <span data-ttu-id="22f3d-203">それ以外の場合は、アクセスが <xref:System.IO.FileAccess.ReadWrite>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-203">Otherwise, the access is set to <xref:System.IO.FileAccess.ReadWrite>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-204">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-204">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-205">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-205">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-206">次のコード例では、データをバイト単位でファイルに書き込み、データが正しく書き込まれたことを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-206">The following code example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.FileStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream1/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream1/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-207"><paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-207"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
<span data-ttu-id="22f3d-208">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-208">-or-</span></span> 
 <span data-ttu-id="22f3d-209"><paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-209"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-210"><paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-210"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-211"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-211"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-212">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-212">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="22f3d-213">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-213">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span></span> <span data-ttu-id="22f3d-214">これらのモードではファイルが既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-214">The file must already exist in these modes.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-215"><paramref name="path" /> は読み取り専用のファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-215"><paramref name="path" /> specifies a file that is read-only.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-216"><paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-216">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span></span>  
  
<span data-ttu-id="22f3d-217">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-217">-or-</span></span> 
<span data-ttu-id="22f3d-218">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-218">The stream has been closed.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="22f3d-219">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-219">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="22f3d-220">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-220">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-221"><paramref name="mode" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-221"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-222">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-222">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-223">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-223">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <altmember cref="F:System.IO.Path.InvalidPathChars" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-224">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-224">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-225">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-225">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-226">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-226">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (Microsoft.Win32.SafeHandles.SafeFileHandle handle, System.IO.FileAccess access, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Win32.SafeHandles.SafeFileHandle handle, valuetype System.IO.FileAccess access, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As SafeFileHandle, access As FileAccess, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(Microsoft::Win32::SafeHandles::SafeFileHandle ^ handle, System::IO::FileAccess access, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : Microsoft.Win32.SafeHandles.SafeFileHandle * System.IO.FileAccess * int -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (handle, access, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="22f3d-227">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="22f3d-227">A file handle for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-228"><see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> プロパティと <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する <see cref="T:System.IO.FileAccess" /> 定数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-228">A <see cref="T:System.IO.FileAccess" /> constant that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-229">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-229">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span></span> <span data-ttu-id="22f3d-230">既定のバッファー サイズは、4096 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-230">The default buffer size is 4096.</span></span></param>
        <summary><span data-ttu-id="22f3d-231"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可、およびバッファー サイズを使用して、指定したファイル ハンドル用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-231">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission, and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-232">`FileStream` は、ハンドルを排他的に制御することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-232">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="22f3d-233">`FileStream` がハンドルを保持している間に読み取り、書き込み、シークを行うと、データが破損する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-233">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="22f3d-234">データの安全性を確保するには、ハンドルを使用する前に <xref:System.IO.FileStream.Flush%2A> を呼び出し、ハンドルの使用が完了した後に `Close` 以外のメソッドを呼び出さないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-234">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span> <span data-ttu-id="22f3d-235">または、この `FileStream` コンストラクターを呼び出す前に、ハンドルに対して読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="22f3d-235">Alternately, read and write to the handle before calling this `FileStream` constructor.</span></span>  
  
 <span data-ttu-id="22f3d-236">`FileShare.Read` は、`FileShare` パラメーターを指定しない <xref:System.IO.FileStream> コンストラクターの既定値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-236">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-237">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-237">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-238">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-238">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-239"><paramref name="handle" /> パラメーターが無効なハンドルです。</span><span class="sxs-lookup"><span data-stu-id="22f3d-239">The <paramref name="handle" /> parameter is an invalid handle.</span></span>  
  
<span data-ttu-id="22f3d-240">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-240">-or-</span></span> 
<span data-ttu-id="22f3d-241">同期ハンドルである <paramref name="handle" /> パラメーターが、非同期的に使用されました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-241">The <paramref name="handle" /> parameter is a synchronous handle and it was used asynchronously.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-242"><paramref name="bufferSize" /> パラメーターが負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-242">The <paramref name="bufferSize" /> parameter is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-243">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-243">An I/O error, such as a disk error, occurred.</span></span>  
  
 <span data-ttu-id="22f3d-244">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-244">-or-</span></span>  
  
 <span data-ttu-id="22f3d-245">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-245">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-246">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-246">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-247"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-247">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-248">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-248">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-249">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-249">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="22f3d-250">アンマネージコードを呼び出すためのアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="22f3d-250">for permission to call unmanaged code.</span></span> <span data-ttu-id="22f3d-251">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="22f3d-251">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-252">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-252">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-253">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-253">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-254">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-254">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (IntPtr handle, System.IO.FileAccess access, bool ownsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype System.IO.FileAccess access, bool ownsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr, access As FileAccess, ownsHandle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(IntPtr handle, System::IO::FileAccess access, bool ownsHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : nativeint * System.IO.FileAccess * bool -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (handle, access, ownsHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use FileStream(SafeFileHandle handle, FileAccess access) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use new FileStream(SafeFileHandle handle, FileAccess access) instead, and optionally make a new SafeFileHandle with ownsHandle=false if needed.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use new FileStream(SafeFileHandle handle, FileAccess access) instead, and optionally make a new SafeFileHandle with ownsHandle=false if needed.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ownsHandle" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="22f3d-255">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="22f3d-255">A file handle for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-256"><see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-256">A bitwise combination of the enumeration values that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span></param>
        <param name="ownsHandle"><span data-ttu-id="22f3d-257">この <see langword="FileStream" /> インスタンスがファイル ハンドルを所有する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-257"><see langword="true" /> if the file handle will be owned by this <see langword="FileStream" /> instance; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="22f3d-258"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可と <see langword="FileStream" /> インスタンスの所有権を使用して、指定したファイル ハンドル用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-258">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission and <see langword="FileStream" /> instance ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-259">`FileStream` オブジェクトには、ファイルへの指定したアクセス権が与えられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-259">The `FileStream` object is given the specified access to the file.</span></span> <span data-ttu-id="22f3d-260">ハンドルの所有権は、指定されたとおりになります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-260">The ownership of the handle will be as specified.</span></span> <span data-ttu-id="22f3d-261">このプロセスがハンドルを所有している場合、<xref:System.IO.Stream.Close%2A> メソッドを呼び出すとハンドルも閉じられ、ファイルのハンドル数が減少します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-261">If this process owns the handle, a call to the <xref:System.IO.Stream.Close%2A> method will also close the handle and the file's handle count is decremented.</span></span> <span data-ttu-id="22f3d-262">`FileStream` オブジェクトには、4096バイトの既定のバッファーサイズが指定されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-262">The `FileStream` object is given the default buffer size of 4096 bytes.</span></span>  
  
 <span data-ttu-id="22f3d-263">`FileStream` は、ハンドルを排他的に制御することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-263">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="22f3d-264">`FileStream` がハンドルを保持している間に読み取り、書き込み、シークを行うと、データが破損する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-264">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="22f3d-265">データの安全性を確保するには、ハンドルを使用する前に <xref:System.IO.FileStream.Flush%2A> を呼び出し、ハンドルの使用が完了した後に `Close` 以外のメソッドを呼び出さないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-265">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling methods other than `Close` after you are done using the handle.</span></span>  
  
 <span data-ttu-id="22f3d-266">`FileShare.Read` は、`FileShare` パラメーターを指定しない <xref:System.IO.FileStream> コンストラクターの既定値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-266">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-267">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-267">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-268">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-268">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-269"><paramref name="access" /> が <see cref="T:System.IO.FileAccess" /> のフィールドではありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-269"><paramref name="access" /> is not a field of <see cref="T:System.IO.FileAccess" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-270">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-270">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-271">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-271">An I/O error, such as a disk error, occurred.</span></span>  
  
 <span data-ttu-id="22f3d-272">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-272">-or-</span></span>  
  
 <span data-ttu-id="22f3d-273">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-273">The stream has been closed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-274"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-274">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-275">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-275">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-276">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-276">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-277">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-277">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-278">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-278">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-279">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-279">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (path, mode, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="22f3d-280">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="22f3d-280">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="mode"><span data-ttu-id="22f3d-281">ファイルを開く方法または作成する方法を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-281">One of the enumeration values that determines how to open or create the file.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-282"><see langword="FileStream" /> オブジェクトがファイルにアクセスする方法を決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-282">A bitwise combination of the enumeration values that determines how the file can be accessed by the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-283">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-283">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-284"><paramref name="path" /> がディスク ファイルを指定している場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-284"><see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <paramref name="path" /> specifies a disk file.</span></span></param>
        <summary><span data-ttu-id="22f3d-285"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、および読み取り/書き込みアクセス許可を使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-285">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, and read/write permission.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-286">.NET Framework は、"\\\\.\PHYSICALDRIVE0" などのデバイス名を使用した物理ディスクへの直接アクセスをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-286">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="22f3d-287">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-287">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="22f3d-288">コンストラクターには、ファイルへの読み取り/書き込みアクセス権が付与されています。また、このコンストラクターは、読み取りアクセスの共有を開いています (つまり、このまたは別のプロセスによって書き込みを行うためにファイルを開く要求は、`FileStream` オブジェクトが閉じられるまで失敗しますが、読み取り試行は成功します)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-288">The constructor is given read/write access to the file, and it is opened sharing Read access (that is, requests to open the file for writing by this or another process will fail until the `FileStream` object has been closed, but read attempts will succeed).</span></span> <span data-ttu-id="22f3d-289">バッファーサイズは、既定のサイズの4096バイト (4 KB) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-289">The buffer size is set to the default size of 4096 bytes (4 KB).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-290">`path` は、ディスクに格納されているファイルである必要はありません。ストリーム経由のアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-290">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="22f3d-291">たとえば、システムによっては、このクラスは物理デバイスにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-291">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="22f3d-292"><xref:System.IO.Stream.CanSeek%2A> は、ファイルをカプセル化するすべての <xref:System.IO.FileStream> オブジェクトに対して `true` ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-292"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="22f3d-293">`path` がシークをサポートしていないデバイスを示している場合は、結果の <xref:System.IO.FileStream> の <xref:System.IO.FileStream.CanSeek%2A> プロパティが `false`ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-293">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="22f3d-294">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-294">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-295">`FileShare.Read` は、`FileShare` パラメーターを指定しない <xref:System.IO.FileStream> コンストラクターの既定値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-295">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-296">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-296">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-297">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-297">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-298"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-298"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-299"><paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-299"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
<span data-ttu-id="22f3d-300">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-300">-or-</span></span> 
 <span data-ttu-id="22f3d-301"><paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-301"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-302"><paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-302"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="22f3d-303">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-303">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span></span> <span data-ttu-id="22f3d-304">これらのモードではファイルが既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-304">The file must already exist in these modes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-305"><paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-305">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span></span>  
  
<span data-ttu-id="22f3d-306">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-306">-or-</span></span> 
<span data-ttu-id="22f3d-307">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-307">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-308">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-308">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="22f3d-309">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-309">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-310"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-310">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="22f3d-311">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-311">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-312"><paramref name="mode" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-312"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-313">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-313">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-314">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-314">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-315">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-315">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-316">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-316">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-317">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-317">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (Microsoft.Win32.SafeHandles.SafeFileHandle handle, System.IO.FileAccess access, int bufferSize, bool isAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Win32.SafeHandles.SafeFileHandle handle, valuetype System.IO.FileAccess access, int32 bufferSize, bool isAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As SafeFileHandle, access As FileAccess, bufferSize As Integer, isAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(Microsoft::Win32::SafeHandles::SafeFileHandle ^ handle, System::IO::FileAccess access, int bufferSize, bool isAsync);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : Microsoft.Win32.SafeHandles.SafeFileHandle * System.IO.FileAccess * int * bool -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (handle, access, bufferSize, isAsync)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="isAsync" Type="System.Boolean" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="22f3d-318">この <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="22f3d-318">A file handle for the file that this <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-319"><see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-319">A bitwise combination of the enumeration values that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-320">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-320">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span></span> <span data-ttu-id="22f3d-321">既定のバッファー サイズは、4096 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-321">The default buffer size is 4096.</span></span></param>
        <param name="isAsync"><span data-ttu-id="22f3d-322">ハンドルが非同期的に開かれた場合 (重複 I/O モード用) は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-322"><see langword="true" /> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="22f3d-323"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可、バッファー サイズ、および同期状態または非同期状態を使用して、指定したファイル ハンドル用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-323">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission, buffer size, and synchronous or asynchronous state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-324">ファイルハンドルを非同期に開くには、`isAsync` パラメーターを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-324">You set the `isAsync` parameter to `true` to open the file handle asynchronously.</span></span> <span data-ttu-id="22f3d-325">パラメーターが `true`場合、ストリームは重複 i/o を利用してファイル操作を非同期に実行します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-325">When the parameter is `true`, the stream utilizes overlapped I/O to perform file operations asynchronously.</span></span> <span data-ttu-id="22f3d-326">ただし、<xref:System.IO.FileStream.ReadAsync%2A>、<xref:System.IO.FileStream.WriteAsync%2A>、または <xref:System.IO.Stream.CopyToAsync%2A> メソッドを呼び出すために、パラメーターを `true` する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-326">However, the parameter does not have to be `true` to call the <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, or <xref:System.IO.Stream.CopyToAsync%2A> method.</span></span> <span data-ttu-id="22f3d-327">`isAsync` パラメーターが `false`、非同期の読み取りおよび書き込み操作を呼び出すと、UI スレッドはブロックされませんが、実際の i/o 操作は同期的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-327">When the `isAsync` parameter is `false` and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</span></span>  
  
 <span data-ttu-id="22f3d-328">`FileStream` は、ハンドルを排他的に制御することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-328">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="22f3d-329">`FileStream` がハンドルを保持している間に読み取り、書き込み、シークを行うと、データが破損する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-329">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="22f3d-330">データの安全性を確保するには、ハンドルを使用する前に <xref:System.IO.FileStream.Flush%2A> を呼び出し、ハンドルの使用が完了した後に `Close` 以外のメソッドを呼び出さないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-330">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span> <span data-ttu-id="22f3d-331">または、この `FileStream` コンストラクターを呼び出す前に、ハンドルに対して読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="22f3d-331">Alternately, read and write to the handle before calling this `FileStream` constructor.</span></span>  
  
 <span data-ttu-id="22f3d-332">`FileShare.Read` は、`FileShare` パラメーターを指定しない <xref:System.IO.FileStream> コンストラクターの既定値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-332">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-333">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-333">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-334">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-334">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-335"><paramref name="handle" /> パラメーターが無効なハンドルです。</span><span class="sxs-lookup"><span data-stu-id="22f3d-335">The <paramref name="handle" /> parameter is an invalid handle.</span></span>  
  
<span data-ttu-id="22f3d-336">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-336">-or-</span></span> 
<span data-ttu-id="22f3d-337">同期ハンドルである <paramref name="handle" /> パラメーターが、非同期的に使用されました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-337">The <paramref name="handle" /> parameter is a synchronous handle and it was used asynchronously.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-338"><paramref name="bufferSize" /> パラメーターが負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-338">The <paramref name="bufferSize" /> parameter is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-339">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-339">An I/O error, such as a disk error, occurred.</span></span>  
  
 <span data-ttu-id="22f3d-340">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-340">-or-</span></span>  
  
 <span data-ttu-id="22f3d-341">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-341">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-342">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-342">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-343"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-343">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-344">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-344">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-345">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-345">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="22f3d-346">アンマネージコードを呼び出すためのアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="22f3d-346">for permission to call unmanaged code.</span></span> <span data-ttu-id="22f3d-347">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="22f3d-347">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-348">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-348">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-349">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-349">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-350">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-350">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (IntPtr handle, System.IO.FileAccess access, bool ownsHandle, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype System.IO.FileAccess access, bool ownsHandle, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr, access As FileAccess, ownsHandle As Boolean, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(IntPtr handle, System::IO::FileAccess access, bool ownsHandle, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : nativeint * System.IO.FileAccess * bool * int -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (handle, access, ownsHandle, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use FileStream(SafeFileHandle handle, FileAccess access, int bufferSize) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use new FileStream(SafeFileHandle handle, FileAccess access, int bufferSize) instead, and optionally make a new SafeFileHandle with ownsHandle=false if needed.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use new FileStream(SafeFileHandle handle, FileAccess access, int bufferSize) instead, and optionally make a new SafeFileHandle with ownsHandle=false if needed.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ownsHandle" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="22f3d-351">この <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="22f3d-351">A file handle for the file that this <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-352"><see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-352">A bitwise combination of the enumeration values that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span></param>
        <param name="ownsHandle"><span data-ttu-id="22f3d-353">この <see langword="FileStream" /> インスタンスがファイル ハンドルを所有する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-353"><see langword="true" /> if the file handle will be owned by this <see langword="FileStream" /> instance; otherwise, <see langword="false" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-354">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-354">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span></span> <span data-ttu-id="22f3d-355">既定のバッファー サイズは、4096 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-355">The default buffer size is 4096.</span></span></param>
        <summary><span data-ttu-id="22f3d-356"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可、<see langword="FileStream" /> インスタンスの所有権、およびバッファー サイズを使用して、指定したファイル ハンドル用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-356">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission, <see langword="FileStream" /> instance ownership, and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-357">`FileStream` オブジェクトには、ファイルへの指定したアクセス権が与えられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-357">The `FileStream` object is given the specified access to the file.</span></span> <span data-ttu-id="22f3d-358">ハンドルの所有権は、指定されたとおりになります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-358">The ownership of the handle will be as specified.</span></span> <span data-ttu-id="22f3d-359">この `FileStream` がハンドルを所有している場合、<xref:System.IO.Stream.Close%2A> メソッドを呼び出すとハンドルも閉じられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-359">If this `FileStream` owns the handle, a call to the <xref:System.IO.Stream.Close%2A> method will also close the handle.</span></span> <span data-ttu-id="22f3d-360">特に、ファイルのハンドル数は減少します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-360">In particular, the file's handle count is decremented.</span></span> <span data-ttu-id="22f3d-361">`FileStream` オブジェクトには、指定されたバッファーサイズが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-361">The `FileStream` object is given the specified buffer size.</span></span>  
  
 <span data-ttu-id="22f3d-362">`FileStream` は、ハンドルを排他的に制御することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-362">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="22f3d-363">`FileStream` がハンドルを保持している間に読み取り、書き込み、シークを行うと、データが破損する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-363">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="22f3d-364">データの安全性を確保するには、ハンドルを使用する前に <xref:System.IO.FileStream.Flush%2A> を呼び出し、ハンドルの使用が完了した後に `Close` 以外のメソッドを呼び出さないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-364">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span> <span data-ttu-id="22f3d-365">または、この `FileStream` コンストラクターを呼び出す前に、ハンドルに対して読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="22f3d-365">Alternately, read and write to the handle before calling this `FileStream` constructor.</span></span>  
  
 <span data-ttu-id="22f3d-366">`FileShare.Read` は、`FileShare` パラメーターを指定しない <xref:System.IO.FileStream> コンストラクターの既定値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-366">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-367">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-367">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-368">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-368">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-369"><paramref name="bufferSize" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-369"><paramref name="bufferSize" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-370">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-370">An I/O error, such as a disk error, occurred.</span></span>  
  
 <span data-ttu-id="22f3d-371">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-371">-or-</span></span>  
  
 <span data-ttu-id="22f3d-372">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-372">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-373">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-373">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-374"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-374">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-375">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-375">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-376">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-376">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-377">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-377">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-378">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-378">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-379">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-379">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (path, mode, access, share)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="22f3d-380">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="22f3d-380">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="mode"><span data-ttu-id="22f3d-381">ファイルを開く方法または作成する方法を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-381">One of the enumeration values that determines how to open or create the file.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-382"><see langword="FileStream" /> オブジェクトがファイルにアクセスする方法を決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-382">A bitwise combination of the enumeration values that determines how the file can be accessed by the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-383">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-383">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-384"><paramref name="path" /> がディスク ファイルを指定している場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-384"><see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <paramref name="path" /> specifies a disk file.</span></span></param>
        <param name="share"><span data-ttu-id="22f3d-385">ファイルがどのようにプロセスに共有されるかを決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-385">A bitwise combination of the enumeration values that determines how the file will be shared by processes.</span></span></param>
        <summary><span data-ttu-id="22f3d-386"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、読み取り/書き込みアクセス許可、および共有アクセス許可を使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-386">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, read/write permission, and sharing permission.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-387">.NET Framework は、"\\\\.\PHYSICALDRIVE0" などのデバイス名を使用した物理ディスクへの直接アクセスをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-387">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="22f3d-388">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-388">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="22f3d-389">コンストラクターには、ファイルへの読み取り/書き込みアクセス権が付与されています。また、このコンストラクターは、読み取りアクセスの共有を開いています (つまり、このまたは別のプロセスによって書き込みを行うためにファイルを開く要求は、`FileStream` オブジェクトが閉じられるまで失敗しますが、読み取り試行は成功します)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-389">The constructor is given read/write access to the file, and it is opened sharing Read access (that is, requests to open the file for writing by this or another process will fail until the `FileStream` object has been closed, but read attempts will succeed).</span></span> <span data-ttu-id="22f3d-390">バッファーサイズは、既定のサイズの4096バイト (4 KB) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-390">The buffer size is set to the default size of 4096 bytes (4 KB).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-391">`path` は、ディスクに格納されているファイルである必要はありません。ストリーム経由のアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-391">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="22f3d-392">たとえば、システムによっては、このクラスは物理デバイスにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-392">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="22f3d-393"><xref:System.IO.Stream.CanSeek%2A> は、ファイルをカプセル化するすべての <xref:System.IO.FileStream> オブジェクトに対して `true` ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-393"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="22f3d-394">`path` がシークをサポートしていないデバイスを示している場合は、結果の <xref:System.IO.FileStream> の <xref:System.IO.FileStream.CanSeek%2A> プロパティが `false`ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-394">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="22f3d-395">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-395">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-396">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-396">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-397">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-397">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-398">このコード例は、<xref:System.IO.FileStream.Lock%2A> メソッド用に提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-398">This code example is part of a larger example provided for the <xref:System.IO.FileStream.Lock%2A> method.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#2)]
 [!code-csharp[System.IO.FileStream3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#2)]
 [!code-vb[System.IO.FileStream3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-399"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-399"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-400"><paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-400"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
<span data-ttu-id="22f3d-401">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-401">-or-</span></span> 
 <span data-ttu-id="22f3d-402"><paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-402"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-403"><paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-403"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="22f3d-404">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-404">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span></span> <span data-ttu-id="22f3d-405">これらのモードではファイルが既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-405">The file must already exist in these modes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-406"><paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-406">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span></span>  
  
<span data-ttu-id="22f3d-407">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-407">-or-</span></span> 
<span data-ttu-id="22f3d-408">システムが Windows 98 または Windows 98 Second Edition を実行中で、<paramref name="share" /> が <see langword="FileShare.Delete" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-408">The system is running Windows 98 or Windows 98 Second Edition and <paramref name="share" /> is set to <see langword="FileShare.Delete" />.</span></span>  
  
<span data-ttu-id="22f3d-409">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-409">-or-</span></span> 
<span data-ttu-id="22f3d-410">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-410">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-411">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-411">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="22f3d-412">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-412">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-413"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-413">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="22f3d-414">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-414">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-415"><paramref name="mode" /> に無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-415"><paramref name="mode" /> contains an invalid value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-416">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-416">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-417">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-417">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-418">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-418">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-419">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-419">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-420">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-420">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (IntPtr handle, System.IO.FileAccess access, bool ownsHandle, int bufferSize, bool isAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype System.IO.FileAccess access, bool ownsHandle, int32 bufferSize, bool isAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr, access As FileAccess, ownsHandle As Boolean, bufferSize As Integer, isAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(IntPtr handle, System::IO::FileAccess access, bool ownsHandle, int bufferSize, bool isAsync);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : nativeint * System.IO.FileAccess * bool * int * bool -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (handle, access, ownsHandle, bufferSize, isAsync)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use FileStream(SafeFileHandle handle, FileAccess access, int bufferSize, bool isAsync) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use new FileStream(SafeFileHandle handle, FileAccess access, int bufferSize, bool isAsync) instead, and optionally make a new SafeFileHandle with ownsHandle=false if needed.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use new FileStream(SafeFileHandle handle, FileAccess access, int bufferSize, bool isAsync) instead, and optionally make a new SafeFileHandle with ownsHandle=false if needed.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ownsHandle" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="isAsync" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="22f3d-421">この <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="22f3d-421">A file handle for the file that this <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-422"><see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティを設定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-422">A bitwise combination of the enumeration values that sets the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span></param>
        <param name="ownsHandle"><span data-ttu-id="22f3d-423">この <see langword="FileStream" /> インスタンスがファイル ハンドルを所有する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-423"><see langword="true" /> if the file handle will be owned by this <see langword="FileStream" /> instance; otherwise, <see langword="false" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-424">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-424">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span></span> <span data-ttu-id="22f3d-425">既定のバッファー サイズは、4096 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-425">The default buffer size is 4096.</span></span></param>
        <param name="isAsync"><span data-ttu-id="22f3d-426">ハンドルが非同期的に開かれた場合 (重複 I/O モード用) は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-426"><see langword="true" /> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="22f3d-427"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定した読み取り/書き込みアクセス許可、<see langword="FileStream" /> インスタンスの所有権、バッファー サイズ、および同期状態または非同期状態を使用して、指定したファイル ハンドル用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-427">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class for the specified file handle, with the specified read/write permission, <see langword="FileStream" /> instance ownership, buffer size, and synchronous or asynchronous state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-428">`FileStream` オブジェクトには、ファイルへの指定したアクセス権が与えられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-428">The `FileStream` object is given the specified access to the file.</span></span> <span data-ttu-id="22f3d-429">ハンドルの所有権は、指定されたとおりになります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-429">The ownership of the handle will be as specified.</span></span> <span data-ttu-id="22f3d-430">この `FileStream` がハンドルを所有している場合、<xref:System.IO.Stream.Close%2A> メソッドを呼び出すとハンドルも閉じられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-430">If this `FileStream` owns the handle, a call to the <xref:System.IO.Stream.Close%2A> method will also close the handle.</span></span> <span data-ttu-id="22f3d-431">特に、ファイルのハンドル数は減少します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-431">In particular, the file's handle count is decremented.</span></span> <span data-ttu-id="22f3d-432">`FileStream` オブジェクトには、指定されたバッファーサイズが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-432">The `FileStream` object is given the specified buffer size.</span></span>  
  
 <span data-ttu-id="22f3d-433">`FileStream` は、ハンドルを排他的に制御することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-433">`FileStream` assumes that it has exclusive control over the handle.</span></span> <span data-ttu-id="22f3d-434">`FileStream` がハンドルを保持している間に読み取り、書き込み、シークを行うと、データが破損する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-434">Reading, writing, or seeking while a `FileStream` is also holding a handle could result in data corruption.</span></span> <span data-ttu-id="22f3d-435">データの安全性を確保するには、ハンドルを使用する前に <xref:System.IO.FileStream.Flush%2A> を呼び出し、ハンドルの使用が完了した後に `Close` 以外のメソッドを呼び出さないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-435">For data safety, call <xref:System.IO.FileStream.Flush%2A> before using the handle, and avoid calling any methods other than `Close` after you are done using the handle.</span></span> <span data-ttu-id="22f3d-436">または、この `FileStream` コンストラクターを呼び出す前に、ハンドルに対して読み取りと書き込みを行います。</span><span class="sxs-lookup"><span data-stu-id="22f3d-436">Alternately, read and write to the handle before calling this `FileStream` constructor.</span></span>  
  
 <span data-ttu-id="22f3d-437">`FileShare.Read` は、`FileShare` パラメーターを指定しない <xref:System.IO.FileStream> コンストラクターの既定値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-437">`FileShare.Read` is the default for those <xref:System.IO.FileStream> constructors without a `FileShare` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-438">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-438">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-439">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-439">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-440"><paramref name="access" /> が <see langword="FileAccess.Read" /> 未満であるか、<see langword="FileAccess.ReadWrite" /> 以上であるか、または <paramref name="bufferSize" /> が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-440"><paramref name="access" /> is less than <see langword="FileAccess.Read" /> or greater than <see langword="FileAccess.ReadWrite" /> or <paramref name="bufferSize" /> is less than or equal to 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-441">ハンドルが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-441">The handle is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-442">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-442">An I/O error, such as a disk error, occurred.</span></span>  
  
 <span data-ttu-id="22f3d-443">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-443">-or-</span></span>  
  
 <span data-ttu-id="22f3d-444">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-444">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-445">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-445">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-446"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイル ハンドルが読み取り専用に設定されているなど、指定したファイル ハンドルに対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-446">The <paramref name="access" /> requested is not permitted by the operating system for the specified file handle, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file handle is set for read-only access.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="22f3d-447">アンマネージコードへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-447">for access to unmanaged code.</span></span> <span data-ttu-id="22f3d-448"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="22f3d-448">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-449">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-449">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-450">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-450">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-451">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-451">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * int -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (path, mode, access, share, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="22f3d-452">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="22f3d-452">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="mode"><span data-ttu-id="22f3d-453">ファイルを開く方法または作成する方法を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-453">One of the enumeration values that determines how to open or create the file.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-454"><see langword="FileStream" /> オブジェクトがファイルにアクセスする方法を決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-454">A bitwise combination of the enumeration values that determines how the file can be accessed by the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-455">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-455">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-456"><paramref name="path" /> がディスク ファイルを指定している場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-456"><see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <paramref name="path" /> specifies a disk file.</span></span></param>
        <param name="share"><span data-ttu-id="22f3d-457">ファイルがどのようにプロセスに共有されるかを決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-457">A bitwise combination of the enumeration values that determines how the file will be shared by processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-458">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-458">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span></span> <span data-ttu-id="22f3d-459">既定のバッファー サイズは、4096 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-459">The default buffer size is 4096.</span></span></param>
        <summary><span data-ttu-id="22f3d-460"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、読み取り/書き込みアクセス許可、共有アクセス許可、およびバッファー サイズを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-460">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, read/write and sharing permission, and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-461">.NET Framework は、"\\\\.\PHYSICALDRIVE0" などのデバイス名を使用した物理ディスクへの直接アクセスをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-461">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="22f3d-462">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-462">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-463">`path` は、ディスクに格納されているファイルである必要はありません。ストリーム経由のアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-463">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="22f3d-464">たとえば、システムによっては、このクラスは物理デバイスにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-464">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="22f3d-465"><xref:System.IO.Stream.CanSeek%2A> は、ファイルをカプセル化するすべての <xref:System.IO.FileStream> オブジェクトに対して `true` ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-465"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="22f3d-466">`path` がシークをサポートしていないデバイスを示している場合は、結果の <xref:System.IO.FileStream> の <xref:System.IO.FileStream.CanSeek%2A> プロパティが `false`ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-466">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="22f3d-467">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-467">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-468">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-468">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-469">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-469">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-470"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-470"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-471"><paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-471"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
<span data-ttu-id="22f3d-472">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-472">-or-</span></span> 
 <span data-ttu-id="22f3d-473"><paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-473"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-474"><paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-474"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-475"><paramref name="bufferSize" /> が負の値または 0 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-475"><paramref name="bufferSize" /> is negative or zero.</span></span>  
  
<span data-ttu-id="22f3d-476">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-476">-or-</span></span> 
 <span data-ttu-id="22f3d-477"><paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に正しくない値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-477"><paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="22f3d-478">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-478">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span></span> <span data-ttu-id="22f3d-479">これらのモードではファイルが既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-479">The file must already exist in these modes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-480"><paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-480">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span></span>  
  
<span data-ttu-id="22f3d-481">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-481">-or-</span></span> 
<span data-ttu-id="22f3d-482">システムが Windows 98 または Windows 98 Second Edition を実行中で、<paramref name="share" /> が <see langword="FileShare.Delete" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-482">The system is running Windows 98 or Windows 98 Second Edition and <paramref name="share" /> is set to <see langword="FileShare.Delete" />.</span></span>  
  
<span data-ttu-id="22f3d-483">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-483">-or-</span></span> 
<span data-ttu-id="22f3d-484">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-484">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-485">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-485">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="22f3d-486">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-486">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-487"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-487">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="22f3d-488">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-488">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-489">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-489">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-490">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-490">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-491">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-491">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-492">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-492">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-493">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-493">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, useAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize, bool useAsync);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * int * bool -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (path, mode, access, share, bufferSize, useAsync)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="22f3d-494">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="22f3d-494">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="mode"><span data-ttu-id="22f3d-495">ファイルを開く方法または作成する方法を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-495">One of the enumeration values that determines how to open or create the file.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-496"><see langword="FileStream" /> オブジェクトがファイルにアクセスする方法を決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-496">A bitwise combination of the enumeration values that determines how the file can be accessed by the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-497">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-497">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-498"><paramref name="path" /> がディスク ファイルを指定している場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-498"><see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <paramref name="path" /> specifies a disk file.</span></span></param>
        <param name="share"><span data-ttu-id="22f3d-499">ファイルがどのようにプロセスに共有されるかを決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-499">A bitwise combination of the enumeration values that determines how the file will be shared by processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-500">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-500">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span></span> <span data-ttu-id="22f3d-501">既定のバッファー サイズは、4096 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-501">The default buffer size is 4096.</span></span></param>
        <param name="useAsync"><span data-ttu-id="22f3d-502">非同期 I/O または同期 I/O のどちらを使用するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-502">Specifies whether to use asynchronous I/O or synchronous I/O.</span></span> <span data-ttu-id="22f3d-503">ただし、基になるオペレーティング システムが非同期 I/O をサポートしていないことがあります。したがって、<see langword="true" /> を指定しても、プラットフォームによってはハンドルが同期的に開かれることがあります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-503">However, note that the underlying operating system might not support asynchronous I/O, so when specifying <see langword="true" />, the handle might be opened synchronously depending on the platform.</span></span> <span data-ttu-id="22f3d-504">非同期的に開いた場合、<see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドと <see cref="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドは、大量の読み取りまたは書き込み時にはパフォーマンスがより高くなりますが、少量の読み取りまたは書き込み時にはパフォーマンスが非常に低くなることがあります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-504">When opened asynchronously, the <see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> and <see cref="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> methods perform better on large reads or writes, but they might be much slower for small reads or writes.</span></span> <span data-ttu-id="22f3d-505">アプリケーションが非同期 I/O を利用するように設計されている場合は、<paramref name="useAsync" /> パラメーターを <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-505">If the application is designed to take advantage of asynchronous I/O, set the <paramref name="useAsync" /> parameter to <see langword="true" />.</span></span> <span data-ttu-id="22f3d-506">非同期 I/O を正しく使用すると、アプリケーションが 10 倍ほど高速化することがあります。ただし、非同期 I/O 用にアプリケーションを再設計せずに非同期 I/O を使用すると、パフォーマンスが 10 分の 1 ほど低下することがあります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-506">Using asynchronous I/O correctly can speed up applications by as much as a factor of 10, but using it without redesigning the application for asynchronous I/O can decrease performance by as much as a factor of 10.</span></span></param>
        <summary><span data-ttu-id="22f3d-507"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、読み取り/書き込みアクセス許可、共有アクセス許可、バッファー サイズ、および同期状態または非同期状態を使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-507">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, read/write and sharing permission, buffer size, and synchronous or asynchronous state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-508">.NET Framework は、"\\\\.\PHYSICALDRIVE0" などのデバイス名を使用した物理ディスクへの直接アクセスをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-508">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="22f3d-509">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-509">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-510">`path` は、ディスクに格納されているファイルである必要はありません。ストリーム経由のアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-510">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="22f3d-511">たとえば、システムによっては、このクラスは物理デバイスにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-511">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="22f3d-512"><xref:System.IO.Stream.CanSeek%2A> は、ファイルをカプセル化するすべての <xref:System.IO.FileStream> オブジェクトに対して `true` ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-512"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="22f3d-513">`path` がシークをサポートしていないデバイスを示している場合は、結果の <xref:System.IO.FileStream> の <xref:System.IO.FileStream.CanSeek%2A> プロパティが `false`ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-513">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="22f3d-514">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-514">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-515">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-515">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-516">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-516">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-517">次のコード例は、データを非同期的にファイルに書き込み、データが正しく書き込まれたことを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-517">The following code example shows how to asynchronously write data to a file and then verify that the data was written correctly.</span></span> <span data-ttu-id="22f3d-518">メインスレッドから `EndReadCallback` および `EndWriteCallback` メソッドに情報を渡すために `State` オブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-518">A `State` object is created to pass information from the main thread to the `EndReadCallback` and `EndWriteCallback` methods.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-519"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-519"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-520"><paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-520"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
<span data-ttu-id="22f3d-521">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-521">-or-</span></span> 
 <span data-ttu-id="22f3d-522"><paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-522"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-523"><paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-523"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-524"><paramref name="bufferSize" /> が負の値または 0 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-524"><paramref name="bufferSize" /> is negative or zero.</span></span>  
  
<span data-ttu-id="22f3d-525">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-525">-or-</span></span> 
 <span data-ttu-id="22f3d-526"><paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に正しくない値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-526"><paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="22f3d-527">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-527">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span></span> <span data-ttu-id="22f3d-528">これらのモードではファイルが既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-528">The file must already exist in these modes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-529"><paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-529">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span></span>  
  
<span data-ttu-id="22f3d-530">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-530">-or-</span></span> 
<span data-ttu-id="22f3d-531">システムが Windows 98 または Windows 98 Second Edition を実行中で、<paramref name="share" /> が <see langword="FileShare.Delete" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-531">The system is running Windows 98 or Windows 98 Second Edition and <paramref name="share" /> is set to <see langword="FileShare.Delete" />.</span></span>  
  
<span data-ttu-id="22f3d-532">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-532">-or-</span></span> 
<span data-ttu-id="22f3d-533">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-533">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-534">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-534">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="22f3d-535">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-535">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-536"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-536">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="22f3d-537">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-537">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-538">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-538">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-539">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-539">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <altmember cref="T:System.IO.File" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-540">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-540">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-541">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-541">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-542">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-542">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, System.IO.FileOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, options As FileOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize, System::IO::FileOptions options);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * int * System.IO.FileOptions -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (path, mode, access, share, bufferSize, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="22f3d-543">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="22f3d-543">A relative or absolute path for the file that the current <see langword="FileStream" /> object will encapsulate.</span></span></param>
        <param name="mode"><span data-ttu-id="22f3d-544">ファイルを開く方法または作成する方法を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-544">One of the enumeration values that determines how to open or create the file.</span></span></param>
        <param name="access"><span data-ttu-id="22f3d-545"><see langword="FileStream" /> オブジェクトがファイルにアクセスする方法を決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-545">A bitwise combination of the enumeration values that determines how the file can be accessed by the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-546">これにより、<see langword="FileStream" /> オブジェクトの <see cref="P:System.IO.FileStream.CanRead" /> および <see cref="P:System.IO.FileStream.CanWrite" /> プロパティによって返される値も決まります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-546">This also determines the values returned by the <see cref="P:System.IO.FileStream.CanRead" /> and <see cref="P:System.IO.FileStream.CanWrite" /> properties of the <see langword="FileStream" /> object.</span></span> <span data-ttu-id="22f3d-547"><paramref name="path" /> がディスク ファイルを指定している場合、<see cref="P:System.IO.FileStream.CanSeek" /> は <see langword="true" /> になります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-547"><see cref="P:System.IO.FileStream.CanSeek" /> is <see langword="true" /> if <paramref name="path" /> specifies a disk file.</span></span></param>
        <param name="share"><span data-ttu-id="22f3d-548">ファイルがどのようにプロセスに共有されるかを決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-548">A bitwise combination of the enumeration values that determines how the file will be shared by processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-549">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-549">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span></span> <span data-ttu-id="22f3d-550">既定のバッファー サイズは、4096 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-550">The default buffer size is 4096.</span></span></param>
        <param name="options"><span data-ttu-id="22f3d-551">その他のファイル オプションを指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-551">A bitwise combination of the enumeration values that specifies additional file options.</span></span></param>
        <summary><span data-ttu-id="22f3d-552"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、読み取り/書き込みアクセス許可、共有アクセス許可、同一のファイルに対して他の FileStream が保有できるアクセス、バッファー サイズ、および追加のファイル オプションを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-552">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, read/write and sharing permission, the access other FileStreams can have to the same file, the buffer size, and additional file options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-553">.NET Framework は、"\\\\.\PHYSICALDRIVE0" などのデバイス名を使用した物理ディスクへの直接アクセスをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-553">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="22f3d-554">`fileOptions` パラメーターは、<xref:System.IO.FileStream> オブジェクトを作成するときに利用できるより高度な操作へのアクセスを提供するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-554">The `fileOptions` parameter is used to provide access to more advanced operations that can be leveraged when creating a <xref:System.IO.FileStream> object.</span></span>  
  
 <span data-ttu-id="22f3d-555">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-555">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-556">`path` は、ディスクに格納されているファイルである必要はありません。ストリーム経由のアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-556">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="22f3d-557">たとえば、システムによっては、このクラスは物理デバイスにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-557">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="22f3d-558"><xref:System.IO.Stream.CanSeek%2A> は、ファイルをカプセル化するすべての <xref:System.IO.FileStream> オブジェクトに対して `true` ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-558"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="22f3d-559">`path` がシークをサポートしていないデバイスを示している場合は、結果の <xref:System.IO.FileStream> の <xref:System.IO.FileStream.CanSeek%2A> プロパティが `false`ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-559">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="22f3d-560">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-560">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-561">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-561">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-562">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-562">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-563">次の例では、データをファイルに書き込み、<xref:System.IO.FileStream> オブジェクトを使用してデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-563">The following example writes data to a file and then reads the data using the <xref:System.IO.FileStream> object.</span></span>  
  
 [!code-cpp[IO.FileStream.ctor1#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileStream.ctor1/cpp/example.cpp#1)]
 [!code-csharp[IO.FileStream.ctor1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileStream.ctor1/CS/example.cs#1)]
 [!code-vb[IO.FileStream.ctor1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileStream.ctor1/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-564"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-564"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-565"><paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-565"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
<span data-ttu-id="22f3d-566">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-566">-or-</span></span> 
 <span data-ttu-id="22f3d-567"><paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-567"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-568"><paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-568"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-569"><paramref name="bufferSize" /> が負の値または 0 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-569"><paramref name="bufferSize" /> is negative or zero.</span></span>  
  
<span data-ttu-id="22f3d-570">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-570">-or-</span></span> 
 <span data-ttu-id="22f3d-571"><paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に正しくない値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-571"><paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="22f3d-572">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-572">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span></span> <span data-ttu-id="22f3d-573">これらのモードではファイルが既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-573">The file must already exist in these modes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-574"><paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-574">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span></span>  
  
<span data-ttu-id="22f3d-575">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-575">-or-</span></span> 
<span data-ttu-id="22f3d-576">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-576">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-577">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-577">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="22f3d-578">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-578">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-579"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-579">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span></span>  
  
<span data-ttu-id="22f3d-580">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-580">-or-</span></span> 
 <span data-ttu-id="22f3d-581"><paramref name="options" /> に対して <see cref="F:System.IO.FileOptions.Encrypted" /> が指定されていますが、ファイルの暗号化は現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-581"><see cref="F:System.IO.FileOptions.Encrypted" /> is specified for <paramref name="options" />, but file encryption is not supported on the current platform.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="22f3d-582">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-582">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-583">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-583">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-584">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-584">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-585">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-585">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-586">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-586">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-587">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-587">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.Security.AccessControl.FileSystemRights rights, System.IO.FileShare share, int bufferSize, System.IO.FileOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.Security.AccessControl.FileSystemRights rights, valuetype System.IO.FileShare share, int32 bufferSize, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, rights As FileSystemRights, share As FileShare, bufferSize As Integer, options As FileOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::Security::AccessControl::FileSystemRights rights, System::IO::FileShare share, int bufferSize, System::IO::FileOptions options);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : string * System.IO.FileMode * System.Security.AccessControl.FileSystemRights * System.IO.FileShare * int * System.IO.FileOptions -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (path, mode, rights, share, bufferSize, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.FileSystemRights" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="22f3d-588">現在の <see cref="T:System.IO.FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="22f3d-588">A relative or absolute path for the file that the current <see cref="T:System.IO.FileStream" /> object will encapsulate.</span></span></param>
        <param name="mode"><span data-ttu-id="22f3d-589">ファイルを開く方法または作成する方法を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-589">One of the enumeration values that determines how to open or create the file.</span></span></param>
        <param name="rights"><span data-ttu-id="22f3d-590">ファイルのアクセス規則および監査規則の作成時に使用するアクセス権を決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-590">A bitwise combination of the enumeration values that determines the access rights to use when creating access and audit rules for the file.</span></span></param>
        <param name="share"><span data-ttu-id="22f3d-591">ファイルがどのようにプロセスに共有されるかを決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-591">A bitwise combination of the enumeration values that determines how the file will be shared by processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-592">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-592">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span></span> <span data-ttu-id="22f3d-593">既定のバッファー サイズは、4096 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-593">The default buffer size is 4096.</span></span></param>
        <param name="options"><span data-ttu-id="22f3d-594">その他のファイル オプションを指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-594">A bitwise combination of the enumeration values that specifies additional file options.</span></span></param>
        <summary><span data-ttu-id="22f3d-595"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、アクセス権、共有アクセス許可、バッファー サイズ、および追加のファイル オプションを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-595">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, access rights and sharing permission, the buffer size, and additional file options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-596">.NET Framework は、"\\\\.\PHYSICALDRIVE0" などのデバイス名を使用した物理ディスクへの直接アクセスをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-596">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="22f3d-597">ファイルの作成時にアクセス権を適用するには、この <xref:System.IO.FileStream.%23ctor%2A> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-597">Use this <xref:System.IO.FileStream.%23ctor%2A> constructor to apply access rights at the point of creation of a file.</span></span> <span data-ttu-id="22f3d-598">既存のファイルに対する権限にアクセスしたり変更したりするには、<xref:System.IO.File.GetAccessControl%2A> および <xref:System.IO.File.SetAccessControl%2A> メソッドの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-598">To access or modify rights on an existing file, consider using the <xref:System.IO.File.GetAccessControl%2A> and <xref:System.IO.File.SetAccessControl%2A> methods.</span></span>  
  
 <span data-ttu-id="22f3d-599">`fileOptions` パラメーターは、<xref:System.IO.FileStream> オブジェクトを作成するときに利用できるより高度な操作へのアクセスを提供するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-599">The `fileOptions` parameter is used to provide access to more advanced operations that can be leveraged when creating a <xref:System.IO.FileStream> object.</span></span>  
  
 <span data-ttu-id="22f3d-600">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-600">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-601">`path` は、ディスクに格納されているファイルである必要はありません。ストリーム経由のアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-601">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="22f3d-602">たとえば、システムによっては、このクラスは物理デバイスにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-602">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="22f3d-603"><xref:System.IO.Stream.CanSeek%2A> は、ファイルをカプセル化するすべての <xref:System.IO.FileStream> オブジェクトに対して `true` ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-603"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="22f3d-604">`path` がシークをサポートしていないデバイスを示している場合は、結果の <xref:System.IO.FileStream> の <xref:System.IO.FileStream.CanSeek%2A> プロパティが `false`ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-604">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="22f3d-605">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-605">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-606">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-606">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-607">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-607">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-608"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-608"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-609"><paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-609"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
<span data-ttu-id="22f3d-610">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-610">-or-</span></span> 
 <span data-ttu-id="22f3d-611"><paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-611"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-612"><paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-612"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-613"><paramref name="bufferSize" /> が負の値または 0 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-613"><paramref name="bufferSize" /> is negative or zero.</span></span>  
  
<span data-ttu-id="22f3d-614">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-614">-or-</span></span> 
 <span data-ttu-id="22f3d-615"><paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に正しくない値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-615"><paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="22f3d-616">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-616">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span></span> <span data-ttu-id="22f3d-617">これらのモードではファイルが既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-617">The file must already exist in these modes.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="22f3d-618">現在のオペレーティング システムは Windows NT 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-618">The current operating system is not Windows NT or later.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-619"><paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-619">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span></span>  
  
<span data-ttu-id="22f3d-620">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-620">-or-</span></span> 
<span data-ttu-id="22f3d-621">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-621">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-622">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-622">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="22f3d-623">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-623">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-624"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-624">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span></span>  
  
<span data-ttu-id="22f3d-625">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-625">-or-</span></span> 
 <span data-ttu-id="22f3d-626"><paramref name="options" /> に対して <see cref="F:System.IO.FileOptions.Encrypted" /> が指定されていますが、ファイルの暗号化は現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-626"><see cref="F:System.IO.FileOptions.Encrypted" /> is specified for <paramref name="options" />, but file encryption is not supported on the current platform.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="22f3d-627">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-627">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-628">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-628">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-629">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-629">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-630">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-630">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-631">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-631">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-632">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-632">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileStream (string path, System.IO.FileMode mode, System.Security.AccessControl.FileSystemRights rights, System.IO.FileShare share, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.Security.AccessControl.FileSystemRights rights, valuetype System.IO.FileShare share, int32 bufferSize, valuetype System.IO.FileOptions options, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileStream(System::String ^ path, System::IO::FileMode mode, System::Security::AccessControl::FileSystemRights rights, System::IO::FileShare share, int bufferSize, System::IO::FileOptions options, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="new System.IO.FileStream : string * System.IO.FileMode * System.Security.AccessControl.FileSystemRights * System.IO.FileShare * int * System.IO.FileOptions * System.Security.AccessControl.FileSecurity -&gt; System.IO.FileStream" Usage="new System.IO.FileStream (path, mode, rights, share, bufferSize, options, fileSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.FileSystemRights" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="22f3d-633">現在の <see cref="T:System.IO.FileStream" /> オブジェクトによってカプセル化されるファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="22f3d-633">A relative or absolute path for the file that the current <see cref="T:System.IO.FileStream" /> object will encapsulate.</span></span></param>
        <param name="mode"><span data-ttu-id="22f3d-634">ファイルを開く方法または作成する方法を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-634">One of the enumeration values that determines how to open or create the file.</span></span></param>
        <param name="rights"><span data-ttu-id="22f3d-635">ファイルのアクセス規則および監査規則の作成時に使用するアクセス権を決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-635">A bitwise combination of the enumeration values that determines the access rights to use when creating access and audit rules for the file.</span></span></param>
        <param name="share"><span data-ttu-id="22f3d-636">ファイルがどのようにプロセスに共有されるかを決定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-636">A bitwise combination of the enumeration values that determines how the file will be shared by processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-637">バッファー サイズを示す 0 より大きな正の <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-637">A positive <see cref="T:System.Int32" /> value greater than 0 indicating the buffer size.</span></span> <span data-ttu-id="22f3d-638">既定のバッファー サイズは、4096 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-638">The default buffer size is 4096.</span></span></param>
        <param name="options"><span data-ttu-id="22f3d-639">その他のファイル オプションを指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-639">A bitwise combination of the enumeration values that specifies additional file options.</span></span></param>
        <param name="fileSecurity"><span data-ttu-id="22f3d-640">ファイルのアクセス制御と監査セキュリティを決定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-640">An object that determines the access control and audit security for the file.</span></span></param>
        <summary><span data-ttu-id="22f3d-641"><see cref="T:System.IO.FileStream" /> クラスの新しいインスタンスを、指定したパス、作成モード、アクセス権、共有アクセス許可、バッファー サイズ、追加のファイル オプション、アクセス制御、および監査セキュリティを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-641">Initializes a new instance of the <see cref="T:System.IO.FileStream" /> class with the specified path, creation mode, access rights and sharing permission, the buffer size, additional file options, access control and audit security.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-642">.NET Framework は、"\\\\.\PHYSICALDRIVE0" などのデバイス名を使用した物理ディスクへの直接アクセスをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-642">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="22f3d-643">ファイルの作成時にアクセス権を適用するには、この <xref:System.IO.FileStream.%23ctor%2A> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-643">Use this <xref:System.IO.FileStream.%23ctor%2A> constructor to apply access rights at the point of creation of a file.</span></span> <span data-ttu-id="22f3d-644">既存のファイルに対する権限にアクセスしたり変更したりするには、<xref:System.IO.File.GetAccessControl%2A> および <xref:System.IO.File.SetAccessControl%2A> メソッドの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-644">To access or modify rights on an existing file, consider using the <xref:System.IO.File.GetAccessControl%2A> and <xref:System.IO.File.SetAccessControl%2A> methods.</span></span>  
  
 <span data-ttu-id="22f3d-645">`fileOptions` パラメーターは、<xref:System.IO.FileStream> オブジェクトを作成するときに利用できるより高度な操作へのアクセスを提供するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-645">The `fileOptions` parameter is used to provide access to more advanced operations that can be leveraged when creating a <xref:System.IO.FileStream> object.</span></span>  
  
 <span data-ttu-id="22f3d-646">`path` パラメーターには、汎用名前付け規則 (UNC) 共有上のファイルを含むファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-646">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-647">`path` は、ディスクに格納されているファイルである必要はありません。ストリーム経由のアクセスをサポートするシステムの任意の部分を指定できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-647">`path` is not required to be a file stored on disk; it can be any part of a system that supports access through streams.</span></span> <span data-ttu-id="22f3d-648">たとえば、システムによっては、このクラスは物理デバイスにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-648">For example, depending on the system, this class can access a physical device.</span></span>  
  
 <span data-ttu-id="22f3d-649"><xref:System.IO.Stream.CanSeek%2A> は、ファイルをカプセル化するすべての <xref:System.IO.FileStream> オブジェクトに対して `true` ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-649"><xref:System.IO.Stream.CanSeek%2A> is `true` for all <xref:System.IO.FileStream> objects that encapsulate files.</span></span> <span data-ttu-id="22f3d-650">`path` がシークをサポートしていないデバイスを示している場合は、結果の <xref:System.IO.FileStream> の <xref:System.IO.FileStream.CanSeek%2A> プロパティが `false`ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-650">If `path` indicates a device that does not support seeking, the <xref:System.IO.FileStream.CanSeek%2A> property on the resulting <xref:System.IO.FileStream> is `false`.</span></span> <span data-ttu-id="22f3d-651">詳細については、「<xref:System.IO.Stream.CanSeek%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-651">For additional information, see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-652">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-652">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="22f3d-653">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-653">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-654">次の例では、データをファイルに書き込み、<xref:System.IO.FileStream> オブジェクトを使用してデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-654">The following example writes data to a file and then reads the data using the <xref:System.IO.FileStream> object.</span></span>  
  
 [!code-cpp[IO.FileStream.ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileStream.ctor2/cpp/example.cpp#1)]
 [!code-csharp[IO.FileStream.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileStream.ctor2/CS/example.cs#1)]
 [!code-vb[IO.FileStream.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileStream.ctor2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-655"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-655"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-656"><paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-656"><paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span></span>  
  
<span data-ttu-id="22f3d-657">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-657">-or-</span></span> 
 <span data-ttu-id="22f3d-658"><paramref name="path" /> が NTFS 環境の "con:"、"com1:"、"lpt1:" などの非ファイル デバイスを参照しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-658"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-659"><paramref name="path" /> がファイル以外のデバイスを参照しています (NTFS 以外の環境の "con:"、"com1:"、"lpt1:" など)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-659"><paramref name="path" /> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-660"><paramref name="bufferSize" /> が負の値または 0 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-660"><paramref name="bufferSize" /> is negative or zero.</span></span>  
  
<span data-ttu-id="22f3d-661">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-661">-or-</span></span> 
 <span data-ttu-id="22f3d-662"><paramref name="mode" />、<paramref name="access" />、または <paramref name="share" /> に正しくない値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-662"><paramref name="mode" />, <paramref name="access" />, or <paramref name="share" /> contain an invalid value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="22f3d-663">ファイルが見つかりません。たとえば、<paramref name="mode" /> が <see langword="FileMode.Truncate" /> または <see langword="FileMode.Open" /> の場合に、<paramref name="path" /> で指定されたファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-663">The file cannot be found, such as when <paramref name="mode" /> is <see langword="FileMode.Truncate" /> or <see langword="FileMode.Open" />, and the file specified by <paramref name="path" /> does not exist.</span></span> <span data-ttu-id="22f3d-664">これらのモードではファイルが既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-664">The file must already exist in these modes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-665"><paramref name="path" /> で指定したファイルが既に存在している場合に <see langword="FileMode.CreateNew" /> が指定されているなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-665">An I/O error, such as specifying <see langword="FileMode.CreateNew" /> when the file specified by <paramref name="path" /> already exists, occurred.</span></span>  
  
<span data-ttu-id="22f3d-666">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-666">-or-</span></span> 
<span data-ttu-id="22f3d-667">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-667">The stream has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-668">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-668">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="22f3d-669">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-669">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-670"><paramref name="access" /> が <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用に設定されているなど、指定した <paramref name="path" /> に対する <paramref name="access" /> 要求がオペレーティング システムで許可されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-670">The <paramref name="access" /> requested is not permitted by the operating system for the specified <paramref name="path" />, such as when <paramref name="access" /> is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</span></span>  
  
<span data-ttu-id="22f3d-671">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-671">-or-</span></span> 
 <span data-ttu-id="22f3d-672"><paramref name="options" /> に対して <see cref="F:System.IO.FileOptions.Encrypted" /> が指定されていますが、ファイルの暗号化は現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-672"><see cref="F:System.IO.FileOptions.Encrypted" /> is specified for <paramref name="options" />, but file encryption is not supported on the current platform.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="22f3d-673">指定した <paramref name="path" />、ファイル名、またはその両方がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-673">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="22f3d-674">現在のオペレーティング システムは Windows NT 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-674">The current operating system is not Windows NT or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-675">ファイルの読み取り、書き込み、および追加のために使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-675">for reading, writing, and appending to files.</span></span> <span data-ttu-id="22f3d-676">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-676">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-677">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-677">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-678">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-678">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-679">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-679">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileStream.BeginRead (buffer, offset, count, callback, state)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] array, int offset, int numBytes, AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] array, int32 offset, int32 numBytes, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (array As Byte(), offset As Integer, numBytes As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ array, int offset, int numBytes, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileStream.BeginRead (array, offset, numBytes, callback, state)" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] array, int offset, int numBytes, AsyncCallback userCallback, object stateObject);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] array, int32 offset, int32 numBytes, class System.AsyncCallback userCallback, object stateObject) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (array As Byte(), offset As Integer, numBytes As Integer, userCallback As AsyncCallback, stateObject As Object) As IAsyncResult" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ array, int offset, int numBytes, AsyncCallback ^ userCallback, System::Object ^ stateObject);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileStream.BeginRead (array, offset, numBytes, userCallback, stateObject)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="numBytes" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-2.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-2.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="22f3d-680">データを読み取るバッファー。</span><span class="sxs-lookup"><span data-stu-id="22f3d-680">The buffer to read data into.</span></span></param>
        <param name="buffer"><span data-ttu-id="22f3d-681">データを読み取るバッファー。</span><span class="sxs-lookup"><span data-stu-id="22f3d-681">The buffer to read data into.</span></span></param>
        <param name="offset"><span data-ttu-id="22f3d-682">読み取りの開始位置を示す <paramref name="array" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="22f3d-682">The byte offset in <paramref name="array" /> at which to begin reading.</span></span></param>
        <param name="numBytes"><span data-ttu-id="22f3d-683">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-683">The maximum number of bytes to read.</span></span></param>
        <param name="count"><span data-ttu-id="22f3d-684">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-684">The maximum number of bytes to read.</span></span></param>
        <param name="callback"><span data-ttu-id="22f3d-685">非同期の読み取り操作が完了したときに呼び出されるメソッド。</span><span class="sxs-lookup"><span data-stu-id="22f3d-685">The method to be called when the asynchronous read operation is completed.</span></span></param>
        <param name="userCallback"><span data-ttu-id="22f3d-686">非同期の読み取り操作が完了したときに呼び出されるメソッド。</span><span class="sxs-lookup"><span data-stu-id="22f3d-686">The method to be called when the asynchronous read operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="22f3d-687">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-687">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <param name="stateObject"><span data-ttu-id="22f3d-688">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-688">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="22f3d-689">非同期の読み込み動作を開始します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-689">Begins an asynchronous read operation.</span></span> <span data-ttu-id="22f3d-690">代わりに <see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> を使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-690">Consider using <see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.</span></span></summary>
        <returns><span data-ttu-id="22f3d-691">非同期の読み取りを参照するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-691">An object that references the asynchronous read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-692">配列長から <paramref name="offset" /> を差し引いた値が <paramref name="numBytes" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-692">The array length minus <paramref name="offset" /> is less than <paramref name="numBytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-693"><paramref name="array" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-693"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-694"><paramref name="offset" /> または <paramref name="numBytes" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-694"><paramref name="offset" /> or <paramref name="numBytes" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-695">非同期の読み取りがファイルの終わりを超えて試行されました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-695">An asynchronous read was attempted past the end of the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileStream.BeginWrite (buffer, offset, count, callback, state)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] array, int offset, int numBytes, AsyncCallback callback, object state);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] array, int32 offset, int32 numBytes, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (array As Byte(), offset As Integer, numBytes As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ array, int offset, int numBytes, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileStream.BeginWrite (array, offset, numBytes, callback, state)" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] array, int offset, int numBytes, AsyncCallback userCallback, object stateObject);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] array, int32 offset, int32 numBytes, class System.AsyncCallback userCallback, object stateObject) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (array As Byte(), offset As Integer, numBytes As Integer, userCallback As AsyncCallback, stateObject As Object) As IAsyncResult" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ array, int offset, int numBytes, AsyncCallback ^ userCallback, System::Object ^ stateObject);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileStream.BeginWrite (array, offset, numBytes, userCallback, stateObject)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="numBytes" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-2.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-2.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="22f3d-696">現在のストリームに書き込むデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="22f3d-696">The buffer containing data to write to the current stream.</span></span></param>
        <param name="buffer"><span data-ttu-id="22f3d-697">現在のストリームに書き込むデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="22f3d-697">The buffer containing data to write to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="22f3d-698">現在のストリームへのバイトのコピーを開始する位置を示す <paramref name="array" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-698">The zero-based byte offset in <paramref name="array" /> at which to begin copying bytes to the current stream.</span></span></param>
        <param name="numBytes"><span data-ttu-id="22f3d-699">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-699">The maximum number of bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="22f3d-700">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-700">The maximum number of bytes to write.</span></span></param>
        <param name="callback"><span data-ttu-id="22f3d-701">非同期の書き込み操作が完了したときに呼び出されるメソッド。</span><span class="sxs-lookup"><span data-stu-id="22f3d-701">The method to be called when the asynchronous write operation is completed.</span></span></param>
        <param name="userCallback"><span data-ttu-id="22f3d-702">非同期の書き込み操作が完了したときに呼び出されるメソッド。</span><span class="sxs-lookup"><span data-stu-id="22f3d-702">The method to be called when the asynchronous write operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="22f3d-703">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-703">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <param name="stateObject"><span data-ttu-id="22f3d-704">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-704">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="22f3d-705">非同期の書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-705">Begins an asynchronous write operation.</span></span> <span data-ttu-id="22f3d-706">代わりに <see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> を使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-706">Consider using <see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.</span></span></summary>
        <returns><span data-ttu-id="22f3d-707">非同期の書き込みを参照するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-707">An object that references the asynchronous write.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-708"><paramref name="array" /> の長さから <paramref name="offset" /> を引いた長さが <paramref name="numBytes" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-708"><paramref name="array" /> length minus <paramref name="offset" /> is less than <paramref name="numBytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-709"><paramref name="array" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-709"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-710"><paramref name="offset" /> または <paramref name="numBytes" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-710"><paramref name="offset" /> or <paramref name="numBytes" /> is negative.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-711">ストリームは書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-711">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-712">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-712">The stream is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-713">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-713">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.FileStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f3d-714">現在のストリームが読み込みをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-714">Gets a value that indicates whether the current stream supports reading.</span></span></summary>
        <value><span data-ttu-id="22f3d-715">ストリームが読み取りをサポートしている場合は <see langword="true" />。ストリームが閉じているか、書き込み専用アクセスで開かれた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-715"><see langword="true" /> if the stream supports reading; <see langword="false" /> if the stream is closed or was opened with write-only access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-716"><xref:System.IO.Stream> から派生したクラスが読み取りをサポートしていない場合、<xref:System.IO.FileStream.Read%2A>、<xref:System.IO.FileStream.ReadByte%2A>、および <xref:System.IO.FileStream.BeginRead%2A> の各メソッドの呼び出しでは、<xref:System.NotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-716">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.FileStream.Read%2A>, <xref:System.IO.FileStream.ReadByte%2A>, and <xref:System.IO.FileStream.BeginRead%2A> methods throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="22f3d-717">ストリームが閉じている場合、このプロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-717">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-718">次の例は、`CanRead` プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-718">The following example demonstrates a use of the `CanRead` property.</span></span> <span data-ttu-id="22f3d-719">このコードの出力は "Myfile.txt は書き込み可能ではありません" です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-719">The output of this code is "MyFile.txt is not writable."</span></span> <span data-ttu-id="22f3d-720">出力メッセージを取得するには、"Myfile.txt の書き込みと読み取りの両方を行うことができます。" では、`FileAccess` パラメーターを `FileStream` コンストラクターの `ReadWrite` に変更します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-720">To get the output message "MyFile.txt can be both written to and read from.", change the `FileAccess` parameter to `ReadWrite` in the `FileStream` constructor.</span></span>  
  
 [!code-cpp[Classic FileStream.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-721">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-721">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-722">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-722">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-723">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-723">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.FileStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f3d-724">現在のストリームがシークをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-724">Gets a value that indicates whether the current stream supports seeking.</span></span></summary>
        <value><span data-ttu-id="22f3d-725">ストリームがシークをサポートしている場合は <see langword="true" />。ストリームが閉じているか、<see langword="FileStream" /> がパイプまたはコンソール出力などのオペレーティング システム ハンドルから構築された場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-725"><see langword="true" /> if the stream supports seeking; <see langword="false" /> if the stream is closed or if the <see langword="FileStream" /> was constructed from an operating-system handle such as a pipe or output to the console.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-726"><xref:System.IO.Stream> から派生したクラスがシークをサポートしていない場合、<xref:System.IO.FileStream.Length%2A>、<xref:System.IO.FileStream.SetLength%2A>、<xref:System.IO.FileStream.Position%2A>、および <xref:System.IO.FileStream.Seek%2A> を呼び出すと、<xref:System.NotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-726">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.FileStream.Length%2A>, <xref:System.IO.FileStream.SetLength%2A>, <xref:System.IO.FileStream.Position%2A>, and <xref:System.IO.FileStream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="22f3d-727">ストリームが閉じている場合、このプロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-727">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-728">次の例では、`CanSeek` プロパティを使用して、ストリームでシークがサポートされているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-728">The following example uses the `CanSeek` property to check whether a stream supports seeking.</span></span>  
  
 [!code-cpp[fstream canseek#1](~/samples/snippets/cpp/VS_Snippets_CLR/FStream CanSeek/CPP/fstream canseek.cpp#1)]
 [!code-csharp[fstream canseek#1](~/samples/snippets/csharp/VS_Snippets_CLR/FStream CanSeek/CS/fstream canseek.cs#1)]
 [!code-vb[fstream canseek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FStream CanSeek/VB/fstream canseek.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-729">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-729">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-730">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-730">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-731">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-731">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.FileStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f3d-732">現在のストリームが書き込みをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-732">Gets a value that indicates whether the current stream supports writing.</span></span></summary>
        <value><span data-ttu-id="22f3d-733">ストリームが書き込みをサポートしている場合は <see langword="true" />。ストリームが閉じているか、読み取り専用アクセスで開かれた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-733"><see langword="true" /> if the stream supports writing; <see langword="false" /> if the stream is closed or was opened with read-only access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-734"><xref:System.IO.Stream> から派生したクラスが書き込みをサポートしていない場合、<xref:System.IO.FileStream.SetLength%2A>、<xref:System.IO.FileStream.Write%2A>、<xref:System.IO.FileStream.BeginWrite%2A>、または <xref:System.IO.FileStream.WriteByte%2A> を呼び出すと、<xref:System.NotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-734">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.FileStream.SetLength%2A>, <xref:System.IO.FileStream.Write%2A>, <xref:System.IO.FileStream.BeginWrite%2A>, or <xref:System.IO.FileStream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="22f3d-735">ストリームが閉じている場合、このプロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-735">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-736">次の例では、`CanWrite` プロパティを使用して、ストリームで書き込みがサポートされているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-736">The following example uses the `CanWrite` property to check whether a stream supports writing.</span></span>  
  
 [!code-cpp[fstream canwrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/FStream CanWrite/CPP/fstream canwrite.cpp#1)]
 [!code-csharp[fstream canwrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/FStream CanWrite/CS/fstream canwrite.cs#1)]
 [!code-vb[fstream canwrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FStream CanWrite/VB/fstream canwrite.vb#1)]  
  
 <span data-ttu-id="22f3d-737">`CanWrite` プロパティの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-737">The following is an example using the `CanWrite` property.</span></span> <span data-ttu-id="22f3d-738">このコードの出力は "Myfile.txt は書き込み可能です。" です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-738">The output of this code is "MyFile.txt is writable."</span></span> <span data-ttu-id="22f3d-739">出力メッセージを取得するには、"Myfile.txt の書き込みと読み取りの両方を行うことができます。" では、`FileAccess` パラメーターを `FileStream` コンストラクターの `ReadWrite` に変更します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-739">To get the output message "MyFile.txt can be both written to and read from.", change the `FileAccess` parameter to `ReadWrite` in the `FileStream` constructor.</span></span>  
  
 [!code-cpp[Classic FileStream.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-740">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-740">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-741">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-741">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-742">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-742">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="fileStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22f3d-743">現在のストリームを閉じ、現在のストリームに関連付けられているすべてのリソース (ソケット、ファイル ハンドルなど) を解放します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-743">Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="22f3d-744">このメソッドの詳細については、「<xref:System.IO.Stream.Close?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-744">See <xref:System.IO.Stream.Close?displayProperty=nameWithType> for more information about this method.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CopyToAsync : System.IO.Stream * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="fileStream.CopyToAsync (destination, bufferSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="22f3d-745">現在のファイル ストリームの内容のコピー先となるストリーム。</span><span class="sxs-lookup"><span data-stu-id="22f3d-745">The stream to which the contents of the current file stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="22f3d-746">バッファーのサイズ (バイト数)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-746">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="22f3d-747">これは、0 より大きい値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-747">This value must be greater than zero.</span></span> <span data-ttu-id="22f3d-748">既定のサイズは 81920 です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-748">The default size is 81920.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="22f3d-749">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="22f3d-749">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="22f3d-750">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-750">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="22f3d-751">指定されたバッファー サイズとキャンセル トークンを使用して、バイトの現在のファイル ストリームからの読み取りと、別のストリームへの書き込みを非同期に行います。</span><span class="sxs-lookup"><span data-stu-id="22f3d-751">Asynchronously reads the bytes from the current file stream and writes them to another stream, using a specified buffer size and cancellation token.</span></span></summary>
        <returns><span data-ttu-id="22f3d-752">非同期のコピー操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="22f3d-752">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="22f3d-753">`CopyToAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-753">The `CopyToAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="22f3d-754">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-754">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="22f3d-755">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-755">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="22f3d-756">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-756">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

<span data-ttu-id="22f3d-757">コピーは、現在のファイルストリームの現在位置から開始します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-757">Copying begins at the current position in the current file stream.</span></span>

<span data-ttu-id="22f3d-758">2つのストリーム間でコピーする例については、「<xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> のオーバーロード」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-758">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileStream.Dispose disposing" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="fileStream.Dispose disposing" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="22f3d-759">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-759"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="22f3d-760"><see cref="T:System.IO.FileStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-760">Releases the unmanaged resources used by the <see cref="T:System.IO.FileStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-761">このメソッドは、パブリック <xref:System.ComponentModel.Component.Dispose%2A> メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-761">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="22f3d-762"><xref:System.ComponentModel.Component.Dispose%2A> は、`disposing` パラメーターを `true`に設定して、protected <xref:System.IO.FileStream.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-762"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.FileStream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="22f3d-763"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して <xref:System.IO.FileStream.Dispose%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-763"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.FileStream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="22f3d-764">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.FileStream> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-764">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.FileStream> references.</span></span> <span data-ttu-id="22f3d-765">このメソッドは、参照される各オブジェクトの <xref:System.ComponentModel.Component.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-765">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="22f3d-766">
            <see cref="M:System.ComponentModel.Component.Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-766">
            <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="22f3d-767">をオーバーライドする場合は <see cref="M:System.IO.FileStream.Dispose(System.Boolean)" /> 以前に <see cref="M:System.ComponentModel.Component.Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-767">When overriding <see cref="M:System.IO.FileStream.Dispose(System.Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span></span> <span data-ttu-id="22f3d-768"><see cref="M:System.IO.FileStream.Dispose(System.Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-768">For more information about how to implement <see cref="M:System.IO.FileStream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="22f3d-769"><see cref="M:System.ComponentModel.Component.Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-769">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-770">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-770">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-771">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-771">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-772">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-772">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="fileStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22f3d-773"><see cref="T:System.IO.FileStream" /> によって使用されているアンマネージ リソースを非同期に解放します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-773">Asynchronously releases the unmanaged resources used by the <see cref="T:System.IO.FileStream" />.</span></span></summary>
        <returns><span data-ttu-id="22f3d-774">非同期の破棄操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="22f3d-774">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="22f3d-775">`DisposeAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する dispose 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-775">The `DisposeAsync` method lets you perform a resource-intensive dispose operation without blocking the main thread.</span></span> <span data-ttu-id="22f3d-776">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-776">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="22f3d-777">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-777">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="22f3d-778">このメソッドは、バッキングストアに変更を書き込んでストリームを破棄し、リソースを解放するためにストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-778">This method disposes the stream by writing any changes to the backing store and closing the stream to release resources.</span></span>

<span data-ttu-id="22f3d-779">`DisposeAsync` を呼び出すと、<xref:System.IO.FileStream> によって使用されるリソースを他の目的で再割り当てできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-779">Calling `DisposeAsync` allows the resources used by the <xref:System.IO.FileStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="22f3d-780">詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-780">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="fileStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="22f3d-781">待機する保留状態の非同期要求への参照。</span><span class="sxs-lookup"><span data-stu-id="22f3d-781">The reference to the pending asynchronous request to wait for.</span></span></param>
        <summary><span data-ttu-id="22f3d-782">保留中の非同期の読み取り操作が完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-782">Waits for the pending asynchronous read operation to complete.</span></span> <span data-ttu-id="22f3d-783">(代わりに、<see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="22f3d-783">(Consider using <see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="22f3d-784">ストリームから読み込んだバイト数 (0 ～要求したバイト数の間の数値)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-784">The number of bytes read from the stream, between 0 and the number of bytes you requested.</span></span> <span data-ttu-id="22f3d-785">ストリームの末尾では 0 が返されるだけです。それ以外の場合は、少なくとも 1 バイトが読み込み可能になるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-785">Streams only return 0 at the end of the stream, otherwise, they should block until at least 1 byte is available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-786">.NET Framework 4 以前のバージョンでは、<xref:System.IO.FileStream.BeginRead%2A> や <xref:System.IO.FileStream.EndRead%2A> などのメソッドを使用して、非同期ファイル操作を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-786">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.FileStream.BeginRead%2A> and <xref:System.IO.FileStream.EndRead%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="22f3d-787">これらのメソッドは、レガシコードをサポートするために [!INCLUDE[net_v45](~/includes/net-v45-md.md)] で引き続き使用できます。ただし、<xref:System.IO.FileStream.ReadAsync%2A>、<xref:System.IO.FileStream.WriteAsync%2A>、<xref:System.IO.Stream.CopyToAsync%2A>、<xref:System.IO.FileStream.FlushAsync%2A>などの新しい非同期メソッドを使用すると、非同期のファイル操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-787">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.FileStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="22f3d-788"><xref:System.IO.FileStream.BeginRead%2A>を呼び出すたびに <xref:System.IO.FileStream.EndRead%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-788"><xref:System.IO.FileStream.EndRead%2A> must be called exactly for every call to <xref:System.IO.FileStream.BeginRead%2A>.</span></span> <span data-ttu-id="22f3d-789">読み取りプロセスを終了してから別の読み取りを開始すると、デッドロックなどの望ましくない動作が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-789">Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</span></span>  
  
 <span data-ttu-id="22f3d-790">このメソッドは、<xref:System.IO.Stream.EndRead%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-790">This method overrides <xref:System.IO.Stream.EndRead%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-791"><xref:System.IO.FileStream.EndRead%2A> は <xref:System.IO.FileStream.BeginRead%2A>のすべての <xref:System.IAsyncResult> で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-791"><xref:System.IO.FileStream.EndRead%2A> can be called on every <xref:System.IAsyncResult> from <xref:System.IO.FileStream.BeginRead%2A>.</span></span> <span data-ttu-id="22f3d-792"><xref:System.IO.FileStream.EndRead%2A> を呼び出すと、ストリームから読み取られたバイト数がわかります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-792">Calling <xref:System.IO.FileStream.EndRead%2A> tells you how many bytes were read from the stream.</span></span> <span data-ttu-id="22f3d-793">i/o 操作が完了するまで、<xref:System.IO.FileStream.EndRead%2A> はブロックされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-793"><xref:System.IO.FileStream.EndRead%2A> will block until the I/O operation has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-794">このコード例は、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-794">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#4)]
 [!code-csharp[System.IO.FileStream2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#4)]
 [!code-vb[System.IO.FileStream2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-795"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-795"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-796">この <see cref="T:System.IAsyncResult" /> オブジェクトは、このクラスで <see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出すことによって作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="22f3d-796">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22f3d-797"><see cref="M:System.IO.FileStream.EndRead(System.IAsyncResult)" /> は複数回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-797"><see cref="M:System.IO.FileStream.EndRead(System.IAsyncResult)" /> is called multiple times.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-798">ストリームが閉じているか、内部エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-798">The stream is closed or an internal error has occurred.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-799">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-799">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-800">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-800">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-801">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-801">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md"><span data-ttu-id="22f3d-802">非同期ファイル I/O</span><span class="sxs-lookup"><span data-stu-id="22f3d-802">Asynchronous File I/O</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="fileStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="22f3d-803">保留中の非同期 I/O 要求。</span><span class="sxs-lookup"><span data-stu-id="22f3d-803">The pending asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="22f3d-804">非同期の書き込み操作を終了し、I/O 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-804">Ends an asynchronous write operation and blocks until the I/O operation is complete.</span></span> <span data-ttu-id="22f3d-805">(代わりに、<see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="22f3d-805">(Consider using <see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> instead.)</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-806">.NET Framework 4 以前のバージョンでは、<xref:System.IO.FileStream.BeginWrite%2A> や <xref:System.IO.FileStream.EndWrite%2A> などのメソッドを使用して、非同期ファイル操作を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-806">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.FileStream.BeginWrite%2A> and <xref:System.IO.FileStream.EndWrite%2A> to implement asynchronous file operations.</span></span> <span data-ttu-id="22f3d-807">これらのメソッドは、レガシコードをサポートするために [!INCLUDE[net_v45](~/includes/net-v45-md.md)] で引き続き使用できます。ただし、<xref:System.IO.FileStream.ReadAsync%2A>、<xref:System.IO.FileStream.WriteAsync%2A>、<xref:System.IO.Stream.CopyToAsync%2A>、<xref:System.IO.FileStream.FlushAsync%2A>などの新しい非同期メソッドを使用すると、非同期のファイル操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-807">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.FileStream.FlushAsync%2A>, help you implement asynchronous file operations more easily.</span></span>  
  
 <span data-ttu-id="22f3d-808">このメソッドは、<xref:System.IO.Stream.EndWrite%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-808">This method overrides <xref:System.IO.Stream.EndWrite%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-809"><xref:System.IO.FileStream.EndWrite%2A> は、<xref:System.IO.FileStream.BeginWrite%2A>からのすべての <xref:System.IAsyncResult> で1回だけ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-809"><xref:System.IO.FileStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.FileStream.BeginWrite%2A>.</span></span> <span data-ttu-id="22f3d-810">i/o 操作が完了するまで、<xref:System.IO.FileStream.EndWrite%2A> はブロックされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-810"><xref:System.IO.FileStream.EndWrite%2A> will block until the I/O operation has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-811">このコード例は、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-811">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#3)]
 [!code-csharp[System.IO.FileStream2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#3)]
 [!code-vb[System.IO.FileStream2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-812"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-812"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-813">この <see cref="T:System.IAsyncResult" /> オブジェクトは、このクラスで <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出すことによって作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="22f3d-813">This <see cref="T:System.IAsyncResult" /> object was not created by calling <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> on this class.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22f3d-814"><see cref="M:System.IO.FileStream.EndWrite(System.IAsyncResult)" /> は複数回呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-814"><see cref="M:System.IO.FileStream.EndWrite(System.IAsyncResult)" /> is called multiple times.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-815">ストリームが閉じているか、内部エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-815">The stream is closed or an internal error has occurred.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-816">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-816">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-817">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-817">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-818">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-818">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md"><span data-ttu-id="22f3d-819">非同期ファイル I/O</span><span class="sxs-lookup"><span data-stu-id="22f3d-819">Asynchronous File I/O</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FileStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FileStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="fileStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22f3d-820">ガベージ コレクターが <see langword="FileStream" /> を再利用するときに、リソースの解放およびその他のクリーンアップ操作を確実に実行するようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-820">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see langword="FileStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-821">現在のオブジェクトを完了する準備が整うと、ガベージコレクターは `Finalize` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-821">The garbage collector calls `Finalize` when the current object is ready to be finalized.</span></span> <span data-ttu-id="22f3d-822">`Finalize` `FileStream`を閉じます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-822">`Finalize` closes the `FileStream`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-823">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-823">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-824">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-824">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-825">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-825">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22f3d-826">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-826">Clears buffers for this stream and causes any buffered data to be written to the file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="fileStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22f3d-827">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-827">Clears buffers for this stream and causes any buffered data to be written to the file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-828">このメソッドは、<xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-828">This method overrides <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="22f3d-829"><xref:System.IO.FileStream.Flush%2A?displayProperty=nameWithType> メソッドを呼び出すと、オペレーティングシステムの i/o バッファーもフラッシュされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-829">When you call the <xref:System.IO.FileStream.Flush%2A?displayProperty=nameWithType> method, the operating system I/O buffer is also flushed.</span></span>  
  
 <span data-ttu-id="22f3d-830">オブジェクトの <xref:System.IO.FileStream.Flush%2A> または dispose を明示的に呼び出す場合を除き、ストリームのエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-830">A stream's encoder is not flushed unless you explicitly call <xref:System.IO.FileStream.Flush%2A> or dispose of the object.</span></span> <span data-ttu-id="22f3d-831"><xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-831">Setting <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="22f3d-832">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-832">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="22f3d-833">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-833">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="22f3d-834">バッファーは読み取りまたは書き込みのどちらにも使用できるため、<xref:System.IO.FileStream.Flush> は次の2つの関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-834">Because a buffer can be used for either reading or writing, <xref:System.IO.FileStream.Flush> performs the following two functions:</span></span>  
  
-   <span data-ttu-id="22f3d-835">以前にバッファーに書き込まれたデータはすべてファイルにコピーされ、エンコーダーの状態を除いてバッファーはクリアされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-835">Any data previously written to the buffer is copied to the file and the buffer is cleared except for its encoder state.</span></span>  
  
-   <span data-ttu-id="22f3d-836"><xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=nameWithType> が `true` で、データが以前にファイルから読み取り用にバッファーにコピーされていた場合、ファイル内の現在の位置は、バッファー内の未読バイト数だけ減少します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-836">If <xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=nameWithType> is `true` and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer.</span></span> <span data-ttu-id="22f3d-837">バッファーがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-837">The buffer is then cleared.</span></span>  
  
 <span data-ttu-id="22f3d-838">中間ファイルバッファー内のすべてのバッファーデータがディスクに書き込まれるようにするには、<xref:System.IO.FileStream.Flush%28System.Boolean%29> メソッドのオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-838">Use the <xref:System.IO.FileStream.Flush%28System.Boolean%29> method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-839">このコード例は、<xref:System.IO.FileStream.Lock%2A> メソッド用に提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-839">This code example is part of a larger example provided for the <xref:System.IO.FileStream.Lock%2A> method.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#4)]
 [!code-csharp[System.IO.FileStream3#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#4)]
 [!code-vb[System.IO.FileStream3#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-840">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-840">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-841">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-841">The stream is closed.</span></span></exception>
        <altmember cref="M:System.IO.FileStream.Flush(System.Boolean)" />
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-842">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-842">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush (bool flushToDisk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush(bool flushToDisk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Flush(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush (flushToDisk As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush(bool flushToDisk);" />
      <MemberSignature Language="F#" Value="override this.Flush : bool -&gt; unit" Usage="fileStream.Flush flushToDisk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flushToDisk" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="flushToDisk"><span data-ttu-id="22f3d-843">すべての中間ファイル バッファーをフラッシュする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-843"><see langword="true" /> to flush all intermediate file buffers; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="22f3d-844">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにし、すべての中間ファイル バッファーもクリアします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-844">Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-845">このオーバーロードは、中間ファイルバッファー内のすべてのバッファーデータがディスクに書き込まれるようにする場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-845">Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</span></span>  
  
 <span data-ttu-id="22f3d-846"><xref:System.IO.FileStream.Flush%2A> メソッドを呼び出すと、オペレーティングシステムの i/o バッファーもフラッシュされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-846">When you call the <xref:System.IO.FileStream.Flush%2A> method, the operating system I/O buffer is also flushed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileStream.Flush" />
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="fileStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="22f3d-847">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="22f3d-847">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="22f3d-848">ストリームに対応するすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-848">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="22f3d-849">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="22f3d-849">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-850">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status%2A> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-850">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span> <span data-ttu-id="22f3d-851">ファイルへのハンドルが破棄された場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Exception%2A> プロパティに <xref:System.ObjectDisposedException> 例外が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-851">If the handle to the file is disposed, the returned task contains the <xref:System.ObjectDisposedException> exception in the <xref:System.Threading.Tasks.Task.Exception%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-852">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-852">The stream has been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="22f3d-853">キャンセル</span><span class="sxs-lookup"><span data-stu-id="22f3d-853">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.FileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::FileSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.FileSecurity" Usage="fileStream.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22f3d-854">現在の <see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクトが示すファイルのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.FileStream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-854">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileStream" /> object.</span></span></summary>
        <returns><span data-ttu-id="22f3d-855">現在の <see cref="T:System.IO.FileStream" /> オブジェクトが示すファイルのアクセス制御設定をカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-855">An object that encapsulates the access control settings for the file described by the current <see cref="T:System.IO.FileStream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-856"><xref:System.IO.FileStream> クラスと <xref:System.IO.FileStream.GetAccessControl%2A> を使用して、既存のファイルのアクセス制御リスト (ACL) エントリを取得できますが、使用しやすい <xref:System.IO.File.GetAccessControl%2A?displayProperty=nameWithType> メソッドの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-856">While the <xref:System.IO.FileStream> class and <xref:System.IO.FileStream.GetAccessControl%2A> can be used to retrieve the access control list (ACL) entries of an existing file, consider using <xref:System.IO.File.GetAccessControl%2A?displayProperty=nameWithType> method, as it is easier to use.</span></span>  
  
 <span data-ttu-id="22f3d-857"><xref:System.IO.FileStream.GetAccessControl%2A> メソッドを使用して、ファイルの ACL エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-857">Use the <xref:System.IO.FileStream.GetAccessControl%2A> method to retrieve the ACL entries for a file.</span></span>  
  
 <span data-ttu-id="22f3d-858">ACL は、特定のファイルに対する特定のアクションに対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-858">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="22f3d-859">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-859">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-860">ファイルは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-860">The file is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-861">ファイルを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-861">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="22f3d-862">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="22f3d-862">The file could not be found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-863">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-863">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="22f3d-864">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-864">-or-</span></span>  
  
 <span data-ttu-id="22f3d-865">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-865">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.Handle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.IO.FileStream.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use SafeFileHandle instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This property has been deprecated.  Please use FileStream's SafeFileHandle property instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This property has been deprecated.  Please use FileStream's SafeFileHandle property instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f3d-866">現在の <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-866">Gets the operating system file handle for the file that the current <see langword="FileStream" /> object encapsulates.</span></span></summary>
        <value><span data-ttu-id="22f3d-867">この <see langword="FileStream" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドル。または <see langword="FileStream" /> が閉じられている場合は -1。</span><span class="sxs-lookup"><span data-stu-id="22f3d-867">The operating system file handle for the file encapsulated by this <see langword="FileStream" /> object, or -1 if the <see langword="FileStream" /> has been closed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-868">このプロパティは、オペレーティングシステムが提供するシステムコール (Windows の `ReadFile` など) で使用するオペレーティングシステムハンドルです。</span><span class="sxs-lookup"><span data-stu-id="22f3d-868">This property is an operating system handle for use with operating-system-provided system calls (such as `ReadFile` on Windows).</span></span> <span data-ttu-id="22f3d-869">`fread`などのファイル記述子を予期する C ライブラリ関数では機能しません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-869">It will not work with C library functions that expect a file descriptor, such as `fread`.</span></span>  
  
 <span data-ttu-id="22f3d-870">オペレーティングシステムハンドルは、呼び出された `FileStream` コンストラクターに応じて、同期的または非同期的に開かれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-870">The operating system handle might have been opened synchronously or asynchronously, depending on which `FileStream` constructor was called.</span></span> <span data-ttu-id="22f3d-871">このハンドルが非同期に開かれたかどうかを検出するには、<xref:System.IO.FileStream.IsAsync%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-871">Use the <xref:System.IO.FileStream.IsAsync%2A> property to discover whether this handle was opened asynchronously.</span></span> <span data-ttu-id="22f3d-872">Win32 では、このハンドルはオーバーラップ IO 用に開かれており、`ReadFile` と `WriteFile`には異なるパラメーターが必要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-872">In Win32, this means the handle was opened for overlapped IO, and it requires different parameters to `ReadFile` and `WriteFile`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-873">`FileStream` が作成され、ハンドルが渡されたときに、一部の操作でハンドルのファイルポインターが移動され、`FileStream` が再度使用されると、データの破損が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-873">Data corruption might occur if a `FileStream` is created, its handle is passed, some operation moves the handle's file pointer, and then the `FileStream` is used again.</span></span> <span data-ttu-id="22f3d-874">複数のスレッドが同じファイルに同時に書き込むことはできません。バッファリングコード `FileStream` は、そのハンドルを排他的に制御することを前提としています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-874">Multiple threads cannot safely write to the same file simultaneously, and `FileStream` buffering code assumes that it exclusively controls the handle.</span></span> <span data-ttu-id="22f3d-875">他のプロセスがファイルポインターを移動したことを `FileStream` が検出した場合、`FileStream` は <xref:System.IO.IOException> をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-875">`FileStream` might throw an <xref:System.IO.IOException> if `FileStream` detects that some other process has moved the file pointer.</span></span> <span data-ttu-id="22f3d-876">これを回避するには、バッファーに格納されている可能性が `FileStream` ファイルの一部にデータを書き込まず、`FileStream`でメソッドが最後に呼び出されたときの場所にファイルポインターを復元します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-876">To avoid this, do not write any data into a portion of the file that `FileStream` might have buffered, and restore the file pointer to the location it had when methods were last called on `FileStream`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="22f3d-877">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-877">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="22f3d-878">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="22f3d-878">for the ability to access unmanaged code.</span></span> <span data-ttu-id="22f3d-879">関連付けられた列挙: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-879">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="22f3d-880">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-880">requires full trust for the immediate caller.</span></span> <span data-ttu-id="22f3d-881">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-881">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-882">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-882">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-883">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-883">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-884">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-884">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public virtual bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAsync { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool" Usage="System.IO.FileStream.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f3d-885"><see langword="FileStream" /> が非同期的に開かれたか、同期的に開かれたかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-885">Gets a value that indicates whether the <see langword="FileStream" /> was opened asynchronously or synchronously.</span></span></summary>
        <value><span data-ttu-id="22f3d-886"><see langword="FileStream" /> が非同期的に開かれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f3d-886"><see langword="true" /> if the <see langword="FileStream" /> was opened asynchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-887">`IsAsync` プロパティは、`FileStream` ハンドルが非同期的に開かれたかどうかを検出し、コードで <xref:System.IO.FileStream.Handle%2A> プロパティを正しく使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-887">The `IsAsync` property detects whether the `FileStream` handle was opened asynchronously, enabling your code to use the <xref:System.IO.FileStream.Handle%2A> property correctly.</span></span> <span data-ttu-id="22f3d-888">Win32 では、`IsAsync` が true の場合、ハンドルは重複 i/o 用に開かれているため、`ReadFile` と `WriteFile`には異なるパラメーターが必要になります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-888">In Win32, `IsAsync` being true means the handle was opened for overlapped I/O, and thus requires different parameters to `ReadFile` and `WriteFile`.</span></span>  
  
 <span data-ttu-id="22f3d-889">この値は、`isAsync`、`useAsync`、または `options` パラメーターを持つコンストラクターを使用して <xref:System.IO.FileStream> クラスのインスタンスを作成するときに指定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-889">You specify this value when you create an instance of the <xref:System.IO.FileStream> class using a constructor that has an `isAsync`, `useAsync`, or `options` parameter.</span></span> <span data-ttu-id="22f3d-890">プロパティが `true`場合、ストリームは重複 i/o を利用してファイル操作を非同期に実行します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-890">When the property is `true`, the stream utilizes overlapped I/O to perform file operations asynchronously.</span></span> <span data-ttu-id="22f3d-891">ただし、<xref:System.IO.FileStream.ReadAsync%2A>、<xref:System.IO.FileStream.WriteAsync%2A>、または <xref:System.IO.Stream.CopyToAsync%2A> メソッドを呼び出すために、<xref:System.IO.FileStream.IsAsync%2A> プロパティを `true` する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-891">However, the <xref:System.IO.FileStream.IsAsync%2A> property does not have to be `true` to call the <xref:System.IO.FileStream.ReadAsync%2A>, <xref:System.IO.FileStream.WriteAsync%2A>, or <xref:System.IO.Stream.CopyToAsync%2A> method.</span></span> <span data-ttu-id="22f3d-892"><xref:System.IO.FileStream.IsAsync%2A> プロパティが `false`、非同期の読み取りおよび書き込み操作を呼び出すと、UI スレッドはブロックされませんが、実際の i/o 操作は同期的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-892">When the <xref:System.IO.FileStream.IsAsync%2A> property is `false` and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-893">このコード例は、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-893">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#2)]
 [!code-csharp[System.IO.FileStream2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#2)]
 [!code-vb[System.IO.FileStream2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-894">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-894">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-895">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-895">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-896">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-896">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.FileStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f3d-897">ストリーム長 (バイト単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-897">Gets the length in bytes of the stream.</span></span></summary>
        <value><span data-ttu-id="22f3d-898">ストリーム長 (バイト単位) を表す long 値。</span><span class="sxs-lookup"><span data-stu-id="22f3d-898">A long value representing the length of the stream in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-899">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-899">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-900">次の例では、`Length` プロパティと `Position` プロパティを使用して、ファイルの終端の条件を確認します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-900">The following example uses the `Length` and `Position` properties to check for an end-of-file condition.</span></span>  
  
 [!code-cpp[Classic FileStream.Length Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.Length Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.Length Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.Length Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.Length Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.Length Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-901">このストリーム用の <see cref="P:System.IO.FileStream.CanSeek" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-901"><see cref="P:System.IO.FileStream.CanSeek" /> for this stream is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-902">ファイルが閉じられているなど、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-902">An I/O error, such as the file being closed, occurred.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-903">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-903">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-904">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-904">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-905">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-905">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public virtual void Lock (long position, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lock(int64 position, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Lock(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lock (position As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lock(long position, long length);" />
      <MemberSignature Language="F#" Value="abstract member Lock : int64 * int64 -&gt; unit&#xA;override this.Lock : int64 * int64 -&gt; unit" Usage="fileStream.Lock (position, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="length" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="22f3d-906">ロックする範囲の先頭。</span><span class="sxs-lookup"><span data-stu-id="22f3d-906">The beginning of the range to lock.</span></span> <span data-ttu-id="22f3d-907">このパラメーターの値は、0 (ゼロ) 以上にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-907">The value of this parameter must be equal to or greater than zero (0).</span></span></param>
        <param name="length"><span data-ttu-id="22f3d-908">ロックする範囲。</span><span class="sxs-lookup"><span data-stu-id="22f3d-908">The range to be locked.</span></span></param>
        <summary><span data-ttu-id="22f3d-909"><see cref="T:System.IO.FileStream" /> に対する他のプロセスからの読み取りまたは書き込みを禁止します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-909">Prevents other processes from reading from or writing to the <see cref="T:System.IO.FileStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-910">ファイルストリームの範囲をロックすると、ロックプロセスのスレッドは、そのファイルストリームの範囲に排他的にアクセスできるようになります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-910">Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.</span></span>  
  
 <span data-ttu-id="22f3d-911">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-911">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-912">次のコード例は、ファイルの一部をロックする方法を示しています。ファイルの読み取り/書き込みアクセス権がある場合でも、別のプロセスがファイルのその部分にアクセスできないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-912">The following code example demonstrates how to lock part of a file so another process cannot access that part of the file even though it has read/write access to the file.</span></span> <span data-ttu-id="22f3d-913">異なるコマンドウィンドウでプログラムを同時に実行し、さまざまなコンソールの入力オプションを使用して調査します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-913">Run the program simultaneously in different command windows and investigate using the different console input options.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#1)]
 [!code-csharp[System.IO.FileStream3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#1)]
 [!code-vb[System.IO.FileStream3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-914"><paramref name="position" /> または <paramref name="length" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-914"><paramref name="position" /> or <paramref name="length" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-915">ファイルは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-915">The file is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-916">別のプロセスがファイルの一部をロックしているため、プロセスはこのファイルにアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-916">The process cannot access the file because another process has locked a portion of the file.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-917">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-917">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-918">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-918">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-919">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-919">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.FileStream.Name" />
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f3d-920"><see langword="FileStream" /> で開かれているファイルの絶対パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-920">Gets the absolute path of the file opened in the <see langword="FileStream" />.</span></span></summary>
        <value><span data-ttu-id="22f3d-921">ファイルの絶対パスを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="22f3d-921">A string that is the absolute path of the file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="22f3d-922">絶対パスが不明の場合、このプロパティは "[Unknown]" に類似した文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-922">If the absolute path is not known, this property returns a string similar to "[Unknown]".</span></span>

 <span data-ttu-id="22f3d-923">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-923">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-924">このコード例は、<xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> コンストラクター用に用意されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-924">This code example is part of a larger example provided for the <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.FileStream2#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream2/CPP/source.cpp#4)]
 [!code-csharp[System.IO.FileStream2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream2/CS/source.cs#4)]
 [!code-vb[System.IO.FileStream2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="22f3d-925">パスへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-925">for access to the path.</span></span> <span data-ttu-id="22f3d-926">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="22f3d-926">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-927">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-927">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-928">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-928">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-929">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-929">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.FileStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f3d-930">ストリームの現在位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-930">Gets or sets the current position of this stream.</span></span></summary>
        <value><span data-ttu-id="22f3d-931">ストリームの現在位置。</span><span class="sxs-lookup"><span data-stu-id="22f3d-931">The current position of this stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-932">ストリームの長さを超えた場所へのシークはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-932">Seeking to any location beyond the length of the stream is supported.</span></span>  <span data-ttu-id="22f3d-933">ファイルの長さを超えてシークすると、ファイルサイズが大きくなります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-933">When you seek beyond the length of the file, the file size grows.</span></span>  <span data-ttu-id="22f3d-934">Microsoft Windows NT 以降では、ファイルの末尾に追加されたデータはゼロに設定されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-934">In Microsoft Windows NT and newer, any data added to the end of the file is set to zero.</span></span>  <span data-ttu-id="22f3d-935">Microsoft Windows 98 またはそれ以前のバージョンでは、ファイルの末尾に追加されたデータは0に設定されていません。これは、以前に削除されたデータがストリームに表示されることを意味します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-935">In Microsoft Windows 98 or earlier, any data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</span></span> <span data-ttu-id="22f3d-936">ストリームの位置を、Windows 98 以前のストリームの末尾を越える大きな値に設定すると、例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-936">Setting the position of the stream to a large value beyond the end of the stream in Windows 98 or earlier may result in an exception being raised.</span></span>  
  
 <span data-ttu-id="22f3d-937">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-937">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-938">次の例では、`Length` プロパティと `Position` プロパティを使用して、ファイルの終端の条件を確認します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-938">The following example uses the `Length` and `Position` properties to check for an end-of-file condition.</span></span>  
  
 [!code-cpp[Classic FileStream.Length Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.Length Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.Length Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.Length Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.Length Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.Length Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-939">このストリームはシークをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-939">The stream does not support seeking.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-940">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-940">An I/O error occurred.</span></span>  
  
<span data-ttu-id="22f3d-941">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-941">-or-</span></span>
  
 <span data-ttu-id="22f3d-942">位置が、Windows 98 またはそれ以前のストリームの末尾を越える非常に大きな値に設定されました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-942">The position was set to a very large value beyond the end of the stream in Windows 98 or earlier.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-943">位置を負の値に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-943">Attempted to set the position to a negative value.</span></span></exception>
        <exception cref="T:System.IO.EndOfStreamException"><span data-ttu-id="22f3d-944">サポートされていない、ストリームの末尾を越えるシークをしようとしました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-944">Attempted seeking past the end of a stream that does not support this.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-945">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-945">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-946">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-946">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-947">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-947">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="fileStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="22f3d-948">メモリの領域。</span><span class="sxs-lookup"><span data-stu-id="22f3d-948">A region of memory.</span></span> <span data-ttu-id="22f3d-949">このメソッドが戻ると、この領域のコンテンツは現在のファイル ストリームから読み取られたバイトに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-949">When this method returns, the contents of this region are replaced by the bytes read from the current file stream.</span></span></param>
        <summary><span data-ttu-id="22f3d-950">現在のファイル ストリームからバイト シーケンスを読み取り、読み取られたバイト数だけファイル ストリーム内の位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-950">Reads a sequence of bytes from the current file stream and advances the position within the file stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="22f3d-951">バッファーに読み取られた合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-951">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="22f3d-952">要求しただけのバイト数を読み取ることができなかった場合、この値はバッファーに割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-952">This can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="22f3d-953">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.FileStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-953">Use the <xref:System.IO.FileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="22f3d-954">現在のストリームから非同期的に読み取るには、<xref:System.IO.FileStream.ReadAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-954">Use the <xref:System.IO.FileStream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>

<span data-ttu-id="22f3d-955">このメソッドは、現在のファイルストリームから最大 `buffer.Length` バイトを読み取り、`buffer`に格納します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-955">This method reads a maximum of `buffer.Length` bytes from the current file stream and stores them in `buffer`.</span></span> <span data-ttu-id="22f3d-956">ファイルストリーム内の現在位置は、読み取ったバイト数だけ進んでいます。ただし、例外が発生した場合、ファイルストリーム内の現在位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-956">The current position within the file stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the file stream remains unchanged.</span></span> <span data-ttu-id="22f3d-957">データが使用できない場合、メソッドは、少なくとも1バイトのデータを読み取ることができるようになるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-957">The method will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="22f3d-958">`Read` は、ファイルストリームにデータがこれ以上ない場合にのみ0を返します。これ以上のデータは必要ありません (閉じているソケットやファイルの終端など)。</span><span class="sxs-lookup"><span data-stu-id="22f3d-958">`Read` returns 0 only when there is no more data in the file stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="22f3d-959">メソッドは、ファイルストリームの末尾に到達していない場合でも、要求されたバイト数よりも小さい値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-959">The method is free to return fewer bytes than requested even if the end of the file stream has not been reached.</span></span>

<span data-ttu-id="22f3d-960">プリミティブデータ型を読み取るには、<xref:System.IO.BinaryReader> を使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-960">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] array, int32 offset, int32 count) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (array As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="fileStream.Read (array, offset, count)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] array, int32 offset, int32 count) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="22f3d-961">このメソッドが返されるときに、指定したバイト配列の <paramref name="offset" /> から (<paramref name="offset" /> + <paramref name="count" /> - 1<c>)</c> までの値が、現在のソースから読み取られたバイトに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-961">When this method returns, contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1<c>)</c> replaced by the bytes read from the current source.</span></span></param>
        <param name="offset"><span data-ttu-id="22f3d-962">読み取られるバイトが配置される <paramref name="array" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="22f3d-962">The byte offset in <paramref name="array" /> at which the read bytes will be placed.</span></span></param>
        <param name="count"><span data-ttu-id="22f3d-963">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-963">The maximum number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="22f3d-964">ストリームからバイトのブロックを読み取り、そのデータを特定のバッファーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-964">Reads a block of bytes from the stream and writes the data in a given buffer.</span></span></summary>
        <returns><span data-ttu-id="22f3d-965">バッファーに読み取られた合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-965">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="22f3d-966">要求しただけのバイト数を読み取れなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-966">This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-967">このメソッドは、<xref:System.IO.Stream.Read%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-967">This method overrides <xref:System.IO.Stream.Read%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-968">`offset` パラメーターは、読み取りを開始する `array` (バッファーインデックス) のバイトのオフセットを指定します。 `count` パラメーターは、このストリームから読み取る最大バイト数を指定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-968">The `offset` parameter gives the offset of the byte in `array` (the buffer index) at which to begin reading, and the `count` parameter gives the maximum number of bytes to be read from this stream.</span></span> <span data-ttu-id="22f3d-969">返される値は実際に読み取られたバイト数です。ストリームの末尾に到達した場合は0になります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-969">The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</span></span> <span data-ttu-id="22f3d-970">読み取り操作が成功した場合、ストリームの現在位置は、読み取ったバイト数だけ進んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-970">If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</span></span> <span data-ttu-id="22f3d-971">例外が発生した場合、ストリームの現在位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-971">If an exception occurs, the current position of the stream is unchanged.</span></span>  
  
 <span data-ttu-id="22f3d-972"><xref:System.IO.FileStream.Read%2A> メソッドは、ストリームの末尾に到達した後にのみ0を返します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-972">The <xref:System.IO.FileStream.Read%2A> method returns zero only after reaching the end of the stream.</span></span> <span data-ttu-id="22f3d-973">それ以外の場合は、を返す前に、必ずストリームから少なくとも1バイトを読み取る <xref:System.IO.FileStream.Read%2A> ます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-973">Otherwise, <xref:System.IO.FileStream.Read%2A> always reads at least one byte from the stream before returning.</span></span> <span data-ttu-id="22f3d-974"><xref:System.IO.FileStream.Read%2A>の呼び出し時にストリームから使用できるデータがない場合、少なくとも1バイトのデータが返されるまで、メソッドはブロックされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-974">If no data is available from the stream upon a call to <xref:System.IO.FileStream.Read%2A>, the method will block until at least one byte of data can be returned.</span></span> <span data-ttu-id="22f3d-975">の実装では、ストリームの末尾に到達していない場合でも、要求されたバイト数よりも小さい値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-975">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="22f3d-976">プリミティブデータ型を読み取るには、<xref:System.IO.BinaryReader> を使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-976">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
 <span data-ttu-id="22f3d-977">読み取り操作を実行しているスレッドを中断しないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-977">Do not interrupt a thread that is performing a read operation.</span></span> <span data-ttu-id="22f3d-978">スレッドがブロック解除された後にアプリケーションが正常に実行されているように見える場合でも、中断によってアプリケーションのパフォーマンスと信頼性が低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-978">Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</span></span>  
  
 <span data-ttu-id="22f3d-979">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-979">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-980">次の例では、<xref:System.IO.FileStream> から内容を読み取り、別の <xref:System.IO.FileStream>に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-980">The following example reads the contents from a <xref:System.IO.FileStream> and writes it into another <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[FSRead#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSRead/CS/fsread.cs#1)]
 [!code-vb[FSRead#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSRead/VB/fsread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-981"><paramref name="array" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-981"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-982"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-982"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-983">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-983">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-984">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-984">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-985"><paramref name="offset" /> と <paramref name="count" /> が <paramref name="array" /> の無効な範囲を示しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-985"><paramref name="offset" /> and <paramref name="count" /> describe an invalid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-986">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-986">Methods were called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-987">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-987">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-988">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-988">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-989">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-989">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="fileStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="22f3d-990">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="22f3d-990">The buffer to write the data into.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="22f3d-991">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="22f3d-991">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="22f3d-992">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-992">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="22f3d-993">バイト シーケンスの現在のファイル ストリームからの読み取りと、メモリ領域への書き込みを非同期に行い、読み取られたバイト数だけファイル ストリーム内の位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-993">Asynchronously reads a sequence of bytes from the current file stream and writes them to a memory region, advances the position within the file stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="22f3d-994">非同期の読み取り操作を表すタスク。バッファーへ読み取られたバイトの合計数がラップされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-994">A task that represents the asynchronous read operation and wraps the total number of bytes read into the buffer.</span></span> <span data-ttu-id="22f3d-995">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-995">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="22f3d-996">`ReadAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用するファイル操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-996">The `ReadAsync` method enables you to perform resource-intensive file operations without blocking the main thread.</span></span> <span data-ttu-id="22f3d-997">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-997">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="22f3d-998">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-998">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="22f3d-999">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.FileStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-999">Use the <xref:System.IO.FileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="22f3d-1000">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithtype> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1000">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithtype> property.</span></span> <span data-ttu-id="22f3d-1001">ファイルへのハンドルが破棄された場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Exception?displayProperty=nameWithType> プロパティに <xref:System.ObjectDisposedException> 例外が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1001">If the handle to the file is disposed, the returned task contains the <xref:System.ObjectDisposedException> exception in the <xref:System.Threading.Tasks.Task.Exception?displayProperty=nameWithType> property.</span></span>

## Examples

<span data-ttu-id="22f3d-1002">次の例は、ファイルから非同期に読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1002">The following example shows how to read from a file asynchronously.</span></span>  

[!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
[!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]  

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="fileStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="22f3d-1003">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1003">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="22f3d-1004">ストリームからのデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1004">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="22f3d-1005">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1005">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="22f3d-1006">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1006">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="22f3d-1007">バイト シーケンスの現在のファイル ストリームからの読み取りと、指定されたオフセットで開始されるバイト配列への書き込みを非同期に行い、読み取られたバイトの合計数だけファイル ストリーム内の位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1007">Asynchronously reads a sequence of bytes from the current file stream and writes them to a byte array beginning at a specified offset, advances the position within the file stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="22f3d-1008">非同期の読み取り操作を表すタスク。バッファーへ読み取られたバイトの合計数がラップされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1008">A task that represents the asynchronous read operation and wraps the total number of bytes read into the buffer.</span></span> <span data-ttu-id="22f3d-1009">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1009">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="22f3d-1010">`ReadAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用するファイル操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1010">The `ReadAsync` method enables you to perform resource-intensive file operations without blocking the main thread.</span></span> <span data-ttu-id="22f3d-1011">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1011">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="22f3d-1012">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1012">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="22f3d-1013">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.FileStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1013">Use the <xref:System.IO.FileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="22f3d-1014">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1014">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="22f3d-1015">ファイルへのハンドルが破棄された場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Exception?displayProperty=nameWithType> プロパティに <xref:System.ObjectDisposedException> 例外が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1015">If the handle to the file is disposed, the returned task contains the <xref:System.ObjectDisposedException> exception in the <xref:System.Threading.Tasks.Task.Exception?displayProperty=nameWithType> property.</span></span>

## Examples

<span data-ttu-id="22f3d-1016">次の例は、ファイルから非同期に読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1016">The following example shows how to read from a file asynchronously.</span></span>

[!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
[!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-1017"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1017"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-1018"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1018"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-1019"><paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1019">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-1020">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1020">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-1021">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1021">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22f3d-1022">ストリームは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1022">The stream is currently in use by a previous read operation.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="22f3d-1023">キャンセル</span><span class="sxs-lookup"><span data-stu-id="22f3d-1023">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="fileStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22f3d-1024">ファイルからバイトを読み取り、読み取り位置を 1 バイト進めます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1024">Reads a byte from the file and advances the read position one byte.</span></span></summary>
        <returns><span data-ttu-id="22f3d-1025"><see cref="T:System.Int32" /> にキャストしたバイト。ストリームの末尾に達した場合は -1。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1025">The byte, cast to an <see cref="T:System.Int32" />, or -1 if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-1026">このメソッドは、<xref:System.IO.Stream.ReadByte%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1026">This method overrides <xref:System.IO.Stream.ReadByte%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-1027">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.FileStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1027">Use the <xref:System.IO.FileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="22f3d-1028">詳細については、「<xref:System.IO.Stream.CanRead%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1028">For additional information, see <xref:System.IO.Stream.CanRead%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-1029">次のコード例では、データをバイト単位でファイルに書き込み、データが正しく書き込まれたことを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1029">The following code example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.FileStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream1/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream1/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-1030">現在のストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1030">The current stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-1031">現在のストリームが閉じられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1031">The current stream is closed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="22f3d-1032"><see langword="Stream" /> の既定の実装では、新しい1バイト配列が作成され、<see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1032">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="22f3d-1033">これは正式には正しくありますが、非効率的です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1033">While this is formally correct, it is inefficient.</span></span> <span data-ttu-id="22f3d-1034">内部バッファーを持つすべてのストリームは、このメソッドをオーバーライドして、バッファーを直接読み取るより効率的なバージョンを提供する必要があります。これにより、すべての呼び出しで追加の配列割り当てが回避されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1034">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span></span>  
  
<span data-ttu-id="22f3d-1035">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1035">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-1036">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-1036">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-1037">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-1037">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-1038">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-1038">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SafeFileHandle">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileStream.SafeFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SafeFileHandle As SafeFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Win32::SafeHandles::SafeFileHandle ^ SafeFileHandle { Microsoft::Win32::SafeHandles::SafeFileHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileHandle : Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.FileStream.SafeFileHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f3d-1039">現在の <see cref="T:System.IO.FileStream" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを表す <see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1039">Gets a <see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /> object that represents the operating system file handle for the file that the current <see cref="T:System.IO.FileStream" /> object encapsulates.</span></span></summary>
        <value><span data-ttu-id="22f3d-1040">現在の <see cref="T:System.IO.FileStream" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1040">An object that represents the operating system file handle for the file that the current <see cref="T:System.IO.FileStream" /> object encapsulates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-1041"><xref:System.IO.FileStream.SafeFileHandle%2A> プロパティによって、ストリームが自動的にフラッシュされ、現在のストリームの位置が0に設定されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1041">The <xref:System.IO.FileStream.SafeFileHandle%2A> property automatically flushes the stream and sets the current stream position to 0.</span></span>  <span data-ttu-id="22f3d-1042">これにより、このプロパティによって返される <xref:System.IO.FileStream.SafeFileHandle%2A> を使用して、ファイルを移動したり、別のストリームによってストリームの位置をリセットしたりできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1042">This allows the file to be moved or the stream position to be reset by another stream using the <xref:System.IO.FileStream.SafeFileHandle%2A> returned by this property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="22f3d-1043">アンマネージコードを呼び出すためのアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1043">for permission to call unmanaged code.</span></span>  
  
<span data-ttu-id="22f3d-1044">セキュリティアクション: リンク確認要求</span><span class="sxs-lookup"><span data-stu-id="22f3d-1044">Security action: Link Demand</span></span> 
<span data-ttu-id="22f3d-1045">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="22f3d-1045">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="22f3d-1046">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1046">requires full trust for the immediate caller.</span></span> <span data-ttu-id="22f3d-1047">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1047">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-1048">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-1048">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-1049">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-1049">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-1050">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-1050">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="fileStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="22f3d-1051">シークの開始位置を示す、<paramref name="origin" /> に対する相対ポイント。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1051">The point relative to <paramref name="origin" /> from which to begin seeking.</span></span></param>
        <param name="origin"><span data-ttu-id="22f3d-1052"><see cref="T:System.IO.SeekOrigin" /> 型の値を使用して、<paramref name="offset" /> の参照ポイントとして先頭、末尾、または現在位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1052">Specifies the beginning, the end, or the current position as a reference point for <paramref name="offset" />, using a value of type <see cref="T:System.IO.SeekOrigin" />.</span></span></param>
        <summary><span data-ttu-id="22f3d-1053">このストリームの現在位置を特定の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1053">Sets the current position of this stream to the given value.</span></span></summary>
        <returns><span data-ttu-id="22f3d-1054">ストリームの新しい位置。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1054">The new position in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-1055">このメソッドは、<xref:System.IO.Stream.Seek%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1055">This method overrides <xref:System.IO.Stream.Seek%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-1056">現在のインスタンスがシークをサポートしているかどうかを確認するには、<xref:System.IO.FileStream.CanSeek%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1056">Use the <xref:System.IO.FileStream.CanSeek%2A?displayProperty=nameWithType> property to determine whether the current instance supports seeking.</span></span> <span data-ttu-id="22f3d-1057">詳細については、「<xref:System.IO.Stream.CanSeek%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1057">For additional information, see <xref:System.IO.Stream.CanSeek%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="22f3d-1058">ストリームの長さを超えて、任意の場所をシークできます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1058">You can seek to any location beyond the length of the stream.</span></span> <span data-ttu-id="22f3d-1059">ファイルの長さを超えてシークすると、ファイルサイズが大きくなります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1059">When you seek beyond the length of the file, the file size grows.</span></span> <span data-ttu-id="22f3d-1060">Windows NT 以降のバージョンでは、ファイルの末尾に追加されたデータは0に設定されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1060">In Windows NT and later versions, data added to the end of the file is set to zero.</span></span> <span data-ttu-id="22f3d-1061">Windows 98 以前のバージョンでは、ファイルの末尾に追加されたデータが0に設定されていません。これは、以前に削除されたデータがストリームに表示されることを意味します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1061">In Windows 98 or earlier versions, data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</span></span>  
  
 <span data-ttu-id="22f3d-1062">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1062">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-1063">次の例は、データをバイト単位でファイルに書き込み、データが正しく書き込まれたことを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1063">The following example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.FileStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream1/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream1/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream1/VB/source.vb#1)]  
  
 <span data-ttu-id="22f3d-1064">次の例では、<xref:System.IO.FileStream.Seek%2A> メソッドでさまざまな <xref:System.IO.SeekOrigin> 値を使用して、ファイルの末尾からファイルの先頭までの逆方向にテキストを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1064">The following example reads text in the reverse direction, from the end of file to the beginning of the file, by using the various <xref:System.IO.SeekOrigin> values with the <xref:System.IO.FileStream.Seek%2A> method.</span></span>  
  
 [!code-csharp[System.IO.FileStream.Seek#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.filestream.seek/cs/source.cs#1)]
 [!code-vb[System.IO.FileStream.Seek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.filestream.seek/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-1065">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1065">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-1066">ストリームがシークをサポートしていません。たとえば、<see langword="FileStream" /> がパイプまたはコンソール出力から構築されました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1066">The stream does not support seeking, such as if the <see langword="FileStream" /> is constructed from a pipe or console output.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-1067">シークがストリームの開始前に試行されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1067">Seeking is attempted before the beginning of the stream.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-1068">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1068">Methods were called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-1069">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-1069">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-1070">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-1070">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-1071">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-1071">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.FileSecurity -&gt; unit" Usage="fileStream.SetAccessControl fileSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileSecurity"><span data-ttu-id="22f3d-1072">現在のファイルに適用する ACL エントリを示すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1072">An object that describes an ACL entry to apply to the current file.</span></span></param>
        <summary><span data-ttu-id="22f3d-1073"><see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の <see cref="T:System.IO.FileStream" /> オブジェクトが示すファイルに適用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1073">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.FileSecurity" /> object to the file described by the current <see cref="T:System.IO.FileStream" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-1074"><xref:System.IO.FileStream> クラスと <xref:System.IO.FileStream.SetAccessControl%2A> は既存のファイルで使用できますが、使用しやすいように <xref:System.IO.File.SetAccessControl%2A?displayProperty=nameWithType> メソッドを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1074">While the <xref:System.IO.FileStream> class and <xref:System.IO.FileStream.SetAccessControl%2A> can be used on an existing file, consider using the <xref:System.IO.File.SetAccessControl%2A?displayProperty=nameWithType> method as it is easier to use.</span></span>  
  
 <span data-ttu-id="22f3d-1075"><xref:System.IO.FileStream.SetAccessControl%2A> メソッドは、継承されていない ACL リストを表すファイルにアクセス制御リスト (ACL) エントリを適用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1075">The <xref:System.IO.FileStream.SetAccessControl%2A> method applies access control list (ACL) entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="22f3d-1076">`fileSecurity` パラメーターに指定された ACL は、ファイルの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1076">The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file.</span></span> <span data-ttu-id="22f3d-1077">新しいユーザーにアクセス許可を追加するには、<xref:System.IO.FileStream.GetAccessControl%2A> メソッドを使用して既存の ACL を取得し、変更した後、<xref:System.IO.FileStream.SetAccessControl%2A> を使用してファイルに再度適用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1077">To add permissions for a new user, use the <xref:System.IO.FileStream.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileStream.SetAccessControl%2A> to apply it back to the file.</span></span>  
  
 <span data-ttu-id="22f3d-1078">ACL は、特定のファイルに対する特定のアクションに対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1078">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="22f3d-1079">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1079">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-1080">ファイルは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1080">The file is closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-1081"><paramref name="fileSecurity" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1081">The <paramref name="fileSecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="22f3d-1082">ファイルを検出または変更できませんでした。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1082">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="22f3d-1083">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1083">The current process does not have access to open the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="fileStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22f3d-1084">ストリームの新しい長さ。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1084">The new length of the stream.</span></span></param>
        <summary><span data-ttu-id="22f3d-1085">ストリーム長を特定の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1085">Sets the length of this stream to the given value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-1086">このメソッドは、<xref:System.IO.Stream.SetLength%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1086">This method overrides <xref:System.IO.Stream.SetLength%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-1087">指定された値がストリームの現在の長さよりも小さい場合、ストリームは切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1087">If the given value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="22f3d-1088">このシナリオでは、現在の位置が新しい長さよりも大きい場合、現在の位置はストリームの最後のバイトに移動されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1088">In this scenario, if the current position is greater than the new length, the current position is moved to the last byte of the stream.</span></span> <span data-ttu-id="22f3d-1089">指定された値がストリームの現在の長さよりも大きい場合、ストリームは展開され、現在の位置は同じままになります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1089">If the given value is larger than the current length of the stream, the stream is expanded, and the current position remains the same.</span></span> <span data-ttu-id="22f3d-1090">ストリームが展開されている場合、古い値と新しい長さの間のストリームの内容は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1090">If the stream is expanded, the contents of the stream between the old and the new length are undefined.</span></span>  
  
 <span data-ttu-id="22f3d-1091">ストリームは、`SetLength` が機能するための書き込みとシークの両方をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1091">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-1092"><xref:System.IO.FileStream.CanWrite%2A> プロパティを使用して、現在のインスタンスが書き込みをサポートしているかどうかを判断し、<xref:System.IO.FileStream.CanSeek%2A> プロパティを使用してシークがサポートされているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1092">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing, and the <xref:System.IO.FileStream.CanSeek%2A> property to determine whether seeking is supported.</span></span> <span data-ttu-id="22f3d-1093">追加情報については、<xref:System.IO.Stream.CanWrite%2A>、および <xref:System.IO.Stream.CanSeek%2A> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1093">For additional information, see <xref:System.IO.Stream.CanWrite%2A> and <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-1094">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1094">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-1095">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1095">An I/O error has occurred.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-1096">ストリームでは、書き込みとシークの両方は使用できません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1096">The stream does not support both writing and seeking.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-1097"><paramref name="value" /> パラメーターを 0 未満の値に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1097">Attempted to set the <paramref name="value" /> parameter to less than 0.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-1098">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-1098">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-1099">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-1099">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-1100">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-1100">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public virtual void Unlock (long position, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unlock(int64 position, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unlock (position As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unlock(long position, long length);" />
      <MemberSignature Language="F#" Value="abstract member Unlock : int64 * int64 -&gt; unit&#xA;override this.Unlock : int64 * int64 -&gt; unit" Usage="fileStream.Unlock (position, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="length" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="22f3d-1101">ロックを解除する範囲の先頭。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1101">The beginning of the range to unlock.</span></span></param>
        <param name="length"><span data-ttu-id="22f3d-1102">ロックを解除する範囲。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1102">The range to be unlocked.</span></span></param>
        <summary><span data-ttu-id="22f3d-1103">他のプロセスにより以前にロックされたファイルの全部または一部へのアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1103">Allows access by other processes to all or part of a file that was previously locked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-1104">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1104">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-1105">次のコード例では、ファイルの一部をロックして、ファイルに対する読み取り/書き込みアクセス権がある場合でも、別のプロセスがファイルのその部分にアクセスできないようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1105">The following code example demonstrates how to lock part of a file so another process cannot access that part of the file even though it has read/write access to the file, and then unlock the specified part of the file .</span></span> <span data-ttu-id="22f3d-1106">異なるコマンドウィンドウでプログラムを同時に実行し、さまざまなコンソールの入力オプションを使用して調査します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1106">Run the program simultaneously in different command windows and investigate using the different console input options.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#1)]
 [!code-csharp[System.IO.FileStream3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#1)]
 [!code-vb[System.IO.FileStream3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-1107"><paramref name="position" /> または <paramref name="length" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1107"><paramref name="position" /> or <paramref name="length" /> is negative.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-1108">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-1108">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-1109">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-1109">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-1110">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-1110">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="fileStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="22f3d-1111">メモリの領域。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1111">A region of memory.</span></span> <span data-ttu-id="22f3d-1112">このメソッドでは、この領域のコンテンツが現在のファイル ストリームにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1112">This method copies the contents of this region to the current file stream.</span></span></param>
        <summary><span data-ttu-id="22f3d-1113">読み取り専用スパンから現在のファイル ストリームにバイト シーケンスを書き込み、書き込まれたバイト数だけこのファイル ストリーム内の現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1113">Writes a sequence of bytes from a read-only span to the current file stream and advances the current position within this file stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="22f3d-1114">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.FileStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1114">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="22f3d-1115">現在のストリームに非同期に書き込むには、<xref:System.IO.FileStream.WriteAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1115">Use the <xref:System.IO.FileStream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>

<span data-ttu-id="22f3d-1116">書き込み操作が成功した場合、ファイルストリーム内の位置は、書き込まれたバイト数だけ進みます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1116">If the write operation is successful, the position within the file stream advances by the number of bytes written.</span></span> <span data-ttu-id="22f3d-1117">例外が発生した場合、ファイルストリーム内の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1117">If an exception occurs, the position within the file stream remains unchanged.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (array As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="fileStream.Write (array, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="22f3d-1118">ストリームに書き込むデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1118">The buffer containing data to write to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="22f3d-1119">ストリームへのバイトのコピーを開始する位置を示す <paramref name="array" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1119">The zero-based byte offset in <paramref name="array" /> from which to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="22f3d-1120">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1120">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="22f3d-1121">ファイル ストリームにバイトのブロックを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1121">Writes a block of bytes to the file stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-1122">このメソッドは、<xref:System.IO.Stream.Write%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1122">This method overrides <xref:System.IO.Stream.Write%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-1123">`offset` パラメーターは、コピーを開始する `array` (バッファーインデックス) のバイトのオフセットを指定し、`count` パラメーターはストリームに書き込むバイト数を指定します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1123">The `offset` parameter gives the offset of the byte in `array` (the buffer index) at which to begin copying, and the `count` parameter gives the number of bytes that will be written to the stream.</span></span> <span data-ttu-id="22f3d-1124">書き込み操作が成功した場合、ストリームの現在位置は、書き込まれたバイト数だけ進んでいます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1124">If the write operation is successful, the current position of the stream is advanced by the number of bytes written.</span></span> <span data-ttu-id="22f3d-1125">例外が発生した場合、ストリームの現在位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1125">If an exception occurs, the current position of the stream is unchanged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-1126">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.FileStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1126">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="22f3d-1127">詳細については、「<xref:System.IO.Stream.CanWrite%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1127">For additional information, see <xref:System.IO.Stream.CanWrite%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-1128">書き込み操作を実行しているスレッドを中断しないようにします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1128">Do not interrupt a thread that is performing a write operation.</span></span> <span data-ttu-id="22f3d-1129">スレッドがブロック解除された後にアプリケーションが正常に実行されているように見える場合でも、中断によってアプリケーションのパフォーマンスと信頼性が低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1129">Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</span></span>  
  
 <span data-ttu-id="22f3d-1130">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1130">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-1131">このコード例は、<xref:System.IO.FileStream.Lock%2A> メソッド用に提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1131">This code example is part of a larger example provided for the <xref:System.IO.FileStream.Lock%2A> method.</span></span>  
  
 [!code-cpp[System.IO.FileStream3#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream3/CPP/fstreamlock.cpp#3)]
 [!code-csharp[System.IO.FileStream3#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream3/CS/fstreamlock.cs#3)]
 [!code-vb[System.IO.FileStream3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream3/VB/fstreamlock.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-1132"><paramref name="array" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1132"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-1133"><paramref name="offset" /> と <paramref name="count" /> が <paramref name="array" /> の無効な範囲を示しています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1133"><paramref name="offset" /> and <paramref name="count" /> describe an invalid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-1134"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1134"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="22f3d-1135">I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1135">An I/O error occurred.</span></span>  
  
<span data-ttu-id="22f3d-1136">- または -</span><span class="sxs-lookup"><span data-stu-id="22f3d-1136">-or-</span></span>
  
 <span data-ttu-id="22f3d-1137">別のスレッドが原因で、オペレーティング システムのファイル ハンドルの位置で予期しない変更が発生した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1137">Another thread may have caused an unexpected change in the position of the operating system's file handle.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-1138">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1138">The stream is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-1139">現在のストリームのインスタンスでは、書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1139">The current stream instance does not support writing.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-1140">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-1140">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-1141">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-1141">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-1142">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-1142">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="fileStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="22f3d-1143">データを書き込む元のメモリの領域。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1143">The region of memory to write data from.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="22f3d-1144">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1144">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="22f3d-1145">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1145">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="22f3d-1146">メモリ領域から現在のバッファー ストリームにバイト シーケンスを非同期に書き込み、書き込まれたバイト数だけこのファイル ストリーム内の現在位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1146">Asynchronously writes a sequence of bytes from a memory region to the current file stream, advances the current position within this file stream by the number of bytes written, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="22f3d-1147">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1147">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="22f3d-1148">`WriteAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1148">The `WriteAsync` method lets you perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="22f3d-1149">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1149">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="22f3d-1150">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1150">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="22f3d-1151">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.FileStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1151">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="22f3d-1152">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1152">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="fileStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="22f3d-1153">データの書き込み元となるバッファー。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1153">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="22f3d-1154">ストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1154">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="22f3d-1155">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1155">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="22f3d-1156">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1156">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="22f3d-1157">現在のストリームにバイト シーケンスを非同期に書き込み、書き込んだバイト数だけストリーム内の現在位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1157">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="22f3d-1158">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1158">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-1159"><xref:System.IO.FileStream.WriteAsync%2A> メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用するファイル操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1159">The <xref:System.IO.FileStream.WriteAsync%2A> method enables you to perform resource-intensive file operations without blocking the main thread.</span></span> <span data-ttu-id="22f3d-1160">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1160">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="22f3d-1161">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1161">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="22f3d-1162">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.FileStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1162">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="22f3d-1163">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status%2A> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1163">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span> <span data-ttu-id="22f3d-1164">ファイルへのハンドルが破棄された場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Exception%2A> プロパティに <xref:System.ObjectDisposedException> 例外が含まれます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1164">If the handle to the file is disposed, the returned task contains the <xref:System.ObjectDisposedException> exception in the <xref:System.Threading.Tasks.Task.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-1165">ファイルに非同期に書き込む方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1165">The following example shows how to write asynchronously to a file.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22f3d-1166"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1166"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22f3d-1167"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1167"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="22f3d-1168"><paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1168">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-1169">ストリームは書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1169">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-1170">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1170">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22f3d-1171">ストリームは、前の書き込み操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1171">The stream is currently in use by a previous write operation.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="22f3d-1172">キャンセル</span><span class="sxs-lookup"><span data-stu-id="22f3d-1172">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="fileStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22f3d-1173">ストリームに書き込むバイト。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1173">A byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="22f3d-1174">ファイル ストリームの現在位置にバイトを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1174">Writes a byte to the current position in the file stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f3d-1175">このメソッドは、<xref:System.IO.Stream.WriteByte%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1175">This method overrides <xref:System.IO.Stream.WriteByte%2A>.</span></span>  
  
 <span data-ttu-id="22f3d-1176">`WriteByte` を使用して、`FileStream` にバイトを効率的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1176">Use `WriteByte` to write a byte to a `FileStream` efficiently.</span></span> <span data-ttu-id="22f3d-1177">ストリームが閉じられているか、書き込み可能でない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1177">If the stream is closed or not writable, an exception will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="22f3d-1178">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.FileStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1178">Use the <xref:System.IO.FileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="22f3d-1179">詳細については、「<xref:System.IO.Stream.CanWrite%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1179">For additional information, see <xref:System.IO.Stream.CanWrite%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22f3d-1180">次のコード例では、データをバイト単位でファイルに書き込み、データが正しく書き込まれたことを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1180">The following code example shows how to write data to a file, byte by byte, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.FileStream1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileStream1/CPP/source.cpp#1)]
 [!code-csharp[System.IO.FileStream1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileStream1/CS/source.cs#1)]
 [!code-vb[System.IO.FileStream1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileStream1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="22f3d-1181">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1181">The stream is closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="22f3d-1182">ストリームは書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1182">The stream does not support writing.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="22f3d-1183"><see langword="Stream" /> の既定の実装では、新しい1バイト配列が作成され、<see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1183">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="22f3d-1184">これは正式には正しくありますが、非効率的です。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1184">While this is formally correct, it is inefficient.</span></span> <span data-ttu-id="22f3d-1185">内部バッファーを持つすべてのストリームは、このメソッドをオーバーライドして、バッファーを直接読み取るより効率的なバージョンを提供する必要があります。これにより、すべての呼び出しで追加の配列割り当てが回避されます。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1185">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span></span>  
  
<span data-ttu-id="22f3d-1186">一般的なファイルおよびディレクトリ操作の一覧については、「[一般的な I/o タスク](~/docs/standard/io/common-i-o-tasks.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f3d-1186">For a list of common file and directory operations, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="22f3d-1187">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="22f3d-1187">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="22f3d-1188">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="22f3d-1188">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="22f3d-1189">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="22f3d-1189">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
