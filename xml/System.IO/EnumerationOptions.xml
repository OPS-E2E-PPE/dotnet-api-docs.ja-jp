<Type Name="EnumerationOptions" FullName="System.IO.EnumerationOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c3db550ac98364bf6c633075f3ce8ad351e34f5" /><Meta Name="ms.sourcegitcommit" Value="d9596ce1265534066e1fb6f9d77b02c61ff6f727" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74320731" /></Metadata><TypeSignature Language="C#" Value="public class EnumerationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumerationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.EnumerationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumerationOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerationOptions" />
  <TypeSignature Language="F#" Value="type EnumerationOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ファイルとディレクトリの列挙オプションを提供します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.EnumerationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerationOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>推奨される既定のオプションを使用して、<see cref="T:System.IO.EnumerationOptions" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributesToSkip">
      <MemberSignature Language="C#" Value="public System.IO.FileAttributes AttributesToSkip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAttributes AttributesToSkip" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributesToSkip As FileAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAttributes AttributesToSkip { System::IO::FileAttributes get(); void set(System::IO::FileAttributes value); };" />
      <MemberSignature Language="F#" Value="member this.AttributesToSkip : System.IO.FileAttributes with get, set" Usage="System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スキップする属性を取得または設定します。 既定値は <c>FileAttributes.Hidden | FileAttributes.System</c> です。</summary>
        <value>スキップする属性。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferSize : int with get, set" Usage="System.IO.EnumerationOptions.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>推奨されるバッファー サイズ (バイト単位) を取得または設定します。 既定値は 0 (推奨なし) です。</summary>
        <value>バッファーサイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

すべてのプラットフォームでユーザー割り当てバッファーが使用されるわけではありません。また、一部のプラットフォームでは、固定バッファーか、完全な結果を返すのに十分な領域を持つバッファーが必要です。 このオプションが便利なシナリオの1つは、Windows 上のリモート共有列挙型です。 大きなバッファーを使用すると、ネットワーク共有などでネットワーク経由でバッチ処理される結果が増えるため、パフォーマンスが向上する可能性があります。
たとえば、"large" バッファーは16K になります。 一般的なは4K です。
            
推奨されるバッファーサイズは、現在のプラットフォームのネイティブ Api に意味がない場合、または少なくとも1つの結果を取得するには小さすぎる場合には使用されません。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreInaccessible">
      <MemberSignature Language="C#" Value="public bool IgnoreInaccessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreInaccessible" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreInaccessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreInaccessible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreInaccessible : bool with get, set" Usage="System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクセスが拒否されたときにファイルまたはディレクトリをスキップするかどうかを示す値を取得または設定します (例: <see cref="T:System.UnauthorizedAccessException" /> または <see cref="T:System.Security.SecurityException" />)。 既定値は、<see langword="true" /> です。</summary>
        <value>innacessible ファイルまたはディレクトリをスキップする <see langword="true" /> ます。それ以外の場合は、<see langword="false" />ます。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCasing">
      <MemberSignature Language="C#" Value="public System.IO.MatchCasing MatchCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchCasing MatchCasing" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchCasing As MatchCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchCasing MatchCasing { System::IO::MatchCasing get(); void set(System::IO::MatchCasing value); };" />
      <MemberSignature Language="F#" Value="member this.MatchCasing : System.IO.MatchCasing with get, set" Usage="System.IO.EnumerationOptions.MatchCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>大文字と小文字の一致の動作を取得または設定します。</summary>
        <value>Case 照合動作を示す列挙値の1つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

一致式の指定を許可する Api では、このプロパティを使用して、大文字と小文字の一致の動作を指定できます。
既定では、プラットフォームの既定値と一致します。これは、一時フォルダーの大文字と小文字の区別から収集されます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchType">
      <MemberSignature Language="C#" Value="public System.IO.MatchType MatchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchType MatchType" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchType" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchType As MatchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchType MatchType { System::IO::MatchType get(); void set(System::IO::MatchType value); };" />
      <MemberSignature Language="F#" Value="member this.MatchType : System.IO.MatchType with get, set" Usage="System.IO.EnumerationOptions.MatchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一致の種類を取得または設定します。</summary>
        <value>一致の種類を示す列挙値の1つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

一致式の指定を許可する Api では、このプロパティを使用して、一致式の解釈方法を指定できます。
既定値は単純一致です。 ' * ' は常に0文字以上で、'? ' は1文字です。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecurseSubdirectories">
      <MemberSignature Language="C#" Value="public bool RecurseSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecurseSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property RecurseSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecurseSubdirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecurseSubdirectories : bool with get, set" Usage="System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙においてサブディレクトリを再帰的に処理するかどうかを示す値を取得または設定します。 既定値は、<see langword="false" /> です。</summary>
        <value>サブディレクトリを再帰的に <see langword="true" /> ます。それ以外の場合は、<see langword="false" />ます。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnSpecialDirectories">
      <MemberSignature Language="C#" Value="public bool ReturnSpecialDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnSpecialDirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnSpecialDirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnSpecialDirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnSpecialDirectories : bool with get, set" Usage="System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特別なディレクトリ エントリ "." と ".." を返すかどうかを示す値を取得または設定します。</summary>
        <value>特別なディレクトリエントリ "." と ".." を返す <see langword="true" />それ以外の場合は、<see langword="false" />ます。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
