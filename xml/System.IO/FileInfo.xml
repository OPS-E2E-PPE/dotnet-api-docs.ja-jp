<Type Name="FileInfo" FullName="System.IO.FileInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ee4cb3d38ca8c77039fab1a491c7f53a50878ba" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77225176" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FileInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type FileInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e1943-101">ファイルを作成、コピー、削除、移動、および開くためのプロパティおよびインスタンス メソッドを提供し、<see cref="T:System.IO.FileStream" /> オブジェクトを作成できるようにします。</span><span class="sxs-lookup"><span data-stu-id="e1943-101">Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <see cref="T:System.IO.FileStream" /> objects.</span></span> <span data-ttu-id="e1943-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e1943-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-103">ファイルのコピー、移動、名前の変更、作成、開く、削除、追加などの一般的な操作には、<xref:System.IO.FileInfo> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-103">Use the <xref:System.IO.FileInfo> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.</span></span>  
  
 <span data-ttu-id="e1943-104">同じファイルに対して複数の操作を実行する場合は、セキュリティチェックが必ずしも必要ではないため、<xref:System.IO.File> クラスの対応する静的メソッドの代わりに <xref:System.IO.FileInfo> インスタンスメソッドを使用する方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="e1943-104">If you are performing multiple operations on the same file, it can be more efficient to use <xref:System.IO.FileInfo> instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary.</span></span>  
  
 <span data-ttu-id="e1943-105"><xref:System.IO.FileInfo> メソッドの多くは、ファイルを作成または開くときに他の i/o 型を返します。</span><span class="sxs-lookup"><span data-stu-id="e1943-105">Many of the <xref:System.IO.FileInfo> methods return other I/O types when you create or open files.</span></span> <span data-ttu-id="e1943-106">これらの他の型を使用して、ファイルをさらに操作することができます。</span><span class="sxs-lookup"><span data-stu-id="e1943-106">You can use these other types to further manipulate a file.</span></span> <span data-ttu-id="e1943-107">詳細については、「<xref:System.IO.FileInfo.Open%2A>、<xref:System.IO.FileInfo.OpenRead%2A>、<xref:System.IO.FileInfo.OpenText%2A>、<xref:System.IO.FileInfo.CreateText%2A>、<xref:System.IO.FileInfo.Create%2A>などの特定の <xref:System.IO.FileInfo> メンバー」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1943-107">For more information, see specific <xref:System.IO.FileInfo> members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.</span></span>  
  
 <span data-ttu-id="e1943-108">既定では、すべてのユーザーに対して、新しいファイルへの完全な読み取り/書き込みアクセス権が付与されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-108">By default, full read/write access to new files is granted to all users.</span></span>  
  
 <span data-ttu-id="e1943-109">次の表では、さまざまな <xref:System.IO.FileInfo> メソッドの動作をカスタマイズするために使用される列挙体について説明します。</span><span class="sxs-lookup"><span data-stu-id="e1943-109">The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.FileInfo> methods.</span></span>  
  
|<span data-ttu-id="e1943-110">列挙型</span><span class="sxs-lookup"><span data-stu-id="e1943-110">Enumeration</span></span>|<span data-ttu-id="e1943-111">説明</span><span class="sxs-lookup"><span data-stu-id="e1943-111">Description</span></span>|  
|-----------------|-----------------|  
|<xref:System.IO.FileAccess>|<span data-ttu-id="e1943-112">ファイルへの読み取りおよび書き込みアクセスを指定します。</span><span class="sxs-lookup"><span data-stu-id="e1943-112">Specifies read and write access to a file.</span></span>|  
|<xref:System.IO.FileShare>|<span data-ttu-id="e1943-113">既に使用されているファイルに許可するアクセスのレベルを指定します。</span><span class="sxs-lookup"><span data-stu-id="e1943-113">Specifies the level of access permitted for a file that is already in use.</span></span>|  
|<xref:System.IO.FileMode>|<span data-ttu-id="e1943-114">既存のファイルの内容を保持するか上書きするかを指定します。また、既存のファイルを作成する要求によって例外が発生するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e1943-114">Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="e1943-115">パスを入力文字列として受け取るメンバーでは、そのパスは適切な形式である必要があります。そうでない場合、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="e1943-115">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="e1943-116">たとえば、パスが完全修飾されていても、スペースで始まる場合は、クラスのメソッドでパスがトリムされません。</span><span class="sxs-lookup"><span data-stu-id="e1943-116">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="e1943-117">そのため、パスの形式が正しくないため、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="e1943-117">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="e1943-118">同様に、パスまたはパスの組み合わせを2回完全に修飾することはできません。</span><span class="sxs-lookup"><span data-stu-id="e1943-118">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="e1943-119">たとえば、"c:\temp c:\windows" は、ほとんどの場合に例外を発生させます。</span><span class="sxs-lookup"><span data-stu-id="e1943-119">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="e1943-120">パス文字列を受け取るメソッドを使用する場合は、パスが適切な形式であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="e1943-120">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="e1943-121">パスを受け入れるメンバーでは、ファイルまたはディレクトリのみを参照できます。</span><span class="sxs-lookup"><span data-stu-id="e1943-121">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="e1943-122">指定されたパスは、サーバーと共有名の相対パスまたは UNC (汎用名前付け規則) パスを参照することもできます。</span><span class="sxs-lookup"><span data-stu-id="e1943-122">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="e1943-123">たとえば、次のすべてが許容されるパスです。</span><span class="sxs-lookup"><span data-stu-id="e1943-123">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="e1943-124">Visual Basic の "c:\\\MyDir\\\MyFile.txt C#" または "c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="e1943-124">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="e1943-125">Visual Basic の "c:\\\MyDir C#"、または "c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="e1943-125">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="e1943-126">"の MyDir\\\MySubdir" C#、または Visual Basic の "MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="e1943-126">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="e1943-127">"\\\\\\\ MyServer\\\MyShare" C#、または\\の "Visual Basic 「\myserver\myshare」"。</span><span class="sxs-lookup"><span data-stu-id="e1943-127">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="e1943-128"><xref:System.IO.FileInfo> クラスには、ファイルに関する情報を取得できるようにする次のプロパティが用意されています。</span><span class="sxs-lookup"><span data-stu-id="e1943-128">The <xref:System.IO.FileInfo> class provides the following properties that enable you to retrieve information about a file.</span></span> <span data-ttu-id="e1943-129">各プロパティの使用方法の例については、「プロパティページ」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1943-129">For an example of how to use each property, see the property pages.</span></span>  
  
-   <span data-ttu-id="e1943-130"><xref:System.IO.FileInfo.Directory%2A> プロパティは、ファイルの親ディレクトリを表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-130">The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file.</span></span>  
  
-   <span data-ttu-id="e1943-131"><xref:System.IO.FileInfo.DirectoryName%2A> プロパティは、ファイルの親ディレクトリの完全なパスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-131">The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file.</span></span>  
  
-   <span data-ttu-id="e1943-132"><xref:System.IO.FileInfo.Exists%2A> プロパティは、ファイルが操作される前にファイルが存在するかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="e1943-132">The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it.</span></span>  
  
-   <span data-ttu-id="e1943-133"><xref:System.IO.FileInfo.IsReadOnly%2A> プロパティは、ファイルを変更できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1943-133">The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified.</span></span>  
  
-   <span data-ttu-id="e1943-134"><xref:System.IO.FileInfo.Length%2A> は、ファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-134">The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file.</span></span>  
  
-   <span data-ttu-id="e1943-135"><xref:System.IO.FileInfo.Name%2A> は、ファイルの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-135">The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-136">次の例は、`FileInfo` クラスの主なメンバーの一部を示しています。</span><span class="sxs-lookup"><span data-stu-id="e1943-136">The following example demonstrates some of the main members of the `FileInfo` class.</span></span>  
  
 <span data-ttu-id="e1943-137">プロパティが最初に取得されると、<xref:System.IO.FileInfo> は <xref:System.IO.FileSystemInfo.Refresh%2A> メソッドを呼び出し、そのファイルに関する情報をキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="e1943-137">When the properties are first retrieved, <xref:System.IO.FileInfo> calls the <xref:System.IO.FileSystemInfo.Refresh%2A> method and caches information about the file.</span></span> <span data-ttu-id="e1943-138">以降の呼び出しでは、<xref:System.IO.FileSystemInfo.Refresh%2A> を呼び出して、情報の最新のコピーを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-138">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
 [!code-cpp[FInfo Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Class/CPP/finfo class.cpp#1)]
 [!code-csharp[FInfo Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Class/CS/finfo class.cs#1)]
 [!code-vb[FInfo Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Class/VB/finfo class.vb#1)]  
  
 <span data-ttu-id="e1943-139">この例では、次のような出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-139">This example produces output similar to the following.</span></span>  
  
```  
Hello  
And  
Welcome  
C:\Users\userName\AppData\Local\Temp\tmp70AB.tmp was copied to C:\Users\userName\AppData\Local\Temp\tmp70CB.tmp.  
C:\Users\userName\AppData\Local\Temp\tmp70CB.tmp was successfully deleted.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.DriveInfo" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-140">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-140">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-141">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-141">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-142">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-142">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e1943-143">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="e1943-143">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.IO.FileInfo : string -&gt; System.IO.FileInfo" Usage="new System.IO.FileInfo fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="e1943-144">新しいファイルの完全修飾名または相対ファイル名。</span><span class="sxs-lookup"><span data-stu-id="e1943-144">The fully qualified name of the new file, or the relative file name.</span></span> <span data-ttu-id="e1943-145">パスの末尾がディレクトリの区切り記号にならないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="e1943-145">Do not end the path with the directory separator character.</span></span></param>
        <summary><span data-ttu-id="e1943-146">ファイル パスのラッパーとして機能する、<see cref="T:System.IO.FileInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e1943-146">Initializes a new instance of the <see cref="T:System.IO.FileInfo" /> class, which acts as a wrapper for a file path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-147">完全修飾名または相対ファイル名を指定できますが、セキュリティチェックは完全修飾名を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-147">You can specify either the fully qualified or the relative file name, but the security check gets the fully qualified name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-148">次の例では、このコンストラクターを使用して2つのファイルを作成します。これらのファイルは、書き込み、読み取り、コピー、および削除されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-148">The following example uses this constructor to create two files, which are then written to, read from, copied, and deleted.</span></span>  
  
 [!code-cpp[finfo ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Ctor/CPP/finfo ctor.cpp#1)]
 [!code-csharp[finfo ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Ctor/CS/finfo ctor.cs#1)]
 [!code-vb[finfo ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Ctor/VB/finfo ctor.vb#1)]  
  
 <span data-ttu-id="e1943-149">次の例では、既存のファイルを開くか、ファイルを作成し、ファイルにテキストを追加して、結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-149">The following example opens an existing file or creates a file, appends text to the file, and displays the results.</span></span>  
  
 [!code-cpp[fileinfomain#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfomain/CPP/fileinfomain.cpp#1)]
 [!code-csharp[fileinfomain#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfomain/CS/fileinfomain.cs#1)]
 [!code-vb[fileinfomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfomain/VB/fileinfomain.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-150"><paramref name="fileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1943-150"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-151">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-151">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-152">ファイル名は空で、空白のみで構成されているか、正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="e1943-152">The file name is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-153"><paramref name="fileName" /> へのアクセスが拒否されました</span><span class="sxs-lookup"><span data-stu-id="e1943-153">Access to <paramref name="fileName" /> is denied.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="e1943-154">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e1943-154">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e1943-155"><paramref name="fileName" /> の文字列の途中にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e1943-155"><paramref name="fileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-156">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-156">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-157">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-157">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-158">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-158">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public System.IO.StreamWriter AppendText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.StreamWriter AppendText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.AppendText" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendText () As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamWriter ^ AppendText();" />
      <MemberSignature Language="F#" Value="member this.AppendText : unit -&gt; System.IO.StreamWriter" Usage="fileInfo.AppendText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-159"><see cref="T:System.IO.StreamWriter" />のインスタンスが表すファイルの末尾にテキストを追加する<see cref="T:System.IO.FileInfo" />を作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-159">Creates a <see cref="T:System.IO.StreamWriter" /> that appends text to the file represented by this instance of the <see cref="T:System.IO.FileInfo" />.</span></span></summary>
        <returns><span data-ttu-id="e1943-160">新しい <see langword="StreamWriter" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-160">A new <see langword="StreamWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1943-161">次の例では、テキストをファイルに追加し、ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e1943-161">The following example appends text to a file and reads from the file.</span></span>  
  
 [!code-cpp[finfo appendtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo AppendText/CPP/finfo appendtext.cpp#1)]
 [!code-csharp[finfo appendtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo AppendText/CS/finfo appendtext.cs#1)]
 [!code-vb[finfo appendtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo AppendText/VB/finfo appendtext.vb#1)]  
  
 <span data-ttu-id="e1943-162">次の例では、ファイルの末尾にテキストを追加する方法と、追加操作の結果をコンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-162">The following example demonstrates appending text to the end of a file and also displays the result of the append operation to the console.</span></span> <span data-ttu-id="e1943-163">このルーチンが初めて呼び出されたときに、ファイルが存在しない場合は作成されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-163">The first time this routine is called, the file is created if it does not exist.</span></span> <span data-ttu-id="e1943-164">その後、指定したテキストがファイルに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-164">After that, the specified text is appended to the file.</span></span>  
  
 [!code-cpp[fileinfoappendtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoappendtext/CPP/fileinfoappendtext.cpp#1)]
 [!code-csharp[fileinfoappendtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoappendtext/CS/fileinfoappendtext.cs#1)]
 [!code-vb[fileinfoappendtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoappendtext/VB/fileinfoappendtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-165">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-165">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-166">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-166">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-167">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-167">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e1943-168">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="e1943-168">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1943-169">既存のファイルを新しいファイルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="e1943-169">Copies an existing file to a new file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo CopyTo (string destFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo CopyTo(string destFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.CopyTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destFileName As String) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ CopyTo(System::String ^ destFileName);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string -&gt; System.IO.FileInfo" Usage="fileInfo.CopyTo destFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="e1943-170">コピー先の新しいファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="e1943-170">The name of the new file to copy to.</span></span></param>
        <summary><span data-ttu-id="e1943-171">既存のファイルを上書きできないようにして、既存のファイルを新しいファイルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="e1943-171">Copies an existing file to a new file, disallowing the overwriting of an existing file.</span></span></summary>
        <returns><span data-ttu-id="e1943-172">完全修飾パスを含む新しいファイル。</span><span class="sxs-lookup"><span data-stu-id="e1943-172">A new file with a fully qualified path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-173"><xref:System.IO.FileInfo.CopyTo(System.String,System.Boolean)> メソッドを使用して、既存のファイルを上書きできるようにします。</span><span class="sxs-lookup"><span data-stu-id="e1943-173">Use the <xref:System.IO.FileInfo.CopyTo(System.String,System.Boolean)> method to allow overwriting of an existing file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e1943-174">可能な限り、この方法で短いファイル名 (XXXXXX ~ 1. XXX など) を使用しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="e1943-174">Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</span></span> <span data-ttu-id="e1943-175">2つのファイルの短いファイル名が同じ場合、このメソッドは失敗し、例外が発生するか、または望ましくない動作が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-175">If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-176">次の例は、`CopyTo` メソッドの両方のオーバーロードを示しています。</span><span class="sxs-lookup"><span data-stu-id="e1943-176">The following example demonstrates both overloads of the `CopyTo` method.</span></span>  
  
 [!code-cpp[finfo copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CopyTo2/CPP/finfo copyto2.cpp#1)]
 [!code-csharp[finfo copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CopyTo2/CS/program.cs#1)]
 [!code-vb[finfo copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CopyTo2/VB/program.vb#1)]  
  
 <span data-ttu-id="e1943-177">次の例では、あるファイルを別のファイルにコピーする方法を示します。コピー先のファイルが既に存在する場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1943-177">The following example demonstrates copying one file to another file, throwing an exception if the destination file already exists.</span></span>  
  
 [!code-cpp[FileInfoCopyTo1#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileInfoCopyTo1/CPP/fileinfocopyto1.cpp#1)]
 [!code-csharp[FileInfoCopyTo1#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileInfoCopyTo1/CS/fileinfocopyto1.cs#1)]
 [!code-vb[FileInfoCopyTo1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileInfoCopyTo1/VB/fileinfocopyto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-178"><paramref name="destFileName" /> は空で、空白のみで構成されているか、正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="e1943-178"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-179">エラーが発生したか、リンク先ファイルが既に存在します。</span><span class="sxs-lookup"><span data-stu-id="e1943-179">An error occurs, or the destination file already exists.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-180">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-180">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-181"><paramref name="destFileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1943-181"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-182">ディレクトリ パスが渡されるか、ファイルが別のドライブに移動されています。</span><span class="sxs-lookup"><span data-stu-id="e1943-182">A directory path is passed in, or the file is being moved to a different drive.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-183"><paramref name="destFileName" /> で指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="e1943-183">The directory specified in <paramref name="destFileName" /> does not exist.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="e1943-184">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e1943-184">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e1943-185"><paramref name="destFileName" /> の文字列内にコロン (:) が含まれていますが、ボリュームを指定していません。</span><span class="sxs-lookup"><span data-stu-id="e1943-185"><paramref name="destFileName" /> contains a colon (:) within the string but does not specify the volume.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-186">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-186">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-187">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-187">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-188">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-188">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e1943-189">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="e1943-189">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo CopyTo (string destFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo CopyTo(string destFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destFileName As String, overwrite As Boolean) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ CopyTo(System::String ^ destFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string * bool -&gt; System.IO.FileInfo" Usage="fileInfo.CopyTo (destFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="e1943-190">コピー先の新しいファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="e1943-190">The name of the new file to copy to.</span></span></param>
        <param name="overwrite"><span data-ttu-id="e1943-191">既存のファイルを上書きできるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-191"><see langword="true" /> to allow an existing file to be overwritten; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e1943-192">既存のファイルを上書きできるようにして、既存のファイルを新しいファイルにコピーします。</span><span class="sxs-lookup"><span data-stu-id="e1943-192">Copies an existing file to a new file, allowing the overwriting of an existing file.</span></span></summary>
        <returns><span data-ttu-id="e1943-193">新しいファイル。または、<paramref name="overwrite" /> が <see langword="true" /> の場合は、既存のファイルを上書きしたファイル。</span><span class="sxs-lookup"><span data-stu-id="e1943-193">A new file, or an overwrite of an existing file if <paramref name="overwrite" /> is <see langword="true" />.</span></span> <span data-ttu-id="e1943-194">ファイルが存在しており、<paramref name="overwrite" /> が <see langword="false" /> の場合は、<see cref="T:System.IO.IOException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1943-194">If the file exists and <paramref name="overwrite" /> is <see langword="false" />, an <see cref="T:System.IO.IOException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-195">このメソッドを使用して、既存のファイルの上書きを許可または禁止します。</span><span class="sxs-lookup"><span data-stu-id="e1943-195">Use this method to allow or prevent overwriting of an existing file.</span></span> <span data-ttu-id="e1943-196">既存のファイルが既定で上書きされないようにするには、<xref:System.IO.FileInfo.CopyTo(System.String)> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-196">Use the <xref:System.IO.FileInfo.CopyTo(System.String)> method to prevent overwriting of an existing file by default.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e1943-197">可能な限り、この方法で短いファイル名 (XXXXXX ~ 1. XXX など) を使用しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="e1943-197">Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</span></span> <span data-ttu-id="e1943-198">2つのファイルの短いファイル名が同じ場合、このメソッドは失敗し、例外が発生するか、または望ましくない動作が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-198">If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-199">次の例は、`CopyTo` メソッドの両方のオーバーロードを示しています。</span><span class="sxs-lookup"><span data-stu-id="e1943-199">The following example demonstrates both overloads of the `CopyTo` method.</span></span>  
  
 [!code-cpp[finfo copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CopyTo2/CPP/finfo copyto2.cpp#1)]
 [!code-csharp[finfo copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CopyTo2/CS/program.cs#1)]
 [!code-vb[finfo copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CopyTo2/VB/program.vb#1)]  
  
 <span data-ttu-id="e1943-200">次の例では、既存のファイルを上書きするかどうかを指定して、1つのファイルを別のファイルにコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-200">The following example demonstrates copying one file to another file, specifying whether to overwrite a file that already exists.</span></span>  
  
 [!code-cpp[fileinfocopyto#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfocopyto/CPP/fileinfocopyto.cpp#1)]
 [!code-csharp[fileinfocopyto#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfocopyto/CS/fileinfocopyto.cs#1)]
 [!code-vb[fileinfocopyto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfocopyto/VB/fileinfocopyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-201"><paramref name="destFileName" /> は空で、空白のみで構成されているか、正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="e1943-201"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-202">エラーが発生したか、リンク先ファイルが既に存在し、<paramref name="overwrite" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1943-202">An error occurs, or the destination file already exists and <paramref name="overwrite" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-203">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-203">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-204"><paramref name="destFileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1943-204"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-205"><paramref name="destFileName" /> で指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="e1943-205">The directory specified in <paramref name="destFileName" /> does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-206">ディレクトリ パスが渡されるか、ファイルが別のドライブに移動されています。</span><span class="sxs-lookup"><span data-stu-id="e1943-206">A directory path is passed in, or the file is being moved to a different drive.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="e1943-207">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e1943-207">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e1943-208"><paramref name="destFileName" /> の文字列の途中にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e1943-208"><paramref name="destFileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-209">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-209">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-210">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-210">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-211">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-211">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e1943-212">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="e1943-212">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Function Create () As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; System.IO.FileStream" Usage="fileInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-213">ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-213">Creates a file.</span></span></summary>
        <returns><span data-ttu-id="e1943-214">新しいファイル。</span><span class="sxs-lookup"><span data-stu-id="e1943-214">A new file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-215">既定では、すべてのユーザーに対して、新しいファイルへの完全な読み取り/書き込みアクセス権が付与されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-215">By default, full read/write access to new files is granted to all users.</span></span>  
  
 <span data-ttu-id="e1943-216">このメソッドは、<xref:System.IO.File.Create%2A?displayProperty=nameWithType>によって提供される機能のラッパーです。</span><span class="sxs-lookup"><span data-stu-id="e1943-216">This method is a wrapper for the functionality provided by <xref:System.IO.File.Create%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-217">次の例では、ファイルへの参照を作成し、`FileInfo.Create()`を使用してディスク上にファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-217">The following example creates a reference to a file, and then creates the file on disk using `FileInfo.Create()`.</span></span>  
  
 [!code-cpp[fileinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodelete/CPP/fileinfodelete.cpp#1)]
 [!code-csharp[fileinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodelete/CS/fileinfodelete.cs#1)]
 [!code-vb[fileinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodelete/VB/fileinfodelete.vb#1)]  
  
 <span data-ttu-id="e1943-218">次の例では、ファイルを作成し、テキストを追加して、ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e1943-218">The following example creates a file, adds some text to it, and reads from the file.</span></span>  
  
 [!code-cpp[finfo create#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Create/CPP/finfo create.cpp#1)]
 [!code-csharp[finfo create#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Create/CS/finfo create.cs#1)]
 [!code-vb[finfo create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Create/VB/finfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-219">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-219">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-220">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-220">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-221">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-221">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e1943-222">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="e1943-222">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateText">
      <MemberSignature Language="C#" Value="public System.IO.StreamWriter CreateText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.StreamWriter CreateText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.CreateText" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateText () As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamWriter ^ CreateText();" />
      <MemberSignature Language="F#" Value="member this.CreateText : unit -&gt; System.IO.StreamWriter" Usage="fileInfo.CreateText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-223">新しいテキスト ファイルに書き込みを実行する <see cref="T:System.IO.StreamWriter" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-223">Creates a <see cref="T:System.IO.StreamWriter" /> that writes a new text file.</span></span></summary>
        <returns><span data-ttu-id="e1943-224">新しい <see langword="StreamWriter" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-224">A new <see langword="StreamWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-225">既定では、すべてのユーザーに対して、新しいファイルへの完全な読み取り/書き込みアクセス権が付与されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-225">By default, full read/write access to new files is granted to all users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-226">`CreateText`メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-226">The following example demonstrates the `CreateText` method.</span></span>  
  
 [!code-cpp[finfo createtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CreateText/CPP/finfo createtext.cpp#1)]
 [!code-csharp[finfo createtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CreateText/CS/finfo createtext.cs#1)]
 [!code-vb[finfo createtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CreateText/VB/finfo createtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-227">このファイル名はディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-227">The file name is a directory.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-228">ディスクが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e1943-228">The disk is read-only.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-229">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-229">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-230">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-230">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-231">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-231">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-232">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-232">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e1943-233">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="e1943-233">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Decrypt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decrypt();" />
      <MemberSignature Language="F#" Value="member this.Decrypt : unit -&gt; unit" Usage="fileInfo.Decrypt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-234"><see cref="M:System.IO.FileInfo.Encrypt" /> メソッドを使用して現在のアカウントによって暗号化されたファイルを復号化します。</span><span class="sxs-lookup"><span data-stu-id="e1943-234">Decrypts a file that was encrypted by the current account using the <see cref="M:System.IO.FileInfo.Encrypt" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-235"><xref:System.IO.FileInfo.Decrypt%2A> メソッドを使用すると、<xref:System.IO.FileInfo.Encrypt%2A> メソッドを使用して暗号化されたファイルの暗号化を解除できます。</span><span class="sxs-lookup"><span data-stu-id="e1943-235">The <xref:System.IO.FileInfo.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.FileInfo.Encrypt%2A> method.</span></span>  <span data-ttu-id="e1943-236"><xref:System.IO.FileInfo.Decrypt%2A> メソッドは、現在のユーザーアカウントを使用して暗号化されたファイルのみを暗号化解除できます。</span><span class="sxs-lookup"><span data-stu-id="e1943-236">The <xref:System.IO.FileInfo.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.</span></span>  
  
 <span data-ttu-id="e1943-237"><xref:System.IO.FileInfo.Encrypt%2A> メソッドと <xref:System.IO.FileInfo.Decrypt%2A> メソッドはどちらも、コンピューターにインストールされている暗号化サービスプロバイダー (CSP) と、メソッドを呼び出すプロセスのファイル暗号化キーを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-237">Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</span></span>  
  
 <span data-ttu-id="e1943-238">現在のファイルシステムは NTFS としてフォーマットされている必要があり、現在のオペレーティングシステムは Microsoft Windows NT 以降である必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-238">The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-239">次のコード例では、<xref:System.IO.FileInfo.Encrypt%2A> メソッドと <xref:System.IO.FileInfo.Decrypt%2A> メソッドを使用して、ファイルの暗号化と復号化を行います。</span><span class="sxs-lookup"><span data-stu-id="e1943-239">The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt and then decrypt a file.</span></span>  
  
 [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DriveNotFoundException"><span data-ttu-id="e1943-240">正しくないドライブが指定されました。</span><span class="sxs-lookup"><span data-stu-id="e1943-240">An invalid drive was specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-241">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-241">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-242">ファイルを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1943-242">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e1943-243">このファイル システムは NTFS ではありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-243">The file system is not NTFS.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e1943-244">現在のオペレーティング システムは Microsoft Windows NT 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-244">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-245">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e1943-245">The file described by the current <see cref="T:System.IO.FileInfo" /> object is read-only.</span></span>  
  
<span data-ttu-id="e1943-246">または</span><span class="sxs-lookup"><span data-stu-id="e1943-246">-or-</span></span> 
<span data-ttu-id="e1943-247">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="e1943-247">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="e1943-248">または</span><span class="sxs-lookup"><span data-stu-id="e1943-248">-or-</span></span> 
<span data-ttu-id="e1943-249">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-249">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="fileInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-250">ファイルを完全に削除します。</span><span class="sxs-lookup"><span data-stu-id="e1943-250">Permanently deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-251">ファイルが存在しない場合、このメソッドは何も行いません。</span><span class="sxs-lookup"><span data-stu-id="e1943-251">If the file does not exist, this method does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-252">`Delete`メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-252">The following example demonstrates the `Delete` method.</span></span>  
  
 [!code-cpp[finfo delete#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Delete/CPP/finfo delete.cpp#1)]
 [!code-csharp[finfo delete#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Delete/CS/finfo delete.cs#1)]
 [!code-vb[finfo delete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Delete/VB/finfo delete.vb#1)]  
  
 <span data-ttu-id="e1943-253">次の例では、ファイルを作成、閉じ、および削除します。</span><span class="sxs-lookup"><span data-stu-id="e1943-253">The following example creates, closes, and deletes a file.</span></span>  
  
 [!code-cpp[fileinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodelete/CPP/fileinfodelete.cpp#1)]
 [!code-csharp[fileinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodelete/CS/fileinfodelete.cs#1)]
 [!code-vb[fileinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodelete/VB/fileinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-254">ターゲット ファイルが、Microsoft Windows NT を実行するコンピューター上で開いているかメモリ マップされています。</span><span class="sxs-lookup"><span data-stu-id="e1943-254">The target file is open or memory-mapped on a computer running Microsoft Windows NT.</span></span>  
  
<span data-ttu-id="e1943-255">または</span><span class="sxs-lookup"><span data-stu-id="e1943-255">-or-</span></span> 
<span data-ttu-id="e1943-256">ファイルに開いているハンドルがあり、オペレーティング システムが Windows XP かそれ以前のバージョンです。</span><span class="sxs-lookup"><span data-stu-id="e1943-256">There is an open handle on the file, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="e1943-257">このハンドルが開いている原因は、ディレクトリおよびファイルを列挙したことにある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-257">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="e1943-258">詳細については、「[方法: ディレクトリとファイルを列挙する](~/docs/standard/io/how-to-enumerate-directories-and-files.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e1943-258">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-259">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-259">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-260">このパスは、ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-260">The path is a directory.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-261">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-261">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-262">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-262">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-263">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-263">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Directory" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Directory { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : System.IO.DirectoryInfo" Usage="System.IO.FileInfo.Directory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1943-264">親ディレクトリのインスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-264">Gets an instance of the parent directory.</span></span></summary>
        <value><span data-ttu-id="e1943-265">このファイルの親ディレクトリを表す <see cref="T:System.IO.DirectoryInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-265">A <see cref="T:System.IO.DirectoryInfo" /> object representing the parent directory of this file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-266">親ディレクトリを文字列として取得するには、<xref:System.IO.FileInfo.DirectoryName%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-266">To get the parent directory as a string, use the <xref:System.IO.FileInfo.DirectoryName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-267">次の例では、ファイルを開いたり作成したりして、完全なパスを決定し、ディレクトリの完全な内容を確認して表示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-267">The following example opens or creates a file, determines its full path, and determines and displays the full contents of the directory.</span></span>  
  
 [!code-cpp[fileinfodirectory#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodirectory/CPP/fileinfodirectory.cpp#1)]
 [!code-csharp[fileinfodirectory#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodirectory/CS/fileinfodirectory.cs#1)]
 [!code-vb[fileinfodirectory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodirectory/VB/fileinfodirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-268">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="e1943-268">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-269">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-269">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-270">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-270">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-271">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-271">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-272">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-272">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryName : string" Usage="System.IO.FileInfo.DirectoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1943-273">ディレクトリの絶対パスを表す文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-273">Gets a string representing the directory's full path.</span></span></summary>
        <value><span data-ttu-id="e1943-274">ディレクトリの絶対パスを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="e1943-274">A string representing the directory's full path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-275">親ディレクトリを <xref:System.IO.DirectoryInfo> オブジェクトとして取得するには、<xref:System.IO.FileInfo.Directory%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-275">To get the parent directory as a <xref:System.IO.DirectoryInfo> object, use the <xref:System.IO.FileInfo.Directory%2A> property.</span></span>  
  
 <span data-ttu-id="e1943-276">最初にを呼び出すと、<xref:System.IO.FileSystemInfo.Refresh%2A> <xref:System.IO.FileInfo> が呼び出され、ファイルに関する情報がキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="e1943-276">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="e1943-277">以降の呼び出しでは、<xref:System.IO.FileSystemInfo.Refresh%2A> を呼び出して、情報の最新のコピーを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-277">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-278">次の例では、指定されたファイルの完全なパスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-278">The following example retrieves the full path of the specified file.</span></span>  
  
 [!code-cpp[System.IO.FileInfo members#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileInfo members/CPP/fileinfomembers.cpp#3)]
 [!code-csharp[System.IO.FileInfo members#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileInfo members/CS/fileinfomembers.cs#3)]
 [!code-vb[System.IO.FileInfo members#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileInfo members/VB/fileinfomembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-279">ディレクトリ名に <see langword="null" /> が渡されました。</span><span class="sxs-lookup"><span data-stu-id="e1943-279"><see langword="null" /> was passed in for the directory name.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="e1943-280">完全修飾パス名がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="e1943-280">The fully qualified path name exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-281">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-281">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-282">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-282">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-283">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-283">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-284">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-284">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Encrypt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Encrypt();" />
      <MemberSignature Language="F#" Value="member this.Encrypt : unit -&gt; unit" Usage="fileInfo.Encrypt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-285">ファイルを暗号化し、そのファイルの暗号化に使用したアカウントだけが暗号化の解除をできるようにします。</span><span class="sxs-lookup"><span data-stu-id="e1943-285">Encrypts a file so that only the account used to encrypt the file can decrypt it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-286"><xref:System.IO.FileInfo.Encrypt%2A> メソッドを使用すると、ファイルを暗号化して、このメソッドの呼び出しに使用されたアカウントだけが暗号化を解除できるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="e1943-286">The <xref:System.IO.FileInfo.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it.</span></span>  <span data-ttu-id="e1943-287"><xref:System.IO.FileInfo.Encrypt%2A> メソッドによって暗号化されたファイルの暗号化を解除するには、<xref:System.IO.FileInfo.Decrypt%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-287">Use the <xref:System.IO.FileInfo.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.FileInfo.Encrypt%2A> method.</span></span>  
  
 <span data-ttu-id="e1943-288"><xref:System.IO.FileInfo.Encrypt%2A> メソッドと <xref:System.IO.FileInfo.Decrypt%2A> メソッドはどちらも、コンピューターにインストールされている暗号化サービスプロバイダー (CSP) と、メソッドを呼び出すプロセスのファイル暗号化キーを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-288">Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</span></span>  
  
 <span data-ttu-id="e1943-289">現在のファイルシステムは NTFS としてフォーマットされている必要があり、現在のオペレーティングシステムは Microsoft Windows NT 以降である必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-289">The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-290">次のコード例では、<xref:System.IO.FileInfo.Encrypt%2A> メソッドと <xref:System.IO.FileInfo.Decrypt%2A> メソッドを使用して、ファイルを暗号化してから復号化します。</span><span class="sxs-lookup"><span data-stu-id="e1943-290">The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt a file and then decrypt it.</span></span>  
  
 [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DriveNotFoundException"><span data-ttu-id="e1943-291">正しくないドライブが指定されました。</span><span class="sxs-lookup"><span data-stu-id="e1943-291">An invalid drive was specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-292">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-292">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-293">ファイルを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1943-293">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e1943-294">このファイル システムは NTFS ではありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-294">The file system is not NTFS.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e1943-295">現在のオペレーティング システムは Microsoft Windows NT 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-295">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-296">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e1943-296">The file described by the current <see cref="T:System.IO.FileInfo" /> object is read-only.</span></span>  
  
<span data-ttu-id="e1943-297">または</span><span class="sxs-lookup"><span data-stu-id="e1943-297">-or-</span></span> 
<span data-ttu-id="e1943-298">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="e1943-298">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="e1943-299">または</span><span class="sxs-lookup"><span data-stu-id="e1943-299">-or-</span></span> 
<span data-ttu-id="e1943-300">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-300">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.FileInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1943-301">ファイルが存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-301">Gets a value indicating whether a file exists.</span></span></summary>
        <value><span data-ttu-id="e1943-302">ファイルが存在する場合は <see langword="true" />。ファイルが存在しないか、ファイルがディレクトリである場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-302"><see langword="true" /> if the file exists; <see langword="false" /> if the file does not exist or if the file is a directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-303">最初にを呼び出すと、<xref:System.IO.FileSystemInfo.Refresh%2A> <xref:System.IO.FileInfo> が呼び出され、ファイルに関する情報がキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="e1943-303">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="e1943-304">以降の呼び出しでは、<xref:System.IO.FileSystemInfo.Refresh%2A> を呼び出して、情報の最新のコピーを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-304">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
 <span data-ttu-id="e1943-305"><xref:System.IO.FileInfo.Exists%2A> プロパティは、指定されたファイルが存在するかどうかを判断する際にエラーが発生した場合に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="e1943-305">The <xref:System.IO.FileInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="e1943-306">これは、無効な文字を含むファイル名の受け渡し、文字の数が多すぎる、ディスクの障害が発生した、または呼び出し元にファイルの読み取りアクセス許可がないなどの例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-306">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-307">次のコード例では、<xref:System.IO.FileInfo.Exists%2A> プロパティを使用して、ファイルを開く前にファイルが存在することを確認します。</span><span class="sxs-lookup"><span data-stu-id="e1943-307">The following code example uses the <xref:System.IO.FileInfo.Exists%2A> property ensure a file exists before opening it.</span></span>  <span data-ttu-id="e1943-308">この手法を使用すると、ファイルが見つからないときにカスタム例外をスローすることができます。</span><span class="sxs-lookup"><span data-stu-id="e1943-308">You can use this technique to throw a custom exception when the file is not found.</span></span>  
  
 [!code-cpp[IO.FileInfo.Exists#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Exists/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Exists/cs/sample.cs#1)]
 [!code-vb[IO.FileInfo.Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Exists/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-309">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-309">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-310">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-310">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-311">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-311">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1943-312">現在の <see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクトが示すファイルのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.FileInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-312">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-313"><xref:System.IO.FileInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-313">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.FileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::FileSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.FileSecurity" Usage="fileInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-314">現在の <see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクトが示すファイルのアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.FileInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-314">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="e1943-315">現在のファイルのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-315">A <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control rules for the current file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-316"><xref:System.IO.FileInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-316">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="e1943-317">ACL は、特定のファイルに対する特定のアクションに対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="e1943-317">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="e1943-318">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1943-318">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-319">次のコード例では、<xref:System.IO.FileInfo.GetAccessControl%2A> メソッドと <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドを使用して、ファイルからアクセス制御リスト (ACL) エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="e1943-319">The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an access control list (ACL) entry from a file.</span></span>  <span data-ttu-id="e1943-320">この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-320">You must supply a valid user or group account to run this example.</span></span>  
  
 [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-321">ファイルを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1943-321">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException"><span data-ttu-id="e1943-322">現在のシステム アカウントには、管理者特権がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-322">The current system account does not have administrative privileges.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="e1943-323">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-323">The file could not be found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-324">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="e1943-324">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="e1943-325">または</span><span class="sxs-lookup"><span data-stu-id="e1943-325">-or-</span></span>  
  
 <span data-ttu-id="e1943-326">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-326">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.FileSecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::FileSecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.FileSecurity" Usage="fileInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="e1943-327">取得するアクセス制御エントリのグループを指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e1943-327">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies which group of access control entries to retrieve.</span></span></param>
        <summary><span data-ttu-id="e1943-328">現在の <see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクトが示すファイルの、指定した種類のアクセス制御リスト (ACL) エントリをカプセル化する <see cref="T:System.IO.FileInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-328">Gets a <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="e1943-329">現在のファイルのアクセス制御規則をカプセル化する <see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-329">A <see cref="T:System.Security.AccessControl.FileSecurity" /> object that encapsulates the access control rules for the current file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-330"><xref:System.IO.FileInfo.GetAccessControl%2A> メソッドを使用して、現在のファイルのアクセス制御リスト (ACL) エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-330">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="e1943-331">ACL は、特定のファイルに対する特定のアクションに対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="e1943-331">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="e1943-332">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1943-332">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-333">ファイルを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1943-333">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException"><span data-ttu-id="e1943-334">現在のシステム アカウントには、管理者特権がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-334">The current system account does not have administrative privileges.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="e1943-335">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-335">The file could not be found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-336">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="e1943-336">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="e1943-337">または</span><span class="sxs-lookup"><span data-stu-id="e1943-337">-or-</span></span>  
  
 <span data-ttu-id="e1943-338">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-338">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.IO.FileInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1943-339">現在のファイルが読み取り専用であるかどうかを判断する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1943-339">Gets or sets a value that determines if the current file is read only.</span></span></summary>
        <value><span data-ttu-id="e1943-340">現在のファイルが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-340"><see langword="true" /> if the current file is read only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-341">現在のファイルが読み取り専用かどうかをすばやく判断または変更するには、<xref:System.IO.FileInfo.IsReadOnly%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-341">Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to quickly determine or change whether the current file is read only.</span></span>  
  
 <span data-ttu-id="e1943-342">最初にを呼び出すと、<xref:System.IO.FileSystemInfo.Refresh%2A> <xref:System.IO.FileInfo> が呼び出され、ファイルに関する情報がキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="e1943-342">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="e1943-343">以降の呼び出しでは、<xref:System.IO.FileSystemInfo.Refresh%2A> を呼び出して、情報の最新のコピーを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-343">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-344">次の例では、<xref:System.IO.FileInfo.IsReadOnly%2A> プロパティを使用して、ファイルを読み取り専用としてマークした後、読み取り/書き込み可能としてマークします。</span><span class="sxs-lookup"><span data-stu-id="e1943-344">The following example uses the <xref:System.IO.FileInfo.IsReadOnly%2A> property to mark a file as read only and then mark it as read-write.</span></span>  
  
 [!code-cpp[IO.FileInfo.IsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.isReadOnly/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.isReadOnly/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.isReadOnly/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-345">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-345">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-346">ファイルを開くときに、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1943-346">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-347">この操作は、現在のプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="e1943-347">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="e1943-348">または</span><span class="sxs-lookup"><span data-stu-id="e1943-348">-or-</span></span>  
  
 <span data-ttu-id="e1943-349">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-349">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-350">ユーザーには書き込みのアクセス許可がありませんが、このプロパティを <see langword="false" /> に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="e1943-350">The user does not have write permission, but attempted to set this property to <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.FileInfo.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1943-351">現在のファイルのサイズをバイト単位で取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-351">Gets the size, in bytes, of the current file.</span></span></summary>
        <value><span data-ttu-id="e1943-352">現在のファイルのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="e1943-352">The size of the current file in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-353"><xref:System.IO.FileInfo> オブジェクトの現在のインスタンスが、次のいずれかの <xref:System.IO.DirectoryInfo> メソッドから返された場合は、<xref:System.IO.FileInfo.Length%2A> プロパティの値が事前キャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="e1943-353">The value of the <xref:System.IO.FileInfo.Length%2A> property is pre-cached if the current instance of the <xref:System.IO.FileInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>  
  
 <span data-ttu-id="e1943-354">最新の値を取得するには、<xref:System.IO.FileSystemInfo.Refresh%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e1943-354">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-355">次の例では、指定されたファイルのサイズが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-355">The following example displays the size of the specified files.</span></span>  
  
 [!code-cpp[FileLength#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileLength/CPP/filelength.cpp#1)]
 [!code-csharp[FileLength#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileLength/CS/filelength.cs#1)]
 [!code-vb[FileLength#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileLength/VB/filelength.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-356"><see cref="M:System.IO.FileSystemInfo.Refresh" /> はファイルまたはディレクトリの状態を更新することはできません。</span><span class="sxs-lookup"><span data-stu-id="e1943-356"><see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot update the state of the file or directory.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-357">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="e1943-357">The file does not exist.</span></span>  
  
<span data-ttu-id="e1943-358">または</span><span class="sxs-lookup"><span data-stu-id="e1943-358">-or-</span></span> 
<span data-ttu-id="e1943-359"><see langword="Length" /> プロパティはディレクトリに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-359">The <see langword="Length" /> property is called for a directory.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-360">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-360">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-361">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-361">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-362">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-362">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destFileName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="fileInfo.MoveTo destFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="e1943-363">ファイルの移動先のパス。異なるファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e1943-363">The path to move the file to, which can specify a different file name.</span></span></param>
        <summary><span data-ttu-id="e1943-364">指定したファイルを新しい場所に移動します。オプションで新しいファイル名を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="e1943-364">Moves a specified file to a new location, providing the option to specify a new file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="e1943-365">この方法は、ディスクボリューム間で機能します。</span><span class="sxs-lookup"><span data-stu-id="e1943-365">This method works across disk volumes.</span></span> <span data-ttu-id="e1943-366">たとえば、ファイル c:\MyFile.txt を d:\public に移動し、rename.txt という名前に変更できます。</span><span class="sxs-lookup"><span data-stu-id="e1943-366">For example, the file c:\MyFile.txt can be moved to d:\public and renamed NewFile.txt.</span></span>

<span data-ttu-id="e1943-367">このメソッドは、コピー先ファイルが既に存在する場合は上書きしません。</span><span class="sxs-lookup"><span data-stu-id="e1943-367">This method does not overwrite the destination file if it already exists.</span></span> <span data-ttu-id="e1943-368">そのためには、代わりに <xref:System.IO.FileInfo.MoveTo(System.String,System.Boolean)> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e1943-368">For that purpose, call <xref:System.IO.FileInfo.MoveTo(System.String,System.Boolean)> instead.</span></span>

## Examples

<span data-ttu-id="e1943-369">ファイルを別の場所に移動し、ファイルの名前を変更する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-369">The following example demonstrates moving a file to a different location and renaming the file.</span></span>

[!code-csharp[IO.FileInfo.MoveTo#1](~/samples/snippets/csharp/VS_Snippets_Misc/IO.FileInfo.MoveTo/CS/Program.cs#1)]
[!code-vb[IO.FileInfo.MoveTo#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/IO.FileInfo.MoveTo/VB/Program.vb#1)]

          ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-370">移動先のファイルが既に存在する、移動先のデバイスが準備できていないなど、I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="e1943-370">An I/O error occurs, such as the destination file already exists or the destination device is not ready.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-371"><paramref name="destFileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1943-371"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-372"><paramref name="destFileName" /> は空で、空白のみで構成されているか、正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="e1943-372"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-373">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-373">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-374"><paramref name="destFileName" /> は読み取り専用か、ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-374"><paramref name="destFileName" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-375">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-375">The file is not found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-376">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="e1943-376">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="e1943-377">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e1943-377">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e1943-378"><paramref name="destFileName" /> の文字列の途中にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e1943-378"><paramref name="destFileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-379">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-379">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-380">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-380">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-381">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-381">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.MoveTo(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string * bool -&gt; unit" Usage="fileInfo.MoveTo (destFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="destFileName"><span data-ttu-id="e1943-382">ファイルの移動先のパス。異なるファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e1943-382">The path to move the file to, which can specify a different file name.</span></span></param>
        <param name="overwrite"><span data-ttu-id="e1943-383">宛先ファイルが既に存在する場合にそれを上書きする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-383"><see langword="true" /> to overwrite the destination file if it already exists; <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="e1943-384">指定したファイルを新しい場所に移動します。新しいファイル名を指定し、既に存在する場合は、対象ファイルを上書きするオプションが用意されています。</span><span class="sxs-lookup"><span data-stu-id="e1943-384">Moves a specified file to a new location, providing the options to specify a new file name and to overwrite the destination file if it already exists.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="e1943-385">この方法は、ディスクボリューム間で機能します。</span><span class="sxs-lookup"><span data-stu-id="e1943-385">This method works across disk volumes.</span></span> <span data-ttu-id="e1943-386">たとえば、ファイル c:\MyFile.txt を d:\public に移動し、rename.txt という名前に変更できます。</span><span class="sxs-lookup"><span data-stu-id="e1943-386">For example, the file c:\MyFile.txt can be moved to d:\public and renamed NewFile.txt.</span></span>

## Examples

<span data-ttu-id="e1943-387">ファイルを別の場所に移動し、ファイルの名前を変更する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-387">The following example demonstrates moving a file to a different location and renaming the file.</span></span>

[!code-csharp[IO.FileInfo.MoveTo#1](~/samples/snippets/csharp/VS_Snippets_Misc/IO.FileInfo.MoveTo/CS/Program.cs#1)]
[!code-vb[IO.FileInfo.MoveTo#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/IO.FileInfo.MoveTo/VB/Program.vb#1)]

          ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-388">宛先デバイスの準備ができていないなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1943-388">An I/O error occurred, such as the destination device is not ready.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-389"><paramref name="destFileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1943-389"><paramref name="destFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-390"><paramref name="destFileName" /> は空で、空白のみで構成されているか、正しくない文字を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="e1943-390"><paramref name="destFileName" /> is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-391">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-391">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-392"><paramref name="destFileName" /> は読み取り専用か、ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-392"><paramref name="destFileName" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-393">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-393">The file is not found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-394">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="e1943-394">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="e1943-395">指定されたパスかファイル名、またはその両方がシステム定義の最大文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e1943-395">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e1943-396"><paramref name="destFileName" /> の文字列の途中にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e1943-396"><paramref name="destFileName" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-397">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-397">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-398">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-398">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-399">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-399">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.FileInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1943-400">ファイルの名前を取得する。</span><span class="sxs-lookup"><span data-stu-id="e1943-400">Gets the name of the file.</span></span></summary>
        <value><span data-ttu-id="e1943-401">ファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="e1943-401">The name of the file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-402">最初にを呼び出すと、<xref:System.IO.FileSystemInfo.Refresh%2A> <xref:System.IO.FileInfo> が呼び出され、ファイルに関する情報がキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="e1943-402">When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file.</span></span> <span data-ttu-id="e1943-403">以降の呼び出しでは、<xref:System.IO.FileSystemInfo.Refresh%2A> を呼び出して、情報の最新のコピーを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-403">On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.</span></span>  
  
 <span data-ttu-id="e1943-404">ファイルの名前には、ファイル拡張子が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e1943-404">The name of the file includes the file extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-405">次の例では、`Name` プロパティを使用して、現在のディレクトリにあるファイルの名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-405">The following example uses the `Name` property to display the names of files in the current directory.</span></span>  
  
 [!code-cpp[fileinfoname#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoname/CPP/fileinfoname.cpp#1)]
 [!code-csharp[fileinfoname#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoname/CS/fileinfoname.cs#1)]
 [!code-vb[fileinfoname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoname/VB/fileinfoname.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-406">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-406">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-407">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-407">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-408">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-408">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1943-409">さまざまな読み書き権と共有権でファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e1943-409">Opens a file with various read/write and sharing privileges.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Open (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Open(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Open(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (mode As FileMode) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Open(System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="member this.Open : System.IO.FileMode -&gt; System.IO.FileStream" Usage="fileInfo.Open mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="e1943-410">ファイルを開くときのモード (<see cref="T:System.IO.FileMode" />、<see langword="Open" /> など) を指定する定数 <see langword="Append" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-410">A <see cref="T:System.IO.FileMode" /> constant specifying the mode (for example, <see langword="Open" /> or <see langword="Append" />) in which to open the file.</span></span></param>
        <summary><span data-ttu-id="e1943-411">指定したモードでファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e1943-411">Opens a file in the specified mode.</span></span></summary>
        <returns><span data-ttu-id="e1943-412">読み書き可能、共有不可の権限を適用し、指定したモードで開くファイル。</span><span class="sxs-lookup"><span data-stu-id="e1943-412">A file opened in the specified mode, with read/write access and unshared.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1943-413">次の例では、ファイルを開き、いくつかの情報をファイルに追加して、ファイルを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e1943-413">The following example opens a file, adds some information to the file, and reads the file.</span></span>  
  
 [!code-cpp[finfo open1#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Open1/CPP/finfo open1.cpp#1)]
 [!code-csharp[finfo open1#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Open1/CS/finfo open1.cs#1)]
 [!code-vb[finfo open1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Open1/VB/finfo open1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-414">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-414">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-415">このファイルは読み取り専用か、ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-415">The file is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-416">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="e1943-416">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-417">ファイルは既に開いています。</span><span class="sxs-lookup"><span data-stu-id="e1943-417">The file is already open.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-418">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-418">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-419">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-419">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-420">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-420">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Open(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (mode As FileMode, access As FileAccess) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Open(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="member this.Open : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.FileStream" Usage="fileInfo.Open (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="e1943-421">ファイルを開くときのモード (<see cref="T:System.IO.FileMode" />、<see langword="Open" /> など) を指定する定数 <see langword="Append" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-421">A <see cref="T:System.IO.FileMode" /> constant specifying the mode (for example, <see langword="Open" /> or <see langword="Append" />) in which to open the file.</span></span></param>
        <param name="access"><span data-ttu-id="e1943-422">ファイルを <see cref="T:System.IO.FileAccess" />、<see langword="Read" />、または <see langword="Write" /> のいずれのアクセス権で開くかを指定する <see langword="ReadWrite" /> 定数。</span><span class="sxs-lookup"><span data-stu-id="e1943-422">A <see cref="T:System.IO.FileAccess" /> constant specifying whether to open the file with <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" /> file access.</span></span></param>
        <summary><span data-ttu-id="e1943-423">読み取り可、書き込み可、または読み書き込み可などのアクセス権を指定し、指定したモードでファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e1943-423">Opens a file in the specified mode with read, write, or read/write access.</span></span></summary>
        <returns><span data-ttu-id="e1943-424">指定したモードとアクセス権、および非共有の権限で開く <see cref="T:System.IO.FileStream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-424">A <see cref="T:System.IO.FileStream" /> object opened in the specified mode and access, and unshared.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1943-425">次の例では、ファイルを読み取り専用として開き、ファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e1943-425">The following example opens a file as read-only and reads from the file.</span></span>  
  
 [!code-cpp[finfo open2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Open2/CPP/finfo open2.cpp#1)]
 [!code-csharp[finfo open2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Open2/CS/finfo open2.cs#1)]
 [!code-vb[finfo open2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Open2/VB/finfo open2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-426">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-426">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-427">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-427">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-428"><see cref="P:System.IO.FileInfo.Name" /> は読み取り専用か、ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-428"><see cref="P:System.IO.FileInfo.Name" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-429">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="e1943-429">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-430">ファイルは既に開いています。</span><span class="sxs-lookup"><span data-stu-id="e1943-430">The file is already open.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-431">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-431">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-432">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-432">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-433">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-433">How to: Write Text to a File</span></span></related>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-434"><see cref="P:System.IO.FileInfo.Name" /> が空か、空白文字だけを含んでいます。</span><span class="sxs-lookup"><span data-stu-id="e1943-434"><see cref="P:System.IO.FileInfo.Name" /> is empty or contains only white spaces.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-435">1 つ以上の引数が null です。</span><span class="sxs-lookup"><span data-stu-id="e1943-435">One or more arguments is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream Open(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (mode As FileMode, access As FileAccess, share As FileShare) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ Open(System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberSignature Language="F#" Value="member this.Open : System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.FileStream" Usage="fileInfo.Open (mode, access, share)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="e1943-436">ファイルを開くときのモード (<see cref="T:System.IO.FileMode" />、<see langword="Open" /> など) を指定する定数 <see langword="Append" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-436">A <see cref="T:System.IO.FileMode" /> constant specifying the mode (for example, <see langword="Open" /> or <see langword="Append" />) in which to open the file.</span></span></param>
        <param name="access"><span data-ttu-id="e1943-437">ファイルを <see cref="T:System.IO.FileAccess" />、<see langword="Read" />、または <see langword="Write" /> のいずれのアクセス権で開くかを指定する <see langword="ReadWrite" /> 定数。</span><span class="sxs-lookup"><span data-stu-id="e1943-437">A <see cref="T:System.IO.FileAccess" /> constant specifying whether to open the file with <see langword="Read" />, <see langword="Write" />, or <see langword="ReadWrite" /> file access.</span></span></param>
        <param name="share"><span data-ttu-id="e1943-438">ファイルに対して他の <see cref="T:System.IO.FileShare" /> オブジェクトが持つアクセスの種類を指定する <see langword="FileStream" /> 定数。</span><span class="sxs-lookup"><span data-stu-id="e1943-438">A <see cref="T:System.IO.FileShare" /> constant specifying the type of access other <see langword="FileStream" /> objects have to this file.</span></span></param>
        <summary><span data-ttu-id="e1943-439">読み取り可、書き込み可、読み書き可などのアクセス権を指定し、指定したモードと共有オプションでファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e1943-439">Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.</span></span></summary>
        <returns><span data-ttu-id="e1943-440">指定したモード、アクセス権、および共有オプションで開く <see cref="T:System.IO.FileStream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-440">A <see cref="T:System.IO.FileStream" /> object opened with the specified mode, access, and sharing options.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1943-441">次の例では、読み取りと書き込みのためにファイルを開き、他のユーザーまたはプロセスへのアクセスを禁止する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e1943-441">The following example demonstrates opening a file for reading and writing, but disallowing access to other users or processes.</span></span>  
  
 [!code-cpp[fileinfoopen#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoopen/CPP/fileinfoopen.cpp#1)]
 [!code-csharp[fileinfoopen#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoopen/CS/fileinfoopen.cs#1)]
 [!code-vb[fileinfoopen#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoopen/VB/fileinfoopen.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-442">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-442">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-443">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-443">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-444"><see cref="P:System.IO.FileInfo.Name" /> は読み取り専用か、ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-444"><see cref="P:System.IO.FileInfo.Name" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-445">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="e1943-445">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-446">ファイルは既に開いています。</span><span class="sxs-lookup"><span data-stu-id="e1943-446">The file is already open.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-447"><see cref="P:System.IO.FileInfo.Name" /> が空か、空白文字だけを含んでいます。</span><span class="sxs-lookup"><span data-stu-id="e1943-447"><see cref="P:System.IO.FileInfo.Name" /> is empty or contains only white spaces.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-448">1 つ以上の引数が null です。</span><span class="sxs-lookup"><span data-stu-id="e1943-448">One or more arguments is null.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-449">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-449">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-450">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-450">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-451">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-451">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.FileStream OpenRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream OpenRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.OpenRead" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead () As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ OpenRead();" />
      <MemberSignature Language="F#" Value="member this.OpenRead : unit -&gt; System.IO.FileStream" Usage="fileInfo.OpenRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-452">読み取り専用の <see cref="T:System.IO.FileStream" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-452">Creates a read-only <see cref="T:System.IO.FileStream" />.</span></span></summary>
        <returns><span data-ttu-id="e1943-453">新しい読み取り専用の <see cref="T:System.IO.FileStream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-453">A new read-only <see cref="T:System.IO.FileStream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-454">このメソッドは、<xref:System.IO.FileShare> モードが <xref:System.IO.FileShare.Read>に設定された読み取り専用の <xref:System.IO.FileStream> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e1943-454">This method returns a read-only <xref:System.IO.FileStream> object with the <xref:System.IO.FileShare> mode set to <xref:System.IO.FileShare.Read>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-455">次の例では、ファイルを読み取り専用として開き、そこから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e1943-455">The following example opens a file as read-only and reads from it.</span></span>  
  
 [!code-cpp[finfo openread#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenRead/CPP/finfo openread.cpp#1)]
 [!code-csharp[finfo openread#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenRead/CS/finfo openread.cs#1)]
 [!code-vb[finfo openread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenRead/VB/finfo openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-456"><see cref="P:System.IO.FileInfo.Name" /> は読み取り専用か、ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-456"><see cref="P:System.IO.FileInfo.Name" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-457">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="e1943-457">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1943-458">ファイルは既に開いています。</span><span class="sxs-lookup"><span data-stu-id="e1943-458">The file is already open.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-459">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-459">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-460">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-460">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-461">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-461">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e1943-462">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="e1943-462">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public System.IO.StreamReader OpenText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.StreamReader OpenText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.OpenText" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenText () As StreamReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::StreamReader ^ OpenText();" />
      <MemberSignature Language="F#" Value="member this.OpenText : unit -&gt; System.IO.StreamReader" Usage="fileInfo.OpenText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-463">既存のテキスト ファイルからの読み取りを行う、UTF8 エンコーディングの <see cref="T:System.IO.StreamReader" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-463">Creates a <see cref="T:System.IO.StreamReader" /> with UTF8 encoding that reads from an existing text file.</span></span></summary>
        <returns><span data-ttu-id="e1943-464">UTF8 エンコーディングの新しい <see langword="StreamReader" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-464">A new <see langword="StreamReader" /> with UTF8 encoding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1943-465">次の例では、ファイルからテキストを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e1943-465">The following example reads text from a file.</span></span>  
  
 [!code-cpp[finfo opentext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenText/CPP/file opentext.cpp#1)]
 [!code-csharp[finfo opentext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenText/CS/file opentext.cs#1)]
 [!code-vb[finfo opentext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenText/VB/file opentext.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1943-466">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-466">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-467">ファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-467">The file is not found.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-468"><see cref="P:System.IO.FileInfo.Name" /> は読み取り専用か、ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-468"><see cref="P:System.IO.FileInfo.Name" /> is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-469">マップされていないドライブにあるなど、指定されたパスが無効です。</span><span class="sxs-lookup"><span data-stu-id="e1943-469">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-470">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-470">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-471">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-471">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-472">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-472">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="e1943-473">方法 : 新しく作成されたデータ ファイルに対して読み書きする</span><span class="sxs-lookup"><span data-stu-id="e1943-473">How to: Read and Write to a Newly Created Data File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.FileStream OpenWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileStream OpenWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.OpenWrite" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite () As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ OpenWrite();" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : unit -&gt; System.IO.FileStream" Usage="fileInfo.OpenWrite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-474">書き込み専用の <see cref="T:System.IO.FileStream" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-474">Creates a write-only <see cref="T:System.IO.FileStream" />.</span></span></summary>
        <returns><span data-ttu-id="e1943-475">新規または既存のファイルの書き込み専用の非共有 <see cref="T:System.IO.FileStream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-475">A write-only unshared <see cref="T:System.IO.FileStream" /> object for a new or existing file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-476">ファイルパスのファイルが既に存在する場合は、<xref:System.IO.FileInfo.OpenWrite%2A> メソッドによってファイルが開かれます。ファイルが存在しない場合は、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="e1943-476">The <xref:System.IO.FileInfo.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist.</span></span> <span data-ttu-id="e1943-477">既存のファイルの場合、新しいテキストは既存のテキストに追加されません。</span><span class="sxs-lookup"><span data-stu-id="e1943-477">For an existing file, it does not append the new text to the existing text.</span></span> <span data-ttu-id="e1943-478">代わりに、既存の文字を新しい文字で上書きします。</span><span class="sxs-lookup"><span data-stu-id="e1943-478">Instead, it overwrites the existing characters with the new characters.</span></span> <span data-ttu-id="e1943-479">長い文字列 ("This is the OpenWrite method" など) を短い文字列 ("Second run" など) で上書きする場合、ファイルには文字列の組み合わせ ("OpenWrite メソッドの2番目の runtest") が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e1943-479">If you overwrite a longer string (such as "This is a test of the OpenWrite method") with a shorter string (like "Second run"), the file will contain a mix of the strings ("Second runtest of the OpenWrite method").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-480">次の例では、書き込み用にファイルを開き、ファイルを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e1943-480">The following example opens a file for writing and then reads from the file.</span></span>  
  
 [!code-cpp[finfo openwrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenWrite/CPP/file openwrite.cpp#1)]
 [!code-csharp[finfo openwrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenWrite/CS/file openwrite.cs#1)]
 [!code-vb[finfo openwrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenWrite/VB/file openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-481"><see cref="T:System.IO.FileInfo" /> オブジェクトのインスタンスを作成するときに指定されたパスが、読み取り専用であるかディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e1943-481">The path specified when creating an instance of the <see cref="T:System.IO.FileInfo" /> object is read-only or is a directory.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1943-482"><see cref="T:System.IO.FileInfo" /> オブジェクトのインスタンスを作成するときに指定されたパスが、マップされていないドライブにあるなど、正しくありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-482">The path specified when creating an instance of the <see cref="T:System.IO.FileInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1943-483">指定したファイルの内容を現在の <see cref="T:System.IO.FileInfo" /> オブジェクトが示すファイルと置き換え、元のファイルを削除し、置き換えられたファイルのバックアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-483">Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.FileInfo" /> object, deleting the original file, and creating a backup of the replaced file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-484">現在の <xref:System.IO.FileInfo> オブジェクトによって記述されたファイルの内容でファイルをすばやく置き換える必要がある場合は、<xref:System.IO.FileInfo.Replace%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-484">Use the <xref:System.IO.FileInfo.Replace%2A> methods when you need to quickly replace a file with the contents of the file described by the current <xref:System.IO.FileInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo Replace(string destinationFileName, string destinationBackupFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (destinationFileName As String, destinationBackupFileName As String) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ Replace(System::String ^ destinationFileName, System::String ^ destinationBackupFileName);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; System.IO.FileInfo" Usage="fileInfo.Replace (destinationFileName, destinationBackupFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="destinationBackupFileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="destinationFileName"><span data-ttu-id="e1943-485">現在のファイルと置き換えるファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="e1943-485">The name of a file to replace with the current file.</span></span></param>
        <param name="destinationBackupFileName"><span data-ttu-id="e1943-486"><paramref name="destFileName" /> パラメーターが示すファイルのバックアップを作成するために使用するファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="e1943-486">The name of a file with which to create a backup of the file described by the <paramref name="destFileName" /> parameter.</span></span></param>
        <summary><span data-ttu-id="e1943-487">指定したファイルの内容を現在の <see cref="T:System.IO.FileInfo" /> オブジェクトが示すファイルと置き換え、元のファイルを削除し、置き換えられたファイルのバックアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-487">Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.FileInfo" /> object, deleting the original file, and creating a backup of the replaced file.</span></span></summary>
        <returns><span data-ttu-id="e1943-488"><see cref="T:System.IO.FileInfo" /> パラメーターが示すファイルに関する情報をカプセル化する <paramref name="destFileName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-488">A <see cref="T:System.IO.FileInfo" /> object that encapsulates information about the file described by the <paramref name="destFileName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-489"><xref:System.IO.FileInfo.Replace%2A> メソッドは、指定されたファイルの内容を、現在の <xref:System.IO.FileInfo> オブジェクトが示すファイルの内容に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="e1943-489">The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.</span></span>  <span data-ttu-id="e1943-490">また、置き換えられたファイルのバックアップも作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-490">It also creates a backup of the file that was replaced.</span></span>  <span data-ttu-id="e1943-491">最後に、上書きされたファイルを記述する新しい <xref:System.IO.FileInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e1943-491">Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.</span></span>  
  
 <span data-ttu-id="e1943-492">置き換えられるファイルのバックアップを作成しない場合は、`destBackupFileName` パラメーターに `null` を渡します。</span><span class="sxs-lookup"><span data-stu-id="e1943-492">Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-493">次の例では、<xref:System.IO.File.Replace%2A> メソッドを使用して、ファイルを別のファイルに置き換え、置き換えられたファイルのバックアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-493">The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.</span></span>  
  
 [!code-cpp[IO.FileInfo.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Replace/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Replace/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Replace/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-494"><paramref name="destFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-494">The path described by the <paramref name="destFileName" /> parameter was not of a legal form.</span></span>  
  
<span data-ttu-id="e1943-495">または</span><span class="sxs-lookup"><span data-stu-id="e1943-495">-or-</span></span> 
<span data-ttu-id="e1943-496"><paramref name="destBackupFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-496">The path described by the <paramref name="destBackupFileName" /> parameter was not of a legal form.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-497"><paramref name="destFileName" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1943-497">The <paramref name="destFileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-498">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-498">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span>  
  
<span data-ttu-id="e1943-499">または</span><span class="sxs-lookup"><span data-stu-id="e1943-499">-or-</span></span> 
<span data-ttu-id="e1943-500"><paramref name="destinationFileName" /> パラメーターで記述されているファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-500">The file described by the <paramref name="destinationFileName" /> parameter could not be found.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e1943-501">現在のオペレーティング システムは Microsoft Windows NT 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-501">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo Replace(string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (destinationFileName As String, destinationBackupFileName As String, ignoreMetadataErrors As Boolean) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileInfo ^ Replace(System::String ^ destinationFileName, System::String ^ destinationBackupFileName, bool ignoreMetadataErrors);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * bool -&gt; System.IO.FileInfo" Usage="fileInfo.Replace (destinationFileName, destinationBackupFileName, ignoreMetadataErrors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="destinationBackupFileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="ignoreMetadataErrors" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="destinationFileName"><span data-ttu-id="e1943-502">現在のファイルと置き換えるファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="e1943-502">The name of a file to replace with the current file.</span></span></param>
        <param name="destinationBackupFileName"><span data-ttu-id="e1943-503"><paramref name="destFileName" /> パラメーターが示すファイルのバックアップを作成するために使用するファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="e1943-503">The name of a file with which to create a backup of the file described by the <paramref name="destFileName" /> parameter.</span></span></param>
        <param name="ignoreMetadataErrors"><span data-ttu-id="e1943-504">置き換えられるファイルから置き換えるファイルへのマージ エラー (属性や ACL など) を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1943-504"><see langword="true" /> to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e1943-505">指定したファイルの内容を現在の <see cref="T:System.IO.FileInfo" /> オブジェクトが示すファイルと置き換え、元のファイルを削除し、置き換えられたファイルのバックアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-505">Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.FileInfo" /> object, deleting the original file, and creating a backup of the replaced file.</span></span>  <span data-ttu-id="e1943-506">また、マージ エラーを無視するかどうかも指定します。</span><span class="sxs-lookup"><span data-stu-id="e1943-506">Also specifies whether to ignore merge errors.</span></span></summary>
        <returns><span data-ttu-id="e1943-507"><see cref="T:System.IO.FileInfo" /> パラメーターが示すファイルに関する情報をカプセル化する <paramref name="destFileName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-507">A <see cref="T:System.IO.FileInfo" /> object that encapsulates information about the file described by the <paramref name="destFileName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-508"><xref:System.IO.FileInfo.Replace%2A> メソッドは、指定されたファイルの内容を、現在の <xref:System.IO.FileInfo> オブジェクトが示すファイルの内容に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="e1943-508">The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.</span></span>  <span data-ttu-id="e1943-509">また、置き換えられたファイルのバックアップも作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-509">It also creates a backup of the file that was replaced.</span></span>  <span data-ttu-id="e1943-510">最後に、上書きされたファイルを記述する新しい <xref:System.IO.FileInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e1943-510">Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.</span></span>  
  
 <span data-ttu-id="e1943-511">置き換えられるファイルのバックアップを作成しない場合は、`destBackupFileName` パラメーターに `null` を渡します。</span><span class="sxs-lookup"><span data-stu-id="e1943-511">Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-512">次の例では、<xref:System.IO.File.Replace%2A> メソッドを使用して、ファイルを別のファイルに置き換え、置き換えられたファイルのバックアップを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-512">The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.</span></span>  
  
 [!code-cpp[IO.FileInfo.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Replace/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Replace/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Replace/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1943-513"><paramref name="destFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-513">The path described by the <paramref name="destFileName" /> parameter was not of a legal form.</span></span>  
  
<span data-ttu-id="e1943-514">または</span><span class="sxs-lookup"><span data-stu-id="e1943-514">-or-</span></span> 
<span data-ttu-id="e1943-515"><paramref name="destBackupFileName" /> パラメーターが示すパスは正しい書式ではありませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-515">The path described by the <paramref name="destBackupFileName" /> parameter was not of a legal form.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-516"><paramref name="destFileName" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1943-516">The <paramref name="destFileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e1943-517">現在の <see cref="T:System.IO.FileInfo" /> オブジェクトで記述されているファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-517">The file described by the current <see cref="T:System.IO.FileInfo" /> object could not be found.</span></span>  
  
<span data-ttu-id="e1943-518">または</span><span class="sxs-lookup"><span data-stu-id="e1943-518">-or-</span></span> 
<span data-ttu-id="e1943-519"><paramref name="destinationFileName" /> パラメーターで記述されているファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-519">The file described by the <paramref name="destinationFileName" /> parameter could not be found.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e1943-520">現在のオペレーティング システムは Microsoft Windows NT 以降ではありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-520">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.FileSecurity -&gt; unit" Usage="fileInfo.SetAccessControl fileSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileSecurity"><span data-ttu-id="e1943-521">現在のファイルに適用するアクセス制御リスト (ACL) エントリを示す <see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1943-521">A <see cref="T:System.Security.AccessControl.FileSecurity" /> object that describes an access control list (ACL) entry to apply to the current file.</span></span></param>
        <summary><span data-ttu-id="e1943-522"><see cref="T:System.Security.AccessControl.FileSecurity" /> オブジェクトが示すアクセス制御リスト (ACL) エントリを、現在の <see cref="T:System.IO.FileInfo" /> オブジェクトが示すファイルに適用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-522">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.FileSecurity" /> object to the file described by the current <see cref="T:System.IO.FileInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1943-523"><xref:System.IO.FileInfo.SetAccessControl%2A> メソッドは、継承されていない ACL リストを表す現在のファイルにアクセス制御リスト (ACL) エントリを適用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-523">The <xref:System.IO.FileInfo.SetAccessControl%2A> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list.</span></span>  
  
 <span data-ttu-id="e1943-524">ファイルの ACL エントリを追加または削除する必要がある場合は常に、<xref:System.IO.FileInfo.SetAccessControl%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-524">Use the <xref:System.IO.FileInfo.SetAccessControl%2A> method whenever you need to add or remove ACL entries from a file.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e1943-525">`fileSecurity` パラメーターに指定された ACL は、ファイルの既存の ACL を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="e1943-525">The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file.</span></span> <span data-ttu-id="e1943-526">新しいユーザーにアクセス許可を追加するには、<xref:System.IO.Directory.GetAccessControl%2A> メソッドを使用して既存の ACL を取得し、変更した後、<xref:System.IO.FileInfo.SetAccessControl%2A> を使用してファイルに再度適用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-526">To add permissions for a new user, use the <xref:System.IO.Directory.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileInfo.SetAccessControl%2A> to apply it back to the file.</span></span>  
  
 <span data-ttu-id="e1943-527">ACL は、特定のファイルに対する特定のアクションに対する権限を持っている、または所有していない個人やグループを記述します。</span><span class="sxs-lookup"><span data-stu-id="e1943-527">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</span></span> <span data-ttu-id="e1943-528">詳細については、「[方法: アクセス制御リスト エントリを追加または削除する](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e1943-528">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="e1943-529"><xref:System.IO.FileInfo.SetAccessControl%2A> メソッドは、オブジェクトの作成後に変更された <xref:System.Security.AccessControl.FileSecurity> オブジェクトのみを保持します。</span><span class="sxs-lookup"><span data-stu-id="e1943-529">The <xref:System.IO.FileInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="e1943-530"><xref:System.Security.AccessControl.FileSecurity> オブジェクトが変更されていない場合は、ファイルに保存されません。</span><span class="sxs-lookup"><span data-stu-id="e1943-530">If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="e1943-531">そのため、1つのファイルから <xref:System.Security.AccessControl.FileSecurity> オブジェクトを取得し、別のファイルに同じオブジェクトを再適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="e1943-531">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="e1943-532">ACL 情報をあるファイルから別のファイルにコピーするには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="e1943-532">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="e1943-533"><xref:System.IO.FileInfo.GetAccessControl%2A> メソッドを使用して、ソースファイルから <xref:System.Security.AccessControl.FileSecurity> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-533">Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="e1943-534">コピー先ファイルの新しい <xref:System.Security.AccessControl.FileSecurity> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1943-534">Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="e1943-535">ACL 情報を取得するには、ソース <xref:System.Security.AccessControl.FileSecurity> オブジェクトの <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> または <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-535">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="e1943-536">手順 3. で取得した情報をターゲット <xref:System.Security.AccessControl.FileSecurity> オブジェクトにコピーするには、<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> または <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-536">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object.</span></span>  
  
5.  <span data-ttu-id="e1943-537"><xref:System.IO.FileInfo.SetAccessControl%2A> メソッドを使用して、変換先の <xref:System.Security.AccessControl.FileSecurity> オブジェクトを変換先ファイルに設定します。</span><span class="sxs-lookup"><span data-stu-id="e1943-537">Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.FileInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1943-538">次のコード例では、<xref:System.IO.FileInfo.GetAccessControl%2A> メソッドと <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドを使用して、ファイルから ACL エントリを追加してから削除します。</span><span class="sxs-lookup"><span data-stu-id="e1943-538">The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an ACL entry from a file.</span></span>  <span data-ttu-id="e1943-539">この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-539">You must supply a valid user or group account to run this example.</span></span>  
  
 [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1943-540"><paramref name="fileSecurity" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1943-540">The <paramref name="fileSecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="e1943-541">ファイルを検出または変更できませんでした。</span><span class="sxs-lookup"><span data-stu-id="e1943-541">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1943-542">現在のプロセスには、ファイルを開くために必要なアクセス権がありません。</span><span class="sxs-lookup"><span data-stu-id="e1943-542">The current process does not have access to open the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fileInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1943-543">このパスを文字列として返します。</span><span class="sxs-lookup"><span data-stu-id="e1943-543">Returns the path as a string.</span></span> <span data-ttu-id="e1943-544">完全なパスには <see cref="P:System.IO.FileInfo.Name" /> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1943-544">Use the <see cref="P:System.IO.FileInfo.Name" /> property for the full path.</span></span></summary>
        <returns><span data-ttu-id="e1943-545">パスを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="e1943-545">A string representing the path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
> <span data-ttu-id="e1943-546"><xref:System.IO.FileInfo.ToString%2A> メソッドによって返される文字列は、<xref:System.IO.FileInfo> コンストラクターに渡されたパスを表します。</span><span class="sxs-lookup"><span data-stu-id="e1943-546">The string returned by the <xref:System.IO.FileInfo.ToString%2A> method represents the path that was passed to the <xref:System.IO.FileInfo> constructor.</span></span> <span data-ttu-id="e1943-547">`ToString` メソッドを呼び出す代わりに、目的に応じて、次のいずれかのプロパティの値を取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1943-547">Instead of calling the `ToString` method, you should retrieve the value of either of the following properties, depending on your intent:</span></span>
> - <span data-ttu-id="e1943-548">親パス情報を含まないファイルの名前を取得するために <xref:System.IO.FileInfo.Name>します。</span><span class="sxs-lookup"><span data-stu-id="e1943-548"><xref:System.IO.FileInfo.Name>, to get the name of the file, without any parent path information.</span></span>
> - <span data-ttu-id="e1943-549">[FullName](xref:System.IO.FileSystemInfo.FullName)。ファイルの完全修飾パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1943-549">[FullName](xref:System.IO.FileSystemInfo.FullName), to get the fully qualified path of the file.</span></span>
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="e1943-550">ファイルおよびストリーム入出力</span><span class="sxs-lookup"><span data-stu-id="e1943-550">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="e1943-551">方法 : ファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="e1943-551">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="e1943-552">方法 : ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="e1943-552">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
