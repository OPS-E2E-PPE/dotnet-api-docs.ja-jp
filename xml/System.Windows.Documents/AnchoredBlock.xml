<Type Name="AnchoredBlock" FullName="System.Windows.Documents.AnchoredBlock">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8929d3eb4b321c9b6058fc8be4afde8f9edeb3f5" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78832461" /></Metadata><TypeSignature Language="C#" Value="public abstract class AnchoredBlock : System.Windows.Documents.Inline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnchoredBlock extends System.Windows.Documents.Inline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.AnchoredBlock" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AnchoredBlock&#xA;Inherits Inline" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnchoredBlock abstract : System::Windows::Documents::Inline" />
  <TypeSignature Language="F#" Value="type AnchoredBlock = class&#xA;    inherit Inline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Inline</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Blocks")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e578d-101"><see cref="T:System.Windows.Documents.Inline" /> 要素をフロー コンテンツに固定するのに使用される <see cref="T:System.Windows.Documents.Block" /> 要素の基になる抽象クラス。</span><span class="sxs-lookup"><span data-stu-id="e578d-101">An abstract class that provides a base for <see cref="T:System.Windows.Documents.Inline" /> elements that are used to anchor <see cref="T:System.Windows.Documents.Block" /> elements to flow content.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnchoredBlock (System.Windows.Documents.Block block, System.Windows.Documents.TextPointer insertionPosition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Block block, class System.Windows.Documents.TextPointer insertionPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (block As Block, insertionPosition As TextPointer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AnchoredBlock(System::Windows::Documents::Block ^ block, System::Windows::Documents::TextPointer ^ insertionPosition);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.AnchoredBlock : System.Windows.Documents.Block * System.Windows.Documents.TextPointer -&gt; System.Windows.Documents.AnchoredBlock" Usage="new System.Windows.Documents.AnchoredBlock (block, insertionPosition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="block" Type="System.Windows.Documents.Block" />
        <Parameter Name="insertionPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="block"><span data-ttu-id="e578d-102">新しい要素の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Block" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e578d-102">A <see cref="T:System.Windows.Documents.Block" /> object specifying the initial contents of the new element.</span></span>  <span data-ttu-id="e578d-103">このパラメーターは、<see langword="null" /> でもかまいません。その場合、<see cref="T:System.Windows.Documents.Block" /> は挿入されません。</span><span class="sxs-lookup"><span data-stu-id="e578d-103">This parameter may be <see langword="null" />, in which case no <see cref="T:System.Windows.Documents.Block" /> is inserted.</span></span></param>
        <param name="insertionPosition"><span data-ttu-id="e578d-104">要素の作成後に、この要素を挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。自動挿入を行わない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e578d-104">A <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position at which to insert the element after it is created, or <see langword="null" /> for no automatic insertion.</span></span></param>
        <summary><span data-ttu-id="e578d-105">派生クラスによって呼び出されたときに、<see cref="T:System.Windows.Documents.Block" /> の新しい子孫の初期コンテンツとして指定された <see cref="T:System.Windows.Documents.AnchoredBlock" /> オブジェクトと、<see cref="T:System.Windows.Documents.TextPointer" /> の新しい子孫の挿入位置を指定する <see cref="T:System.Windows.Documents.AnchoredBlock" /> を取得して基本クラスの値を初期化します。</span><span class="sxs-lookup"><span data-stu-id="e578d-105">Initializes base class values when called by a derived class, taking a specified <see cref="T:System.Windows.Documents.Block" /> object as the initial contents of the new descendant of <see cref="T:System.Windows.Documents.AnchoredBlock" />, and a <see cref="T:System.Windows.Documents.TextPointer" /> specifying an insertion position for the new <see cref="T:System.Windows.Documents.AnchoredBlock" /> descendant.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection Blocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection Blocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.Blocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Blocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ Blocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Blocks : System.Windows.Documents.BlockCollection" Usage="System.Windows.Documents.AnchoredBlock.Blocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-106">要素の内容を構成する最上位レベルの <see cref="T:System.Windows.Documents.BlockCollection" /> 要素を含む <see cref="T:System.Windows.Documents.Block" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e578d-106">Gets a <see cref="T:System.Windows.Documents.BlockCollection" /> containing the top-level <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the element.</span></span></summary>
        <value><span data-ttu-id="e578d-107">要素の内容を構成する <see cref="T:System.Windows.Documents.BlockCollection" /> 要素を含む <see cref="T:System.Windows.Documents.Block" />。</span><span class="sxs-lookup"><span data-stu-id="e578d-107">A <see cref="T:System.Windows.Documents.BlockCollection" /> containing the <see cref="T:System.Windows.Documents.Block" /> elements that comprise the contents of the element.</span></span>  
  
<span data-ttu-id="e578d-108">このプロパティに既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="e578d-108">This property has no default value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Documents.AnchoredBlock.BorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-109">要素の境界線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-109">Gets or sets a <see cref="T:System.Windows.Media.Brush" /> to use when painting the element's border.</span></span></summary>
        <value><span data-ttu-id="e578d-110">要素の境界線に適用するために使用するブラシ。</span><span class="sxs-lookup"><span data-stu-id="e578d-110">The brush used to apply to the element's border.</span></span> <span data-ttu-id="e578d-111">既定値は <see langword="null" /> ブラシです。</span><span class="sxs-lookup"><span data-stu-id="e578d-111">The default value is a <see langword="null" /> brush.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e578d-112">使用できる定義済みのブラシの色を示す見本の表については、「<xref:System.Windows.Media.Brushes>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e578d-112">For a table of swatches that show the available pre-defined brush colors, see <xref:System.Windows.Media.Brushes>.</span></span>  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e578d-113">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="e578d-113">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e578d-114">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="e578d-114">Identifier field</span></span>|<xref:System.Windows.Documents.AnchoredBlock.BorderBrushProperty>|  
|<span data-ttu-id="e578d-115">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="e578d-115">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="e578d-116">次の例は、要素 (<xref:System.Windows.Documents.Paragraph>) の <xref:System.Windows.Documents.Block.BorderBrush%2A> 属性を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-116">The following example shows how to set the <xref:System.Windows.Documents.Block.BorderBrush%2A> attribute of an element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 <span data-ttu-id="e578d-117">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="e578d-117">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="e578d-118">![スクリーンショット: ブロックの&#47;周囲に青、4インチの境界線](~/add/media/block-borders.png "スクリーンショット: 青、ブロックの周囲の 1/4 インチ境界線")</span><span class="sxs-lookup"><span data-stu-id="e578d-118">![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png "Screenshot: Blue, 1/4inch border around Block")</span></span>  
  
 <span data-ttu-id="e578d-119">次の例は、<xref:System.Windows.Documents.Block.BorderBrush%2A> プロパティをプログラムで設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-119">The following example shows how to set the <xref:System.Windows.Documents.Block.BorderBrush%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.BorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-120"><see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e578d-120">Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.BorderThickness : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.AnchoredBlock.BorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-121">要素の境界線の太さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-121">Gets or sets the border thickness for the element.</span></span></summary>
        <value><span data-ttu-id="e578d-122">適用する境界線の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-122">A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of border to apply, in device independent pixels.</span></span>  
  
<span data-ttu-id="e578d-123">既定値は 0 (**0.0**) の均一の太さです。</span><span class="sxs-lookup"><span data-stu-id="e578d-123">The default value is a uniform thickness of zero (**0.0**).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="e578d-124">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="e578d-124">XAML Attribute Usage</span></span>  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a><span data-ttu-id="e578d-125">XAML 値</span><span class="sxs-lookup"><span data-stu-id="e578d-125">XAML Values</span></span>  
 <span data-ttu-id="e578d-126">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-126">*uniformThickness*</span></span>  
 <span data-ttu-id="e578d-127">4つのすべての太さ寸法に一様に適用される単一 <xref:System.Double> 値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="e578d-127">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="e578d-128">たとえば、`"10"` の値は `"10,10,10,10"`の値に相当します。</span><span class="sxs-lookup"><span data-stu-id="e578d-128">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="e578d-129">非修飾値は、デバイス非依存のピクセル単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-129">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="e578d-130">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="e578d-130">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="e578d-131">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-131">*independentThickness*</span></span>  
 <span data-ttu-id="e578d-132">4つの順序付けられた <xref:System.Double> 値の文字列形式。左、上、右、下の独立した太さの寸法に対応します。</span><span class="sxs-lookup"><span data-stu-id="e578d-132">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="e578d-133">4つの値はコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="e578d-133">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="e578d-134">たとえば、"5, 10, 15, 20" を使用すると、コンテンツの左側に5ピクセルの境界線が表示され、コンテンツの上に10ピクセルの境界線が表示され、コンテンツの右側に15ピクセルの境界線が表示され、コンテンツの下に20ピクセルの罫線が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-134">For example, "5,10,15,20" results in 5 pixels of border to the left of content, 10 pixels of border above content, 15 pixels of border to the right of content, and 20 pixels of border below the content.</span></span>  
  
 <span data-ttu-id="e578d-135">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-135">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="e578d-136">*UniformThickness*によって記述された値の後に、`px`、`in`のいずれかの単位指定子が続きます。</span><span class="sxs-lookup"><span data-stu-id="e578d-136">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="e578d-137">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e578d-137">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="e578d-138">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="e578d-138">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="e578d-139">たとえば、`"1in"` では、すべての方向に1インチの均一な境界線が提供されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-139">For example, `"1in"` provides uniform border of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="e578d-140">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-140">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="e578d-141">*IndependentThickness*によって記述される値。それぞれの値に続けて次のいずれかの単位指定子が続きます。 `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="e578d-141">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="e578d-142">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e578d-142">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="e578d-143">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="e578d-143">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="e578d-144">たとえば、「 `"1.5in,0.8in,1.5in,0.8in"` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="e578d-144">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="e578d-145">単位指定子は、1つまたは複数の値から混在させることも、省略することもできます。</span><span class="sxs-lookup"><span data-stu-id="e578d-145">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e578d-146">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="e578d-146">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e578d-147">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="e578d-147">Identifier field</span></span>|<xref:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty>|  
|<span data-ttu-id="e578d-148">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="e578d-148">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="e578d-149">次の例は、<xref:System.Windows.Documents.Block> 要素 (<xref:System.Windows.Documents.Paragraph>) の <xref:System.Windows.Documents.Block.BorderThickness%2A> 属性を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-149">The following example shows how to set the <xref:System.Windows.Documents.Block.BorderThickness%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 <span data-ttu-id="e578d-150">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="e578d-150">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="e578d-151">![スクリーンショット: ブロックの&#47;周囲に青、4インチの境界線](~/add/media/block-borders.png "スクリーンショット: 青、ブロックの周囲の 1/4 インチ境界線")</span><span class="sxs-lookup"><span data-stu-id="e578d-151">![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png "Screenshot: Blue, 1/4inch border around Block")</span></span>  
  
 <span data-ttu-id="e578d-152">次の例は、<xref:System.Windows.Documents.Block.BorderThickness%2A> プロパティをプログラムで設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-152">The following example shows how to set the <xref:System.Windows.Documents.Block.BorderThickness%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderThicknessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.BorderThicknessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-153"><see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e578d-153">Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Documents.AnchoredBlock.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-154">コンテンツの各行の高さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-154">Gets or sets the height of each line of content.</span></span></summary>
        <value><span data-ttu-id="e578d-155">デバイスに依存しないピクセルで行の高さを指定する double 値。</span><span class="sxs-lookup"><span data-stu-id="e578d-155">A double value specifying the height of line in device independent pixels.</span></span>  <span data-ttu-id="e578d-156"><see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> は<c>0.0034</c>以上かつ<c>16万</c>以下である必要があります。</span><span class="sxs-lookup"><span data-stu-id="e578d-156"><see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> must be equal to or greater than <c>0.0034</c> and equal to or less then <c>160000</c>.</span></span>  
  
<span data-ttu-id="e578d-157">値 <see cref="F:System.Double.NaN" /> (属性値 "<c>Auto</c>" に相当) を指定すると、現在のフォント特性を基に行の高さが自動的に決定されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-157">A value of <see cref="F:System.Double.NaN" /> (equivalent to an attribute value of "<c>Auto</c>") causes the line height is determined automatically from the current font characteristics.</span></span>  
  
<span data-ttu-id="e578d-158">既定値は <see cref="F:System.Double.NaN" /> です。</span><span class="sxs-lookup"><span data-stu-id="e578d-158">The default value is <see cref="F:System.Double.NaN" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e578d-159">この値を変更しても、関連付けられているテキストの高さは変わりません。代わりに、テキストを含む行の高さを変更します。</span><span class="sxs-lookup"><span data-stu-id="e578d-159">Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text.</span></span>  
  
 <span data-ttu-id="e578d-160">このプロパティに加えて、<xref:System.Windows.Documents.AnchoredBlock> 内の行のレイアウトは <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy%2A> プロパティの影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="e578d-160">In addition to this property, the layout of lines in a <xref:System.Windows.Documents.AnchoredBlock> is affected by its <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy%2A> property.</span></span>  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="e578d-161">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="e578d-161">XAML Attribute Usage</span></span>  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="e578d-162">XAML 値</span><span class="sxs-lookup"><span data-stu-id="e578d-162">XAML Values</span></span>  
 <span data-ttu-id="e578d-163">*double*</span><span class="sxs-lookup"><span data-stu-id="e578d-163">*double*</span></span>  
 <span data-ttu-id="e578d-164">`0.0034` 以上で、`160000`以下である <xref:System.Double> 値の文字列形式です。</span><span class="sxs-lookup"><span data-stu-id="e578d-164">String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`.</span></span> <span data-ttu-id="e578d-165">非修飾値は、デバイス非依存のピクセル単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-165">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="e578d-166">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="e578d-166">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="e578d-167">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="e578d-167">*qualifiedDouble*</span></span>  
 <span data-ttu-id="e578d-168">前述の*double*値 (違う `Auto`) の後に、次のいずれかの単位指定子が続いています: `px`、`in`、`cm`、`pt`。</span><span class="sxs-lookup"><span data-stu-id="e578d-168">A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="e578d-169">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e578d-169">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="e578d-170">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="e578d-170">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="e578d-171">`cm` はセンチメートルです。1cm = = (96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="e578d-171">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="e578d-172">`pt` はポイント。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="e578d-172">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="e578d-173">Auto</span><span class="sxs-lookup"><span data-stu-id="e578d-173">Auto</span></span>  
 <span data-ttu-id="e578d-174">現在のフォント特性を基に行の高さが自動的に決定されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-174">Causes the line height is determined automatically from the current font characteristics.</span></span>  <span data-ttu-id="e578d-175"><xref:System.Double.NaN>のプロパティ値と同じです。</span><span class="sxs-lookup"><span data-stu-id="e578d-175">Equivalent to a property value of <xref:System.Double.NaN>.</span></span>  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e578d-176">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="e578d-176">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e578d-177">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="e578d-177">Identifier field</span></span>|<xref:System.Windows.Documents.AnchoredBlock.LineHeightProperty>|  
|<span data-ttu-id="e578d-178">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="e578d-178">Metadata properties set to `true`</span></span>|<span data-ttu-id="e578d-179"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="e578d-179"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e578d-180">次の例は、<xref:System.Windows.Documents.Block> 要素の <xref:System.Windows.Documents.AnchoredBlock.LineHeight%2A> 属性を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-180">The following example shows how to set the <xref:System.Windows.Documents.AnchoredBlock.LineHeight%2A> attribute of a <xref:System.Windows.Documents.Block> element.</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 <span data-ttu-id="e578d-181">次の図は、前の例がどのようにレンダリングされるかを示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-181">The following figure shows how the previous example renders.</span></span>  
  
 <span data-ttu-id="e578d-182">![スクリーンショット: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "スクリーンショット: FlowDocument LineHeight")</span><span class="sxs-lookup"><span data-stu-id="e578d-182">![Screenshot: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "Screenshot: FlowDocument LineHeight")</span></span>  
  
 <span data-ttu-id="e578d-183">次の図は、同じ例が <xref:System.Windows.Documents.AnchoredBlock.LineHeight%2A>=<xref:System.Double.NaN>の既定の設定で表示される方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-183">The following figure shows how the same example renders with the default setting of <xref:System.Windows.Documents.AnchoredBlock.LineHeight%2A>=<xref:System.Double.NaN>.</span></span>  
  
 <span data-ttu-id="e578d-184">![スクリーンショット: FlowDocument LineHeight の既定値](~/add/media/flowdocument-lineheightdefault.png "スクリーンショット: FlowDocument LineHeight の既定値")</span><span class="sxs-lookup"><span data-stu-id="e578d-184">![Screenshot: FlowDocument LineHeight default](~/add/media/flowdocument-lineheightdefault.png "Screenshot: FlowDocument LineHeight default")</span></span>  
  
 <span data-ttu-id="e578d-185">次の例は、<xref:System.Windows.Documents.AnchoredBlock.LineHeight%2A> プロパティをプログラムで設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-185">The following example shows how to set the <xref:System.Windows.Documents.AnchoredBlock.LineHeight%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e578d-186"><see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> を正でない値に設定しようとすると発生します。</span><span class="sxs-lookup"><span data-stu-id="e578d-186">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> to a non-positive value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.LineHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-187"><see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e578d-187">Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberSignature Language="F#" Value="member this.LineStackingStrategy : System.Windows.LineStackingStrategy with get, set" Usage="System.Windows.Documents.AnchoredBlock.LineStackingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-188">テキスト要素内の各テキスト行の行ボックスを決定する際に使用する機構を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-188">Gets or sets the mechanism by which a line box is determined for each line of text within the text element.</span></span></summary>
        <value><span data-ttu-id="e578d-189">テキスト要素内の各テキスト行の行ボックスを決定する際に使用する機構。</span><span class="sxs-lookup"><span data-stu-id="e578d-189">The mechanism by which a line box is determined for each line of text within the text element.</span></span> <span data-ttu-id="e578d-190">既定値は <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</span><span class="sxs-lookup"><span data-stu-id="e578d-190">The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_LineStackingStrategyProperty"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e578d-191">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="e578d-191">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e578d-192">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="e578d-192">Identifier field</span></span>|<xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty>|  
|<span data-ttu-id="e578d-193">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="e578d-193">Metadata properties set to `true`</span></span>|<span data-ttu-id="e578d-194"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="e578d-194"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e578d-195">次の例は、<xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> プロパティを使用して、<xref:System.Windows.Controls.TextBlock>のテキスト行に対して行ボックスを作成する方法を決定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-195">The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="e578d-196">最初の <xref:System.Windows.Controls.TextBlock> の値は <xref:System.Windows.LineStackingStrategy.MaxHeight> で <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> 2 番目の <xref:System.Windows.Controls.TextBlock> の値は <xref:System.Windows.LineStackingStrategy.BlockLineHeight>です。</span><span class="sxs-lookup"><span data-stu-id="e578d-196">The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of <xref:System.Windows.LineStackingStrategy.MaxHeight> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy.BlockLineHeight>.</span></span>  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 <span data-ttu-id="e578d-197">次の図は、上記のコードの結果を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-197">The following illustration shows the result of the code above.</span></span>  
  
 <span data-ttu-id="e578d-198">![スクリーンショット: LineStackingStrategy 値の比較](~/add/media/flow-linestackingstrategy.gif "スクリーンショット: LineStackingStrategy 値の比較")</span><span class="sxs-lookup"><span data-stu-id="e578d-198">![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif "Screenshot: Compare LineStackingStrategy values")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineStackingStrategyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-199"><see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e578d-199">Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.AnchoredBlock.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-200">要素の余白の厚みを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-200">Gets or sets the margin thickness for the element.</span></span></summary>
        <value><span data-ttu-id="e578d-201">適用する余白の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-201">A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of margin to apply, in device independent pixels.</span></span>  
  
<span data-ttu-id="e578d-202">既定値は 0 (**0.0**) の均一の太さです。</span><span class="sxs-lookup"><span data-stu-id="e578d-202">The default value is a uniform thickness of zero (**0.0**).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e578d-203"><xref:System.Windows.Documents.ListItem.Margin%2A> は要素のコンテンツ領域の外側にあり、要素のコンテンツ領域の端と親要素の端との間にあるバッファー領域です。</span><span class="sxs-lookup"><span data-stu-id="e578d-203"><xref:System.Windows.Documents.ListItem.Margin%2A> is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element.</span></span>  <span data-ttu-id="e578d-204"><xref:System.Windows.Documents.ListItem.Padding%2A>とは対照的です。これは、要素のコンテンツ領域の内側にあるバッファー領域であり、要素のコンテンツと要素の内側の境界の間にあります。</span><span class="sxs-lookup"><span data-stu-id="e578d-204">Contrast with <xref:System.Windows.Documents.ListItem.Padding%2A>, which is buffer space that falls inside of an element's content area, between the element's content and the inner edge of the element.</span></span>  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="e578d-205">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="e578d-205">XAML Attribute Usage</span></span>  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="e578d-206">XAML 値</span><span class="sxs-lookup"><span data-stu-id="e578d-206">XAML Values</span></span>  
 <span data-ttu-id="e578d-207">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-207">*uniformThickness*</span></span>  
 <span data-ttu-id="e578d-208">4つのすべての太さ寸法に一様に適用される単一 <xref:System.Double> 値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="e578d-208">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="e578d-209">たとえば、`"10"` の値は `"10,10,10,10"`の値に相当します。</span><span class="sxs-lookup"><span data-stu-id="e578d-209">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="e578d-210">非修飾値は、デバイス非依存のピクセル単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-210">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="e578d-211">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="e578d-211">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="e578d-212">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-212">*independentThickness*</span></span>  
 <span data-ttu-id="e578d-213">4つの順序付けられた <xref:System.Double> 値の文字列形式。左、上、右、下の独立した太さの寸法に対応します。</span><span class="sxs-lookup"><span data-stu-id="e578d-213">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="e578d-214">4つの値はコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="e578d-214">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="e578d-215">たとえば、"5, 10, 15, 20" の場合、コンテンツの左側に5ピクセルの余白、コンテンツの上に10ピクセルの余白、コンテンツの右側に15ピクセルの余白、コンテンツの下に20ピクセルの余白が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-215">For example, "5,10,15,20" results in 5 pixels of margin to the left of content, 10 pixels of margin above content, 15 pixels of margin to the right of content, and 20 pixels of margin below the content.</span></span>  
  
 <span data-ttu-id="e578d-216">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-216">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="e578d-217">*UniformThickness*によって記述された値の後に、`px`、`in`のいずれかの単位指定子が続きます。</span><span class="sxs-lookup"><span data-stu-id="e578d-217">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="e578d-218">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e578d-218">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="e578d-219">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="e578d-219">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="e578d-220">たとえば、`"1in"` では、すべての方向に1インチの均一な余白が提供されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-220">For example, `"1in"` provides uniform margin of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="e578d-221">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-221">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="e578d-222">*IndependentThickness*によって記述される値。それぞれの値に続けて次のいずれかの単位指定子が続きます。 `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="e578d-222">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="e578d-223">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e578d-223">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="e578d-224">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="e578d-224">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="e578d-225">たとえば、「 `"1.5in,0.8in,1.5in,0.8in"` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="e578d-225">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="e578d-226">単位指定子は、1つまたは複数の値から混在させることも、省略することもできます。</span><span class="sxs-lookup"><span data-stu-id="e578d-226">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e578d-227">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="e578d-227">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e578d-228">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="e578d-228">Identifier field</span></span>|<xref:System.Windows.Documents.AnchoredBlock.MarginProperty>|  
|<span data-ttu-id="e578d-229">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="e578d-229">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="e578d-230">次の例は、<xref:System.Windows.Documents.Block> 要素 (<xref:System.Windows.Documents.Paragraph>) の <xref:System.Windows.Documents.AnchoredBlock.Margin%2A> 属性を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-230">The following example shows how to set the <xref:System.Windows.Documents.AnchoredBlock.Margin%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 <span data-ttu-id="e578d-231">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="e578d-231">The following figure shows how this example renders.</span></span>  <span data-ttu-id="e578d-232">図には、誇張された太さと色が使用されています。</span><span class="sxs-lookup"><span data-stu-id="e578d-232">Exaggerated thicknesses and colors are used for illustration.</span></span>  
  
 <span data-ttu-id="e578d-233">![スクリーンショット: 埋め込みと余白がある段落](~/add/media/block-marginpadding.png "スクリーンショット: 埋め込みと余白がある段落")</span><span class="sxs-lookup"><span data-stu-id="e578d-233">![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png "Screenshot: Paragraphs with padding and margins")</span></span>  
  
 <span data-ttu-id="e578d-234">次の例は、<xref:System.Windows.Documents.AnchoredBlock.Margin%2A> プロパティをプログラムで設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-234">The following example shows how to set the <xref:System.Windows.Documents.AnchoredBlock.Margin%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.MarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-235"><see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e578d-235">Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.AnchoredBlock.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-236">要素のパディングの厚みを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-236">Gets or sets the padding thickness for the element.</span></span></summary>
        <value><span data-ttu-id="e578d-237">適用するパディングの量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-237">A <see cref="T:System.Windows.Thickness" /> structure specifying the amount of padding to apply, in device independent pixels.</span></span>  
  
<span data-ttu-id="e578d-238">既定値は 0 (**0.0**) の均一の太さです。</span><span class="sxs-lookup"><span data-stu-id="e578d-238">The default value is a uniform thickness of zero (**0.0**).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e578d-239"><xref:System.Windows.Documents.ListItem.Padding%2A> は、要素のコンテンツと要素の内側の境界の間にある要素のコンテンツ領域の内側にあるバッファー領域です。</span><span class="sxs-lookup"><span data-stu-id="e578d-239"><xref:System.Windows.Documents.ListItem.Padding%2A> is buffer space that falls inside an element's content area, between the element's content and the inner edge of the element.</span></span>  <span data-ttu-id="e578d-240"><xref:System.Windows.Documents.ListItem.Margin%2A>とは対照的です。これは要素のコンテンツ領域の外側にあるバッファー領域であり、要素のコンテンツ領域の端と親要素の端との間にあります。</span><span class="sxs-lookup"><span data-stu-id="e578d-240">Contrast with <xref:System.Windows.Documents.ListItem.Margin%2A>, which is buffer space that falls outside of an element's content area, between the edges of the element's content area and the edges of the parent element.</span></span>  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="e578d-241">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="e578d-241">XAML Attribute Usage</span></span>  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="e578d-242">XAML 値</span><span class="sxs-lookup"><span data-stu-id="e578d-242">XAML Values</span></span>  
 <span data-ttu-id="e578d-243">*uniformThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-243">*uniformThickness*</span></span>  
 <span data-ttu-id="e578d-244">4つのすべての太さ寸法に一様に適用される単一 <xref:System.Double> 値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="e578d-244">String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.</span></span>  <span data-ttu-id="e578d-245">たとえば、`"10"` の値は `"10,10,10,10"`の値に相当します。</span><span class="sxs-lookup"><span data-stu-id="e578d-245">For example, a value of `"10"` is equivalent to a value of `"10,10,10,10"`.</span></span>  <span data-ttu-id="e578d-246">非修飾値は、デバイス非依存のピクセル単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-246">An unqualified value is measured in device independent pixels.</span></span> <span data-ttu-id="e578d-247">文字列には、小数点を明示的に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="e578d-247">Strings need not explicitly include decimal points.</span></span>  
  
 <span data-ttu-id="e578d-248">*independentThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-248">*independentThickness*</span></span>  
 <span data-ttu-id="e578d-249">4つの順序付けられた <xref:System.Double> 値の文字列形式。左、上、右、下の独立した太さの寸法に対応します。</span><span class="sxs-lookup"><span data-stu-id="e578d-249">String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.</span></span>  <span data-ttu-id="e578d-250">4つの値はコンマで区切る必要があります。スペースは使用できません。</span><span class="sxs-lookup"><span data-stu-id="e578d-250">The four values must be separated with commas; spaces are not allowed.</span></span>  <span data-ttu-id="e578d-251">たとえば、"5, 10, 15, 20" の場合、コンテンツの左側に5ピクセルの余白、コンテンツの上に10ピクセルの余白、コンテンツの右側に15ピクセルの余白、コンテンツの下に20ピクセルの余白があります。</span><span class="sxs-lookup"><span data-stu-id="e578d-251">For example, "5,10,15,20" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.</span></span>  
  
 <span data-ttu-id="e578d-252">*qualifiedUniformThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-252">*qualifiedUniformThickness*</span></span>  
 <span data-ttu-id="e578d-253">*UniformThickness*によって記述された値の後に、`px`、`in`のいずれかの単位指定子が続きます。</span><span class="sxs-lookup"><span data-stu-id="e578d-253">A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="e578d-254">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e578d-254">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="e578d-255">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="e578d-255">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="e578d-256">たとえば、`"1in"` では、すべての方向に1インチの均一な余白が提供されます。</span><span class="sxs-lookup"><span data-stu-id="e578d-256">For example, `"1in"` provides uniform padding of 1 inch in all directions.</span></span>  
  
 <span data-ttu-id="e578d-257">*qualifiedIndependentThickness*</span><span class="sxs-lookup"><span data-stu-id="e578d-257">*qualifiedIndependentThickness*</span></span>  
 <span data-ttu-id="e578d-258">*IndependentThickness*によって記述される値。それぞれの値に続けて次のいずれかの単位指定子が続きます。 `px`、`in`です。</span><span class="sxs-lookup"><span data-stu-id="e578d-258">A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.</span></span>  
  
 <span data-ttu-id="e578d-259">`px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e578d-259">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="e578d-260">`in` はインチ。1in==96px</span><span class="sxs-lookup"><span data-stu-id="e578d-260">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="e578d-261">たとえば、「 `"1.5in,0.8in,1.5in,0.8in"` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="e578d-261">For example, `"1.5in,0.8in,1.5in,0.8in"`.</span></span>  <span data-ttu-id="e578d-262">単位指定子は、1つまたは複数の値から混在させることも、省略することもできます。</span><span class="sxs-lookup"><span data-stu-id="e578d-262">Unit specifiers may be mixed or omitted from one or more values.</span></span>  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e578d-263">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="e578d-263">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e578d-264">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="e578d-264">Identifier field</span></span>|<xref:System.Windows.Documents.AnchoredBlock.PaddingProperty>|  
|<span data-ttu-id="e578d-265">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="e578d-265">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="e578d-266">次の例は、<xref:System.Windows.Documents.Block> 要素 (<xref:System.Windows.Documents.Paragraph>) の <xref:System.Windows.Documents.AnchoredBlock.Padding%2A> 属性を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-266">The following example shows how to set the <xref:System.Windows.Documents.AnchoredBlock.Padding%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 <span data-ttu-id="e578d-267">この例の表示結果を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="e578d-267">The following figure shows how this example renders.</span></span>  <span data-ttu-id="e578d-268">図には、誇張された太さと色が使用されています。</span><span class="sxs-lookup"><span data-stu-id="e578d-268">Exaggerated thicknesses and colors are used for illustration.</span></span>  
  
 <span data-ttu-id="e578d-269">![スクリーンショット: 埋め込みと余白がある段落](~/add/media/block-marginpadding.png "スクリーンショット: 埋め込みと余白がある段落")</span><span class="sxs-lookup"><span data-stu-id="e578d-269">![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png "Screenshot: Paragraphs with padding and margins")</span></span>  
  
 <span data-ttu-id="e578d-270">次の例は、<xref:System.Windows.Documents.AnchoredBlock.Padding%2A> プロパティをプログラムで設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-270">The following example shows how to set the <xref:System.Windows.Documents.AnchoredBlock.Padding%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PaddingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.PaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-271"><see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e578d-271">Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBlocks">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBlocks (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBlocks(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeBlocks (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeBlocks(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeBlocks : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="anchoredBlock.ShouldSerializeBlocks manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="e578d-272">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e578d-272">A serialization service manager object for this object.</span></span></param>
        <summary><span data-ttu-id="e578d-273"><see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> の派生オブジェクトのシリアル化中に <see cref="T:System.Windows.Documents.AnchoredBlock" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="e578d-273">Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> property should be serialized during serialization of an object deriving from <see cref="T:System.Windows.Documents.AnchoredBlock" />.</span></span></summary>
        <returns><span data-ttu-id="e578d-274"><see langword="true" /> プロパティをシリアル化する必要がある場合は <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e578d-274"><see langword="true" /> if the <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="e578d-275"><paramref name="manager" /> が <see langword="null" /> の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="e578d-275">Raised when <paramref name="manager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.AnchoredBlock.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Documents.AnchoredBlock.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-276">テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e578d-276">Gets or sets a value that indicates the horizontal alignment of text content.</span></span></summary>
        <value><span data-ttu-id="e578d-277">目的の配置を指定する <see cref="T:System.Windows.TextAlignment" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="e578d-277">A member of the <see cref="T:System.Windows.TextAlignment" /> enumerations specifying the desired alignment.</span></span>  
  
<span data-ttu-id="e578d-278">既定値は <see cref="F:System.Windows.TextAlignment.Left" /> です。</span><span class="sxs-lookup"><span data-stu-id="e578d-278">The default value is <see cref="F:System.Windows.TextAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e578d-279">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="e578d-279">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e578d-280">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="e578d-280">Identifier field</span></span>|<xref:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty>|  
|<span data-ttu-id="e578d-281">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="e578d-281">Metadata properties set to `true`</span></span>|<span data-ttu-id="e578d-282"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="e578d-282"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e578d-283">次の例は、<xref:System.Windows.Documents.Block> 要素の <xref:System.Windows.Documents.AnchoredBlock.TextAlignment%2A> 属性を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-283">The following example shows how to set the <xref:System.Windows.Documents.AnchoredBlock.TextAlignment%2A> attribute of a <xref:System.Windows.Documents.Block> element.</span></span>  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 <span data-ttu-id="e578d-284">次の図は、前の例が**左**揃え (既定値) で描画される方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-284">The following figure shows how the previous example renders with **Left** text alignment (the default).</span></span>  
  
 <span data-ttu-id="e578d-285">![スクリーンショット: Left の TextAlign プロパティ値](~/add/media/flowdoc-textalign-left.png "スクリーンショット: TextAlign プロパティ値が Left の場合")</span><span class="sxs-lookup"><span data-stu-id="e578d-285">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="e578d-286">次の図は、同じ例を**右**揃えで表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-286">The following figure shows how the same example renders with **Right** text alignment.</span></span>  
  
 <span data-ttu-id="e578d-287">![スクリーンショット: 右詰めの値](~/add/media/flowdoc-textalign-right.png "スクリーンショット: TextAlign の値が Right の場合")</span><span class="sxs-lookup"><span data-stu-id="e578d-287">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="e578d-288">次の図は、同じ例が**中心**文字の配置と共に表示される方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-288">The following figure shows how the same example renders with **Center** text alignment.</span></span>  
  
 <span data-ttu-id="e578d-289">![スクリーンショット: 中央の TextAlign プロパティ値](~/add/media/flowdoc-textalign-center.png "スクリーンショット: TextAlign プロパティ値が Center の場合")</span><span class="sxs-lookup"><span data-stu-id="e578d-289">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="e578d-290">次の例は、<xref:System.Windows.Documents.AnchoredBlock.TextAlignment%2A> プロパティをプログラムで設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e578d-290">The following example shows how to set the <xref:System.Windows.Documents.AnchoredBlock.TextAlignment%2A> property programmatically.</span></span>  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.AnchoredBlock.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e578d-291"><see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e578d-291">Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
