<Type Name="FlowDocument" FullName="System.Windows.Documents.FlowDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1ac3ddc760f9bc89eb6abdd5d4ad23fff2b1726" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83969754" /></Metadata><TypeSignature Language="C#" Value="public class FlowDocument : System.Windows.FrameworkContentElement, IServiceProvider, System.Windows.Documents.IDocumentPaginatorSource, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FlowDocument extends System.Windows.FrameworkContentElement implements class System.IServiceProvider, class System.Windows.Documents.IDocumentPaginatorSource, class System.Windows.Markup.IAddChild" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.FlowDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class FlowDocument&#xA;Inherits FrameworkContentElement&#xA;Implements IAddChild, IDocumentPaginatorSource, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlowDocument : System::Windows::FrameworkContentElement, IServiceProvider, System::Windows::Documents::IDocumentPaginatorSource, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type FlowDocument = class&#xA;    inherit FrameworkContentElement&#xA;    interface IServiceProvider&#xA;    interface IDocumentPaginatorSource&#xA;    interface IAddChild" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FlowDocument extends System.Windows.FrameworkContentElement implements class System.IServiceProvider, class System.Windows.Documents.IDocumentPaginatorSource, class System.Windows.Markup.IAddChild" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type FlowDocument = class&#xA;    inherit FrameworkContentElement&#xA;    interface IDocumentPaginatorSource&#xA;    interface IServiceProvider&#xA;    interface IAddChild" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkContentElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Documents.IDocumentPaginatorSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Inherit, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Blocks")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>改ページ位置の自動修正や列などの高度なドキュメント機能を持つフロー コンテンツをホストして書式設定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.FlowDocument> は、子コンテンツに対して強力なコンテンツモデルを適用します。  <xref:System.Windows.Documents.FlowDocument> に含まれる最上位レベルの子要素は、<xref:System.Windows.Documents.Block>から派生する必要があります。  有効な最上位レベルの子要素には、次のものがあります。  
  
-   <xref:System.Windows.Documents.BlockUIContainer>  
  
-   <xref:System.Windows.Documents.List>  
  
-   <xref:System.Windows.Documents.Paragraph>  
  
-   <xref:System.Windows.Documents.Section>  
  
-   <xref:System.Windows.Documents.Table>  
  
 <xref:System.Windows.Documents.FlowDocument> の既定の <xref:System.Windows.DataTemplate> には、XAML ファイルのルート要素として <xref:System.Windows.Documents.FlowDocument> を使用している場合にドキュメントを表示するために使用される <xref:System.Windows.Controls.FlowDocumentReader> が含まれています。 <xref:System.Windows.Documents.FlowDocument> がルート要素でない場合は、ドキュメントを <xref:System.Windows.Controls.FlowDocumentScrollViewer>、<xref:System.Windows.Controls.FlowDocumentPageViewer>、または <xref:System.Windows.Controls.FlowDocumentReader> コントロールに表示できます。 <xref:System.Windows.Controls.RichTextBox> コントロールで <xref:System.Windows.Documents.FlowDocument> を編集することもできます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" /> クラスの新しい空のインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDocument (System.Windows.Documents.Block block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Block block) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (block As Block)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDocument(System::Windows::Documents::Block ^ block);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.FlowDocument : System.Windows.Documents.Block -&gt; System.Windows.Documents.FlowDocument" Usage="new System.Windows.Documents.FlowDocument block" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="block" Type="System.Windows.Documents.Block" />
      </Parameters>
      <Docs>
        <param name="block">初期コンテンツとして追加するために、<see cref="T:System.Windows.Documents.Block" /> 抽象クラスから派生するオブジェクト。</param>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" /> クラスの新しいインスタンスを初期化し、指定された <see cref="T:System.Windows.Documents.Block" /> 要素を初期コンテンツとして追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `block` の有効な入力の種類には、<xref:System.Windows.Documents.BlockUIContainer>、<xref:System.Windows.Documents.List>、<xref:System.Windows.Documents.Paragraph>、<xref:System.Windows.Documents.Section>、および <xref:System.Windows.Documents.Table>があります。  
  
   
  
## Examples  
 このコンストラクターの使用例を次に示します。  この場合、<xref:System.Windows.Documents.FlowDocument> には、段落で入れ子になったテキストランから成るフロー要素ブロック構造が含まれます。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentConstructorSimple](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentconstructorsimple)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentConstructorSimple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentconstructorsimple)]  
  
 次の例では、単純な2×2テーブルをプログラムによって構築した後、<xref:System.Windows.Documents.FlowDocument> コンストラクターを使用してテーブルを含む新しい <xref:System.Windows.Documents.FlowDocument> を作成します。  やや複雑なフロー要素ブロック構造が使用されますが、コンストラクターの使用は前の例と同じです。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentConstructorTable](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentconstructortable)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentConstructorTable](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentconstructortable)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="block" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : System.Windows.Media.Brush with get, set" Usage="System.Windows.Documents.FlowDocument.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ エリアの背景の塗りつぶしに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
        <value>コンテンツ エリアの背景の塗りつぶしに使用するブラシ。背景ブラシを使用しない場合は <see langword="null" />。 既定では、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用できる定義済みのブラシの色を示す見本の表については、「<xref:System.Windows.Media.Brushes>」を参照してください。  
  
<a name="dependencyPropertyInfo_Background"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.BackgroundProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.Background%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentBackgroundXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentbackgroundxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.Background%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentBackground](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentbackground)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentBackground](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentbackground)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.Background" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection Blocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection Blocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.Blocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Blocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ Blocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Blocks : System.Windows.Documents.BlockCollection" Usage="System.Windows.Documents.FlowDocument.Blocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.Block" /> の内容の最上位の <see cref="T:System.Windows.Documents.FlowDocument" />要素を取得します。</summary>
        <value><see cref="T:System.Windows.Documents.BlockCollection" /> の内容を構成する <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.FlowDocument" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティによって返される <xref:System.Windows.Documents.BlockCollection> を使用して、<xref:System.Windows.Documents.FlowDocument>の内容を列挙または操作します。  
  
 <xref:System.Windows.Documents.FlowDocument> に含まれる最上位レベルの子要素は、<xref:System.Windows.Documents.Block>から派生する必要があります。  有効な最上位レベルの子要素には、次のものがあります。  
  
-   <xref:System.Windows.Documents.BlockUIContainer>  
  
-   <xref:System.Windows.Documents.List>  
  
-   <xref:System.Windows.Documents.Paragraph>  
  
-   <xref:System.Windows.Documents.Section>  
  
-   <xref:System.Windows.Documents.Table>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGap">
      <MemberSignature Language="C#" Value="public double ColumnGap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ColumnGap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ColumnGap" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnGap As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ColumnGap { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnGap : double with get, set" Usage="System.Windows.Documents.FlowDocument.ColumnGap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />内の列間の間隔を示す、列間隔値を取得または設定します。</summary>
        <value>列間隔 (デバイスに依存しないピクセル単位)。  <see cref="F:System.Double.NaN" /> の値 (属性値 "<c>Auto</c>" に相当) は、列の間隔が <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> プロパティと同じであることを示します。 既定では、 <see cref="F:System.Double.NaN" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得すると、現在の列のギャップが返されます。  この値を設定すると、現在有効な列の間隔が変更され、コンテンツの折り返しが発生する可能性があります。  
  
 列の間隔は、現在の <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> から <xref:System.Windows.Documents.FlowDocument.PagePadding%2A>を引いた値を超えることはできません。  <xref:System.Windows.Documents.FlowDocument.ColumnGap%2A> プロパティの値がこの制限を超えると、この制限を観察するために有効な列の間隔が短縮されます。  
  
 <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> が `null`場合、このプロパティは無効です。  
  
<a name="xamlAttributeUsage_ColumnGap"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object ColumnGap="double"/>  
- or -  
<object ColumnGap="qualifiedDouble"/>  
- or -  
<object ColumnGap="Auto"/>  
```  
  
<a name="xamlValues_ColumnGap"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前に説明した*double*値 (違う `Auto`) の後に、次のいずれかの単位指定子 (`px`、`in`、`cm`、`pt`)。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
 Auto  
 列間の有効な間隔を <xref:System.Windows.Documents.FlowDocument.LineHeight%2A> プロパティの現在の値に設定します。  <xref:System.Double.NaN>のプロパティ値と同じです。  
  
<a name="dependencyPropertyInfo_ColumnGap"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.ColumnGapProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument.ColumnGap%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentColumnGap](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumngap)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnGap](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumngap)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" />
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" />
      </Docs>
    </Member>
    <Member MemberName="ColumnGapProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnGapProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnGapProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ColumnGapProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ColumnGapProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ColumnGapProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ColumnGapProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.ColumnGapProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnRuleBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush ColumnRuleBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush ColumnRuleBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnRuleBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ ColumnRuleBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnRuleBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Documents.FlowDocument.ColumnRuleBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列間ルールの描画に使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
        <value>列間の罫線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" /> 、または背景ブラシを使用しないようにする <see langword="null" /> 。 既定では、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列ルールは、列の間に描画される線であり、コンテンツの列を視覚的に区別するために使用されます。  
  
 使用できる定義済みのブラシの色を示す見本の表については、「<xref:System.Windows.Media.Brushes>」を参照してください。  
  
 <xref:System.Windows.Documents.FlowDocument.ColumnRuleWidth%2A> プロパティが0または `null`の場合、このプロパティは無効です。  
  
 列ルールは、2つ以上の列がある場合にのみ表示されます。  
  
<a name="dependencyPropertyInfo_ColumnRuleBrush"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument.ColumnRuleBrush%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentColumnRule](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumnrule)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumnrule)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnGap" />
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" />
      </Docs>
    </Member>
    <Member MemberName="ColumnRuleBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnRuleBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnRuleBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ColumnRuleBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ColumnRuleBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ColumnRuleBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnRuleWidth">
      <MemberSignature Language="C#" Value="public double ColumnRuleWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ColumnRuleWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnRuleWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ColumnRuleWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnRuleWidth : double with get, set" Usage="System.Windows.Documents.FlowDocument.ColumnRuleWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列のルールの幅を取得または設定します。</summary>
        <value>列のルールの幅。デバイス非依存のピクセル単位で指定します。 既定では、0.0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列ルールは、列の間に描画される線であり、コンテンツの列を視覚的に区別するために使用されます。  
  
 このプロパティは、<xref:System.Windows.Documents.FlowDocument.ColumnRuleBrush%2A> プロパティが `null`場合には効果がありません。  
  
 列ルールは、2つ以上の列がある場合にのみ表示されます。  列のルールの幅は、<xref:System.Windows.Documents.FlowDocument.ColumnGap%2A>以下に制限されています。  
  
<a name="xamlAttributeUsage_ColumnRuleWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object ColumnRuleWidth="double"/>  
- or -  
<object ColumnRuleWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_ColumnRuleWidth"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位指定子が続きます。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
<a name="dependencyPropertyInfo_ColumnRuleWidth"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument.ColumnRuleWidth%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentColumnRule](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumnrule)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumnrule)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnGap" />
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" />
      </Docs>
    </Member>
    <Member MemberName="ColumnRuleWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnRuleWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnRuleWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ColumnRuleWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ColumnRuleWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ColumnRuleWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public double ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ColumnWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnWidth : double with get, set" Usage="System.Windows.Documents.FlowDocument.ColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />の列の適切な最小幅を取得または設定します。</summary>
        <value>適切な最小列幅 (デバイスに依存しないピクセル単位)。 値 <see cref="F:System.Double.NaN" /> により、ページの幅に関係なく、表示される列は 1 つだけです。  既定では、 <see cref="F:System.Double.NaN" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.FlowDocument> は、使用可能な表示領域内のコンテンツの表示を最大化するためにコンテンツを動的に調整します。  表示される列の数は、このプロパティで指定した列の幅の最小値に応じて、使用可能な表示領域に収めることができる列の数によって決まります。  実際の列の幅は、このプロパティで指定した値よりも大きくなる可能性があります。  
  
 どちらの方向でもウィンドウのサイズを変更すると、領域を最大限に活用するために列が動的に再生成されます。 これにより、コンテンツはユーザーの環境に動的に適応します。  
  
<a name="xamlAttributeUsage_ColumnWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object ColumnWidth="double"/>  
- or -  
<object ColumnWidth="qualifiedDouble"/>  
- or -  
<object ColumnWidth="Auto"/>  
```  
  
<a name="xamlValues_ColumnWidth"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値 (違う `Auto`) の後に、次のいずれかの単位指定子が続いています: `px`、`in`、`cm`、`pt`。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
 Auto  
 列の幅が現在の <xref:System.Windows.Documents.FlowDocument.FontSize%2A>の20倍になるように自動的に計算されます。  
  
<a name="dependencyPropertyInfo_ColumnWidth"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.ColumnWidthProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentColumnWidthXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentcolumnwidthxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentColumnWidth](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumnwidth)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnWidth](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumnwidth)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ColumnWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ColumnWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ColumnWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ColumnWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.ColumnWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer ContentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer ContentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ContentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ ContentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.FlowDocument.ContentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの末尾を表す <see cref="T:System.Windows.Documents.FlowDocument" /> を取得します。</summary>
        <value><see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの末尾を表す <see cref="T:System.Windows.Documents.FlowDocument" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A> プロパティは、多くの場合、<xref:System.Windows.Documents.FlowDocument>の末尾にコンテンツを追加するために使用されます。  
  
 このプロパティによって返される <xref:System.Windows.Documents.TextPointer> は常に、<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> が <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>に設定されています。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Documents.FlowDocument.ContentEnd%2A> プロパティを使用して、<xref:System.Windows.Documents.FlowDocument>にコンテンツを追加します。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentContentEnd](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcontentend)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentContentEnd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcontentend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ContentStart" />
      </Docs>
    </Member>
    <Member MemberName="ContentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer ContentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer ContentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ContentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ ContentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.FlowDocument.ContentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.TextPointer" /> 内のコンテンツの先頭を表す <see cref="T:System.Windows.Documents.FlowDocument" /> を取得します。</summary>
        <value><see cref="T:System.Windows.Documents.TextPointerContext" /> のコンテンツの先頭を表す <see cref="T:System.Windows.Documents.FlowDocument" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.FlowDocument.ContentStart%2A> プロパティは、多くの場合、<xref:System.Windows.Documents.FlowDocument>の先頭にコンテンツを挿入するために使用されます。  
  
 このプロパティによって返される <xref:System.Windows.Documents.TextPointer> は常に、<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> が <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>に設定されています。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Documents.FlowDocument.ContentStart%2A> プロパティを使用して、<xref:System.Windows.Documents.FlowDocument>の先頭にコンテンツを挿入します。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentContentStart](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcontentstart)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentContentStart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcontentstart)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ContentEnd" />
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.Documents.FlowDocument.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" /> 内のコンテンツのフローの相対的な方向を取得または設定します。</summary>
        <value>相対的なフロー方向を指定する <see cref="T:System.Windows.FlowDirection" /> 値のいずれか。 既定では、 <see cref="F:System.Windows.FlowDirection.LeftToRight" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを取得すると、現在有効なフロー方向が返されます。  このプロパティを設定すると、<xref:System.Windows.Documents.FlowDocument> の内容が、指定された方向にリフローされます。  
  
 コンテンツの <xref:System.Windows.Documents.FlowDocument.FlowDirection%2A> は、通常、表現される言語の innate フロー方向に対応します。  ヘブライ語とアラビア語は、自然に右から左に流れる言語の例です。  英語、ドイツ語、ロシア語は、自然に左から右に流れる言語の例です。  
  
> [!NOTE]
>  このプロパティの値は、オペレーティングシステムで使用される言語に合わせて自動的に変更されることはありません。 別の値を使用する必要がある場合は <xref:System.Windows.FlowDirection.LeftToRight>の既定値を指定する必要があります。  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.FlowDirectionProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.FlowDirection%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentFlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentflowdirectionxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.FlowDirection%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentFlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentflowdirection)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentFlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentflowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FlowDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamily">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamily FontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamily FontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontFamily" />
      <MemberSignature Language="VB.NET" Value="Public Property FontFamily As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamily ^ FontFamily { System::Windows::Media::FontFamily ^ get(); void set(System::Windows::Media::FontFamily ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FontFamily : System.Windows.Media.FontFamily with get, set" Usage="System.Windows.Documents.FlowDocument.FontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />に対して、優先される最上位レベルのフォント ファミリを取得または設定します。</summary>
        <value>優先フォント ファミリ、または優先されるプライマリ フォント ファミリと 1 つ以上の代替フォント ファミリを指定する <see cref="T:System.Windows.Media.FontFamily" /> オブジェクト。 既定値は、 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 値によって決まるフォントです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 子要素の <xref:System.Windows.Documents.FlowDocument.FontFamily%2A> 設定は、この最上位レベルの設定よりも優先されます。  
  
 複数のファミリが指定されている場合、2番目以降のフォントファミリはフォールバックファミリとして機能し、プライマリフォントファミリが使用できない場合、または適用できない場合に使用されます。  
  
 このプロパティは、基本設定のみを指定します。  指定されたフォントファミリが使用できない場合、<xref:System.Windows.Documents.FlowDocument> は、<xref:System.Windows.SystemFonts.MessageFontFamily%2A?displayProperty=nameWithType> 値によって決定されたフォントに暗黙的に戻ります。  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## <a name="xaml-values"></a>XAML の値  
 *fontFamilyName*  
 フォントファミリ名を指定する文字列。  たとえば、`"Arial"` または `"Century Gothic"` です。  
  
 *fontFamilyNamesList*  
 コンマで区切られた複数のフォントファミリ名を指定する文字列 (コンマの後の空白は無視されます)。  指定された最初のフォントファミリは、プライマリフォントファミリとして機能します。後続のフォントファミリは、プライマリフォントファミリが使用できない場合、または適用されない場合に使用されるフォールバックファミリとして機能します。  たとえば、`"Arial, Century Gothic"` は Arial をプライマリフォントファミリとして指定し、代替フォントファミリとして Century ゴシックを指定します。  
  
 *fontFamilyFolderReference*  
 フォントファミリ名と共に、フォントを含むフォルダーを指定する文字列。  フォルダー名とフォントファミリ名は、# 文字で区切られます。  フォルダー参照は、絶対パスでも相対パスでもかまいません。  たとえば、「 `"Custom Fonts\#My Custom Font"` 」のように入力します。  
  
 *fontFamilyUriReference*  
 フォントファミリ名と共に、フォントの uniform resource identifier (URI) を指定する文字列。  URI とフォントファミリ名は、# 文字で区切られます。  たとえば、「 `"http://MyFontServer/Fonts/#My Custom Font"` 」のように入力します。  
  
<a name="dependencyPropertyInfo_FontFamily"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.FontFamilyProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.FontFamily%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.FontFamily%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamilyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontFamilyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontFamilyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontFamilyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontFamilyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontFamilyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontFamilyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.FontFamilyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSize">
      <MemberSignature Language="C#" Value="public double FontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double FontSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.FontSize : double with get, set" Usage="System.Windows.Documents.FlowDocument.FontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.FontSizeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />に対して、最上位レベルのフォント サイズを取得または設定します。</summary>
        <value>使用する目的のフォント サイズ (デバイス非依存のピクセル単位)。   既定値は <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 値で決定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 子要素の <xref:System.Windows.Documents.FlowDocument.FontSize%2A> 設定は、この最上位レベルの設定よりも優先されます。  
  
<a name="xamlAttributeUsage_FontSize"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object FontSize="double"/>  
- or -  
<object FontSize="qualifiedDouble"/>  
```  
  
<a name="xamlValues_FontSize"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位指定子が続きます。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
<a name="dependencyPropertyInfo_FontSize"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.FontSizeProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.FontSize%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.FontSize%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontSizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontSizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontSizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontSizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.FontSizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStretch">
      <MemberSignature Language="C#" Value="public System.Windows.FontStretch FontStretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStretch FontStretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontStretch" />
      <MemberSignature Language="VB.NET" Value="Public Property FontStretch As FontStretch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontStretch FontStretch { System::Windows::FontStretch get(); void set(System::Windows::FontStretch value); };" />
      <MemberSignature Language="F#" Value="member this.FontStretch : System.Windows.FontStretch with get, set" Usage="System.Windows.Documents.FlowDocument.FontStretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStretch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />の最上位レベルのフォント伸縮特性を取得または設定します。</summary>
        <value>使用する目的のフォント伸縮特性を指定する <see cref="T:System.Windows.FontStretch" /> クラスのメンバー。 既定では、 <see cref="P:System.Windows.FontStretches.Normal" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 子要素の <xref:System.Windows.Documents.FlowDocument.FontStretch%2A> 設定は、この最上位レベルの設定よりも優先されます。  
  
<a name="dependencyPropertyInfo_FontStretch"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.FontStretchProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.FontStretch%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.FontStretch%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStretchProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontStretchProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontStretchProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontStretchProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontStretchProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontStretchProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontStretchProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.FontStretchProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStyle">
      <MemberSignature Language="C#" Value="public System.Windows.FontStyle FontStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStyle FontStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FontStyle As FontStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontStyle FontStyle { System::Windows::FontStyle get(); void set(System::Windows::FontStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FontStyle : System.Windows.FontStyle with get, set" Usage="System.Windows.Documents.FlowDocument.FontStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />に対して、最上位レベルのフォント スタイルを取得または設定します。</summary>
        <value>使用するフォントのスタイルを指定する <see cref="T:System.Windows.FontStyles" /> クラスのメンバー。 既定値は <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 値で決定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 子要素の <xref:System.Windows.Documents.FlowDocument.FontStyle%2A> 設定は、この最上位レベルの設定よりも優先されます。  
  
<a name="dependencyPropertyInfo_FontStyle"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.FontStyleProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.FontStyle%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.FontStyle%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.FontStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWeight">
      <MemberSignature Language="C#" Value="public System.Windows.FontWeight FontWeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontWeight FontWeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontWeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FontWeight As FontWeight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontWeight FontWeight { System::Windows::FontWeight get(); void set(System::Windows::FontWeight value); };" />
      <MemberSignature Language="F#" Value="member this.FontWeight : System.Windows.FontWeight with get, set" Usage="System.Windows.Documents.FlowDocument.FontWeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontWeight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />に対して、最上位レベルのフォントの太さを取得または設定します。</summary>
        <value>使用するフォントの太さを指定する <see cref="T:System.Windows.FontWeights" /> クラスのメンバー。 既定値は <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 値で決定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 子要素の <xref:System.Windows.Documents.FlowDocument.FontWeight%2A> 設定は、この最上位レベルの設定よりも優先されます。  
  
<a name="dependencyPropertyInfo_FontWeight"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.FontWeightProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.FontWeight%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.FontWeight%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontWeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontWeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontWeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontWeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontWeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontWeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.FontWeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Foreground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Foreground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Foreground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.Foreground" />
      <MemberSignature Language="VB.NET" Value="Public Property Foreground As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Foreground { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Foreground : System.Windows.Media.Brush with get, set" Usage="System.Windows.Documents.FlowDocument.Foreground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.Brush" /> のテキスト コンテンツに適用する <see cref="T:System.Windows.Documents.FlowDocument" />を取得または設定します。</summary>
        <value>テキスト コンテンツに適用するために使用するブラシ。 既定では、 <see cref="P:System.Windows.Media.Brushes.Black" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用できる定義済みのブラシの色を示す見本の表については、「<xref:System.Windows.Media.Brushes>」を参照してください。  
  
 子要素の <xref:System.Windows.Documents.FlowDocument.Foreground%2A> 設定は、この最上位レベルの設定よりも優先されます。  
  
<a name="dependencyPropertyInfo_Foreground"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.ForegroundProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>,<br /><br /> <xref:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.Foreground%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentBackgroundXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentbackgroundxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.Foreground%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentBackground](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentbackground)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentBackground](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentbackground)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForegroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForegroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ForegroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForegroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForegroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ForegroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.ForegroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColumnWidthFlexible">
      <MemberSignature Language="C#" Value="public bool IsColumnWidthFlexible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColumnWidthFlexible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsColumnWidthFlexible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsColumnWidthFlexible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsColumnWidthFlexible : bool with get, set" Usage="System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 値が変動するか、または固定された値であるかどうかを示す値を取得または設定します。</summary>
        <value>列幅が変動する場合は <see langword="true" />。列幅が固定の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible%2A> プロパティは、余分なコンテンツエリアの幅 (ページの幅とコンテンツのレイアウト後の幅の違い) が列間で分散される方法を決定します。 `true` の設定は、余分なスペースが各列に均等に分散されることを意味します。この場合、列のサイズは、<xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> プロパティによって指定された幅よりも大きくなる可能性があります。  `false` の設定は、ページの右側の余白に余分な領域が配分されることを意味します。この場合、列は常に <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> プロパティで指定された幅にサイズが変更されます (幅がページの幅よりも小さい場合、<xref:System.Windows.Documents.FlowDocument.PagePadding%2A>)。  
  
 次の図は、このプロパティが `true` または `false`ときのレイアウトの違いを示しています。  薄い青は、<xref:System.Windows.Documents.FlowDocument>内のコンテンツの列を表します。  
  
 ![スクリーンショット: Iscolumn幅の柔軟な値の比較](~/add/media/flowdoc-columnflex.png "スクリーンショット: IsColumnWidthFlexible 値の比較")  
  
<a name="dependencyPropertyInfo_IsColumnWidthFlexible"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentColumnFlexXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentcolumnflexxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentColumnFlex](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumnflex)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnFlex](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumnflex)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColumnWidthFlexibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsColumnWidthFlexibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsColumnWidthFlexibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsColumnWidthFlexibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsColumnWidthFlexibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsColumnWidthFlexibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.Documents.FlowDocument.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.ContentElement.IsEnabled" /> の <see cref="T:System.Windows.Documents.FlowDocument" /> プロパティの値を取得します。</summary>
        <value><see cref="P:System.Windows.ContentElement.IsEnabled" /> の <see cref="T:System.Windows.Documents.FlowDocument" /> プロパティの値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public bool IsHyphenationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHyphenationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHyphenationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHyphenationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHyphenationEnabled : bool with get, set" Usage="System.Windows.Documents.FlowDocument.IsHyphenationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>単語の自動ハイフネーションが有効かどうかを示す値を取得または設定します。</summary>
        <value>自動改行と単語の自動ハイフネーションが有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 単語の自動ハイフネーション機能を使用すると、現在のレイアウト条件に基づいて、<xref:System.Windows.Documents.FlowDocument> が自動的に単語を分割してハイフネーションを行うことができます。  これにより、長い単語を1行で開始し、次に進むことができます。また、均等に配置されたテキストに空白が均等に分散される傾向があります。  単語は、標準の文法規則に従って分割され、ハイフネーションが適用されます。  自動ハイフネーションは、最適な段落レイアウト (<xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A> プロパティによって表されます) と組み合わせた場合に特に有効です。  
  
<a name="dependencyPropertyInfo_IsHyphenationEnabled"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentHyphenateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumenthyphenatexaml)]  
  
 次の図は、上記の <xref:System.Windows.Documents.FlowDocument> がどのようにレンダリングされるかを示しています。  
  
 ![スクリーンショット: FlowDocument ハイフンが有効](~/add/media/flowdoc-hyphenenabled.png "スクリーンショット: ハイフンが有効になった FlowDocument")  
  
 次の図は、同じ <xref:System.Windows.Documents.FlowDocument> が <xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A>=`false`の既定の設定で表示される方法を示しています。  
  
 ![スクリーンショット: 無効なハイフンを含む FlowDocument](~/add/media/flowdoc-hyphendisabled.png "スクリーンショット: ハイフンが無効になった FlowDocument")  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentHyphenate](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumenthyphenate)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentHyphenate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumenthyphenate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHyphenationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHyphenationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHyphenationEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHyphenationEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptimalParagraphEnabled">
      <MemberSignature Language="C#" Value="public bool IsOptimalParagraphEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOptimalParagraphEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOptimalParagraphEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOptimalParagraphEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOptimalParagraphEnabled : bool with get, set" Usage="System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最適な段落レイアウトが有効かどうかを示す値を取得または設定します。</summary>
        <value>最適な段落レイアウトが有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最適な段落レイアウトは、<xref:System.Windows.Documents.FlowDocument> 内の段落をレイアウトする機能であり、空白ができるだけ均等に分布します。  理論的には、これにより、行揃えのテキストやその他のレイアウトルーチンでは、混乱のない空白を排除することで、読みやすさを最適化できます。  最適な段落レイアウトは、(<xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A> プロパティによって表される) 自動ハイフネーションと組み合わせた場合に特に有効です。  
  
<a name="dependencyPropertyInfo_Opt"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentHyphenateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumenthyphenatexaml)]  
  
 次の図は、上記の <xref:System.Windows.Documents.FlowDocument> がどのようにレンダリングされるかを示しています。  
  
 ![スクリーンショット: FlowDocument ハイフンが有効](~/add/media/flowdoc-hyphenenabled.png "スクリーンショット: ハイフンが有効になった FlowDocument")  
  
 次の図は、同じ <xref:System.Windows.Documents.FlowDocument> が <xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A>=`false`の既定の設定で表示される方法を示しています。  
  
 ![スクリーンショット: 無効なハイフンを含む FlowDocument](~/add/media/flowdoc-hyphendisabled.png "スクリーンショット: ハイフンが無効になった FlowDocument")  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentHyphenate](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumenthyphenate)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentHyphenate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumenthyphenate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptimalParagraphEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOptimalParagraphEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOptimalParagraphEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOptimalParagraphEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOptimalParagraphEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOptimalParagraphEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Documents.FlowDocument.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツの各行の高さを取得または設定します。</summary>
        <value>各行の高さ。単位はデバイスに依存しないピクセルで、値は 0.0034 から 160000 までの範囲です。 値 <see cref="F:System.Double.NaN" /> (属性値 "<c>Auto</c>" に相当) を指定すると、現在のフォント特性を基に行の高さが自動的に決定されます。 既定では、 <see cref="F:System.Double.NaN" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値を変更しても、関連付けられているテキストの高さは変わりません。代わりに、テキストを含む行の高さを変更します。 テキストのサイズを変更するには、<xref:System.Windows.Documents.FlowDocument.FontSize%2A> プロパティを使用します。  
  
 このプロパティに加えて、<xref:System.Windows.Documents.FlowDocument> 内の行のレイアウトは <xref:System.Windows.Documents.FlowDocument.LineStackingStrategy%2A> プロパティの影響を受けます。  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 <xref:System.Double> 値の文字列形式 `0.0034` と等しいかそれよりも大きい値 `160000`。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値 (違う `Auto`) の後に、次のいずれかの単位指定子が続いています: `px`、`in`、`cm`、`pt`。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
 Auto  
 現在のフォント特性を基に行の高さが自動的に決定されます。  <xref:System.Double.NaN?displayProperty=nameWithType>のプロパティ値と同じです。  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.LineHeightProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.LineHeight%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentLineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentlineheightxaml)]  
  
 次の図は、上記の <xref:System.Windows.Documents.FlowDocument> がどのようにレンダリングされるかを示しています。  
  
 ![スクリーンショット: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "スクリーンショット: FlowDocument LineHeight")  
  
 次の図は、同じ <xref:System.Windows.Documents.FlowDocument> が <xref:System.Windows.Documents.FlowDocument.LineHeight%2A>=<xref:System.Double.NaN?displayProperty=nameWithType>の既定の設定で表示される方法を示しています。  
  
 ![スクリーンショット: FlowDocument LineHeight の既定値](~/add/media/flowdocument-lineheightdefault.png "スクリーンショット: FlowDocument LineHeight の既定値")  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.LineHeight%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentLineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentlineheight)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentLineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentlineheight)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> が負の値に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.LineHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberSignature Language="F#" Value="member this.LineStackingStrategy : System.Windows.LineStackingStrategy with get, set" Usage="System.Windows.Documents.FlowDocument.LineStackingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />内のテキストの行ごとに行ボックスを決定するメカニズムを取得または設定します。</summary>
        <value><see cref="T:System.Windows.LineStackingStrategy" /> 内の各テキスト行の行ボックスを決定する際に使用する機構を指定する <see cref="T:System.Windows.Documents.FlowDocument" /> 値のいずれか。 既定では、 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> プロパティを使用して、<xref:System.Windows.Controls.TextBlock>のテキスト行に対して行ボックスを作成する方法を決定する方法を示しています。 最初の <xref:System.Windows.Controls.TextBlock> の値は <xref:System.Windows.LineStackingStrategy.MaxHeight> で <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> 2 番目の <xref:System.Windows.Controls.TextBlock> の値は <xref:System.Windows.LineStackingStrategy.BlockLineHeight>です。  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 次の図は、上記のコードの結果を示しています。  
  
 ![スクリーンショット: LineStackingStrategy 値の比較](~/add/media/flow-linestackingstrategy.gif "スクリーンショット: LineStackingStrategy 値の比較")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineStackingStrategyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.LineStackingStrategyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Documents.FlowDocument.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" /> の論理的な子を反復処理できる列挙子を取得します。</summary>
        <value>論理的な子の列挙子。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPageHeight">
      <MemberSignature Language="C#" Value="public double MaxPageHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxPageHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.MaxPageHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPageHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxPageHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPageHeight : double with get, set" Usage="System.Windows.Documents.FlowDocument.MaxPageHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />内のページの最大の高さを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Documents.FlowDocument" />内のページの最大の高さ (デバイスに依存しないピクセル単位)。 既定値は <see cref="F:System.Double.PositiveInfinity" /> です (ページの最大の高さはありません)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連続して表示される場合、<xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> プロパティは <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> プロパティよりも優先されます。これは、<xref:System.Windows.Documents.FlowDocument.PageHeight%2A> プロパティよりも優先されます。 特定のページに3つのプロパティがすべて設定されている場合は、プロパティが評価される順序になります。  
  
 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> が <xref:System.Double.NaN?displayProperty=nameWithType> (auto) に設定されている場合、このプロパティは無効です。  
  
<a name="xamlAttributeUsage_MaxPageHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object MaxPageHeight="double"/>  
- or -  
<object MaxPageHeight="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MaxPageHeight"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位指定子が続きます。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
<a name="dependencyPropertyInfo_MaxPageHeight"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.MaxPageHeightProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPageHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxPageHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxPageHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.MaxPageHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxPageHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxPageHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxPageHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.MaxPageHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPageWidth">
      <MemberSignature Language="C#" Value="public double MaxPageWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxPageWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.MaxPageWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPageWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxPageWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPageWidth : double with get, set" Usage="System.Windows.Documents.FlowDocument.MaxPageWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />内のページの最大幅を取得または設定します。</summary>
        <value>デバイスに依存しないピクセル単位の、 <see cref="T:System.Windows.Documents.FlowDocument" />内のページの最大幅。 既定値は <see cref="F:System.Double.PositiveInfinity" /> (ページの最大幅なし) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連続して表示される場合、<xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> プロパティは <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> プロパティよりも優先されます。これは、<xref:System.Windows.Documents.FlowDocument.PageWidth%2A> プロパティよりも優先されます。 特定のページに3つのプロパティがすべて設定されている場合は、プロパティが評価される順序になります。  
  
 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> が <xref:System.Double.NaN?displayProperty=nameWithType> (auto) に設定されている場合、このプロパティは無効です。  
  
<a name="xamlAttributeUsage_MaxPageWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object MaxPageWidth="double"/>  
- or -  
<object MaxPageWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MaxPageWidth"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位指定子が続きます。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
<a name="dependencyPropertyInfo_MaxPageWidth"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.MaxPageWidthProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPageWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxPageWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxPageWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.MaxPageWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxPageWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxPageWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxPageWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.MaxPageWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPageHeight">
      <MemberSignature Language="C#" Value="public double MinPageHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinPageHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.MinPageHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MinPageHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinPageHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MinPageHeight : double with get, set" Usage="System.Windows.Documents.FlowDocument.MinPageHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />内のページの最小の高さを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Documents.FlowDocument" />内のページの最小の高さ (デバイスに依存しないピクセル単位)。 既定では、0.0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連続して表示される場合、<xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> プロパティは <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> プロパティよりも優先されます。これは、<xref:System.Windows.Documents.FlowDocument.PageHeight%2A> プロパティよりも優先されます。 特定のページに3つのプロパティがすべて設定されている場合は、プロパティが評価される順序になります。  
  
 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> が <xref:System.Double.NaN?displayProperty=nameWithType> (auto) に設定されている場合、このプロパティは無効です。  
  
<a name="xamlAttributeUsage_MinPageHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object MinPageHeight="double"/>  
- or -  
<object MinPageHeight="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MinPageHeight"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位指定子が続きます。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
<a name="dependencyPropertyInfo_MinPageHeight"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.MinPageHeightProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPageHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinPageHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinPageHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.MinPageHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinPageHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinPageHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinPageHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.MinPageHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPageWidth">
      <MemberSignature Language="C#" Value="public double MinPageWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinPageWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.MinPageWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MinPageWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinPageWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MinPageWidth : double with get, set" Usage="System.Windows.Documents.FlowDocument.MinPageWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />内のページの最小幅を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Documents.FlowDocument" />内のページの最小幅 (デバイスに依存しないピクセル数)。 既定では、0.0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連続して表示される場合、<xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> プロパティは <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> プロパティよりも優先されます。これは、<xref:System.Windows.Documents.FlowDocument.PageWidth%2A> プロパティよりも優先されます。 特定のページに3つのプロパティがすべて設定されている場合は、プロパティが評価される順序になります。  
  
 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> が <xref:System.Double.NaN?displayProperty=nameWithType> (auto) に設定されている場合、このプロパティは無効です。  
  
<a name="xamlAttributeUsage_MinPageWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object MinPageWidth="double"/>  
- or -  
<object MinPageWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MinPageWidth"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位指定子が続きます。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
<a name="dependencyPropertyInfo_MinPageWidth"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.MinPageWidthProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPageWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinPageWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinPageWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.MinPageWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinPageWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinPageWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinPageWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.MinPageWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="flowDocument.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャに特定の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を実装します。</summary>
        <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドの実装では、通常、特定の <xref:System.Windows.Automation.Peers.AutomationPeer> 実装のコンストラクターを呼び出し、その結果を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="flowDocument.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">関連付けられているイベントの引数。</param>
        <summary>要素に存在する 1 つ以上の依存関係プロパティの有効な値が変更された場合に呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Windows.FrameworkContentElement.OnPropertyChanged%2A?displayProperty=nameWithType> をオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PageHeight">
      <MemberSignature Language="C#" Value="public double PageHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PageHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.PageHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property PageHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PageHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PageHeight : double with get, set" Usage="System.Windows.Documents.FlowDocument.PageHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />内のページの適切な高さを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Documents.FlowDocument" />内のページの適切な高さ (デバイス非依存のピクセル)。 値 <see cref="F:System.Double.NaN" /> (属性値 "<c>Auto</c>" に相当) を指定すると、ページの高さが自動的に決定されます。 既定では、 <see cref="F:System.Double.NaN" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連続して表示される場合、<xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> プロパティは <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> プロパティよりも優先されます。これは、<xref:System.Windows.Documents.FlowDocument.PageHeight%2A> プロパティよりも優先されます。 特定のページに3つのプロパティがすべて設定されている場合は、プロパティが評価される順序になります。  
  
<a name="xamlAttributeUsage_PageHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object PageHeight="double"/>  
- or -  
<object PageHeight="qualifiedDouble"/>  
- or -  
<object PageHeight="Auto"/>  
```  
  
<a name="xamlValues_PageHeight"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位指定子が続きます。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
 *Auto*  
 ページの高さが自動的に決定されます。  <xref:System.Double.NaN?displayProperty=nameWithType>のプロパティ値と同じです。  
  
<a name="dependencyPropertyInfo_PageHeight"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.PageHeightProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.PageHeight%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PageHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PageHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.PageHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PageHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PageHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PageHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.PageHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePadding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness PagePadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness PagePadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.PagePadding" />
      <MemberSignature Language="VB.NET" Value="Public Property PagePadding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness PagePadding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.PagePadding : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.FlowDocument.PagePadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの境界とページのコンテンツとの間に埋め込むスペースの幅を示す値を取得または設定します。</summary>
        <value>適用する埋め込みの量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定値は 0 (0.0) の均一の太さです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.FlowDocument.PagePadding%2A> は、すべての方向で uniform として記述できます (`PagePadding="10"`)。または、左、上、右、および下余白を個別に表す4つの個別の値 (`PagePadding="5,0,10,20"`)。  
  
 指定された余白の太さが対応するページの寸法を超えている場合 (たとえば、左右の埋め込み幅の合計がページ幅を超えている場合)、余白の幅は、関連するページディメンションに比例して小さくなります。  
  
<a name="xamlAttributeUsage_PagePadding"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object PagePadding="uniformThickness"/>  
- or -  
<object PagePadding="independentThickness"/>  
- or -  
<object PagePadding="qualifiedUniformThickness"/>  
- or -  
<object PagePadding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_PagePadding"></a>   
## <a name="xaml-values"></a>XAML の値  
 *uniformThickness*  
 4つのすべての太さ寸法に一様に適用される単一 <xref:System.Double> 値の文字列表現。  たとえば、`"10"` の値は `"10,10,10,10"`の値に相当します。  非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *independentThickness*  
 4つの順序付けられた <xref:System.Double> 値の文字列形式。左、上、右、下の独立した太さの寸法に対応します。  4つの値はコンマで区切る必要があります。スペースは使用できません。  たとえば、"5, 10, 15, 20" の場合、コンテンツの左側に5ピクセルの余白、コンテンツの上に10ピクセルの余白、コンテンツの右側に15ピクセルの余白、コンテンツの下に20ピクセルの余白があります。  
  
 *qualifiedUniformThickness*  
 *UniformThickness*によって記述された値の後に、`px`、`in`のいずれかの単位指定子が続きます。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 たとえば、`"1in"` では、すべての方向に1インチの均一な余白が提供されます。  
  
 *qualifiedIndependentThickness*  
 *IndependentThickness*によって記述される値。それぞれの値に続けて次のいずれかの単位指定子が続きます。 `px`、`in`です。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 たとえば、「 `"1.5in,0.8in,1.5in,0.8in"` 」のように入力します。  単位指定子は、1つまたは複数の値から混在させることも、省略することもできます。  
  
<a name="dependencyPropertyInfo_PagePadding"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.PagePaddingProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.PagePadding%2A> 属性を設定するさまざまな方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpaddingxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.PagePadding%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpadding)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpadding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PagePaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PagePaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.PagePaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PagePaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PagePaddingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PagePaddingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.PagePaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageWidth">
      <MemberSignature Language="C#" Value="public double PageWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PageWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.PageWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property PageWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PageWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PageWidth : double with get, set" Usage="System.Windows.Documents.FlowDocument.PageWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />内のページの適切な幅を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Documents.FlowDocument" />内のページの適切な幅 (デバイス非依存のピクセル)。 値 <see cref="F:System.Double.NaN" /> (属性値 "<c>Auto</c>" に相当) に設定すると、ページの幅が自動的に決定されます。 既定では、 <see cref="F:System.Double.NaN" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連続して表示される場合、<xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> プロパティは <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> プロパティよりも優先されます。これは、<xref:System.Windows.Documents.FlowDocument.PageWidth%2A> プロパティよりも優先されます。 特定のページに3つのプロパティがすべて設定されている場合は、プロパティが評価される順序になります。  
  
<a name="xamlAttributeUsage_PageWidth"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用  
  
```  
<object PageWidth="double"/>  
- or -  
<object PageWidth="qualifiedDouble"/>  
- or -  
<object PageWidth="Auto"/>  
```  
  
<a name="xamlValues_PageWidth"></a>   
## <a name="xaml-values"></a>XAML の値  
 *double*  
 <xref:System.Double>  
  
 0.0 以上で <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>より小さい <xref:System.Double> 値の文字列表現。 非修飾値は、デバイス非依存のピクセル単位で測定されます。 文字列には、小数点を明示的に含める必要があります。  
  
 *qualifiedDouble*  
 前述の*double*値。その後に、`px`、`in`、`cm`、`pt`のいずれかの単位指定子が続きます。  
  
 `px` (既定値) は [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` はインチ。1in==96px  
  
 `cm` はセンチメートルです。1cm = = (96/2.54) px  
  
 `pt` はポイント。1pt==(96/72) px  
  
 *Auto*  
 ページの幅が自動的に決定されます。  <xref:System.Double.NaN?displayProperty=nameWithType>のプロパティ値と同じです。  
  
<a name="dependencyPropertyInfo_PageWidth"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.PageWidthProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.PageWidth%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PageWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PageWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.PageWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PageWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PageWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PageWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.PageWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDpi">
      <MemberSignature Language="C#" Value="public void SetDpi (System.Windows.DpiScale dpiInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDpi(valuetype System.Windows.DpiScale dpiInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.SetDpi(System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDpi (dpiInfo As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDpi(System::Windows::DpiScale dpiInfo);" />
      <MemberSignature Language="F#" Value="member this.SetDpi : System.Windows.DpiScale -&gt; unit" Usage="flowDocument.SetDpi dpiInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpiInfo" Type="System.Windows.DpiScale" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dpiInfo"><see cref="T:System.Windows.Media.Visual" /> または <see cref="T:System.Windows.UIElement" /> の表示元の DPI 設定。</param>
        <summary>FlowDocument の DPI を設定することにより、再測定および再表示されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 モニターごとの DPI シナリオで使用する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberSignature Language="F#" Value="abstract member System.IServiceProvider.GetService : Type -&gt; obj&#xA;override this.System.IServiceProvider.GetService : Type -&gt; obj" Usage="flowDocument.System.IServiceProvider.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">取得するサービス オブジェクトの型を指定するオブジェクト。</param>
        <summary>指定した型のサービス オブジェクトを取得します。</summary>
        <returns><paramref name="serviceType." /> 型のサービス オブジェクト  
  
または 
 <paramref name="serviceType" /> 型のサービス オブジェクトがない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator">
      <MemberSignature Language="C#" Value="System.Windows.Documents.DocumentPaginator System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.DocumentPaginator System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DocumentPaginator As DocumentPaginator Implements IDocumentPaginatorSource.DocumentPaginator" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Documents::DocumentPaginator ^ System::Windows::Documents::IDocumentPaginatorSource::DocumentPaginator { System::Windows::Documents::DocumentPaginator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator : System.Windows.Documents.DocumentPaginator" Usage="System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPaginator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実際のコンテンツの改ページ位置の自動修正を実行するソース オブジェクトを定義します。</summary>
        <value>実際のコンテンツの改ページ位置の自動修正を実行するオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="flowDocument.System.Windows.Markup.IAddChild.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="flowDocument.System.Windows.Markup.IAddChild.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>ノードのテキスト コンテンツをオブジェクトに追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Documents.FlowDocument.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</summary>
        <value>必要な配置を指定する <see cref="T:System.Windows.TextAlignment" /> の値の 1 つ。 既定では、 <see cref="F:System.Windows.TextAlignment.Left" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.TextAlignmentProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.TextAlignment%2A> 属性を設定する方法を示しています。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentTextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumenttextalignmentxaml)]  
  
 次の図は、前の <xref:System.Windows.Documents.FlowDocument> が <xref:System.Windows.TextAlignment.Left> テキストの配置 (既定値) でどのようにレンダリングされるかを示しています。  
  
 ![スクリーンショット: Left の TextAlign プロパティ値](~/add/media/flowdoc-textalign-left.png "スクリーンショット: TextAlign プロパティ値が Left の場合")  
  
 次の図は、同じ <xref:System.Windows.Documents.FlowDocument> が <xref:System.Windows.TextAlignment.Right> テキストの配置と共にどのようにレンダリングされるかを示しています。  
  
 ![スクリーンショット: 右詰めの値](~/add/media/flowdoc-textalign-right.png "スクリーンショット: 右の TextAlign 値")  
  
 次の図は、同じ <xref:System.Windows.Documents.FlowDocument> が <xref:System.Windows.TextAlignment.Center> テキストの配置と共にどのようにレンダリングされるかを示しています。  
  
 ![スクリーンショット: 中央の TextAlign プロパティ値](~/add/media/flowdoc-textalign-center.png "スクリーンショット: 中央の TextAlign プロパティ値")  
  
 次の例は、<xref:System.Windows.Documents.FlowDocument.TextAlignment%2A> プロパティをプログラムで設定する方法を示しています。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentTextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumenttextalignment)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentTextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumenttextalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffects">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextEffectCollection TextEffects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.TextEffectCollection TextEffects" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.TextEffects" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEffects As TextEffectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::TextEffectCollection ^ TextEffects { System::Windows::Media::TextEffectCollection ^ get(); void set(System::Windows::Media::TextEffectCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextEffects : System.Windows.Media.TextEffectCollection with get, set" Usage="System.Windows.Documents.FlowDocument.TextEffects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextEffectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" /> のテキスト コンテンツに適用する効果を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Media.TextEffectCollection" /> のテキストに適用する効果を定義する 1 つ以上の <see cref="T:System.Windows.Media.TextEffect" /> オブジェクトを格納する <see cref="T:System.Windows.Documents.FlowDocument" />。 既定値は <see langword="null" /> です (効果は適用されません)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextEffects"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールド|<xref:System.Windows.Documents.FlowDocument.TextEffectsProperty>|  
|メタデータプロパティが `true` に設定される|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffectsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextEffectsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextEffectsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.TextEffectsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextEffectsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextEffectsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextEffectsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FlowDocument.TextEffectsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Typography : System.Windows.Documents.Typography" Usage="System.Windows.Documents.FlowDocument.Typography" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" /> のテキスト コンテンツで現在有効な文字体裁のバリエーションを取得します。</summary>
        <value>現在有効な文字体裁のバリエーションを指定する <see cref="T:System.Windows.Documents.Typography" /> オブジェクト。 既定の文字体裁値の一覧については、<see cref="T:System.Windows.Documents.Typography" /> のトピックを参照してください。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.FlowDocument.Typography%2A> プロパティは、[!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] フォントにのみ適用できます。 タイポグラフィバリアントは、バリアントをサポートしていないフォントには影響しません。  このトピックの詳細については、「 [WPF のタイポグラフィ](/dotnet/framework/wpf/advanced/typography-in-wpf)」を参照してください。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Documents.FlowDocument> 要素の <xref:System.Windows.Documents.FlowDocument.Typography%2A> 属性を使用して、さまざまなタイポグラフィのバリエーションを設定する方法を示します。  
  
 [!code-xaml[FlowDocumentSnippets#_FlowDocumentTypographyXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumenttypographyxaml)]  
  
 次の例では、<xref:System.Windows.Documents.FlowDocument.Typography%2A> プロパティのさまざまな要素をプログラムによって設定する方法を示します。  
  
 [!code-csharp[FlowDocumentSnippets#_FlowDocumentTypography](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumenttypography)]
 [!code-vb[FlowDocumentSnippets#_FlowDocumentTypography](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumenttypography)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
