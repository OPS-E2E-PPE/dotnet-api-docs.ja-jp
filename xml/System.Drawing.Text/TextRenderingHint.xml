<Type Name="TextRenderingHint" FullName="System.Drawing.Text.TextRenderingHint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="169399c655d669fa1dbf8405044b740cffd7bdff" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75135040" /></Metadata><TypeSignature Language="C#" Value="public enum TextRenderingHint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TextRenderingHint extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Text.TextRenderingHint" />
  <TypeSignature Language="VB.NET" Value="Public Enum TextRenderingHint" />
  <TypeSignature Language="C++ CLI" Value="public enum class TextRenderingHint" />
  <TypeSignature Language="F#" Value="type TextRenderingHint = " />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="feae5-101">テキスト レンダリングの品質を指定します。</span><span class="sxs-lookup"><span data-stu-id="feae5-101">Specifies the quality of text rendering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="feae5-102">品質の範囲はテキスト (最速のパフォーマンス、最も低い品質) から、アンチエイリアシングテキスト (品質が向上しますが、パフォーマンスが低下) から ClearType テキスト (LCD ディスプレイの最高品質) までです。</span><span class="sxs-lookup"><span data-stu-id="feae5-102">The quality ranges from text (fastest performance, but lowest quality) to antialiased text (better quality, but slower performance) to ClearType text (best quality on an LCD display).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="feae5-103">次のコード例は、<xref:System.Drawing.Graphics.TextRenderingHint%2A> と <xref:System.Drawing.Graphics.TextContrast%2A> のプロパティと <xref:System.Drawing.Text.TextRenderingHint> 列挙型の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="feae5-103">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and <xref:System.Drawing.Graphics.TextContrast%2A> properties and the <xref:System.Drawing.Text.TextRenderingHint> enumeration.</span></span>  
  
 <span data-ttu-id="feae5-104">この例は、Windows フォームと共に使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="feae5-104">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="feae5-105">フォームにコードを貼り付けて、フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理するときに `ChangeTextRenderingHintAndTextContrast` メソッドを呼び出し、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="feae5-105">Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.GraphicsProperties#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#5)]
 [!code-vb[System.Drawing.GraphicsProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AntiAlias">
      <MemberSignature Language="C#" Value="AntiAlias" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint AntiAlias = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.AntiAlias" />
      <MemberSignature Language="VB.NET" Value="AntiAlias" />
      <MemberSignature Language="C++ CLI" Value="AntiAlias" />
      <MemberSignature Language="F#" Value="AntiAlias = 4" Usage="System.Drawing.Text.TextRenderingHint.AntiAlias" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="feae5-106">アンチエイリアス処理されたグリフ ビットマップを使用して、ヒンティングなしに各文字を描画します。</span><span class="sxs-lookup"><span data-stu-id="feae5-106">Each character is drawn using its antialiased glyph bitmap without hinting.</span></span> <span data-ttu-id="feae5-107">アンチエイリアスによって品質が向上します。</span><span class="sxs-lookup"><span data-stu-id="feae5-107">Better quality due to antialiasing.</span></span> <span data-ttu-id="feae5-108">ヒンティングがオフにされるため、ステム幅の違いが目立ちます。</span><span class="sxs-lookup"><span data-stu-id="feae5-108">Stem width differences may be noticeable because hinting is turned off.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AntiAliasGridFit">
      <MemberSignature Language="C#" Value="AntiAliasGridFit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint AntiAliasGridFit = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit" />
      <MemberSignature Language="VB.NET" Value="AntiAliasGridFit" />
      <MemberSignature Language="C++ CLI" Value="AntiAliasGridFit" />
      <MemberSignature Language="F#" Value="AntiAliasGridFit = 3" Usage="System.Drawing.Text.TextRenderingHint.AntiAliasGridFit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="feae5-109">アンチエイリアス処理されたグリフ ビットマップを使用して、ヒンティングありで各文字を描画します。</span><span class="sxs-lookup"><span data-stu-id="feae5-109">Each character is drawn using its antialiased glyph bitmap with hinting.</span></span> <span data-ttu-id="feae5-110">アンチエイリアスによってより高い品質が得られますが、パフォーマンスは大きく低下します。</span><span class="sxs-lookup"><span data-stu-id="feae5-110">Much better quality due to antialiasing, but at a higher performance cost.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ClearTypeGridFit">
      <MemberSignature Language="C#" Value="ClearTypeGridFit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint ClearTypeGridFit = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit" />
      <MemberSignature Language="VB.NET" Value="ClearTypeGridFit" />
      <MemberSignature Language="C++ CLI" Value="ClearTypeGridFit" />
      <MemberSignature Language="F#" Value="ClearTypeGridFit = 5" Usage="System.Drawing.Text.TextRenderingHint.ClearTypeGridFit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="feae5-111">グリフ ClearType ビットマップを使用して、ヒンティングありで各文字を描画します。</span><span class="sxs-lookup"><span data-stu-id="feae5-111">Each character is drawn using its glyph ClearType bitmap with hinting.</span></span> <span data-ttu-id="feae5-112">最高の品質設定です。</span><span class="sxs-lookup"><span data-stu-id="feae5-112">The highest quality setting.</span></span> <span data-ttu-id="feae5-113">ClearType テキスト フォント機能を利用するときに使用します。</span><span class="sxs-lookup"><span data-stu-id="feae5-113">Used to take advantage of ClearType font features.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SingleBitPerPixel">
      <MemberSignature Language="C#" Value="SingleBitPerPixel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint SingleBitPerPixel = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel" />
      <MemberSignature Language="VB.NET" Value="SingleBitPerPixel" />
      <MemberSignature Language="C++ CLI" Value="SingleBitPerPixel" />
      <MemberSignature Language="F#" Value="SingleBitPerPixel = 2" Usage="System.Drawing.Text.TextRenderingHint.SingleBitPerPixel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="feae5-114">グリフ ビットマップを使用して各文字を描画します。</span><span class="sxs-lookup"><span data-stu-id="feae5-114">Each character is drawn using its glyph bitmap.</span></span> <span data-ttu-id="feae5-115">ヒンティングは使用されません。</span><span class="sxs-lookup"><span data-stu-id="feae5-115">Hinting is not used.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SingleBitPerPixelGridFit">
      <MemberSignature Language="C#" Value="SingleBitPerPixelGridFit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint SingleBitPerPixelGridFit = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit" />
      <MemberSignature Language="VB.NET" Value="SingleBitPerPixelGridFit" />
      <MemberSignature Language="C++ CLI" Value="SingleBitPerPixelGridFit" />
      <MemberSignature Language="F#" Value="SingleBitPerPixelGridFit = 1" Usage="System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="feae5-116">グリフ ビットマップを使用して各文字を描画します。</span><span class="sxs-lookup"><span data-stu-id="feae5-116">Each character is drawn using its glyph bitmap.</span></span> <span data-ttu-id="feae5-117">ヒンティングを使用して、文字のステム部分と曲線部分の見た目を向上します。</span><span class="sxs-lookup"><span data-stu-id="feae5-117">Hinting is used to improve character appearance on stems and curvature.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SystemDefault">
      <MemberSignature Language="C#" Value="SystemDefault" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Text.TextRenderingHint SystemDefault = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Text.TextRenderingHint.SystemDefault" />
      <MemberSignature Language="VB.NET" Value="SystemDefault" />
      <MemberSignature Language="C++ CLI" Value="SystemDefault" />
      <MemberSignature Language="F#" Value="SystemDefault = 0" Usage="System.Drawing.Text.TextRenderingHint.SystemDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="feae5-118">グリフ ビットマップを使用し、システムの既定のレンダリング ヒントで各文字を描画します。</span><span class="sxs-lookup"><span data-stu-id="feae5-118">Each character is drawn using its glyph bitmap, with the system default rendering hint.</span></span> <span data-ttu-id="feae5-119">ユーザーがシステムで選択した、すべてのフォント スムージング設定を使用してテキストを描画します。</span><span class="sxs-lookup"><span data-stu-id="feae5-119">The text will be drawn using whatever font-smoothing settings the user has selected for the system.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
