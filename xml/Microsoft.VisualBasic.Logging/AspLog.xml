<Type Name="AspLog" FullName="Microsoft.VisualBasic.Logging.AspLog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="200bb03830046610607cc450cbbc162d56b5aae5" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73377385" /></Metadata><TypeSignature Language="C#" Value="public class AspLog : Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AspLog extends Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.AspLog" />
  <TypeSignature Language="VB.NET" Value="Public Class AspLog&#xA;Inherits Log" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspLog : Microsoft::VisualBasic::Logging::Log" />
  <TypeSignature Language="F#" Value="type AspLog = class&#xA;    inherit Log" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Logging.Log</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="617b1-101">イベントや例外の情報をアプリケーションのログ リスナーに出力するためのプロパティおよびメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="617b1-101">Provides a property and methods for writing event and exception information to the application's log listeners.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="617b1-102">`My.Application.Log` オブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]のログサービスにアクセスするための簡単なエントリポイントを提供します。</span><span class="sxs-lookup"><span data-stu-id="617b1-102">The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services.</span></span> <span data-ttu-id="617b1-103">`WriteEntry` メソッドと `WriteException` メソッドは、アプリケーションのログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="617b1-103">The `WriteEntry` and `WriteException` methods write messages to the application's log listeners.</span></span> <span data-ttu-id="617b1-104">リスナーは、アプリケーションの構成ファイルによって構成できます。</span><span class="sxs-lookup"><span data-stu-id="617b1-104">The listeners can be configured by the application's configuration file.</span></span> <span data-ttu-id="617b1-105">詳細については、「[チュートリアル: 変更する情報の書き込み](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)と[アプリケーションログの操作](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="617b1-105">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="617b1-106">`My.Application.Log` オブジェクトは、クライアントアプリケーションでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="617b1-106">The `My.Application.Log` object is available only for client applications.</span></span> <span data-ttu-id="617b1-107">Web アプリケーションの場合は、`My.Log`を使用します。</span><span class="sxs-lookup"><span data-stu-id="617b1-107">For Web applications, use `My.Log`.</span></span> <span data-ttu-id="617b1-108">詳細については、「<xref:Microsoft.VisualBasic.Logging.Log?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="617b1-108">For more information, see <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="617b1-109">次の表に、`My.Application.Log` オブジェクトに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="617b1-109">The following table lists examples of tasks involving the `My.Application.Log` object.</span></span>  
  
|<span data-ttu-id="617b1-110">終了</span><span class="sxs-lookup"><span data-stu-id="617b1-110">To</span></span>|<span data-ttu-id="617b1-111">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="617b1-111">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="617b1-112">アプリケーションのログリスナーにイベント情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="617b1-112">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="617b1-113">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="617b1-113">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="617b1-114">アプリケーションのログリスナーに例外情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="617b1-114">Write exception information to the application's log listeners</span></span>|[<span data-ttu-id="617b1-115">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="617b1-115">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="617b1-116">`My.Application.Log` が情報を書き込む場所を決定する</span><span class="sxs-lookup"><span data-stu-id="617b1-116">Determine where `My.Application.Log` writes information</span></span>|[<span data-ttu-id="617b1-117">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="617b1-117">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
   
  
## Examples  
 <span data-ttu-id="617b1-118">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="617b1-118">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="617b1-119">詳細については、「[方法: ログメッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="617b1-119">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="617b1-120">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="617b1-120">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="617b1-121"><see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="617b1-121">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspLog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="617b1-122"><see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="617b1-122">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="617b1-123">`My.Log` オブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]のログサービスにアクセスするための簡単なエントリポイントを提供します。</span><span class="sxs-lookup"><span data-stu-id="617b1-123">The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services.</span></span> <span data-ttu-id="617b1-124">`WriteEntry` メソッドと `WriteException` メソッドは、アプリケーションのログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="617b1-124">The `WriteEntry` and `WriteException` methods write messages to the application's log listeners.</span></span> <span data-ttu-id="617b1-125">リスナーは、アプリケーションの構成ファイルによって構成できます。</span><span class="sxs-lookup"><span data-stu-id="617b1-125">The listeners can be configured by the application's configuration file.</span></span> <span data-ttu-id="617b1-126">詳細については、「[チュートリアル: 変更する情報の書き込み](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)と[アプリケーションログの操作](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="617b1-126">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="617b1-127">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="617b1-127">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspLog (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspLog(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.AspLog : string -&gt; Microsoft.VisualBasic.Logging.AspLog" Usage="new Microsoft.VisualBasic.Logging.AspLog name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="617b1-128"><see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="617b1-128"><see cref="T:System.String" />.</span></span> <span data-ttu-id="617b1-129"><see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> プロパティ オブジェクトに割り当てる名前。</span><span class="sxs-lookup"><span data-stu-id="617b1-129">The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</span></span></param>
        <summary><span data-ttu-id="617b1-130"><see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="617b1-130">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="617b1-131">`My.Log` オブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]のログサービスにアクセスするための簡単なエントリポイントを提供します。</span><span class="sxs-lookup"><span data-stu-id="617b1-131">The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services.</span></span> <span data-ttu-id="617b1-132">`WriteEntry` メソッドと `WriteException` メソッドは、アプリケーションのログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="617b1-132">The `WriteEntry` and `WriteException` methods write messages to the application's log listeners.</span></span> <span data-ttu-id="617b1-133">リスナーは、アプリケーションの構成ファイルによって構成できます。</span><span class="sxs-lookup"><span data-stu-id="617b1-133">The listeners can be configured by the application's configuration file.</span></span> <span data-ttu-id="617b1-134">詳細については、「[チュートリアル: 変更する情報の書き込み](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)と[アプリケーションログの操作](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="617b1-134">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="617b1-135">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="617b1-135">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithDefaultsSinceNoConfigExists">
      <MemberSignature Language="C#" Value="protected internal override void InitializeWithDefaultsSinceNoConfigExists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyvirtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub InitializeWithDefaultsSinceNoConfigExists ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeWithDefaultsSinceNoConfigExists();" />
      <MemberSignature Language="F#" Value="override this.InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit" Usage="aspLog.InitializeWithDefaultsSinceNoConfigExists " />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="617b1-136">新しい <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> を作成し、それを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="617b1-136">Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="617b1-137">このメソッドは、新しい <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>を作成し、その名前を `FileLog`に設定し、重大度レベル <xref:System.Diagnostics.SourceLevels.Information> 以上のメッセージをログに記録するように構成します。</span><span class="sxs-lookup"><span data-stu-id="617b1-137">This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater.</span></span> <span data-ttu-id="617b1-138">その後、新しい <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> オブジェクトが <xref:System.Diagnostics.TraceSource.Listeners%2A> コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="617b1-138">The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="617b1-139"><xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> プロパティが構成されていない場合、<xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> はメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="617b1-139">The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured.</span></span> <span data-ttu-id="617b1-140">トレースソースは、アプリケーションの構成ファイルで構成できます。</span><span class="sxs-lookup"><span data-stu-id="617b1-140">The trace source can be configured in the application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>
