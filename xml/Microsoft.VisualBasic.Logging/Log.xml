<Type Name="Log" FullName="Microsoft.VisualBasic.Logging.Log">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d57f1c6aea425b3324b9977d6415ea225e3e785" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83975821" /></Metadata><TypeSignature Language="C#" Value="public class Log" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Log extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="VB.NET" Value="Public Class Log" />
  <TypeSignature Language="C++ CLI" Value="public ref class Log" />
  <TypeSignature Language="F#" Value="type Log = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="237f6-101">イベントと例外の情報をアプリケーションのログ リスナーに書き込むためのプロパティとメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="237f6-101">Provides a property and methods for writing event and exception information to the application's log listeners.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-102">`My.Application.Log` オブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]のログサービスにアクセスするための簡単なエントリポイントを提供します。</span><span class="sxs-lookup"><span data-stu-id="237f6-102">The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services.</span></span> <span data-ttu-id="237f6-103">`WriteEntry` メソッドと `WriteException` メソッドは、アプリケーションのログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-103">The `WriteEntry` and `WriteException` methods write messages to the application's log listeners.</span></span> <span data-ttu-id="237f6-104">リスナーは、アプリケーションの構成ファイルによって構成できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-104">The listeners can be configured by the application's configuration file.</span></span> <span data-ttu-id="237f6-105">詳細については、「[チュートリアル: 変更する情報の書き込み](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information)と[アプリケーションログの操作](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-105">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information) and [Working with Application Logs](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs).</span></span>  
  
 <span data-ttu-id="237f6-106">`My.Application.Log` オブジェクトは、クライアントアプリケーションでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-106">The `My.Application.Log` object is available only for client applications.</span></span> <span data-ttu-id="237f6-107">Web アプリケーションの場合は、`My.Log`を使用します。</span><span class="sxs-lookup"><span data-stu-id="237f6-107">For Web applications, use `My.Log`.</span></span> <span data-ttu-id="237f6-108">詳細については、「<xref:Microsoft.VisualBasic.Logging.AspLog>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-108">For more information, see <xref:Microsoft.VisualBasic.Logging.AspLog>.</span></span>  
  
 <span data-ttu-id="237f6-109">次の表に、`My.Application.Log` オブジェクトに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-109">The following table lists examples of tasks involving the `My.Application.Log` object.</span></span>  
  
|<span data-ttu-id="237f6-110">目的</span><span class="sxs-lookup"><span data-stu-id="237f6-110">To</span></span>|<span data-ttu-id="237f6-111">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="237f6-111">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="237f6-112">アプリケーションのログリスナーにイベント情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-112">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="237f6-113">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-113">How to: Write Log Messages</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages)|  
|<span data-ttu-id="237f6-114">アプリケーションのログリスナーに例外情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-114">Write exception information to the application's log listeners</span></span>|[<span data-ttu-id="237f6-115">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="237f6-115">How to: Log Exceptions</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions)|  
|<span data-ttu-id="237f6-116">`My.Application.Log` が情報を書き込む場所を決定する</span><span class="sxs-lookup"><span data-stu-id="237f6-116">Determine where `My.Application.Log` writes information</span></span>|[<span data-ttu-id="237f6-117">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-117">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)|  
  
   
  
## Examples  
 <span data-ttu-id="237f6-118">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-118">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="237f6-119">詳細については、「[方法: ログメッセージを書き込む](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-119">For more information, see [How to: Write Log Messages](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-120">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-120">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="237f6-121"><see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="237f6-121">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-122">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-122">Objects (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="237f6-123"><see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="237f6-123">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-124">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-124">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.Log : string -&gt; Microsoft.VisualBasic.Logging.Log" Usage="new Microsoft.VisualBasic.Logging.Log name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="237f6-125"><see cref="T:System.String" /> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="237f6-125"><see cref="T:System.String" />.</span></span> <span data-ttu-id="237f6-126"><see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> プロパティ オブジェクトに割り当てる名前。</span><span class="sxs-lookup"><span data-stu-id="237f6-126">The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</span></span></param>
        <summary><span data-ttu-id="237f6-127"><see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="237f6-127">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-128">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-128">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileLogWriter">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultFileLogWriter As FileLogTraceListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::FileLogTraceListener ^ DefaultFileLogWriter { Microsoft::VisualBasic::Logging::FileLogTraceListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFileLogWriter : Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.FileLogTraceListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="237f6-129"><see langword="Log" /> オブジェクトの基になるファイル (<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクト) を取得します。</span><span class="sxs-lookup"><span data-stu-id="237f6-129">Gets the file the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span></span></summary>
        <value><span data-ttu-id="237f6-130"><see langword="Log" /> オブジェクトの基になる <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="237f6-130">The <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-131">このプロパティを使用して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> オブジェクトの現在の構成を確認できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-131">You can use this property to determine the current configuration of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object.</span></span>  
  
 <span data-ttu-id="237f6-132">クライアントアプリケーションでは、`My.Application.Log` オブジェクトを介して `Log` オブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-132">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="237f6-133">Web アプリケーションでは、`Log` オブジェクトは `My.Log` オブジェクトを介して使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-133">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-134">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-134">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ac6eb760-3d5d-461e-aedd-40599ee22e49"><span data-ttu-id="237f6-135">トラブルシューティング : ログ リスナー</span><span class="sxs-lookup"><span data-stu-id="237f6-135">Troubleshooting: Log Listeners</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithDefaultsSinceNoConfigExists">
      <MemberSignature Language="C#" Value="protected internal virtual void InitializeWithDefaultsSinceNoConfigExists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblynewslot virtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitializeWithDefaultsSinceNoConfigExists ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitializeWithDefaultsSinceNoConfigExists();" />
      <MemberSignature Language="F#" Value="abstract member InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit&#xA;override this.InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit" Usage="log.InitializeWithDefaultsSinceNoConfigExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="237f6-136">新しい <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクトを作成し、それを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="237f6-136">Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-137">このメソッドは、新しい <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>を作成し、その名前を `FileLog`に設定し、重大度レベル <xref:System.Diagnostics.SourceLevels.Information> 以上のメッセージをログに記録するように構成します。</span><span class="sxs-lookup"><span data-stu-id="237f6-137">This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater.</span></span> <span data-ttu-id="237f6-138">その後、新しい <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> オブジェクトが <xref:System.Diagnostics.TraceSource.Listeners%2A> コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-138">The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="237f6-139"><xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> プロパティが構成されていない場合、<xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> はメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="237f6-139">The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured.</span></span> <span data-ttu-id="237f6-140">トレースソースは、アプリケーションの構成ファイルで構成できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-140">The trace source can be configured in the application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="TraceSource">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceSource TraceSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceSource TraceSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceSource As TraceSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceSource ^ TraceSource { System::Diagnostics::TraceSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceSource : System.Diagnostics.TraceSource" Usage="Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="237f6-141"><see langword="Log" /> オブジェクトの基になる <see cref="T:System.Diagnostics.TraceSource" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="237f6-141">Gets to the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span></span></summary>
        <value><span data-ttu-id="237f6-142"><see langword="Log" /> オブジェクトの基になる <see cref="T:System.Diagnostics.TraceSource" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="237f6-142">The <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-143">このプロパティを使用して、`Log` オブジェクトの現在の構成を確認できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-143">You can use this property to determine the current configuration of the `Log` object.</span></span>  
  
 <span data-ttu-id="237f6-144">クライアントアプリケーションでは、`My.Application.Log` オブジェクトを介して `Log` オブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-144">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="237f6-145">Web アプリケーションでは、`Log` オブジェクトは `My.Log` オブジェクトを介して使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-145">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="237f6-146">これは上級メンバーです。**[すべて]** タブを選択しないと、IntelliSense に表示されません。</span><span class="sxs-lookup"><span data-stu-id="237f6-146">This is an advanced member; it does not show in IntelliSense unless you select the **All** tab.</span></span>  
  
 <span data-ttu-id="237f6-147">次の表は、`TraceSource` プロパティに関連するタスクの例を示しています。</span><span class="sxs-lookup"><span data-stu-id="237f6-147">The following table lists an example of a task involving the `TraceSource` property.</span></span>  
  
|<span data-ttu-id="237f6-148">目的</span><span class="sxs-lookup"><span data-stu-id="237f6-148">To</span></span>|<span data-ttu-id="237f6-149">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="237f6-149">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="237f6-150">`Log` オブジェクトの各ログリスナーの情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="237f6-150">Get information for each of the `Log` object's log listeners.</span></span>|[<span data-ttu-id="237f6-151">トラブルシューティング : ログ リスナー</span><span class="sxs-lookup"><span data-stu-id="237f6-151">Troubleshooting: Log Listeners</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/troubleshooting-log-listeners)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="237f6-152">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="237f6-152">Availability by Project Type</span></span>  
  
|<span data-ttu-id="237f6-153">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="237f6-153">Project type</span></span>|<span data-ttu-id="237f6-154">利用可能</span><span class="sxs-lookup"><span data-stu-id="237f6-154">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="237f6-155">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-155">Windows Application</span></span>|<span data-ttu-id="237f6-156">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-156">**Yes**</span></span>|  
|<span data-ttu-id="237f6-157">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-157">Class Library</span></span>|<span data-ttu-id="237f6-158">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-158">**Yes**</span></span>|  
|<span data-ttu-id="237f6-159">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-159">Console Application</span></span>|<span data-ttu-id="237f6-160">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-160">**Yes**</span></span>|  
|<span data-ttu-id="237f6-161">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-161">Windows Control Library</span></span>|<span data-ttu-id="237f6-162">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-162">**Yes**</span></span>|  
|<span data-ttu-id="237f6-163">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-163">Web Control Library</span></span>|<span data-ttu-id="237f6-164">いいえ</span><span class="sxs-lookup"><span data-stu-id="237f6-164">No</span></span>|  
|<span data-ttu-id="237f6-165">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="237f6-165">Windows Service</span></span>|<span data-ttu-id="237f6-166">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-166">**Yes**</span></span>|  
|<span data-ttu-id="237f6-167">Web サイト</span><span class="sxs-lookup"><span data-stu-id="237f6-167">Web Site</span></span>|<span data-ttu-id="237f6-168">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-168">**Yes**</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSource" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-169">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-169">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ac6eb760-3d5d-461e-aedd-40599ee22e49"><span data-ttu-id="237f6-170">トラブルシューティング : ログ リスナー</span><span class="sxs-lookup"><span data-stu-id="237f6-170">Troubleshooting: Log Listeners</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEntry">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="237f6-171">アプリケーションのログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-171">Writes a message to the application's log listeners.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string -&gt; unit" Usage="log.WriteEntry message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="237f6-172">必須。</span><span class="sxs-lookup"><span data-stu-id="237f6-172">Required.</span></span> <span data-ttu-id="237f6-173">記録するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="237f6-173">The message to log.</span></span> <span data-ttu-id="237f6-174"><paramref name="message" /> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-174">If <paramref name="message" /> is <see langword="Nothing" />, an empty string is used.</span></span></param>
        <summary><span data-ttu-id="237f6-175">アプリケーションのログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-175">Writes a message to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-176">`WriteEntry` メソッドは、アプリケーションのイベントログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-176">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="237f6-177">クライアントアプリケーションでは、`My.Application.Log` オブジェクトを介して `Log` オブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-177">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="237f6-178">Web アプリケーションでは、`Log` オブジェクトは `My.Log` オブジェクトを介して使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-178">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="237f6-179">`WriteEntry` メソッドのメッセージを受信するログリスナーについては、「[チュートリアル: .log が情報を書き込む場所を決定](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-179">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information).</span></span> <span data-ttu-id="237f6-180">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="237f6-180">You can change default log listeners.</span></span> <span data-ttu-id="237f6-181">詳しくは、「[アプリケーション ログの使用](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="237f6-181">For more information, see [Working with Application Logs](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs).</span></span>  
  
 <span data-ttu-id="237f6-182">`id` 引数を受け取らないオーバーロードの場合、ログに書き込まれた `id` は次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-182">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="237f6-183">既定の `id`</span><span class="sxs-lookup"><span data-stu-id="237f6-183">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="237f6-184">0</span><span class="sxs-lookup"><span data-stu-id="237f6-184">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="237f6-185">1</span><span class="sxs-lookup"><span data-stu-id="237f6-185">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="237f6-186">2</span><span class="sxs-lookup"><span data-stu-id="237f6-186">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="237f6-187">3</span><span class="sxs-lookup"><span data-stu-id="237f6-187">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="237f6-188">4</span><span class="sxs-lookup"><span data-stu-id="237f6-188">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="237f6-189">5</span><span class="sxs-lookup"><span data-stu-id="237f6-189">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="237f6-190">6</span><span class="sxs-lookup"><span data-stu-id="237f6-190">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="237f6-191">7</span><span class="sxs-lookup"><span data-stu-id="237f6-191">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="237f6-192">8</span><span class="sxs-lookup"><span data-stu-id="237f6-192">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="237f6-193">9</span><span class="sxs-lookup"><span data-stu-id="237f6-193">9</span></span>|  
  
 <span data-ttu-id="237f6-194">次の表に、`WriteEntry` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-194">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="237f6-195">目的</span><span class="sxs-lookup"><span data-stu-id="237f6-195">To</span></span>|<span data-ttu-id="237f6-196">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="237f6-196">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="237f6-197">アプリケーションのログリスナーにイベント情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-197">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="237f6-198">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-198">How to: Write Log Messages</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages)|  
|<span data-ttu-id="237f6-199">`Log` が情報を書き込む場所を決定する</span><span class="sxs-lookup"><span data-stu-id="237f6-199">Determine where `Log` writes information</span></span>|[<span data-ttu-id="237f6-200">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-200">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="237f6-201">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="237f6-201">Availability by Project Type</span></span>  
  
|<span data-ttu-id="237f6-202">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="237f6-202">Project type</span></span>|<span data-ttu-id="237f6-203">利用可能</span><span class="sxs-lookup"><span data-stu-id="237f6-203">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="237f6-204">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-204">Windows Application</span></span>|<span data-ttu-id="237f6-205">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-205">**Yes**</span></span>|  
|<span data-ttu-id="237f6-206">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-206">Class Library</span></span>|<span data-ttu-id="237f6-207">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-207">**Yes**</span></span>|  
|<span data-ttu-id="237f6-208">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-208">Console Application</span></span>|<span data-ttu-id="237f6-209">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-209">**Yes**</span></span>|  
|<span data-ttu-id="237f6-210">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-210">Windows Control Library</span></span>|<span data-ttu-id="237f6-211">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-211">**Yes**</span></span>|  
|<span data-ttu-id="237f6-212">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-212">Web Control Library</span></span>|<span data-ttu-id="237f6-213">いいえ</span><span class="sxs-lookup"><span data-stu-id="237f6-213">No</span></span>|  
|<span data-ttu-id="237f6-214">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="237f6-214">Windows Service</span></span>|<span data-ttu-id="237f6-215">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-215">**Yes**</span></span>|  
|<span data-ttu-id="237f6-216">Web サイト</span><span class="sxs-lookup"><span data-stu-id="237f6-216">Web Site</span></span>|<span data-ttu-id="237f6-217">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-217">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="237f6-218">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-218">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="237f6-219">詳細については、「[方法: ログメッセージを書き込む](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-219">For more information, see [How to: Write Log Messages](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="237f6-220">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-220">This code example can run only within a client application.</span></span> <span data-ttu-id="237f6-221">Web アプリケーションの `My.Application.Log.WriteEntry` を `My.Log.WriteEntry` に変更します。</span><span class="sxs-lookup"><span data-stu-id="237f6-221">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="237f6-222">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="237f6-222">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-223">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-223">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="237f6-224">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="237f6-224">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/972a3e0c-2996-4623-a7a9-d7ebc4d207f8"><span data-ttu-id="237f6-225">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-225">How to: Write Log Messages</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="237f6-226">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-226">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType -&gt; unit" Usage="log.WriteEntry (message, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="237f6-227">必須。</span><span class="sxs-lookup"><span data-stu-id="237f6-227">Required.</span></span> <span data-ttu-id="237f6-228">記録するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="237f6-228">The message to log.</span></span> <span data-ttu-id="237f6-229"><paramref name="message" /> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-229">If <paramref name="message" /> is <see langword="Nothing" />, an empty string is used.</span></span></param>
        <param name="severity"><span data-ttu-id="237f6-230">メッセージの種類。</span><span class="sxs-lookup"><span data-stu-id="237f6-230">The type of message.</span></span> <span data-ttu-id="237f6-231">既定では、<see langword="TraceEventType.Information" /> になります。</span><span class="sxs-lookup"><span data-stu-id="237f6-231">By default, <see langword="TraceEventType.Information" />.</span></span></param>
        <summary><span data-ttu-id="237f6-232">アプリケーションのログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-232">Writes a message to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-233">`WriteEntry` メソッドは、アプリケーションのイベントログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-233">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="237f6-234">クライアントアプリケーションでは、`My.Application.Log` オブジェクトを介して `Log` オブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-234">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="237f6-235">Web アプリケーションでは、`Log` オブジェクトは `My.Log` オブジェクトを介して使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-235">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="237f6-236">`WriteEntry` メソッドのメッセージを受信するログリスナーについては、「[チュートリアル: .log が情報を書き込む場所を決定](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-236">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information).</span></span> <span data-ttu-id="237f6-237">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="237f6-237">You can change default log listeners.</span></span> <span data-ttu-id="237f6-238">詳しくは、「[アプリケーション ログの使用](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="237f6-238">For more information, see [Working with Application Logs](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs).</span></span>  
  
 <span data-ttu-id="237f6-239">`id` 引数を受け取らないオーバーロードの場合、ログに書き込まれた `id` は次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-239">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="237f6-240">既定の `id`</span><span class="sxs-lookup"><span data-stu-id="237f6-240">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="237f6-241">0</span><span class="sxs-lookup"><span data-stu-id="237f6-241">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="237f6-242">1</span><span class="sxs-lookup"><span data-stu-id="237f6-242">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="237f6-243">2</span><span class="sxs-lookup"><span data-stu-id="237f6-243">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="237f6-244">3</span><span class="sxs-lookup"><span data-stu-id="237f6-244">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="237f6-245">4</span><span class="sxs-lookup"><span data-stu-id="237f6-245">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="237f6-246">5</span><span class="sxs-lookup"><span data-stu-id="237f6-246">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="237f6-247">6</span><span class="sxs-lookup"><span data-stu-id="237f6-247">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="237f6-248">7</span><span class="sxs-lookup"><span data-stu-id="237f6-248">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="237f6-249">8</span><span class="sxs-lookup"><span data-stu-id="237f6-249">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="237f6-250">9</span><span class="sxs-lookup"><span data-stu-id="237f6-250">9</span></span>|  
  
 <span data-ttu-id="237f6-251">次の表に、`WriteEntry` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-251">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="237f6-252">目的</span><span class="sxs-lookup"><span data-stu-id="237f6-252">To</span></span>|<span data-ttu-id="237f6-253">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="237f6-253">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="237f6-254">アプリケーションのログリスナーにイベント情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-254">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="237f6-255">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-255">How to: Write Log Messages</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages)|  
|<span data-ttu-id="237f6-256">`Log` が情報を書き込む場所を決定する</span><span class="sxs-lookup"><span data-stu-id="237f6-256">Determine where `Log` writes information</span></span>|[<span data-ttu-id="237f6-257">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-257">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="237f6-258">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="237f6-258">Availability by Project Type</span></span>  
  
|<span data-ttu-id="237f6-259">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="237f6-259">Project type</span></span>|<span data-ttu-id="237f6-260">利用可能</span><span class="sxs-lookup"><span data-stu-id="237f6-260">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="237f6-261">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-261">Windows Application</span></span>|<span data-ttu-id="237f6-262">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-262">**Yes**</span></span>|  
|<span data-ttu-id="237f6-263">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-263">Class Library</span></span>|<span data-ttu-id="237f6-264">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-264">**Yes**</span></span>|  
|<span data-ttu-id="237f6-265">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-265">Console Application</span></span>|<span data-ttu-id="237f6-266">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-266">**Yes**</span></span>|  
|<span data-ttu-id="237f6-267">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-267">Windows Control Library</span></span>|<span data-ttu-id="237f6-268">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-268">**Yes**</span></span>|  
|<span data-ttu-id="237f6-269">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-269">Web Control Library</span></span>|<span data-ttu-id="237f6-270">いいえ</span><span class="sxs-lookup"><span data-stu-id="237f6-270">No</span></span>|  
|<span data-ttu-id="237f6-271">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="237f6-271">Windows Service</span></span>|<span data-ttu-id="237f6-272">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-272">**Yes**</span></span>|  
|<span data-ttu-id="237f6-273">Web サイト</span><span class="sxs-lookup"><span data-stu-id="237f6-273">Web Site</span></span>|<span data-ttu-id="237f6-274">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-274">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="237f6-275">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-275">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="237f6-276">詳細については、「[方法: ログメッセージを書き込む](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-276">For more information, see [How to: Write Log Messages](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="237f6-277">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-277">This code example can run only within a client application.</span></span> <span data-ttu-id="237f6-278">Web アプリケーションの `My.Application.Log.WriteEntry` を `My.Log.WriteEntry` に変更します。</span><span class="sxs-lookup"><span data-stu-id="237f6-278">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="237f6-279">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span><span class="sxs-lookup"><span data-stu-id="237f6-279">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="237f6-280">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="237f6-280">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-281">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-281">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="237f6-282">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="237f6-282">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/972a3e0c-2996-4623-a7a9-d7ebc4d207f8"><span data-ttu-id="237f6-283">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-283">How to: Write Log Messages</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="237f6-284">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-284">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="log.WriteEntry (message, severity, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="237f6-285">必須。</span><span class="sxs-lookup"><span data-stu-id="237f6-285">Required.</span></span> <span data-ttu-id="237f6-286">記録するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="237f6-286">The message to log.</span></span> <span data-ttu-id="237f6-287"><paramref name="message" /> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-287">If <paramref name="message" /> is <see langword="Nothing" />, an empty string is used.</span></span></param>
        <param name="severity"><span data-ttu-id="237f6-288">メッセージの種類。</span><span class="sxs-lookup"><span data-stu-id="237f6-288">The type of message.</span></span> <span data-ttu-id="237f6-289">既定では、<see langword="TraceEventType.Information" /> になります。</span><span class="sxs-lookup"><span data-stu-id="237f6-289">By default, <see langword="TraceEventType.Information" />.</span></span></param>
        <param name="id"><span data-ttu-id="237f6-290">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-290">Message identifier, typically used for correlation.</span></span> <span data-ttu-id="237f6-291">既定では、表に示した <c>entryType</c> と関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="237f6-291">By default, related to <c>entryType</c> as described in the table.</span></span></param>
        <summary><span data-ttu-id="237f6-292">アプリケーションのログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-292">Writes a message to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-293">`WriteEntry` メソッドは、アプリケーションのイベントログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-293">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="237f6-294">クライアントアプリケーションでは、`My.Application.Log` オブジェクトを介して `Log` オブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-294">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="237f6-295">Web アプリケーションでは、`Log` オブジェクトは `My.Log` オブジェクトを介して使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-295">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="237f6-296">`WriteEntry` メソッドのメッセージを受信するログリスナーについては、「[チュートリアル: .log が情報を書き込む場所を決定](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-296">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information).</span></span> <span data-ttu-id="237f6-297">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="237f6-297">You can change default log listeners.</span></span> <span data-ttu-id="237f6-298">詳しくは、「[アプリケーション ログの使用](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="237f6-298">For more information, see [Working with Application Logs](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs).</span></span>  
  
 <span data-ttu-id="237f6-299">`id` 引数を受け取らないオーバーロードの場合、ログに書き込まれた `id` は次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-299">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="237f6-300">既定の `id`</span><span class="sxs-lookup"><span data-stu-id="237f6-300">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="237f6-301">0</span><span class="sxs-lookup"><span data-stu-id="237f6-301">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="237f6-302">1</span><span class="sxs-lookup"><span data-stu-id="237f6-302">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="237f6-303">2</span><span class="sxs-lookup"><span data-stu-id="237f6-303">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="237f6-304">3</span><span class="sxs-lookup"><span data-stu-id="237f6-304">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="237f6-305">4</span><span class="sxs-lookup"><span data-stu-id="237f6-305">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="237f6-306">5</span><span class="sxs-lookup"><span data-stu-id="237f6-306">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="237f6-307">6</span><span class="sxs-lookup"><span data-stu-id="237f6-307">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="237f6-308">7</span><span class="sxs-lookup"><span data-stu-id="237f6-308">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="237f6-309">8</span><span class="sxs-lookup"><span data-stu-id="237f6-309">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="237f6-310">9</span><span class="sxs-lookup"><span data-stu-id="237f6-310">9</span></span>|  
  
 <span data-ttu-id="237f6-311">次の表に、`WriteEntry` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-311">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="237f6-312">目的</span><span class="sxs-lookup"><span data-stu-id="237f6-312">To</span></span>|<span data-ttu-id="237f6-313">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="237f6-313">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="237f6-314">アプリケーションのログリスナーにイベント情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-314">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="237f6-315">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-315">How to: Write Log Messages</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages)|  
|<span data-ttu-id="237f6-316">`Log` が情報を書き込む場所を決定する</span><span class="sxs-lookup"><span data-stu-id="237f6-316">Determine where `Log` writes information</span></span>|[<span data-ttu-id="237f6-317">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-317">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="237f6-318">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="237f6-318">Availability by Project Type</span></span>  
  
|<span data-ttu-id="237f6-319">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="237f6-319">Project type</span></span>|<span data-ttu-id="237f6-320">利用可能</span><span class="sxs-lookup"><span data-stu-id="237f6-320">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="237f6-321">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-321">Windows Application</span></span>|<span data-ttu-id="237f6-322">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-322">**Yes**</span></span>|  
|<span data-ttu-id="237f6-323">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-323">Class Library</span></span>|<span data-ttu-id="237f6-324">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-324">**Yes**</span></span>|  
|<span data-ttu-id="237f6-325">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-325">Console Application</span></span>|<span data-ttu-id="237f6-326">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-326">**Yes**</span></span>|  
|<span data-ttu-id="237f6-327">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-327">Windows Control Library</span></span>|<span data-ttu-id="237f6-328">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-328">**Yes**</span></span>|  
|<span data-ttu-id="237f6-329">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-329">Web Control Library</span></span>|<span data-ttu-id="237f6-330">いいえ</span><span class="sxs-lookup"><span data-stu-id="237f6-330">No</span></span>|  
|<span data-ttu-id="237f6-331">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="237f6-331">Windows Service</span></span>|<span data-ttu-id="237f6-332">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-332">**Yes**</span></span>|  
|<span data-ttu-id="237f6-333">Web サイト</span><span class="sxs-lookup"><span data-stu-id="237f6-333">Web Site</span></span>|<span data-ttu-id="237f6-334">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-334">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="237f6-335">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-335">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="237f6-336">詳細については、「[方法: ログメッセージを書き込む](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-336">For more information, see [How to: Write Log Messages](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="237f6-337">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-337">This code example can run only within a client application.</span></span> <span data-ttu-id="237f6-338">Web アプリケーションの `My.Application.Log.WriteEntry` を `My.Log.WriteEntry` に変更します。</span><span class="sxs-lookup"><span data-stu-id="237f6-338">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="237f6-339">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span><span class="sxs-lookup"><span data-stu-id="237f6-339">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="237f6-340">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="237f6-340">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-341">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-341">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="237f6-342">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="237f6-342">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/972a3e0c-2996-4623-a7a9-d7ebc4d207f8"><span data-ttu-id="237f6-343">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="237f6-343">How to: Write Log Messages</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="237f6-344">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-344">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteException">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="237f6-345">アプリケーションのログ リスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-345">Writes exception information to the application's log listeners.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception -&gt; unit" Usage="log.WriteException ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex"><span data-ttu-id="237f6-346">必須。</span><span class="sxs-lookup"><span data-stu-id="237f6-346">Required.</span></span> <span data-ttu-id="237f6-347">記録する例外。</span><span class="sxs-lookup"><span data-stu-id="237f6-347">Exception to log.</span></span></param>
        <summary><span data-ttu-id="237f6-348">アプリケーションのログ リスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-348">Writes exception information to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-349">`WriteException` メソッドは、例外に含まれている情報をアプリケーションのイベントログリスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-349">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="237f6-350">クライアントアプリケーションでは、`My.Application.Log` オブジェクトを介して `Log` オブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-350">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="237f6-351">Web アプリケーションでは、`Log` オブジェクトは `My.Log` オブジェクトを介して使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-351">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="237f6-352">`WriteException` メソッドのメッセージを受信するログリスナーについては、「[チュートリアル: .log が情報を書き込む場所を決定](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-352">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information).</span></span> <span data-ttu-id="237f6-353">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="237f6-353">You can change default log listeners.</span></span> <span data-ttu-id="237f6-354">詳しくは、「[アプリケーション ログの使用](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="237f6-354">For more information, see [Working with Application Logs](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs).</span></span>  
  
 <span data-ttu-id="237f6-355">`id` 引数を受け取らないオーバーロードでは、ログに書き込まれる識別子は次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-355">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="237f6-356">既定の `id`</span><span class="sxs-lookup"><span data-stu-id="237f6-356">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="237f6-357">0</span><span class="sxs-lookup"><span data-stu-id="237f6-357">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="237f6-358">1</span><span class="sxs-lookup"><span data-stu-id="237f6-358">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="237f6-359">2</span><span class="sxs-lookup"><span data-stu-id="237f6-359">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="237f6-360">3</span><span class="sxs-lookup"><span data-stu-id="237f6-360">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="237f6-361">4</span><span class="sxs-lookup"><span data-stu-id="237f6-361">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="237f6-362">5</span><span class="sxs-lookup"><span data-stu-id="237f6-362">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="237f6-363">6</span><span class="sxs-lookup"><span data-stu-id="237f6-363">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="237f6-364">7</span><span class="sxs-lookup"><span data-stu-id="237f6-364">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="237f6-365">8</span><span class="sxs-lookup"><span data-stu-id="237f6-365">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="237f6-366">9</span><span class="sxs-lookup"><span data-stu-id="237f6-366">9</span></span>|  
  
 <span data-ttu-id="237f6-367">次の表に、`WriteException` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-367">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="237f6-368">目的</span><span class="sxs-lookup"><span data-stu-id="237f6-368">To</span></span>|<span data-ttu-id="237f6-369">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="237f6-369">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="237f6-370">アプリケーションのイベントログリスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-370">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="237f6-371">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="237f6-371">How to: Log Exceptions</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions)|  
|<span data-ttu-id="237f6-372">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="237f6-372">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="237f6-373">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-373">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="237f6-374">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="237f6-374">Availability by Project Type</span></span>  
  
|<span data-ttu-id="237f6-375">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="237f6-375">Project type</span></span>|<span data-ttu-id="237f6-376">利用可能</span><span class="sxs-lookup"><span data-stu-id="237f6-376">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="237f6-377">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-377">Windows Application</span></span>|<span data-ttu-id="237f6-378">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-378">**Yes**</span></span>|  
|<span data-ttu-id="237f6-379">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-379">Class Library</span></span>|<span data-ttu-id="237f6-380">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-380">**Yes**</span></span>|  
|<span data-ttu-id="237f6-381">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-381">Console Application</span></span>|<span data-ttu-id="237f6-382">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-382">**Yes**</span></span>|  
|<span data-ttu-id="237f6-383">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-383">Windows Control Library</span></span>|<span data-ttu-id="237f6-384">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-384">**Yes**</span></span>|  
|<span data-ttu-id="237f6-385">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-385">Web Control Library</span></span>|<span data-ttu-id="237f6-386">いいえ</span><span class="sxs-lookup"><span data-stu-id="237f6-386">No</span></span>|  
|<span data-ttu-id="237f6-387">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="237f6-387">Windows Service</span></span>|<span data-ttu-id="237f6-388">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-388">**Yes**</span></span>|  
|<span data-ttu-id="237f6-389">Web サイト</span><span class="sxs-lookup"><span data-stu-id="237f6-389">Web Site</span></span>|<span data-ttu-id="237f6-390">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-390">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="237f6-391">この例では、`My.Application.Log.WriteException` メソッドを使用して例外をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-391">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="237f6-392">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="237f6-392">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="237f6-393">詳細については、「[方法: 例外をログに記録](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-393">For more information, see [How to: Log Exceptions](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="237f6-394">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-394">This code example can run only within a client application.</span></span> <span data-ttu-id="237f6-395">Web アプリケーションの `My.Application.Log.WriteException` を `My.Log.WriteException` に変更します。</span><span class="sxs-lookup"><span data-stu-id="237f6-395">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="237f6-396"><paramref name="ex" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="237f6-396"><paramref name="ex" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="237f6-397">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="237f6-397">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-398">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-398">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="237f6-399">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="237f6-399">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/a26c60e2-ae39-444a-aebb-33eccadc0eeb"><span data-ttu-id="237f6-400">方法: Visual Basic で例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="237f6-400">How to: Log Exceptions in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="237f6-401">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-401">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ex"><span data-ttu-id="237f6-402">必須。</span><span class="sxs-lookup"><span data-stu-id="237f6-402">Required.</span></span> <span data-ttu-id="237f6-403">記録する例外。</span><span class="sxs-lookup"><span data-stu-id="237f6-403">Exception to log.</span></span></param>
        <param name="severity"><span data-ttu-id="237f6-404">メッセージの種類。</span><span class="sxs-lookup"><span data-stu-id="237f6-404">The type of message.</span></span> <span data-ttu-id="237f6-405">既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</span><span class="sxs-lookup"><span data-stu-id="237f6-405">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span></span></param>
        <param name="additionalInfo"><span data-ttu-id="237f6-406">メッセージに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="237f6-406">String to append to the message.</span></span> <span data-ttu-id="237f6-407">既定では空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="237f6-407">By default, this is an empty string.</span></span></param>
        <summary><span data-ttu-id="237f6-408">アプリケーションのログ リスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-408">Writes exception information to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-409">`WriteException` メソッドは、例外に含まれている情報をアプリケーションのイベントログリスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-409">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="237f6-410">クライアントアプリケーションでは、`My.Application.Log` オブジェクトを介して `Log` オブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-410">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="237f6-411">Web アプリケーションでは、`Log` オブジェクトは `My.Log` オブジェクトを介して使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-411">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="237f6-412">`WriteException` メソッドのメッセージを受信するログリスナーについては、「[チュートリアル: .log が情報を書き込む場所を決定](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-412">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information).</span></span> <span data-ttu-id="237f6-413">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="237f6-413">You can change default log listeners.</span></span> <span data-ttu-id="237f6-414">詳しくは、「[アプリケーション ログの使用](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="237f6-414">For more information, see [Working with Application Logs](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs).</span></span>  
  
 <span data-ttu-id="237f6-415">`id` 引数を受け取らないオーバーロードでは、ログに書き込まれる識別子は次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-415">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="237f6-416">既定の `id`</span><span class="sxs-lookup"><span data-stu-id="237f6-416">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="237f6-417">0</span><span class="sxs-lookup"><span data-stu-id="237f6-417">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="237f6-418">1</span><span class="sxs-lookup"><span data-stu-id="237f6-418">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="237f6-419">2</span><span class="sxs-lookup"><span data-stu-id="237f6-419">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="237f6-420">3</span><span class="sxs-lookup"><span data-stu-id="237f6-420">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="237f6-421">4</span><span class="sxs-lookup"><span data-stu-id="237f6-421">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="237f6-422">5</span><span class="sxs-lookup"><span data-stu-id="237f6-422">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="237f6-423">6</span><span class="sxs-lookup"><span data-stu-id="237f6-423">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="237f6-424">7</span><span class="sxs-lookup"><span data-stu-id="237f6-424">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="237f6-425">8</span><span class="sxs-lookup"><span data-stu-id="237f6-425">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="237f6-426">9</span><span class="sxs-lookup"><span data-stu-id="237f6-426">9</span></span>|  
  
 <span data-ttu-id="237f6-427">次の表に、`WriteException` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-427">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="237f6-428">目的</span><span class="sxs-lookup"><span data-stu-id="237f6-428">To</span></span>|<span data-ttu-id="237f6-429">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="237f6-429">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="237f6-430">アプリケーションのイベントログリスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-430">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="237f6-431">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="237f6-431">How to: Log Exceptions</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions)|  
|<span data-ttu-id="237f6-432">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="237f6-432">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="237f6-433">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-433">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="237f6-434">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="237f6-434">Availability by Project Type</span></span>  
  
|<span data-ttu-id="237f6-435">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="237f6-435">Project type</span></span>|<span data-ttu-id="237f6-436">利用可能</span><span class="sxs-lookup"><span data-stu-id="237f6-436">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="237f6-437">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-437">Windows Application</span></span>|<span data-ttu-id="237f6-438">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-438">**Yes**</span></span>|  
|<span data-ttu-id="237f6-439">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-439">Class Library</span></span>|<span data-ttu-id="237f6-440">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-440">**Yes**</span></span>|  
|<span data-ttu-id="237f6-441">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-441">Console Application</span></span>|<span data-ttu-id="237f6-442">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-442">**Yes**</span></span>|  
|<span data-ttu-id="237f6-443">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-443">Windows Control Library</span></span>|<span data-ttu-id="237f6-444">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-444">**Yes**</span></span>|  
|<span data-ttu-id="237f6-445">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-445">Web Control Library</span></span>|<span data-ttu-id="237f6-446">いいえ</span><span class="sxs-lookup"><span data-stu-id="237f6-446">No</span></span>|  
|<span data-ttu-id="237f6-447">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="237f6-447">Windows Service</span></span>|<span data-ttu-id="237f6-448">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-448">**Yes**</span></span>|  
|<span data-ttu-id="237f6-449">Web サイト</span><span class="sxs-lookup"><span data-stu-id="237f6-449">Web Site</span></span>|<span data-ttu-id="237f6-450">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-450">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="237f6-451">この例では、`My.Application.Log.WriteException` メソッドを使用して例外をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-451">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="237f6-452">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="237f6-452">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="237f6-453">詳細については、「[方法: 例外をログに記録](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-453">For more information, see [How to: Log Exceptions](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="237f6-454">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-454">This code example can run only within a client application.</span></span> <span data-ttu-id="237f6-455">Web アプリケーションの `My.Application.Log.WriteException` を `My.Log.WriteException` に変更します。</span><span class="sxs-lookup"><span data-stu-id="237f6-455">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="237f6-456"><paramref name="ex" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="237f6-456"><paramref name="ex" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="237f6-457">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span><span class="sxs-lookup"><span data-stu-id="237f6-457">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="237f6-458">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="237f6-458">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-459">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-459">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="237f6-460">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="237f6-460">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/a26c60e2-ae39-444a-aebb-33eccadc0eeb"><span data-ttu-id="237f6-461">方法: Visual Basic で例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="237f6-461">How to: Log Exceptions in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="237f6-462">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-462">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string * int -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ex"><span data-ttu-id="237f6-463">必須。</span><span class="sxs-lookup"><span data-stu-id="237f6-463">Required.</span></span> <span data-ttu-id="237f6-464">記録する例外。</span><span class="sxs-lookup"><span data-stu-id="237f6-464">Exception to log.</span></span></param>
        <param name="severity"><span data-ttu-id="237f6-465">メッセージの種類。</span><span class="sxs-lookup"><span data-stu-id="237f6-465">The type of message.</span></span> <span data-ttu-id="237f6-466">既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</span><span class="sxs-lookup"><span data-stu-id="237f6-466">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span></span></param>
        <param name="additionalInfo"><span data-ttu-id="237f6-467">メッセージに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="237f6-467">String to append to the message.</span></span> <span data-ttu-id="237f6-468">既定では空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="237f6-468">By default, this is an empty string.</span></span></param>
        <param name="id"><span data-ttu-id="237f6-469">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-469">Message identifier, typically used for correlation.</span></span> <span data-ttu-id="237f6-470">既定では、「解説」の表に示した <c>entryType</c> と関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="237f6-470">By default, related to <c>entryType</c> as described in the table in the Remarks section.</span></span></param>
        <summary><span data-ttu-id="237f6-471">アプリケーションのログ リスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-471">Writes exception information to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="237f6-472">`WriteException` メソッドは、例外に含まれている情報をアプリケーションのイベントログリスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-472">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="237f6-473">クライアントアプリケーションでは、`My.Application.Log` オブジェクトを介して `Log` オブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-473">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="237f6-474">Web アプリケーションでは、`Log` オブジェクトは `My.Log` オブジェクトを介して使用できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-474">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="237f6-475">`WriteException` メソッドのメッセージを受信するログリスナーについては、「[チュートリアル: .log が情報を書き込む場所を決定](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-475">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information).</span></span> <span data-ttu-id="237f6-476">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="237f6-476">You can change default log listeners.</span></span> <span data-ttu-id="237f6-477">詳しくは、「[アプリケーション ログの使用](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="237f6-477">For more information, see [Working with Application Logs](/dotnet/visual-basic/developing-apps/programming/log-info/working-with-application-logs).</span></span>  
  
 <span data-ttu-id="237f6-478">`id` 引数を受け取らないオーバーロードでは、ログに書き込まれる識別子は次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="237f6-478">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="237f6-479">既定の `id`</span><span class="sxs-lookup"><span data-stu-id="237f6-479">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="237f6-480">0</span><span class="sxs-lookup"><span data-stu-id="237f6-480">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="237f6-481">1</span><span class="sxs-lookup"><span data-stu-id="237f6-481">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="237f6-482">2</span><span class="sxs-lookup"><span data-stu-id="237f6-482">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="237f6-483">3</span><span class="sxs-lookup"><span data-stu-id="237f6-483">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="237f6-484">4</span><span class="sxs-lookup"><span data-stu-id="237f6-484">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="237f6-485">5</span><span class="sxs-lookup"><span data-stu-id="237f6-485">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="237f6-486">6</span><span class="sxs-lookup"><span data-stu-id="237f6-486">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="237f6-487">7</span><span class="sxs-lookup"><span data-stu-id="237f6-487">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="237f6-488">8</span><span class="sxs-lookup"><span data-stu-id="237f6-488">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="237f6-489">9</span><span class="sxs-lookup"><span data-stu-id="237f6-489">9</span></span>|  
  
 <span data-ttu-id="237f6-490">次の表に、`WriteException` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-490">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="237f6-491">目的</span><span class="sxs-lookup"><span data-stu-id="237f6-491">To</span></span>|<span data-ttu-id="237f6-492">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="237f6-492">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="237f6-493">アプリケーションのイベントログリスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="237f6-493">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="237f6-494">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="237f6-494">How to: Log Exceptions</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions)|  
|<span data-ttu-id="237f6-495">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="237f6-495">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="237f6-496">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-496">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="237f6-497">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="237f6-497">Availability by Project Type</span></span>  
  
|<span data-ttu-id="237f6-498">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="237f6-498">Project type</span></span>|<span data-ttu-id="237f6-499">利用可能</span><span class="sxs-lookup"><span data-stu-id="237f6-499">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="237f6-500">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-500">Windows Application</span></span>|<span data-ttu-id="237f6-501">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-501">**Yes**</span></span>|  
|<span data-ttu-id="237f6-502">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-502">Class Library</span></span>|<span data-ttu-id="237f6-503">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-503">**Yes**</span></span>|  
|<span data-ttu-id="237f6-504">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="237f6-504">Console Application</span></span>|<span data-ttu-id="237f6-505">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-505">**Yes**</span></span>|  
|<span data-ttu-id="237f6-506">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-506">Windows Control Library</span></span>|<span data-ttu-id="237f6-507">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-507">**Yes**</span></span>|  
|<span data-ttu-id="237f6-508">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="237f6-508">Web Control Library</span></span>|<span data-ttu-id="237f6-509">いいえ</span><span class="sxs-lookup"><span data-stu-id="237f6-509">No</span></span>|  
|<span data-ttu-id="237f6-510">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="237f6-510">Windows Service</span></span>|<span data-ttu-id="237f6-511">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-511">**Yes**</span></span>|  
|<span data-ttu-id="237f6-512">Web サイト</span><span class="sxs-lookup"><span data-stu-id="237f6-512">Web Site</span></span>|<span data-ttu-id="237f6-513">**はい**</span><span class="sxs-lookup"><span data-stu-id="237f6-513">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="237f6-514">この例では、`My.Application.Log.WriteException` メソッドを使用して例外をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="237f6-514">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="237f6-515">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="237f6-515">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="237f6-516">詳細については、「[方法: 例外をログに記録](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="237f6-516">For more information, see [How to: Log Exceptions](/dotnet/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="237f6-517">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="237f6-517">This code example can run only within a client application.</span></span> <span data-ttu-id="237f6-518">Web アプリケーションの `My.Application.Log.WriteException` を `My.Log.WriteException` に変更します。</span><span class="sxs-lookup"><span data-stu-id="237f6-518">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="237f6-519"><paramref name="ex" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="237f6-519"><paramref name="ex" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="237f6-520">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span><span class="sxs-lookup"><span data-stu-id="237f6-520">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="237f6-521">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="237f6-521">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="237f6-522">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="237f6-522">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="237f6-523">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="237f6-523">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/a26c60e2-ae39-444a-aebb-33eccadc0eeb"><span data-ttu-id="237f6-524">方法: Visual Basic で例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="237f6-524">How to: Log Exceptions in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="237f6-525">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="237f6-525">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
