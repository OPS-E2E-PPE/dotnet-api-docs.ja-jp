<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0bfcb4d779d6d4cd814683f2c59f050a88a02cd8" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83975829" /></Metadata><TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0124d-101">ログ出力をファイルに転送する簡単なリスナーを提供します。</span><span class="sxs-lookup"><span data-stu-id="0124d-101">Provides a simple listener that directs logging output to file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-102"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスは、毎日またはアプリケーションごとに、必要に応じてログファイルをアーカイブするための自動化されたメンテナンス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="0124d-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="0124d-103">この自動アーカイブ機能により、開発者と管理者の責任を軽減できます。</span><span class="sxs-lookup"><span data-stu-id="0124d-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="0124d-104"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> のインスタンスを <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> または <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> コレクションに追加して、出力をテキストファイルにリダイレクトすることができます。</span><span class="sxs-lookup"><span data-stu-id="0124d-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="0124d-105">このクラスのインスタンスは、Visual Basic アプリケーションの `My.Application.Log` または `My.Log` (Web アプリケーションの場合) に追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="0124d-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="0124d-106">詳細については、「[チュートリアル: .log が情報を書き込む場所を変更する](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information)」を参照してください`.`</span><span class="sxs-lookup"><span data-stu-id="0124d-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](/dotnet/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information)`.`</span></span>  
  
 <span data-ttu-id="0124d-107">このクラスの主な特徴は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0124d-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="0124d-108">*アーカイブ機能*。</span><span class="sxs-lookup"><span data-stu-id="0124d-108">*Archival functionality*.</span></span> <span data-ttu-id="0124d-109">このクラスによって生成されるログファイルには、ベース名と日付に基づいて名前が付けられ、ログファイルを連続したバージョンのログと区別するための数値も指定されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="0124d-110">新しいログファイルは、必要に応じて作成されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="0124d-111">ファイル名の明示的な形式は `baseName`[-`dateStamp`] [-`version`] .log です。この場合、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="0124d-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="0124d-112">`baseName` 部分は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> プロパティによって指定された、基本的なログ名です。</span><span class="sxs-lookup"><span data-stu-id="0124d-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="0124d-113">`dateStamp` の部分の形式は "YYYY-MM-DD" で、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> が <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> または <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>ときに表示されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="0124d-114">同じ `baseName` と `dateStamp`で複数のログファイルが必要な場合は、`version` の部分である正の `Integer`がファイル名に追加されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="0124d-115">*複数のクラスインスタンス*。</span><span class="sxs-lookup"><span data-stu-id="0124d-115">*Multiple class instances*.</span></span> <span data-ttu-id="0124d-116"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスのインスタンスが、使用中のファイルに書き込みを行う場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="0124d-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="0124d-117">クラスは、同じプロセス内の <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスの別のインスタンスによって使用されている場合に、ファイルを共有します。</span><span class="sxs-lookup"><span data-stu-id="0124d-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="0124d-118">クラスは、ファイルが別のプロセスによって使用されている場合に、次に使用可能な名前を使用して新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="0124d-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="0124d-119">*スレッドセーフ*。</span><span class="sxs-lookup"><span data-stu-id="0124d-119">*Thread safety*.</span></span> <span data-ttu-id="0124d-120"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスはスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="0124d-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="0124d-121">これにより、ロックを使用せずに、複数のスレッドからログにメッセージを安全に書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="0124d-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="0124d-122">**ログファイルの場所**</span><span class="sxs-lookup"><span data-stu-id="0124d-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="0124d-123"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> プロパティは、ログファイルの書き込み先となる一般的なディレクトリの1つを指定するために、<xref:Microsoft.VisualBasic.Logging.LogFileLocation> 列挙を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="0124d-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="0124d-124">別の場所にログを書き込むには、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> プロパティをその場所に設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="0124d-125">**ログファイル名**</span><span class="sxs-lookup"><span data-stu-id="0124d-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="0124d-126">ログファイルの基本名は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="0124d-127">現在のログファイル名は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> プロパティから読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="0124d-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="0124d-128">これは、他のいくつかのプロパティと、ファイルシステム内のログの現在の状態から派生します。</span><span class="sxs-lookup"><span data-stu-id="0124d-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="0124d-129">**ログのメンテナンス**</span><span class="sxs-lookup"><span data-stu-id="0124d-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="0124d-130">新しいログファイルを作成する頻度の最小値は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="0124d-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="0124d-131">値が <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> または <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>の場合、新しいログファイルが少なくとも1回、または1週間に1回作成され、日付スタンプが <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 名に組み込まれます。</span><span class="sxs-lookup"><span data-stu-id="0124d-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="0124d-132">ログファイルの最大サイズ (バイト単位) は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="0124d-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="0124d-133">ログファイルのサイズがこのサイズを超えると、ログに書き込まれた追加のメッセージは破棄され、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> プロパティによっては例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0124d-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="0124d-134"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> プロパティにより、使用可能な空き領域 (バイト単位) が決まります。</span><span class="sxs-lookup"><span data-stu-id="0124d-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="0124d-135">これにより、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスが使用可能なすべてのディスク領域を消費しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="0124d-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="0124d-136"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> プロパティを使用して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> バイト未満の空き領域がある場合のログ書き込みの動作を指定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="0124d-137">**ログファイルの出力設定**</span><span class="sxs-lookup"><span data-stu-id="0124d-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="0124d-138"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> プロパティは、ログファイルへの書き込みごとに、基になるストリームを自動的にフラッシュするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="0124d-139"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> プロパティは、メッセージを現在のログファイルに追加するか (許可されている場合)、新しいログファイルに書き込むかを指定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="0124d-140"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> プロパティは、ログメッセージ内のフィールドを区切るために使用する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="0124d-141"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> プロパティは、新しいログファイルを作成するときに使用するエンコーディングを指定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="0124d-142">**ログファイルの出力**</span><span class="sxs-lookup"><span data-stu-id="0124d-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="0124d-143"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> メソッドと <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> メソッドは、ログファイルにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="0124d-144">これらのメソッドは、新しいログを作成する必要があるかどうかを判断するために、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> プロパティと、同じ基本名を持つ既存のログを確認します。</span><span class="sxs-lookup"><span data-stu-id="0124d-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="0124d-145"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> メソッドは、出力バッファー内の現在のすべてのメッセージをログファイルにフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="0124d-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="0124d-146"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> メソッドは、他のプロセスで使用できるようにログファイルを閉じます。</span><span class="sxs-lookup"><span data-stu-id="0124d-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="0124d-147">**出力の有効化**</span><span class="sxs-lookup"><span data-stu-id="0124d-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="0124d-148">トレースリスナーを使用するには、トレースまたはデバッグを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0124d-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="0124d-149">次の構文はコンパイラ固有です。</span><span class="sxs-lookup"><span data-stu-id="0124d-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="0124d-150">または Visual Basic 以外C#のコンパイラを使用する場合は、コンパイラのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="0124d-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="0124d-151">でC#デバッグを有効にするには、コードのコンパイル時にコンパイラのコマンドラインに `/d:DEBUG` フラグを追加するか、ファイルの先頭に `#define DEBUG` を追加します。</span><span class="sxs-lookup"><span data-stu-id="0124d-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="0124d-152">Visual Basic で、コンパイラのコマンドラインに `/d:DEBUG=True` フラグを追加します。</span><span class="sxs-lookup"><span data-stu-id="0124d-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="0124d-153">でC#トレースを有効にするには、コードをコンパイルするときにコンパイラのコマンドラインに `/d:TRACE` フラグを追加するか、ファイルの先頭に `#define TRACE` を追加します。</span><span class="sxs-lookup"><span data-stu-id="0124d-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="0124d-154">Visual Basic で、コンパイラのコマンドラインに `/d:TRACE=True` フラグを追加します。</span><span class="sxs-lookup"><span data-stu-id="0124d-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="0124d-155">リスナーのレベルを設定するには、アプリケーションの構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="0124d-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="0124d-156">このファイル内で、リスナーを追加したり、その型を設定したり、パラメーターを設定したり、リスナーを削除したり、アプリケーションによって以前に設定されたすべてのリスナーをクリアしたりできます。</span><span class="sxs-lookup"><span data-stu-id="0124d-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="0124d-157">構成ファイルは、次の例のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0124d-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="0124d-158">この例を実行するには、完全修飾アセンブリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0124d-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="0124d-159">完全修飾アセンブリ名を取得する方法については、「[アセンブリ名](/dotnet/standard/assembly/names)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0124d-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](/dotnet/standard/assembly/names).</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
    <related type="Article" href="https://msdn.microsoft.com/library/ecc74f95-743c-450d-93f6-09a30db0fe4a"><span data-ttu-id="0124d-160">チュートリアル : My.Application.Log による情報の書き込み先の変更</span><span class="sxs-lookup"><span data-stu-id="0124d-160">Walkthrough: Changing Where My.Application.Log Writes Information</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0124d-161"><see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化し、その名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0124d-162">既定の名前を使用して、<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0124d-162">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-163">このメソッドは、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスのインスタンス名を Microsoft.visualbasic.logging.filelogtracelistener に設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-163">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="0124d-164">インスタンス名には、<xref:System.Diagnostics.TraceListener.Name%2A> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="0124d-164">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="0124d-165">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0124d-165">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0124d-166">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="0124d-166"><see langword="String" />.</span></span> <span data-ttu-id="0124d-167">インスタンス オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="0124d-167">The name of the instance object.</span></span></param>
        <summary><span data-ttu-id="0124d-168">指定された名前を使用して、<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0124d-168">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-169">このメソッドは、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスのインスタンス名を `name`に設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-169">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="0124d-170">インスタンス名には、<xref:System.Diagnostics.TraceListener.Name%2A> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="0124d-170">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="0124d-171">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0124d-171">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-172">現在のファイルに追記するか、新しいファイルまたは既存のファイルに出力するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-172">Determines whether to append the output to the current file or write it to a new or existing file.</span></span></summary>
        <value><span data-ttu-id="0124d-173"><see langword="Boolean" /> 値。現在のファイルに追記する場合は <see langword="True" />。新しいファイルに出力する場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="0124d-173"><see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span></span> <span data-ttu-id="0124d-174">このプロパティの既定の設定は <see langword="True" /> です。</span><span class="sxs-lookup"><span data-stu-id="0124d-174">The default setting for this property is <see langword="True" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
   
## Remarks  

<span data-ttu-id="0124d-175"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> プロパティが `True`場合、ログファイルは <xref:System.IO.FileMode.Append> モードで開かれ、既存のログが保持されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-175">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `True`, the log file is opened in <xref:System.IO.FileMode.Append> mode, to keep existing logs.</span></span> <span data-ttu-id="0124d-176">現在の書き込み位置はファイルの末尾から始まり、新しいログがファイルの末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-176">The current writing position starts at the end of the file, so that any new logs are appended to the end of the file.</span></span>

<span data-ttu-id="0124d-177">`Append` プロパティが `False`場合、ログファイルは <xref:System.IO.FileMode.Truncate> モードで開かれます。このモードでは、ログファイルを開いたときにすべてのログデータが削除されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-177">When the `Append` property is `False`, the log file is opened in <xref:System.IO.FileMode.Truncate> mode, where all log data is deleted when the log file is opened.</span></span> <span data-ttu-id="0124d-178">`Append` プロパティが `False` に設定された後、またはファイルが開かれて最初のログが書き込まれる前に、`FileLogTraceListener` はログファイルの既存の内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="0124d-178">The `FileLogTraceListener` deletes existing contents of the log file once after the `Append` propery is set to `False` or the file is opened and before it writes the first log.</span></span> <span data-ttu-id="0124d-179">その後、`FileLogTraceListener` は、ファイルの末尾にトレースデータを追加します。</span><span class="sxs-lookup"><span data-stu-id="0124d-179">After that, `FileLogTraceListener` appends additional trace data to the end of the file.</span></span> <span data-ttu-id="0124d-180">[追加] が False に設定されているときに `FileLogTraceListener` インスタンスを閉じて再度開くと、追加のログを書き込む前にログファイルのデータが消去されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-180">If the `FileLogTraceListener` instance is closed and then reopened while Append is set to False, it erases the log file data before writing additional logs.</span></span> <span data-ttu-id="0124d-181">これにより、特に、構成ファイルで `Append` プロパティの値を `False` に設定した場合に、データが失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0124d-181">This can lead to missing data, particularly if you set the value of the `Append` property to `False` in a configuration file.</span></span>

<span data-ttu-id="0124d-182">この動作は、次のシナリオでオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="0124d-182">This behavior is overridden in the following scenarios:</span></span>

- <span data-ttu-id="0124d-183">出力ファイルは別のプロセスによってロックされています。</span><span class="sxs-lookup"><span data-stu-id="0124d-183">The output file is locked by another process.</span></span> <span data-ttu-id="0124d-184"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 名に組み込まれているバージョン番号を使用して、新しいログファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-184">A new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
- <span data-ttu-id="0124d-185">現在のファイルサイズが、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> プロパティで許可されている値を超えています。</span><span class="sxs-lookup"><span data-stu-id="0124d-185">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span>  <span data-ttu-id="0124d-186">追加のメッセージは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-186">Additional messages are discarded.</span></span> <span data-ttu-id="0124d-187"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> プロパティによっては、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0124d-187">Depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>
  
- <span data-ttu-id="0124d-188"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> プロパティによって指定されたログ作成スケジュールに従って、既存のファイル名が最新ではありません。</span><span class="sxs-lookup"><span data-stu-id="0124d-188">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="0124d-189">新しいログファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-189">A new log file is created.</span></span> <span data-ttu-id="0124d-190">日付スタンプは <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> 名に組み込まれています。</span><span class="sxs-lookup"><span data-stu-id="0124d-190">The date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  

 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-191">ログ ファイル ストリームに書き込むたびに、バッファーをフラッシュするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0124d-191">Indicates whether or not the writing to the log file stream flushes the buffer.</span></span></summary>
        <value><span data-ttu-id="0124d-192"><see langword="Boolean" /> 値。書き込みのたびにストリームがフラッシュされる場合は <see langword="True" />。それ以外の場合、ログ エントリはバッファーに格納されて、より効率よく出力されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-192"><see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span></span> <span data-ttu-id="0124d-193">このプロパティの既定の設定は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="0124d-193">The default setting for this property is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-194"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> プロパティの `False` 設定は、ログファイルに複数のメッセージを一度に書き込む方が効率的であるため、ほとんどのアプリケーションで最高のパフォーマンスが得られます。</span><span class="sxs-lookup"><span data-stu-id="0124d-194">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="0124d-195"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> メソッドを使用して、ログファイルの出力バッファーに現在格納されているすべてのメッセージをフラッシュすることができます。</span><span class="sxs-lookup"><span data-stu-id="0124d-195">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="0124d-196">また、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> メソッドを使用することもできます。このメソッドは、ログファイルを閉じる前にストリームを暗黙的にフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="0124d-196">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-197">ログ ファイルの基本名を取得または設定します。ログ ファイルの完全名を生成するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-197">Gets or sets the base name for the log files, which is used to create the full log-file name.</span></span></summary>
        <value><span data-ttu-id="0124d-198">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="0124d-198"><see langword="String" />.</span></span> <span data-ttu-id="0124d-199">ログ ファイルの基本名。</span><span class="sxs-lookup"><span data-stu-id="0124d-199">The base name for the log files.</span></span> <span data-ttu-id="0124d-200">既定では、アプリケーションの製品名になります。</span><span class="sxs-lookup"><span data-stu-id="0124d-200">The default is the application's product name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-201"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> プロパティは、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスが書き込むログファイルの基本名を決定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-201">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="0124d-202"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> プロパティは、現在の完全なログファイル名を示します。</span><span class="sxs-lookup"><span data-stu-id="0124d-202">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="0124d-203">ログのパス、基本名、日付、および異なるバージョンのログと区別するための数値に基づいて生成されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-203">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="0124d-204">新しいログファイルは、必要に応じて作成されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-204">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="0124d-205">完全なログファイル名の明示的な形式は \\`path``baseName`[-`dateStamp`] [-`iteration`] .log です。ここで、</span><span class="sxs-lookup"><span data-stu-id="0124d-205">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="0124d-206">`path` の部分は <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> プロパティによって決定され、そのプロパティ値が <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>に設定されている場合は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="0124d-206">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="0124d-207">`baseName` 部分は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> プロパティによって指定された、基本的なログ名です。</span><span class="sxs-lookup"><span data-stu-id="0124d-207">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="0124d-208">`dateStamp` の部分の形式は "YYYY-MM-DD" で、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> が <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> または <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>に設定されている場合に表示されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-208">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="0124d-209">同じ `baseName` と `dateStamp`で複数のログファイルが必要な場合は、`iteration` の部分である正の `Integer`がファイル名に追加されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-209">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void Close() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0124d-210">現在のログ ファイルに使用されているストリームを閉じ、現在のストリームに関連付けられたすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="0124d-210">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-211"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスが基になるストリームを管理するため、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> メソッドを明示的に呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0124d-211">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-212"><see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> プロパティが <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> に設定されている場合に、ログ ファイルのディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-212">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span></span></summary>
        <value><span data-ttu-id="0124d-213">ログ ファイルのディレクトリ名を表す <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="0124d-213"><see langword="String" />, which is the name of the log-file directory.</span></span> <span data-ttu-id="0124d-214">このプロパティの既定の設定は、アプリケーション データ用のユーザー ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="0124d-214">The default setting for this property is the user's directory for application data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-215"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> プロパティが設定されている場合は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> プロパティも <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-215">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="0124d-216">ディレクトリを解決できない場合、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> プロパティは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="0124d-216">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-217">ログ メッセージに使用されているフィールド区切り記号を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-217">Gets or sets the delimiter used to delimit fields within a log message.</span></span></summary>
        <value><span data-ttu-id="0124d-218">ログ メッセージのフィールド区切り記号を表す <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="0124d-218"><see langword="String" />, which is the delimiter used for fields within a log message.</span></span> <span data-ttu-id="0124d-219">このプロパティの既定の設定はタブ文字です。</span><span class="sxs-lookup"><span data-stu-id="0124d-219">The default setting for this property is the TAB character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-220"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> プロパティを使用すると、既定の区切り記号を変更できます。</span><span class="sxs-lookup"><span data-stu-id="0124d-220">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-221">ログ ファイルへの出力時に、空きディスク容量が <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> プロパティに指定された値を下回っていた場合の動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-221">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span></span></summary>
        <value><span data-ttu-id="0124d-222">[https://login.microsoftonline.com/consumers/](<see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />)</span><span class="sxs-lookup"><span data-stu-id="0124d-222"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span></span> <span data-ttu-id="0124d-223">ログ ファイルへの出力時に、空きディスク容量が <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> プロパティに指定された値を下回っていた場合、または、ログ ファイルのサイズが <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> プロパティの値を超えていた場合の動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-223">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span></span> <span data-ttu-id="0124d-224">既定値は <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /> です。</span><span class="sxs-lookup"><span data-stu-id="0124d-224">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-225"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> プロパティが <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>に設定されている場合、予約済みのディスク領域が不足していると、ログメッセージは警告なしに破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-225">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="0124d-226">これは既定の動作であり、ディスクがいっぱいになった場合に単純なアプリケーションが失敗するのを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="0124d-226">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="0124d-227">より堅牢なアプリケーションでは、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> プロパティを <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>に設定し、ログに書き込むすべてのコードの前後に `Try...Catch` ブロックを追加することができます。</span><span class="sxs-lookup"><span data-stu-id="0124d-227">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="0124d-228">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="True" />。アンマネージド リソースだけを解放する場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="0124d-228"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="0124d-229">使用しているストリームを閉じ、選択されたオプションに従って、マネージド リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="0124d-229">Closes the underlying stream and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-230">`disposing` パラメーターが `True` の場合、このメソッドは、この <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="0124d-230">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="0124d-231">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0124d-231">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0124d-232">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="0124d-232">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="0124d-233"><see langword="Dispose" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0124d-233">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span>  
  
<span data-ttu-id="0124d-234">このメソッドは、<see langword="Dispose" />基底クラスの <see langword="Dispose" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0124d-234">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-235">新しいログ ファイルを作成する際に使用するエンコーディングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-235">Gets or sets the encoding to use when creating a new log file.</span></span></summary>
        <value><span data-ttu-id="0124d-236">新しいログ ファイルを作成する際のエンコーディングを表す <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="0124d-236"><see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span></span> <span data-ttu-id="0124d-237">このプロパティの既定値は <see cref="T:System.Text.UTF8Encoding" /> です。</span><span class="sxs-lookup"><span data-stu-id="0124d-237">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-238">既存のログファイルにテキストを追加する場合は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> プロパティで指定されたエンコーディングではなく、そのファイルのエンコーディングが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-238">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void Flush() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0124d-239">現在のログ ファイルへの書き込みに使用しているストリームをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="0124d-239">Flushes the underlying stream that writes to the current log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-240"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> メソッドを使用して、バッファー内のすべてのデータを現在のログファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-240">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-241">現在のログ ファイルの完全名を取得します。</span><span class="sxs-lookup"><span data-stu-id="0124d-241">Gets the current full log-file name.</span></span></summary>
        <value><span data-ttu-id="0124d-242">現在のログ ファイルの完全名を表す <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="0124d-242"><see langword="String" />, which is the current full log-file name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-243"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> プロパティは、現在の完全なログファイル名を示します。</span><span class="sxs-lookup"><span data-stu-id="0124d-243">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="0124d-244">ログのパス、基本名、日付、および異なるバージョンのログと区別するための数値に基づいて生成されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-244">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="0124d-245">新しいログファイルは、必要に応じて作成されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-245">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="0124d-246">完全なログファイル名の明示的な形式は \\`path``baseName`[-`dateStamp`] [-`iteration`] .log です。この場合、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="0124d-246">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="0124d-247">`path` の部分は <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> プロパティによって決定され、そのプロパティ値が <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>に設定されている場合は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="0124d-247">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="0124d-248">`baseName` 部分は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> プロパティによって指定された、基本的なログ名です。</span><span class="sxs-lookup"><span data-stu-id="0124d-248">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="0124d-249">`dateStamp` の部分は YYYY-MM-DD という形式で、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> が <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> または <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>ときに表示されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-249">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="0124d-250">同じ `baseName` と `dateStamp`で複数のログファイルが必要な場合は、`iteration` の部分である正の `Integer`がファイル名に追加されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-250">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0124d-251">トレース リスナーによってサポートされるカスタムの XML 構成属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="0124d-251">Gets the custom XML configuration attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="0124d-252">このリスナーで認識可能な XML 構成属性を保持する <see langword="String" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="0124d-252"><see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-253"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> のカスタム属性は、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスのインスタンスの動作を制御するために XML 構成ファイルで使用できます。</span><span class="sxs-lookup"><span data-stu-id="0124d-253">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="0124d-254">他の属性を使用すると、構成の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="0124d-254">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-255">ログを記録しているコンピューターのホスト名を出力に含めるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0124d-255">Indicates whether or not the host name of the logging machine should be included in the output.</span></span></summary>
        <value><span data-ttu-id="0124d-256">[https://login.microsoftonline.com/consumers/](<see langword="Boolean" />)</span><span class="sxs-lookup"><span data-stu-id="0124d-256"><see langword="Boolean" />.</span></span> <span data-ttu-id="0124d-257">ホストの識別子を含める場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="0124d-257">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span></span> <span data-ttu-id="0124d-258">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="0124d-258">The default value is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-259">プロパティを使用して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> および <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> メソッドの動作を構成します。</span><span class="sxs-lookup"><span data-stu-id="0124d-259">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-260">ログ ファイルの場所を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-260">Gets or sets location for the log files.</span></span></summary>
        <value><span data-ttu-id="0124d-261">ログ ファイルの場所を表す <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />。</span><span class="sxs-lookup"><span data-stu-id="0124d-261"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span></span> <span data-ttu-id="0124d-262">既定値は <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /> です。</span><span class="sxs-lookup"><span data-stu-id="0124d-262">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-263"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> プロパティを使用して、<xref:Microsoft.VisualBasic.Logging.LogFileLocation> 列挙値によって決定される定義済みのパスのいずれかにログのパスを設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-263">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="0124d-264">**場所の値**</span><span class="sxs-lookup"><span data-stu-id="0124d-264">**Location value**</span></span>|<span data-ttu-id="0124d-265">**[パス]**</span><span class="sxs-lookup"><span data-stu-id="0124d-265">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="0124d-266">すべてのユーザー間で共有されるアプリケーションデータのパス。次の形式で指定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-266">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="0124d-267">`BasePath` の一般的な値は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0124d-267">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="0124d-268">C:\documents and および Settings\All Users\Application データ</span><span class="sxs-lookup"><span data-stu-id="0124d-268">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="0124d-269">`CompanyName`、`ProductName`、および `ProductVersion` の値は、アセンブリから取得されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-269">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="0124d-270">アプリケーションを開始した実行可能ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="0124d-270">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="0124d-271">ユーザーのアプリケーションデータのパス。次の形式で指定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-271">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="0124d-272">`BasePath` の一般的な値は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0124d-272">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="0124d-273">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="0124d-273">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="0124d-274">`CompanyName`、`ProductName`、`ProductVersion` の値は、アセンブリを形成します。</span><span class="sxs-lookup"><span data-stu-id="0124d-274">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="0124d-275">現在のシステムの一時フォルダーのパス。</span><span class="sxs-lookup"><span data-stu-id="0124d-275">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="0124d-276"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> によって指定された文字列が空でない場合は、パスとして使用します。それ以外の場合は、ユーザーのアプリケーションデータのパスを使用します。</span><span class="sxs-lookup"><span data-stu-id="0124d-276">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-277">ログ ファイルの名前に追加する日付を決定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-277">Determines which date to include in the names of the log files.</span></span></summary>
        <value><span data-ttu-id="0124d-278">[https://login.microsoftonline.com/consumers/](<see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />)</span><span class="sxs-lookup"><span data-stu-id="0124d-278"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span></span> <span data-ttu-id="0124d-279">ログ ファイルの名前に追加される日付を示します。</span><span class="sxs-lookup"><span data-stu-id="0124d-279">This indicates which date to include in the log-file names.</span></span> <span data-ttu-id="0124d-280">既定値は <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="0124d-280">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-281"><xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> 列挙値のいずれかを <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> プロパティに割り当てて、ログファイルの名前に含める日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-281">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="0124d-282">日付の形式は YYYY-MM-DD です。</span><span class="sxs-lookup"><span data-stu-id="0124d-282">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="0124d-283">ログファイル名の形式の詳細については、「<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0124d-283">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="0124d-284">**LogFileCreationSchedule 値**</span><span class="sxs-lookup"><span data-stu-id="0124d-284">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="0124d-285">**ログファイル名の日付**</span><span class="sxs-lookup"><span data-stu-id="0124d-285">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="0124d-286">ログ ファイルの名前に現在の日付を追加します。</span><span class="sxs-lookup"><span data-stu-id="0124d-286">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="0124d-287">ログ ファイルの名前に日付を追加しません。</span><span class="sxs-lookup"><span data-stu-id="0124d-287">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="0124d-288">現在の週の最初の曜日をログ ファイルの名前に追加します。</span><span class="sxs-lookup"><span data-stu-id="0124d-288">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="0124d-289">週は土曜日に始まります。</span><span class="sxs-lookup"><span data-stu-id="0124d-289">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-290">ログ ファイルの最大サイズ (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-290">Gets or sets the maximum allowed size of the log file, in bytes.</span></span></summary>
        <value><span data-ttu-id="0124d-291">[https://login.microsoftonline.com/consumers/](<see langword="Long" />)</span><span class="sxs-lookup"><span data-stu-id="0124d-291"><see langword="Long" />.</span></span> <span data-ttu-id="0124d-292">ログ ファイルの最大サイズ (バイト単位) を表します。</span><span class="sxs-lookup"><span data-stu-id="0124d-292">This is the maximum allowed log-file size, in bytes.</span></span> <span data-ttu-id="0124d-293">既定値は500万です。</span><span class="sxs-lookup"><span data-stu-id="0124d-293">The default value is 5000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-294">このプロパティを使用して、ログファイルが大きくなっていないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="0124d-294">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="0124d-295">ログファイルのサイズ (バイト単位) がこのプロパティの値よりも大きい場合、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスがログにメッセージを書き込もうとすると、メッセージは破棄され、エラーはサイレントになるか、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> プロパティの値に応じて例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0124d-295">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="0124d-296">それ以外の場合は、空きディスク領域の容量 (バイト単位) が <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>未満の場合、メッセージがログに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0124d-296">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0124d-297">このプロパティが、1000 未満の値に設定されている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="0124d-297">When this property is set to a value less than 1000.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0124d-298">確保する空きディスク容量 (バイト単位) を取得または設定します。この容量を下回ると、ログ ファイルにメッセージを出力できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0124d-298">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span></span></summary>
        <value><span data-ttu-id="0124d-299">[https://login.microsoftonline.com/consumers/](<see langword="Long" />)</span><span class="sxs-lookup"><span data-stu-id="0124d-299"><see langword="Long" />.</span></span> <span data-ttu-id="0124d-300">必要な空きディスク容量を表します。</span><span class="sxs-lookup"><span data-stu-id="0124d-300">This is the amount of free disk space necessary.</span></span> <span data-ttu-id="0124d-301">既定値は1000万です。</span><span class="sxs-lookup"><span data-stu-id="0124d-301">The default value is 10000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-302">このプロパティを使用して、ログファイルがディスクに完全に格納されないようにします。</span><span class="sxs-lookup"><span data-stu-id="0124d-302">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="0124d-303">空きディスク領域の容量 (バイト単位) がこのプロパティの値よりも小さい場合、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> クラスがログにメッセージを書き込もうとすると、メッセージは破棄され、エラーはサイレントになるか、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> プロパティの値に応じて例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0124d-303">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="0124d-304">それ以外の場合、ログファイルのサイズ (バイト単位) が <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>より大きい場合は、メッセージがログに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0124d-304">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0124d-305">このプロパティが 0 未満の値に設定されている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="0124d-305">When this property is set to a value less than 0.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0124d-306">出力ファイルにトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-306">Writes trace data to the output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-307"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> メソッドは、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="0124d-307"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="0124d-308">これらのメソッドは、<xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>、および <xref:System.Diagnostics.TraceSource> クラスのメンバーによって、出力するトレースデータを書き込むために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-308">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="0124d-309">現在のプロセス ID、スレッド ID、およびスタック トレース情報を含む <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0124d-309">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="0124d-310">このメソッドを呼び出したトレース ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="0124d-310">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="0124d-311"><see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="0124d-311">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="0124d-312">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="0124d-312">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="0124d-313">出力するトレース データ。</span><span class="sxs-lookup"><span data-stu-id="0124d-313">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="0124d-314">トレース情報、データ オブジェクト、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-314">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-315">このメソッドは以下の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="0124d-315">This method:</span></span>  
  
1.  <span data-ttu-id="0124d-316">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-316">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="0124d-317">必要に応じて、新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="0124d-317">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="0124d-318">ログファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-318">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="0124d-319">新しいログファイルの作成の詳細については、「<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0124d-319">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="0124d-320">次の表に、出力フィールドの表示順の一覧を示します。</span><span class="sxs-lookup"><span data-stu-id="0124d-320">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="0124d-321">フィールドは、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> プロパティによって指定された文字列によって区切られ、その後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="0124d-321">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="0124d-322">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="0124d-322">**Field**</span></span>|<span data-ttu-id="0124d-323">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="0124d-323">**Output condition**</span></span>|<span data-ttu-id="0124d-324">**説明**</span><span class="sxs-lookup"><span data-stu-id="0124d-324">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="0124d-325">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-325">Always</span></span>|<span data-ttu-id="0124d-326">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="0124d-326">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="0124d-327">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-327">Always</span></span>|<span data-ttu-id="0124d-328">`eventType`の列挙値の名前。</span><span class="sxs-lookup"><span data-stu-id="0124d-328">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="0124d-329">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-329">Always</span></span>|<span data-ttu-id="0124d-330">`id` の文字列表記。</span><span class="sxs-lookup"><span data-stu-id="0124d-330">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="0124d-331">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-331">Always</span></span>|<span data-ttu-id="0124d-332">`data` の文字列表記。</span><span class="sxs-lookup"><span data-stu-id="0124d-332">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="0124d-333"><xref:System.Diagnostics.TraceOptions.Callstack> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-333">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-334">`eventCache`の <xref:System.Diagnostics.TraceEventCache.Callstack%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-334">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="0124d-335"><xref:System.Diagnostics.TraceOptions.LogicalOperationStack> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-335">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-336">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-336">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="0124d-337"><xref:System.Diagnostics.TraceOptions.DateTime> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-337">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-338">`eventCache`の <xref:System.Diagnostics.TraceEventCache.DateTime%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-338">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-339">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-339">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="0124d-340"><xref:System.Diagnostics.TraceOptions.ProcessId> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-340">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-341">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-341">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-342">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-342">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="0124d-343"><xref:System.Diagnostics.TraceOptions.ThreadId> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-343">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-344">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-344">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="0124d-345"><xref:System.Diagnostics.TraceOptions.Timestamp> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-345">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-346">`eventCache`の <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-346">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-347">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-347">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="0124d-348"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> プロパティが `True`場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-348">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="0124d-349">コンピューターの名前です。</span><span class="sxs-lookup"><span data-stu-id="0124d-349">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="0124d-350">現在のプロセス ID、スレッド ID、およびスタック トレース情報を含む <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0124d-350">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="0124d-351">このメソッドを呼び出したトレース ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="0124d-351">The name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="0124d-352"><see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="0124d-352">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="0124d-353">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="0124d-353">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="0124d-354">データとして出力するオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="0124d-354">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="0124d-355">トレース情報、データ オブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-355">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-356">このメソッドは以下の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="0124d-356">This method:</span></span>  
  
1.  <span data-ttu-id="0124d-357">出力のデータとコンテキスト情報の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-357">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="0124d-358">必要に応じて、新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="0124d-358">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="0124d-359">ログファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-359">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="0124d-360">新しいログファイルの作成の詳細については、「<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0124d-360">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="0124d-361">次の表に、出力フィールドの表示順序を示します。</span><span class="sxs-lookup"><span data-stu-id="0124d-361">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="0124d-362">フィールドは、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> プロパティによって指定された文字列によって区切られ、その後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="0124d-362">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="0124d-363">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="0124d-363">**Field**</span></span>|<span data-ttu-id="0124d-364">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="0124d-364">**Output condition**</span></span>|<span data-ttu-id="0124d-365">**説明**</span><span class="sxs-lookup"><span data-stu-id="0124d-365">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="0124d-366">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-366">Always</span></span>|<span data-ttu-id="0124d-367">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="0124d-367">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="0124d-368">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-368">Always</span></span>|<span data-ttu-id="0124d-369">`eventType`の列挙値の名前。</span><span class="sxs-lookup"><span data-stu-id="0124d-369">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="0124d-370">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-370">Always</span></span>|<span data-ttu-id="0124d-371">`id` の文字列表記。</span><span class="sxs-lookup"><span data-stu-id="0124d-371">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="0124d-372">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-372">Always</span></span>|<span data-ttu-id="0124d-373">`data`内の各要素の文字列形式で構成される文字列。それぞれ <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>によって区切られます。</span><span class="sxs-lookup"><span data-stu-id="0124d-373">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="0124d-374"><xref:System.Diagnostics.TraceOptions.Callstack> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-374">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-375">`eventCache`の <xref:System.Diagnostics.TraceEventCache.Callstack%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-375">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="0124d-376"><xref:System.Diagnostics.TraceOptions.LogicalOperationStack> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-376">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-377">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-377">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="0124d-378"><xref:System.Diagnostics.TraceOptions.DateTime> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-378">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-379">`eventCache`の <xref:System.Diagnostics.TraceEventCache.DateTime%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-379">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-380">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-380">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="0124d-381"><xref:System.Diagnostics.TraceOptions.ProcessId> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-381">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-382">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-382">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-383">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-383">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="0124d-384"><xref:System.Diagnostics.TraceOptions.ThreadId> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-384">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-385">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-385">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="0124d-386"><xref:System.Diagnostics.TraceOptions.Timestamp> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-386">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-387">`eventCache`の <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-387">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-388">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-388">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="0124d-389"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> プロパティが `True`場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-389">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="0124d-390">コンピューターの名前です。</span><span class="sxs-lookup"><span data-stu-id="0124d-390">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0124d-391">トレース情報とイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-391">Writes trace and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-392"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> メソッドは、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="0124d-392"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="0124d-393">これらのメソッドは、<xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>、および <xref:System.Diagnostics.TraceSource> クラスのメンバーによって、出力するトレースデータを書き込むために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-393">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="0124d-394">現在のプロセス ID、スレッド ID、およびスタック トレース情報を含む <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0124d-394">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="0124d-395">このメソッドを呼び出したトレース ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="0124d-395">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="0124d-396"><see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="0124d-396">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="0124d-397">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="0124d-397">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="0124d-398">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="0124d-398">A message to write.</span></span></param>
        <summary><span data-ttu-id="0124d-399">トレース情報、メッセージ、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-399">Writes trace information, a message and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-400">このメソッドは以下の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="0124d-400">This method:</span></span>  
  
1.  <span data-ttu-id="0124d-401">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-401">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="0124d-402">必要に応じて、新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="0124d-402">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="0124d-403">ログファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-403">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="0124d-404">新しいログファイルの作成の詳細については、「<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0124d-404">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="0124d-405">次の表は、出力フィールドの表示順を示しています。</span><span class="sxs-lookup"><span data-stu-id="0124d-405">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="0124d-406">フィールドは、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> プロパティによって指定された文字列によって区切られ、その後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="0124d-406">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="0124d-407">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="0124d-407">**Field**</span></span>|<span data-ttu-id="0124d-408">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="0124d-408">**Output condition**</span></span>|<span data-ttu-id="0124d-409">**説明**</span><span class="sxs-lookup"><span data-stu-id="0124d-409">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="0124d-410">常に。</span><span class="sxs-lookup"><span data-stu-id="0124d-410">Always.</span></span>|<span data-ttu-id="0124d-411">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="0124d-411">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="0124d-412">常に。</span><span class="sxs-lookup"><span data-stu-id="0124d-412">Always.</span></span>|<span data-ttu-id="0124d-413">`eventType`の列挙値の名前。</span><span class="sxs-lookup"><span data-stu-id="0124d-413">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="0124d-414">常に。</span><span class="sxs-lookup"><span data-stu-id="0124d-414">Always.</span></span>|<span data-ttu-id="0124d-415">`id` の文字列表記。</span><span class="sxs-lookup"><span data-stu-id="0124d-415">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="0124d-416">常に。</span><span class="sxs-lookup"><span data-stu-id="0124d-416">Always.</span></span>|<span data-ttu-id="0124d-417">`message` の値。</span><span class="sxs-lookup"><span data-stu-id="0124d-417">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="0124d-418"><xref:System.Diagnostics.TraceOptions.Callstack> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-418">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-419">`eventCache`の <xref:System.Diagnostics.TraceEventCache.Callstack%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-419">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="0124d-420"><xref:System.Diagnostics.TraceOptions.LogicalOperationStack> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-420">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-421">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-421">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="0124d-422"><xref:System.Diagnostics.TraceOptions.DateTime> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-422">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-423">`eventCache`の <xref:System.Diagnostics.TraceEventCache.DateTime%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-423">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-424">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-424">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="0124d-425"><xref:System.Diagnostics.TraceOptions.ProcessId> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-425">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-426">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-426">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-427">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-427">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="0124d-428"><xref:System.Diagnostics.TraceOptions.ThreadId> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-428">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-429">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-429">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="0124d-430"><xref:System.Diagnostics.TraceOptions.Timestamp> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-430">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-431">`eventCache`の <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-431">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-432">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-432">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="0124d-433"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> プロパティが `True`場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-433">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="0124d-434">コンピューターの名前です。</span><span class="sxs-lookup"><span data-stu-id="0124d-434">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="0124d-435">現在のプロセス ID、スレッド ID、およびスタック トレース情報を含む <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0124d-435">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="0124d-436">このメソッドを呼び出したトレース ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="0124d-436">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="0124d-437"><see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="0124d-437">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="0124d-438">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="0124d-438">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="0124d-439">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="0124d-439">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="0124d-440">0 個以上の書式設定対象オブジェクトを含んだ <see langword="Object" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="0124d-440">An <see langword="Object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="0124d-441">トレース情報、書式設定されたオブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-441">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-442">このメソッドは以下の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="0124d-442">This method:</span></span>  
  
1.  <span data-ttu-id="0124d-443">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="0124d-443">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="0124d-444">必要に応じて、新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="0124d-444">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="0124d-445">ログファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-445">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="0124d-446">新しいログファイルの作成の詳細については、「<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0124d-446">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="0124d-447">次の表は、出力フィールドの表示順を示しています。</span><span class="sxs-lookup"><span data-stu-id="0124d-447">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="0124d-448">フィールドは、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> プロパティによって指定された文字列によって区切られ、その後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="0124d-448">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="0124d-449">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="0124d-449">**Field**</span></span>|<span data-ttu-id="0124d-450">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="0124d-450">**Output condition**</span></span>|<span data-ttu-id="0124d-451">**説明**</span><span class="sxs-lookup"><span data-stu-id="0124d-451">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="0124d-452">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-452">Always</span></span>|<span data-ttu-id="0124d-453">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="0124d-453">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="0124d-454">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-454">Always</span></span>|<span data-ttu-id="0124d-455">`eventType`の列挙値の名前。</span><span class="sxs-lookup"><span data-stu-id="0124d-455">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="0124d-456">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-456">Always</span></span>|<span data-ttu-id="0124d-457">`id` の文字列表記。</span><span class="sxs-lookup"><span data-stu-id="0124d-457">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="0124d-458">Always (常に)</span><span class="sxs-lookup"><span data-stu-id="0124d-458">Always</span></span>|<span data-ttu-id="0124d-459">`format` 文字列で書式設定され、文字列変換にインバリアントカルチャを使用して `args` のデータ。</span><span class="sxs-lookup"><span data-stu-id="0124d-459">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="0124d-460"><xref:System.Diagnostics.TraceOptions.Callstack> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-460">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-461">`eventCache`の <xref:System.Diagnostics.TraceEventCache.Callstack%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-461">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="0124d-462"><xref:System.Diagnostics.TraceOptions.LogicalOperationStack> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-462">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-463">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-463">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="0124d-464"><xref:System.Diagnostics.TraceOptions.DateTime> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-464">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-465">`eventCache`の <xref:System.Diagnostics.TraceEventCache.DateTime%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-465">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-466">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-466">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="0124d-467"><xref:System.Diagnostics.TraceOptions.ProcessId> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-467">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-468">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-468">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-469">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-469">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="0124d-470"><xref:System.Diagnostics.TraceOptions.ThreadId> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-470">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-471">`eventCache`の <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0124d-471">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="0124d-472"><xref:System.Diagnostics.TraceOptions.Timestamp> フラグが <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティで設定されている場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-472">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="0124d-473">`eventCache`の <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="0124d-473">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="0124d-474">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-474">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="0124d-475"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> プロパティが `True`場合。</span><span class="sxs-lookup"><span data-stu-id="0124d-475">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="0124d-476">コンピューターの名前です。</span><span class="sxs-lookup"><span data-stu-id="0124d-476">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0124d-477">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="0124d-477"><see langword="String" />.</span></span> <span data-ttu-id="0124d-478">書き込むカスタム メッセージ。</span><span class="sxs-lookup"><span data-stu-id="0124d-478">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="0124d-479">文脈情報を付加せずに、メッセージを逐一ディスクに出力します。</span><span class="sxs-lookup"><span data-stu-id="0124d-479">Writes a verbatim message to disk, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-480"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> メソッドは、コンテキスト情報を追加せずに、特定のメッセージをログファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-480">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="0124d-481"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> のメソッドのいずれかを使用して、ログ出力にコンテキスト情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="0124d-481">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0124d-482">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="0124d-482"><see langword="String" />.</span></span> <span data-ttu-id="0124d-483">書き込むカスタム メッセージ。</span><span class="sxs-lookup"><span data-stu-id="0124d-483">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="0124d-484">文脈情報を追加せずに、メッセージを逐一ディスクに出力します。現在行の最後に終端記号が追加されます。</span><span class="sxs-lookup"><span data-stu-id="0124d-484">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0124d-485"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> メソッドは、コンテキスト情報を追加せずに、特定のメッセージをログファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0124d-485">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="0124d-486"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> のメソッドのいずれかを使用して、ログ出力にコンテキスト情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="0124d-486">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
