<Type Name="OleDbEnumerator" FullName="System.Data.OleDb.OleDbEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db34d8a8ca8f78e971ac02de9ffdacc94e71b8ca" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82476755" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbEnumerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbEnumerator sealed" />
  <TypeSignature Language="F#" Value="type OleDbEnumerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.OleDb</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ローカル ネットワーク内で利用できるすべての OLE DB プロバイダーを列挙する機構を提供します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbEnumerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.OleDb.OleDbEnumerator" /> クラスのインスタンスを作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElements">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.GetElements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElements () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetElements();" />
      <MemberSignature Language="F#" Value="member this.GetElements : unit -&gt; System.Data.DataTable" Usage="oleDbEnumerator.GetElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>参照できるすべての OLE DB プロバイダーに関する情報を格納している <see cref="T:System.Data.DataTable" /> を取得します。</summary>
        <returns>参照できる OLE DB プロバイダーに関する情報を格納している <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによって返されるテーブルには、次の列が含まれています。これらの列にはすべて文字列が含まれています。  
  
|列の序数|列|説明|  
|--------------------|------------|-----------------|  
|0|SOURCES_NAME|ネイティブ OLEDB データソースまたは列挙子の不変名。|  
|1|SOURCES_PARSENAME|ネイティブ COM インターフェイス IParseDisplayName を使用してモニカーに変換できる、人が判読できる名前。 ネイティブ OLE DB ソースの行セットによって返される SOURCES_PARSENAME 列に対応します。|  
|2|SOURCES_DESCRIPTION|ネイティブ OLE DB データソースの説明。 ネイティブ OLE DB ソースの行セットによって返される SOURCES_DESCRIPTION 列に対応します。|  
|3|SOURCES_TYPE|次の列挙型メンバーのいずれか: Binder (0)、DataSource_MDP (1)、DataSource_TDP (2)、列挙子 (3)。 これらは、ネイティブ OLE DB ソース行セットの SOURCES_TYPE 列で返される値に対応します。|  
|4|SOURCES_ISPARENT|列挙子にのみ適用されます。 `true`の場合、エントリが GetSourcesRowset が呼び出された同じ列挙子に適用されることを示します。これは、サブ列挙にも含まれることを意味します。 ネイティブ OLE DB ソース行セットの SOURCES_ISPARENT 列に対応します。|  
|5|SOURCES_CLSID|ユーザーが判読できる名前。ネイティブ COM インターフェイス IParseDisplayName を使用してモニカーに変換できます。 ネイティブ OLE DB ソースの行セットによって返される SOURCES_CLSID 列に対応します。|  
  
   
  
## Examples  
 次のコンソールアプリケーションは、表示されているすべての OLE DB プロバイダーに関する情報を取得し、コンソールウィンドウに情報を表示します。  
  
```vb  
Imports System.Data  
Imports System.Data.OleDb  
  
Module Module1  
  
Sub Main()  
  Dim enumerator As New OleDbEnumerator  
  Dim table As System.Data.DataTable = enumerator.GetElements()  
  
  DisplayData(table)  
  
   Console.WriteLine("Press any key to continue.")  
   Console.ReadKey()  
 End Sub  
  
 Private Sub DisplayData(ByVal table As DataTable)  
   For Each row As DataRow In table.Rows  
     For Each col As DataColumn In table.Columns  
       Console.WriteLine("{0} = {1}", col.ColumnName, row(col))  
     Next  
     Console.WriteLine("==================================")  
   Next  
 End Sub  
End Module  
```  
  
```csharp  
using System;  
using System.Data;  
using System.Data.OleDb;  
  
class Program  
{  
 static void Main()  
 {  
   OleDbEnumerator enumerator = new OleDbEnumerator();  
   DataTable table = enumerator.GetElements();  
  
   DisplayData(table);  
  
   Console.WriteLine("Press any key to continue.");  
   Console.ReadKey();  
 }  
  
 static void DisplayData(DataTable table)  
 {  
   foreach (DataRow row in table.Rows)  
   {  
     foreach (DataColumn col in table.Columns)  
     {  
       Console.WriteLine("{0} = {1}", col.ColumnName, row[col]);  
     }  
     Console.WriteLine("==================================");  
   }  
 }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">プロバイダーが ISourcesRowset をサポートしていません。</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">基になるプロバイダーで例外が発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OleDb.OleDbDataReader GetEnumerator(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnumerator (type As Type) As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OleDb::OleDbDataReader ^ GetEnumerator(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetEnumerator : Type -&gt; System.Data.OleDb.OleDbDataReader" Usage="System.Data.OleDb.OleDbEnumerator.GetEnumerator type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> です。</param>
        <summary><see cref="T:System.Data.OleDb.OleDbDataReader" /> クラスのインスタンスを要求せずに、特定の OLE DB 列挙子を使用して、現在インストールされている OLE DB プロバイダーに関する情報を格納している <see cref="T:System.Data.OleDb.OleDbEnumerator" /> を返します。</summary>
        <returns>指定された OLE DB 列挙子を使用して、要求された OLE DB プロバイダーに関する情報を格納している <see cref="T:System.Data.OleDb.OleDbDataReader" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによって返されるリーダーには、次の列が含まれており、すべての列に文字列が含まれています。  
  
|列の序数|列|説明|  
|--------------------|------------|-----------------|  
|0|SOURCES_NAME|ネイティブ OLE DB データソースまたは列挙子の不変名。|  
|1|SOURCES_PARSENAME|ネイティブ COM インターフェイス**Iparsedisplayname**を使用してモニカーに変換できる、人が判読できる名前。 ネイティブ OLE DB ソースの行セットによって返される SOURCES_PARSENAME 列に対応します。|  
|2|SOURCES_DESCRIPTION|ネイティブ OLE DB データソースの説明。 ネイティブ OLE DB ソースの行セットによって返される SOURCES_DESCRIPTION 列に対応します。|  
|3|SOURCES_TYPE|次の列挙型メンバーのいずれか: Binder (0)、DataSource_MDP (1)、DataSource_TDP (2)、列挙子 (3)。 これらは、ネイティブ OLE DB ソース行セットの SOURCES_TYPE 列で返される値に対応します。|  
|4|SOURCES_ISPARENT|列挙子にのみ適用されます。 `true`の場合、エントリが**Getsourcesrowset**が呼び出された同じ列挙子に適用されることを示します。これは、サブ列挙にも含まれることを意味します。 ネイティブ OLE DB ソース行セットの SOURCES_ISPARENT 列に対応します。|  
  
 OLE DB には、MSDAENUM、MSDASQL Enumerator、SQLNCLI Enumerator、SQLOLEDB 列挙子など、列挙子コンポーネントがいくつか用意されています。 列挙子コンポーネントとその使用方法の詳細については、 [OLE DB プログラマーリファレンス](https://go.microsoft.com/fwlink/?LinkId=45232)を参照してください。  
  
   
  
## Examples  
 次のコンソールアプリケーションでは、MSDAENUM コンポーネントを使用して、すべての OLE DB プロバイダーに関する情報を取得し、コンソールウィンドウに情報を表示します。  
  
```vb  
Imports System.Data  
Imports System.Data.OleDb  
  
Module Module1  
  
  Sub Main()  
    Dim enumerator As New OleDbEnumerator  
    Dim reader As OleDbDataReader = _  
     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID("MSDAENUM"))  
  
    DisplayData(reader)  
  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
  
  Private Sub DisplayData(ByVal reader As OleDbDataReader)  
    While reader.Read()  
      For i As Integer = 0 To reader.FieldCount - 1  
        Console.WriteLine("{0} = {1}", _  
         reader.GetName(i), reader.GetValue(i))  
      Next  
      Console.WriteLine("==================================")  
    End While  
  
  End Sub  
End Module  
```  
  
```csharp  
using System;  
using System.Data;  
using System.Data.OleDb;  
  
class Program  
{  
 static void Main()  
 {  
   OleDbDataReader reader =   
     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID("MSDAENUM"));  
  
   DisplayData(reader);  
  
   Console.WriteLine("Press any key to continue.");  
   Console.ReadKey();  
 }  
  
 static void DisplayData(OleDbDataReader reader)  
 {  
   while (reader.Read())  
   {  
     for (int i = 0; i < reader.FieldCount; i++)  
     {  
       Console.WriteLine("{0} = {1}",  
        reader.GetName(i), reader.GetValue(i));  
     }  
     Console.WriteLine("==================================");  
   }  
 }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">プロバイダーが **ISourcesRowset** をサポートしていません。</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">基になるプロバイダーで例外が発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootEnumerator">
      <MemberSignature Language="C#" Value="public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OleDb.OleDbDataReader GetRootEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.GetRootEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRootEnumerator () As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OleDb::OleDbDataReader ^ GetRootEnumerator();" />
      <MemberSignature Language="F#" Value="static member GetRootEnumerator : unit -&gt; System.Data.OleDb.OleDbDataReader" Usage="System.Data.OleDb.OleDbEnumerator.GetRootEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.OleDb.OleDbDataReader" /> クラスのインスタンスを要求せずに、現在インストールされている OLE DB プロバイダーに関する情報を格納している <see cref="T:System.Data.OleDb.OleDbEnumerator" /> を返します。</summary>
        <returns>参照できる OLE DB プロバイダーに関する情報を格納している <see cref="T:System.Data.OleDb.OleDbDataReader" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによって返されるリーダーには、次の列が含まれています。すべての列には、文字列が含まれています。  
  
|列の序数|列|説明|  
|--------------------|------------|-----------------|  
|0|SOURCES_NAME|ネイティブ OLEDB データソースまたは列挙子の不変名。|  
|1|SOURCES_PARSENAME|ネイティブ COM インターフェイス IParseDisplayName を使用してモニカーに変換できる、人が判読できる名前。 ネイティブ OLE DB ソースの行セットによって返される SOURCES_PARSENAME 列に対応します。|  
|2|SOURCES_DESCRIPTION|ネイティブ OLE DB データソースの説明。 ネイティブ OLE DB ソースの行セットによって返される SOURCES_DESCRIPTION 列に対応します。|  
|3|SOURCES_TYPE|次の列挙型メンバーのいずれか: Binder (0)、DataSource_MDP (1)、DataSource_TDP (2)、列挙子 (3)。 これらは、ネイティブ OLE DB ソース行セットの SOURCES_TYPE 列で返される値に対応します。|  
|4|SOURCES_ISPARENT|列挙子にのみ適用されます。 `true`の場合、エントリが GetSourcesRowset が呼び出された同じ列挙子に適用されることを示します。これは、サブ列挙にも含まれることを意味します。 ネイティブ OLE DB ソース行セットの SOURCES_ISPARENT 列に対応します。|  
|5|SOURCES_CLSID|ユーザーが判読できる名前。ネイティブ COM インターフェイス IParseDisplayName を使用してモニカーに変換できます。 ネイティブ OLE DB ソースの行セットによって返される SOURCES_CLSID 列に対応します。|  
  
   
  
## Examples  
 次のコンソールアプリケーションは、表示されているすべての OLE DB プロバイダーに関する情報を取得し、コンソールウィンドウに情報を表示します。  
  
```vb  
Imports System.Data  
Imports System.Data.OleDb  
  
Module Module1  
  
  Sub Main()  
    Dim enumerator As New OleDbEnumerator  
    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  
  
    DisplayData(reader)  
  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
  
  Private Sub DisplayData(ByVal reader As OleDbDataReader)  
    While reader.Read()  
      For i As Integer = 0 To reader.FieldCount - 1  
        Console.WriteLine("{0} = {1}", _  
         reader.GetName(i), reader.GetValue(i))  
      Next  
      Console.WriteLine("==================================")  
    End While  
  
  End Sub  
End Module  
```  
  
```csharp  
using System;  
using System.Data;  
using System.Data.OleDb;  
  
class Program  
{  
 static void Main()  
 {  
   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  
  
   DisplayData(reader);  
  
   Console.WriteLine("Press any key to continue.");  
   Console.ReadKey();  
 }  
  
 static void DisplayData(OleDbDataReader reader)  
 {  
   while (reader.Read())  
   {  
     for (int i = 0; i < reader.FieldCount; i++)  
     {  
       Console.WriteLine("{0} = {1}",  
        reader.GetName(i), reader.GetValue(i));  
     }  
     Console.WriteLine("==================================");  
   }  
 }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">プロバイダーが ISourcesRowset をサポートしていません。</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">基になるプロバイダーで例外が発生しました。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
