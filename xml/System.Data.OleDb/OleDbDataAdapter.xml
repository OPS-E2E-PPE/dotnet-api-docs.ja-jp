<Type Name="OleDbDataAdapter" FullName="System.Data.OleDb.OleDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fb815020c02680d22d552e9a54b012ef31f5d89" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83461983" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="F#" Value="type OleDbDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
  <TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable, System.Data.IDbDataAdapter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable, IDbDataAdapter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable, System::Data::IDbDataAdapter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type OleDbDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface IDataAdapter&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type OleDbDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" FrameworkAlternate="xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.OleDb</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="509bf-101"><see cref="T:System.Data.DataSet" /> へのデータの格納およびデータ ソースの更新に使用される、一連のデータ コマンドおよびデータベース接続を表します。</span><span class="sxs-lookup"><span data-stu-id="509bf-101">Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-102"><xref:System.Data.OleDb.OleDbDataAdapter> は、データの取得と保存のための <xref:System.Data.DataSet> とデータソース間のブリッジとして機能します。</span><span class="sxs-lookup"><span data-stu-id="509bf-102">The <xref:System.Data.OleDb.OleDbDataAdapter> serves as a bridge between a <xref:System.Data.DataSet> and data source for retrieving and saving data.</span></span> <span data-ttu-id="509bf-103">このブリッジは、<xref:System.Data.Common.DbDataAdapter.Fill%2A> を使用してデータソースから <xref:System.Data.DataSet>にデータを読み込み、<xref:System.Data.Common.DbDataAdapter.Update%2A> を使用して <xref:System.Data.DataSet> に加えられた変更をデータソースに送信することによって、<xref:System.Data.OleDb.OleDbDataAdapter> によって提供されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-103">The <xref:System.Data.OleDb.OleDbDataAdapter> provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the data source into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.</span></span>  
  
 <span data-ttu-id="509bf-104"><xref:System.Data.OleDb.OleDbDataAdapter> によって <xref:System.Data.DataSet>がいっぱいになると、返されたデータが存在しない場合は、そのデータに適したテーブルと列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-104">When the <xref:System.Data.OleDb.OleDbDataAdapter> fills a <xref:System.Data.DataSet>, it will create the appropriate tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="509bf-105">ただし、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> プロパティが <xref:System.Data.MissingSchemaAction.AddWithKey>に設定されていない限り、主キーの情報は、暗黙的に作成されるスキーマには含まれません。</span><span class="sxs-lookup"><span data-stu-id="509bf-105">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="509bf-106"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>を使用してデータを読み込む前に、主キーの情報を含む <xref:System.Data.DataSet>のスキーマを作成 <xref:System.Data.OleDb.OleDbDataAdapter> こともできます。</span><span class="sxs-lookup"><span data-stu-id="509bf-106">You may also have the <xref:System.Data.OleDb.OleDbDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="509bf-107">詳細については、「 [DataSet への既存の制約の追加](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="509bf-107">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
 <span data-ttu-id="509bf-108">MSDataShape プロバイダーを含む一部の OLE DB プロバイダーは、ベーステーブルまたは主キーの情報を返しません。</span><span class="sxs-lookup"><span data-stu-id="509bf-108">Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</span></span> <span data-ttu-id="509bf-109">したがって、<xref:System.Data.OleDb.OleDbDataAdapter> では、作成された <xref:System.Data.DataTable>の <xref:System.Data.DataTable.PrimaryKey%2A> プロパティを正しく設定できません。</span><span class="sxs-lookup"><span data-stu-id="509bf-109">Therefore, the <xref:System.Data.OleDb.OleDbDataAdapter> cannot correctly set the <xref:System.Data.DataTable.PrimaryKey%2A> property on any created <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="509bf-110">このような場合は、<xref:System.Data.DataSet>内のテーブルに対して主キーを明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-110">In these cases you should explicitly specify primary keys for tables in the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="509bf-111"><xref:System.Data.OleDb.OleDbDataAdapter> には、データの読み込みと更新を容易にするために、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>、<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>、<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>、<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>、および <xref:System.Data.Common.DataAdapter.TableMappings%2A> の各プロパティも含まれています。</span><span class="sxs-lookup"><span data-stu-id="509bf-111">The <xref:System.Data.OleDb.OleDbDataAdapter> also includes the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DataAdapter.TableMappings%2A> properties to facilitate the loading and updating of data.</span></span>  
  
 <span data-ttu-id="509bf-112"><xref:System.Data.OleDb.OleDbDataAdapter>のインスタンスを作成すると、プロパティは初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-112">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, properties are set to their initial values.</span></span> <span data-ttu-id="509bf-113">これらの値の一覧については、<xref:System.Data.OleDb.OleDbDataAdapter> コンストラクターを参照してください。</span><span class="sxs-lookup"><span data-stu-id="509bf-113">For a list of these values, see the <xref:System.Data.OleDb.OleDbDataAdapter> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-114">次の例では、<xref:System.Data.OleDb.OleDbCommand>、<xref:System.Data.OleDb.OleDbDataAdapter> と <xref:System.Data.OleDb.OleDbConnection>を使用して、Access データソースからレコードを選択し、選択した行に <xref:System.Data.DataSet> を設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-114">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select records from an Access data source, and populate a <xref:System.Data.DataSet> with the selected rows.</span></span> <span data-ttu-id="509bf-115">次に、塗りつぶされた <xref:System.Data.DataSet> が返されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-115">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="509bf-116">これを実現するために、メソッドには初期化された <xref:System.Data.DataSet>、接続文字列、および SQL SELECT ステートメントであるクエリ文字列が渡されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-116">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is an SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-117">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-117">DataAdapters and DataReaders</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="509bf-118"><see cref="T:System.Data.OleDb.OleDbDataAdapter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="509bf-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-119">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-119">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="509bf-120"><see cref="T:System.Data.OleDb.OleDbDataAdapter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="509bf-120">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-121"><xref:System.Data.OleDb.OleDbDataAdapter>のインスタンスを作成すると、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-121">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="509bf-122">Properties</span><span class="sxs-lookup"><span data-stu-id="509bf-122">Properties</span></span>|<span data-ttu-id="509bf-123">初期値</span><span class="sxs-lookup"><span data-stu-id="509bf-123">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="509bf-124">プロパティの別の呼び出しを使用して、これらのプロパティの値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-124">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-125">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-125">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-126">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-126">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::Data::OleDb::OleDbCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : System.Data.OleDb.OleDbCommand -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand"><span data-ttu-id="509bf-127">SELECT ステートメントまたはストアド プロシージャである <see cref="T:System.Data.OleDb.OleDbCommand" />。これは、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> の <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> プロパティとして設定されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-127">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is a SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="509bf-128"><see cref="T:System.Data.OleDb.OleDbDataAdapter" /> プロパティとして <see cref="T:System.Data.OleDb.OleDbCommand" /> を指定して、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="509bf-128">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-129">この <xref:System.Data.OleDb.OleDbDataAdapter> コンストラクターの実装は、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティを `selectCommand` パラメーターで指定された値に設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-129">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="509bf-130"><xref:System.Data.OleDb.OleDbDataAdapter>のインスタンスを作成すると、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-130">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="509bf-131">Properties</span><span class="sxs-lookup"><span data-stu-id="509bf-131">Properties</span></span>|<span data-ttu-id="509bf-132">初期値</span><span class="sxs-lookup"><span data-stu-id="509bf-132">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="509bf-133">プロパティの別の呼び出しを使用して、これらのプロパティの値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-133">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-134">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-134">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-135">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-135">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OleDb.OleDbConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::Data::OleDb::OleDbConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * System.Data.OleDb.OleDbConnection -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="509bf-136">SQL SELECT ステートメントまたはストアド プロシージャである文字列。この文字列は、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> の <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> プロパティに使用されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-136">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></param>
        <param name="selectConnection"><span data-ttu-id="509bf-137">接続を表す <see cref="T:System.Data.OleDb.OleDbConnection" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-137">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection.</span></span></param>
        <summary><span data-ttu-id="509bf-138"><see cref="T:System.Data.OleDb.OleDbDataAdapter" /> を使用して、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="509bf-138">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-139">この <xref:System.Data.OleDb.OleDbDataAdapter> の実装は、まだ開いていない場合に <xref:System.Data.OleDb.OleDbConnection> を開き、閉じます。</span><span class="sxs-lookup"><span data-stu-id="509bf-139">This implementation of the <xref:System.Data.OleDb.OleDbDataAdapter> opens and closes an <xref:System.Data.OleDb.OleDbConnection> if it is not already open.</span></span> <span data-ttu-id="509bf-140">これは、2つ以上の <xref:System.Data.OleDb.OleDbDataAdapter> オブジェクトに対して <xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドを呼び出す必要があるアプリケーションで役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="509bf-140">This can be useful in an application that must call the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method for two or more <xref:System.Data.OleDb.OleDbDataAdapter> objects.</span></span> <span data-ttu-id="509bf-141"><xref:System.Data.OleDb.OleDbConnection> が既に開いている場合は、<xref:System.Data.OleDb.OleDbConnection.Close%2A> または**Dispose**を明示的に呼び出して閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-141">If the <xref:System.Data.OleDb.OleDbConnection> is already open, you must explicitly call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** to close it.</span></span>  
  
 <span data-ttu-id="509bf-142"><xref:System.Data.OleDb.OleDbDataAdapter>のインスタンスを作成すると、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-142">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="509bf-143">Properties</span><span class="sxs-lookup"><span data-stu-id="509bf-143">Properties</span></span>|<span data-ttu-id="509bf-144">初期値</span><span class="sxs-lookup"><span data-stu-id="509bf-144">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="509bf-145">プロパティの別の呼び出しを使用して、これらのプロパティのいずれかの値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-145">You can change the value of either of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-146">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-146">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-147">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-147">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * string -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="509bf-148">SQL SELECT ステートメントまたはストアド プロシージャである文字列。この文字列は、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> の <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> プロパティに使用されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-148">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></param>
        <param name="selectConnectionString"><span data-ttu-id="509bf-149">接続文字列です。</span><span class="sxs-lookup"><span data-stu-id="509bf-149">The connection string.</span></span></param>
        <summary><span data-ttu-id="509bf-150"><see cref="T:System.Data.OleDb.OleDbDataAdapter" /> を使用して、<see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="509bf-150">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-151"><xref:System.Data.OleDb.OleDbDataAdapter> コンストラクターのこのオーバーロードは、`selectConnectionString` パラメーターを使用して <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-151">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter> constructor uses the `selectConnectionString` parameter to set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="509bf-152">ただし、接続は開かれません。</span><span class="sxs-lookup"><span data-stu-id="509bf-152">However, it does not open the connection.</span></span> <span data-ttu-id="509bf-153">その場合でも、接続を明示的に開く必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-153">You still must explicitly open the connection.</span></span>  
  
 <span data-ttu-id="509bf-154"><xref:System.Data.OleDb.OleDbDataAdapter>のインスタンスを作成すると、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-154">When you create an instance of <xref:System.Data.OleDb.OleDbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="509bf-155">Properties</span><span class="sxs-lookup"><span data-stu-id="509bf-155">Properties</span></span>|<span data-ttu-id="509bf-156">初期値</span><span class="sxs-lookup"><span data-stu-id="509bf-156">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="509bf-157">プロパティの別の呼び出しを使用して、これらのプロパティの値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-157">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-158">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を作成し、そのプロパティの一部を設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-158">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-159">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-159">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateRowUpdatedEvent (dataRow As DataRow, command As IDbCommand, statementType As StatementType, tableMapping As DataTableMapping) As RowUpdatedEventArgs" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateRowUpdatingEvent (dataRow As DataRow, command As IDbCommand, statementType As StatementType, tableMapping As DataTableMapping) As RowUpdatingEventArgs" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ DeleteCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_DeleteCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-160">データ セットからレコードを削除するための SQL ステートメントまたはストアド プロシージャを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-160">Gets or sets an SQL statement or stored procedure for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="509bf-161"><see cref="T:System.Data.OleDb.OleDbCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 内の削除行に対応するデータ ソース内のレコードを削除するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-161">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-162"><xref:System.Data.Common.DbDataAdapter.Update%2A>中、このプロパティが設定されておらず、<xref:System.Data.DataSet>に主キー情報が存在する場合、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティを設定して <xref:System.Data.OleDb.OleDbCommandBuilder>を使用すると、<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-162">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="509bf-163">その後、設定しない追加のコマンドは、<xref:System.Data.OleDb.OleDbCommandBuilder>によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-163">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="509bf-164">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-164">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="509bf-165">詳細については、「[CommandBuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="509bf-165">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="509bf-166">以前に作成した <xref:System.Data.OleDb.OleDbCommand>に <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> が割り当てられている場合、<xref:System.Data.OleDb.OleDbCommand> は複製されません。</span><span class="sxs-lookup"><span data-stu-id="509bf-166">When <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="509bf-167"><xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> は、以前に作成した <xref:System.Data.OleDb.OleDbCommand> オブジェクトへの参照を保持します。</span><span class="sxs-lookup"><span data-stu-id="509bf-167">The <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-168">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を作成し、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティと <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-168">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="509bf-169"><xref:System.Data.OleDb.OleDbConnection> オブジェクトが既に作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="509bf-169">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-170">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-170">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oleDbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="509bf-171">ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト内の行と一致するように、<see cref="T:System.Data.DataSet" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="509bf-171">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-172">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-172">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable, object ADODBRecordSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (dataTable As DataTable, ADODBRecordSet As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable, System::Object ^ ADODBRecordSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * obj -&gt; int" Usage="oleDbDataAdapter.Fill (dataTable, ADODBRecordSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="509bf-173">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-173">A <see cref="T:System.Data.DataTable" /> to fill with records and, if it is required, schema.</span></span></param>
        <param name="ADODBRecordSet"><span data-ttu-id="509bf-174">ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="509bf-174">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span></span></param>
        <summary><span data-ttu-id="509bf-175">指定した <see cref="T:System.Data.DataTable" /> および ADO オブジェクトを使用して、ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="509bf-175">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataTable" /> and ADO objects.</span></span></summary>
        <returns><span data-ttu-id="509bf-176"><see cref="T:System.Data.DataTable" /> で正常に更新された行数。</span><span class="sxs-lookup"><span data-stu-id="509bf-176">The number of rows successfully refreshed to the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="509bf-177">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="509bf-177">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-178">ActiveX データオブジェクト (ADO) と ADO.NET 間のリンクは一方向の操作であり、ADO から <xref:System.Data.DataSet>にデータをコピーできますが、データの更新は ADO.NET によって処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-178">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="509bf-179"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> メソッドのこのオーバーロードは、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 操作の完了時に入力 `Recordset` を閉じません。</span><span class="sxs-lookup"><span data-stu-id="509bf-179">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not close the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="509bf-180">複数 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> の結果を返すバッチ SQL ステートメントを処理する場合、OLE DB.NET Framework Data Provider のこの実装では、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="509bf-180">When handling batch SQL statements that return multiple results, this implementation of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</span></span>  
  
 <span data-ttu-id="509bf-181"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 操作は、<xref:System.Data.DataSet>内の指定された変換先 <xref:System.Data.DataTable> オブジェクトに行を追加し、まだ存在しない場合は <xref:System.Data.DataTable> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="509bf-181">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="509bf-182"><xref:System.Data.DataTable> オブジェクトを作成すると、通常、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 操作では列名のメタデータのみが作成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-182">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="509bf-183">ただし、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> プロパティが `AddWithKey`に設定されている場合は、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-183">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="509bf-184">同じ <xref:System.Data.DataTable>で <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> メソッドを複数回使用できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-184">You can use the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="509bf-185">主キーが存在する場合、受信した行は、既に存在する一致する行とマージされます。</span><span class="sxs-lookup"><span data-stu-id="509bf-185">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="509bf-186">主キーが存在しない場合は、受信行が <xref:System.Data.DataTable>に追加されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-186">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="509bf-187">主キーの情報が存在する場合は、重複行が調整され、<xref:System.Data.DataSet>に対応する <xref:System.Data.DataTable> に1回だけ表示されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-187">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="509bf-188">主キーの情報は、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、<xref:System.Data.DataTable>の <xref:System.Data.DataTable.PrimaryKey%2A> プロパティを指定する、または <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> プロパティを `AddWithKey`に設定することによって設定できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-188">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="509bf-189"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="509bf-189">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="509bf-190">重複した行が正しく解決されるようにするには、主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-190">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="509bf-191">詳しくは、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="509bf-191">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="509bf-192">OLE DB の .NET Framework Data Provider と正常に機能させるには `AddWithKey`、OLE DB の DBPROP_UNIQUEROWS を調べて、ネイティブ DBCOLUMN_KEYCOLUMN プロバイダーが必要な主キー情報を取得する必要があります。その際、`IColumnsRowset`プロパティを設定して、主キー列となる列を決定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-192">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the `IColumnsRowset`.</span></span> <span data-ttu-id="509bf-193">または、ユーザーが各 <xref:System.Data.DataTable>に対して主キー制約を明示的に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="509bf-193">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="509bf-194">これにより、既存のレコードに一致する受信レコードが、追加ではなく更新されるようになります。</span><span class="sxs-lookup"><span data-stu-id="509bf-194">This makes sure that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="509bf-195"><xref:System.Data.DataTable>を設定しているときに <xref:System.Data.OleDb.OleDbDataAdapter> が重複する列を検出した場合、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-195">If the <xref:System.Data.OleDb.OleDbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="509bf-196">空の列名が <xref:System.Data.DataTable>に追加されます。最初の列には空の文字列が使用され、それに続く空の列には "1"、"2"、"3" などが続きます。</span><span class="sxs-lookup"><span data-stu-id="509bf-196">Empty column names are added to the <xref:System.Data.DataTable>, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</span></span>  
  
 <span data-ttu-id="509bf-197">ADO `Recordset` または `Record` オブジェクトの値は、<xref:System.Data.DataSet>内のストレージの共通言語ランタイム型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-197">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="509bf-198"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> メソッドのこのオーバーロードは、fill 操作が完了したときに ADO オブジェクトで `Close` を暗黙的に呼び出しません。</span><span class="sxs-lookup"><span data-stu-id="509bf-198">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method does not implicitly call `Close` on the ADO object when the fill operation is complete.</span></span> <span data-ttu-id="509bf-199">そのため、ADO `Recordset` または `Record` オブジェクトの使用が終了したら、常に `Close` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="509bf-199">Therefore, always call `Close` when you are finished using ADO `Recordset` or `Record` objects.</span></span> <span data-ttu-id="509bf-200">これにより、基になるデータソースへの接続が適時に解放されるようになります。また、既存の参照が存在する場合に、アンマネージ ADO オブジェクトがガベージコレクションによって回収されるため、アクセス違反が発生することもありません。</span><span class="sxs-lookup"><span data-stu-id="509bf-200">This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</span></span>  
  
 <span data-ttu-id="509bf-201">`DataAdapter` で `TableMappings.Add` メソッドを呼び出し、ソーステーブルパラメーターを明示的に空の文字列にマップすると、ソーステーブルを使用してデータセットが正常に格納されますが、データセットには何も設定されません。</span><span class="sxs-lookup"><span data-stu-id="509bf-201">When you call the `TableMappings.Add` method on a `DataAdapter` and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</span></span> <span data-ttu-id="509bf-202">たとえば、次の例では、`rDataSet` には何も設定されません。</span><span class="sxs-lookup"><span data-stu-id="509bf-202">For example, in the following example, `rDataSet` will be populated with nothing.</span></span>  
  
```  
rAdapter.TableMappings.Add("source table", "");  
rAdapter.Fill(rDataSet, "source table");     
```  
  
 <span data-ttu-id="509bf-203">この例では、複数の結果を処理するときに結果をスキップする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="509bf-203">This example shows how you can skip a result when dealing with multiple results.</span></span>  
  
 <span data-ttu-id="509bf-204">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を使用して、ADO `Recordset`を使用して <xref:System.Data.DataTable> に入力します。</span><span class="sxs-lookup"><span data-stu-id="509bf-204">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataTable> using an ADO `Recordset`.</span></span> <span data-ttu-id="509bf-205">この例では、ADO `Recordset`が作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="509bf-205">This example assumes that you have created an ADO `Recordset`.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     Dim custTable As DataTable = New DataTable("Customers")  
     custTable.Columns.Add("CustomerID", Type.GetType("System.String"))  
     custTable.Columns.Add("CompanyName", Type.GetType("System.String"))  
     custDS.Tables.Add(custTable)  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custTable, adoRS)  
     adoRS.Close()  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     DataTable custTable = new DataTable("Customers");  
     custTable.Columns.Add("CustomerID", typeof(String));  
     custTable.Columns.Add("CompanyName", typeof(String));  
     custDS.Tables.Add(custTable);  
     //Use ADO objects from ADO library (msado15.dll) imported  
     //  as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custTable, adoRS);  
     adoRS.Close();  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-206">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-206">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (dataSet As DataSet, ADODBRecordSet As Object, srcTable As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::Object ^ ADODBRecordSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * obj * string -&gt; int" Usage="oleDbDataAdapter.Fill (dataSet, ADODBRecordSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="509bf-207">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-207">A <see cref="T:System.Data.DataSet" /> to fill with records and, if it is required, schema.</span></span></param>
        <param name="ADODBRecordSet"><span data-ttu-id="509bf-208">ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="509bf-208">An ADO <see langword="Recordset" /> or <see langword="Record" /> object.</span></span></param>
        <param name="srcTable"><span data-ttu-id="509bf-209">テーブル マップに使用するソース テーブル。</span><span class="sxs-lookup"><span data-stu-id="509bf-209">The source table used for the table mappings.</span></span></param>
        <summary><span data-ttu-id="509bf-210">指定した <see cref="T:System.Data.DataSet" />、ADO オブジェクト、およびソース テーブル名を使用して、ADO <see langword="Recordset" /> オブジェクトまたは <see langword="Record" /> オブジェクト内の行と一致するように、<see cref="T:System.Data.DataSet" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="509bf-210">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using the specified <see cref="T:System.Data.DataSet" />, ADO object, and source table name.</span></span></summary>
        <returns><span data-ttu-id="509bf-211"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="509bf-211">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="509bf-212">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="509bf-212">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-213">ActiveX データオブジェクト (ADO) と ADO.NET 間のリンクは一方向の操作であり、ADO から <xref:System.Data.DataSet>にデータをコピーできますが、データの更新は ADO.NET によって処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-213">The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the <xref:System.Data.DataSet>, but any updates to the data must be handled by ADO.NET.</span></span>  
  
 <span data-ttu-id="509bf-214"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> メソッドは、`Recordset`で `NextRecordset` メソッドを呼び出し、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 操作の完了時に入力 `Recordset` を閉じることで、複数の結果を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="509bf-214">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method iterates through multiple results by calling the `NextRecordset` method on the `Recordset`, closing the input `Recordset` on completion of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation.</span></span>  
  
 <span data-ttu-id="509bf-215"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 操作は、<xref:System.Data.DataSet>内の指定された変換先 <xref:System.Data.DataTable> オブジェクトに行を追加し、まだ存在しない場合は <xref:System.Data.DataTable> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="509bf-215">The <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="509bf-216"><xref:System.Data.DataTable> オブジェクトを作成すると、通常、<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 操作では列名のメタデータのみが作成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-216">When you create a <xref:System.Data.DataTable> object, the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation ordinarily creates only column name metadata.</span></span> <span data-ttu-id="509bf-217">ただし、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> プロパティが `AddWithKey`に設定されている場合は、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-217">However, if the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="509bf-218">主キーの情報が存在する場合は、重複行が調整され、<xref:System.Data.DataSet>に対応する <xref:System.Data.DataTable> に1回だけ表示されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-218">If primary key information is present, any duplicate rows are reconciled and only appear one time in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="509bf-219">主キーの情報は、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、<xref:System.Data.DataTable>の <xref:System.Data.DataTable.PrimaryKey%2A> プロパティを指定する、または <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> プロパティを `AddWithKey`に設定することによって設定できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-219">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="509bf-220">OLE DB の .NET Framework Data Provider と正常に機能させるには、`AddWithKey` で OLE DB プロパティを設定して、必要な主キー情報を取得するためにネイティブ DBPROP_UNIQUEROWS プロバイダーが必要とします。次に、 **IColumnsRowset**の DBCOLUMN_KEYCOLUMN を調べて、主キー列となる列を決定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-220">To function correctly with the .NET Framework Data Provider for OLE DB, `AddWithKey` requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the **IColumnsRowset**.</span></span> <span data-ttu-id="509bf-221">または、ユーザーが各 <xref:System.Data.DataTable>に対して主キー制約を明示的に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="509bf-221">Alternatively the user may explicitly set the primary key constraints on each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="509bf-222">これにより、既存のレコードと一致する入力レコードが、追加ではなく更新されるようになります。</span><span class="sxs-lookup"><span data-stu-id="509bf-222">This ensures that incoming records that match existing records are updated instead of appended.</span></span>  
  
 <span data-ttu-id="509bf-223"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="509bf-223">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="509bf-224">重複した行が正しく解決されるようにするには、主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-224">You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="509bf-225">詳しくは、「[主キーの定義](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="509bf-225">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="509bf-226"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 操作の開始前に `Recordset` が終了した場合、エラーは発生しません。</span><span class="sxs-lookup"><span data-stu-id="509bf-226">If the `Recordset` is closed before the starting of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operation, no error results.</span></span> <span data-ttu-id="509bf-227">これは、行を返さないクエリが閉じられた `Recordset`によって示されるため、複数の結果を処理するために必要です。</span><span class="sxs-lookup"><span data-stu-id="509bf-227">This is required for handling of multiple results, because queries that do not return rows are indicated by a closed `Recordset`.</span></span> <span data-ttu-id="509bf-228"><xref:System.Data.OleDb.OleDbDataAdapter> は、closed `Recordset` で `NextRecordset` を呼び出し、処理を続行します。</span><span class="sxs-lookup"><span data-stu-id="509bf-228">The <xref:System.Data.OleDb.OleDbDataAdapter> just calls `NextRecordset` on the closed `Recordset` and continues processing.</span></span>  
  
 <span data-ttu-id="509bf-229">データセットの設定中にエラーが発生した場合、エラーが発生する前に追加された行は <xref:System.Data.DataSet>に残ります。</span><span class="sxs-lookup"><span data-stu-id="509bf-229">If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="509bf-230">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-230">The rest of the operation is aborted.</span></span>  
  
 <span data-ttu-id="509bf-231"><xref:System.Data.DataTable>を設定するときに <xref:System.Data.Common.DbDataAdapter> オブジェクトが重複する列を検出すると、"*columnname*1"、"*columnname*2"、"*columnname*3" などのパターンを使用して、後続の列の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-231">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="509bf-232">受信データに名前のない列が含まれている場合、"Column1"、"Column2" などのパターンに従って <xref:System.Data.DataSet> に配置されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-232">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="509bf-233">複数の結果セットが <xref:System.Data.DataSet> に追加されると、各結果セットが個別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-233">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="509bf-234">追加の結果セットには、指定されたテーブル名に整数値を追加することによって名前が付けられます (たとえば、"Table"、"Table1"、"Table2" など)。</span><span class="sxs-lookup"><span data-stu-id="509bf-234">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="509bf-235">列名とテーブル名を使用するアプリケーションでは、これらの名前付けパターンとの競合が発生しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-235">Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="509bf-236">ADO `Recordset` または `Record` オブジェクトの値は、<xref:System.Data.DataSet>内のストレージの共通言語ランタイム型に変換されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-236">Values in ADO `Recordset` or `Record` objects are converted to common language runtime types for storage in the <xref:System.Data.DataSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="509bf-237"><xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> メソッドのこのオーバーロードは、fill 操作が完了したときに ADO オブジェクトに対して `Close` を暗黙的に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="509bf-237">This overload of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method implicitly calls `Close` on the ADO object when the fill operation is complete.</span></span>  
  
 <span data-ttu-id="509bf-238">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を使用して、ADO `Record` オブジェクトである ADO `Recordset` を使用して <xref:System.Data.DataSet> に入力します。</span><span class="sxs-lookup"><span data-stu-id="509bf-238">The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to fill a <xref:System.Data.DataSet> using an ADO `Recordset` that is an ADO `Record` object.</span></span> <span data-ttu-id="509bf-239">この例では、ADO `RecordSet` と `Record` オブジェクトが作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="509bf-239">This example assumes that you have created an ADO `RecordSet` and `Record` object.</span></span>  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custDS, adoRS, "Customers")  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     //Use ADO objects from ADO library (msado15.dll) imported  
     // as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custDS, adoRS, "Customers");  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="509bf-240">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="509bf-240">The source table is invalid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-241">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-241">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ InsertCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_InsertCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-242">データ ソースに新しいレコードを挿入するために使用する SQL ステートメントまたはストアド プロシージャを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-242">Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="509bf-243"><see cref="T:System.Data.OleDb.OleDbCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 内の新しい行に対応するデータ ソース内のレコードを挿入するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-243">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-244"><xref:System.Data.Common.DbDataAdapter.Update%2A>中、このプロパティが設定されておらず、<xref:System.Data.DataSet>に主キー情報が存在する場合、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティを設定して <xref:System.Data.OleDb.OleDbCommandBuilder>を使用すると、<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-244">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="509bf-245">その後、設定しない追加のコマンドは、<xref:System.Data.OleDb.OleDbCommandBuilder>によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-245">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="509bf-246">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-246">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="509bf-247">詳細については、「[CommandBuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="509bf-247">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="509bf-248">以前に作成した <xref:System.Data.OleDb.OleDbCommand>に <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> が割り当てられている場合、<xref:System.Data.OleDb.OleDbCommand> は複製されません。</span><span class="sxs-lookup"><span data-stu-id="509bf-248">When <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="509bf-249"><xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> は、以前に作成した <xref:System.Data.OleDb.OleDbCommand> オブジェクトへの参照を保持します。</span><span class="sxs-lookup"><span data-stu-id="509bf-249">The <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="509bf-250">このコマンドの実行によって行が返される場合、<xref:System.Data.OleDb.OleDbCommand> オブジェクトの <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> プロパティの設定方法によっては、これらの行が <xref:System.Data.DataSet> に追加されることがあります。</span><span class="sxs-lookup"><span data-stu-id="509bf-250">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-251">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を作成し、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティと <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-251">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="509bf-252"><xref:System.Data.OleDb.OleDbConnection> オブジェクトが既に作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="509bf-252">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-253">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-253">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OleDbRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-254"><see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に、データ ソースに対してコマンドが実行された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="509bf-254">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source.</span></span> <span data-ttu-id="509bf-255">更新処理が試行されました。</span><span class="sxs-lookup"><span data-stu-id="509bf-255">The attempt to update is made.</span></span> <span data-ttu-id="509bf-256">そのため、イベントが発生しました。</span><span class="sxs-lookup"><span data-stu-id="509bf-256">Therefore, the event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-257"><xref:System.Data.Common.DbDataAdapter.Update%2A>を使用すると、データ行ごとに発生する2つのイベントが更新されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-257">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="509bf-258">実行順序は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="509bf-258">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="509bf-259"><xref:System.Data.DataRow> 内の値は、パラメーター値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-259">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="509bf-260"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="509bf-260">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="509bf-261">コマンドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-261">The command executes.</span></span>  
  
4.  <span data-ttu-id="509bf-262">コマンドが `FirstReturnedRecord`に設定されている場合、最初に返された結果が <xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-262">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="509bf-263">出力パラメーターがある場合は、<xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-263">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="509bf-264"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="509bf-264">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="509bf-265"><xref:System.Data.DataRow.AcceptChanges%2A> が呼び出されます</span><span class="sxs-lookup"><span data-stu-id="509bf-265"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-266">次の例は、使用されている <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> および <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> イベントを示しています。</span><span class="sxs-lookup"><span data-stu-id="509bf-266">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-267">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-267">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OleDbRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdating")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-268"><see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に、データ ソースに対してコマンドが実行される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="509bf-268">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span></span> <span data-ttu-id="509bf-269">更新処理が試行されました。</span><span class="sxs-lookup"><span data-stu-id="509bf-269">The attempt to update is made.</span></span> <span data-ttu-id="509bf-270">そのため、イベントが発生しました。</span><span class="sxs-lookup"><span data-stu-id="509bf-270">Therefore, the event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-271"><xref:System.Data.Common.DbDataAdapter.Update%2A>を使用すると、データ行ごとに発生する2つのイベントが更新されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-271">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="509bf-272">実行順序は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="509bf-272">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="509bf-273"><xref:System.Data.DataRow> 内の値は、パラメーター値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-273">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="509bf-274"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="509bf-274">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="509bf-275">コマンドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-275">The command executes.</span></span>  
  
4.  <span data-ttu-id="509bf-276">コマンドが `FirstReturnedRecord`に設定されている場合、最初に返された結果が <xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-276">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="509bf-277">出力パラメーターがある場合は、<xref:System.Data.DataRow>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-277">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="509bf-278"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="509bf-278">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="509bf-279"><xref:System.Data.DataRow.AcceptChanges%2A> が呼び出されます</span><span class="sxs-lookup"><span data-stu-id="509bf-279"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-280">次の例は、使用されている <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> および <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> イベントを示しています。</span><span class="sxs-lookup"><span data-stu-id="509bf-280">The following example shows the <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> and <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> events being used.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-281">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-281">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ SelectCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_SelectCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-282">データ ソース内のレコードを選択するための SQL ステートメントまたはストアド プロシージャを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-282">Gets or sets an SQL statement or stored procedure used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="509bf-283"><see cref="T:System.Data.OleDb.OleDbCommand" /> 処理中に、<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> に格納するレコードをデータ ソースから選択するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-283">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from data source for placement in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-284">以前に作成した <xref:System.Data.OleDb.OleDbCommand>に <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> が割り当てられている場合、<xref:System.Data.OleDb.OleDbCommand> は複製されません。</span><span class="sxs-lookup"><span data-stu-id="509bf-284">When <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="509bf-285"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> は、以前に作成した <xref:System.Data.OleDb.OleDbCommand> オブジェクトへの参照を保持します。</span><span class="sxs-lookup"><span data-stu-id="509bf-285">The <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
 <span data-ttu-id="509bf-286"><xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> が行を返さない場合、<xref:System.Data.DataSet>にテーブルは追加されず、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="509bf-286">If the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> returns no rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-287">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を作成し、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティと <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-287">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="509bf-288"><xref:System.Data.OleDb.OleDbConnection> オブジェクトが既に作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="509bf-288">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="509bf-289">DataAdapter と DataReader</span><span class="sxs-lookup"><span data-stu-id="509bf-289">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Data.IDbDataAdapter.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-290">このメンバーの詳細については、「<see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="509bf-290">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</span></span></summary>
        <value><span data-ttu-id="509bf-291">更新中に、データセット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-291">An <see cref="T:System.Data.IDbCommand" /> used during an update to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-292">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="509bf-292">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="509bf-293">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-293">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Data.IDbDataAdapter.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-294">このメンバーの詳細については、「<see cref="M:System.Data.IDbDataAdapter.InsertCommand" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="509bf-294">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</span></span></summary>
        <value><span data-ttu-id="509bf-295">更新中に、データ ソースのレコードをデータセットに挿入するために使用する <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-295">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to insert records from a data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-296">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="509bf-296">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="509bf-297">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-297">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Data.IDbDataAdapter.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-298">このメンバーの詳細については、「<see cref="M:System.Data.IDbDataAdapter.SelectCommand" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="509bf-298">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</span></span></summary>
        <value><span data-ttu-id="509bf-299">更新中に、データセットに挿入するレコードをデータ ソースから選択するために使用する <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-299">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to select records from a data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-300">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="509bf-300">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="509bf-301">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-301">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Data.IDbDataAdapter.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-302">このメンバーの詳細については、「<see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="509bf-302">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</span></span></summary>
        <value><span data-ttu-id="509bf-303">更新中に、データセット内の変更された行に対応するデータ ソース内のレコードを更新するための <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-303">An <see cref="T:System.Data.IDbCommand" /> used during an update to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-304">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="509bf-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="509bf-305">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-305">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="override this.System.ICloneable.Clone : unit -&gt; obj" Usage="oleDbDataAdapter.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="509bf-306">このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="509bf-306">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="509bf-307">このインスタンスのコピーである新しい <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-307">A new <see cref="T:System.Object" /> that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-308">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="509bf-308">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="509bf-309">これは、<xref:System.Data.OleDb.OleDbDataAdapter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="509bf-309">It can be used only when the <xref:System.Data.OleDb.OleDbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ UpdateCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_UpdateCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="509bf-310">データ ソースのレコードを更新するために使用する SQL ステートメントまたはストアド プロシージャを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-310">Gets or sets an SQL statement or stored procedure used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="509bf-311"><see cref="T:System.Data.DataSet" /> で変更された行に対応するデータ ソースのレコードを更新する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 中に使用される <see cref="T:System.Data.OleDb.OleDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="509bf-311">An <see cref="T:System.Data.OleDb.OleDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="509bf-312"><xref:System.Data.Common.DbDataAdapter.Update%2A>中、このプロパティが設定されておらず、<xref:System.Data.DataSet>に主キー情報が存在する場合、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティを設定して <xref:System.Data.OleDb.OleDbCommandBuilder>を使用すると、<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-312">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property and use the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="509bf-313">その後、設定しない追加のコマンドは、<xref:System.Data.OleDb.OleDbCommandBuilder>によって生成されます。</span><span class="sxs-lookup"><span data-stu-id="509bf-313">Then, any additional commands that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span> <span data-ttu-id="509bf-314">この生成ロジックでは、キー列の情報が <xref:System.Data.DataSet>に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-314">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="509bf-315">詳細については、「[CommandBuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="509bf-315">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="509bf-316">以前に作成した <xref:System.Data.OleDb.OleDbCommand>に <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> が割り当てられている場合、<xref:System.Data.OleDb.OleDbCommand> は複製されません。</span><span class="sxs-lookup"><span data-stu-id="509bf-316">When <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbCommand> is not cloned.</span></span> <span data-ttu-id="509bf-317"><xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> は、以前に作成した <xref:System.Data.OleDb.OleDbCommand> オブジェクトへの参照を保持します。</span><span class="sxs-lookup"><span data-stu-id="509bf-317">The <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="509bf-318">このコマンドの実行によって行が返される場合、<xref:System.Data.OleDb.OleDbCommand> オブジェクトの <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> プロパティの設定方法によっては、これらの行が <xref:System.Data.DataSet> とマージされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="509bf-318">If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OleDb.OleDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="509bf-319">次の例では、<xref:System.Data.OleDb.OleDbDataAdapter> を作成し、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> プロパティと <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="509bf-319">The following example creates an <xref:System.Data.OleDb.OleDbDataAdapter> and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="509bf-320"><xref:System.Data.OleDb.OleDbConnection> オブジェクトが既に作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="509bf-320">It assumes that you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
