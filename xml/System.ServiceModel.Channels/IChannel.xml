<Type Name="IChannel" FullName="System.ServiceModel.Channels.IChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c83d8fc510cb2be69dda980ea6c4e576d465544" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83946289" /></Metadata><TypeSignature Language="C#" Value="public interface IChannel : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannel implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannel&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannel : System::ServiceModel::ICommunicationObject" />
  <TypeSignature Language="F#" Value="type IChannel = interface&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="43519-101">すべてのチャネル オブジェクトが実装する必要がある基本インターフェイスを定義します。</span><span class="sxs-lookup"><span data-stu-id="43519-101">Defines the basic interface that all channel objects must implement.</span></span> <span data-ttu-id="43519-102">すべての通信オブジェクトが共有するステート マシン インターフェイスを実装し、チャネル スタックからオブジェクトを取得するためのメソッドを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="43519-102">It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="43519-103">チャネルは、<xref:System.ServiceModel.ICommunicationObject> インターフェイスで定義されているステート マシンのコントラクトを満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="43519-103">Channels must satisfy the contract of a state machine as defined by the <xref:System.ServiceModel.ICommunicationObject> interface.</span></span>  
  
 <span data-ttu-id="43519-104"><xref:System.ServiceModel.Channels.IChannel> インターフェイスは、</span><span class="sxs-lookup"><span data-stu-id="43519-104">The <xref:System.ServiceModel.Channels.IChannel> interface adds the</span></span>  
  
 <span data-ttu-id="43519-105">メソッドを <xref:System.ServiceModel.ICommunicationObject> インターフェイスに <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> します。</span><span class="sxs-lookup"><span data-stu-id="43519-105"><xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> method to the <xref:System.ServiceModel.ICommunicationObject> interface.</span></span> <span data-ttu-id="43519-106">このメソッドは、スタック内でプロパティが存在する場所に関係なく、チャネル スタックからプロパティを取得するためのメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="43519-106">This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live.</span></span> <span data-ttu-id="43519-107">メソッド名に含まれる "property" という言葉は、スタック内のいずれかのチャネルに属するなんらかの情報を指します。</span><span class="sxs-lookup"><span data-stu-id="43519-107">The term "property" in the method name refers to a piece of information that belongs to one of the channels in the stack.</span></span> <span data-ttu-id="43519-108">そのプロパティに対する CLR 型は、`T` によって決まります。</span><span class="sxs-lookup"><span data-stu-id="43519-108">The CLR type for that property is determined by `T`.</span></span> <span data-ttu-id="43519-109">この取得メソッドは、チャネル ファクトリやチャネル リスナーに対しても使用できます。</span><span class="sxs-lookup"><span data-stu-id="43519-109">This method of retrieval is also used on channel factories and channel listeners.</span></span>  
  
 <span data-ttu-id="43519-110">`IChannel` は、基本的なメッセージ交換パターンに関連付けられている各チャネルインターフェイスによって継承されます。</span><span class="sxs-lookup"><span data-stu-id="43519-110">`IChannel` is inherited by each of the channel interfaces associated with the basic message-exchange patterns:</span></span>  
  
-   <span data-ttu-id="43519-111">メッセージ受信用の <xref:System.ServiceModel.Channels.IInputChannel>。</span><span class="sxs-lookup"><span data-stu-id="43519-111"><xref:System.ServiceModel.Channels.IInputChannel> for receiving messages.</span></span>  
  
-   <span data-ttu-id="43519-112">メッセージを送信するための <xref:System.ServiceModel.Channels.IOutputChannel>。</span><span class="sxs-lookup"><span data-stu-id="43519-112"><xref:System.ServiceModel.Channels.IOutputChannel> for sending messages.</span></span>  
  
-   <span data-ttu-id="43519-113">要求を送信するための <xref:System.ServiceModel.Channels.IRequestChannel>。</span><span class="sxs-lookup"><span data-stu-id="43519-113"><xref:System.ServiceModel.Channels.IRequestChannel> for sending a request.</span></span>  
  
-   <span data-ttu-id="43519-114">応答送信用の <xref:System.ServiceModel.Channels.IReplyChannel>。</span><span class="sxs-lookup"><span data-stu-id="43519-114"><xref:System.ServiceModel.Channels.IReplyChannel> for sending a reply.</span></span>  
  
-   <span data-ttu-id="43519-115">双方向メッセージングの <xref:System.ServiceModel.Channels.IDuplexChannel>。</span><span class="sxs-lookup"><span data-stu-id="43519-115"><xref:System.ServiceModel.Channels.IDuplexChannel> for bi-directional messaging.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="iChannel.GetProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="43519-116">メソッドが照会している、型指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="43519-116">The typed object for which the method is querying.</span></span></typeparam>
        <summary><span data-ttu-id="43519-117">チャネル スタックの適切な層から、要求のあった型指定されたオブジェクト (ある場合) を返します。</span><span class="sxs-lookup"><span data-stu-id="43519-117">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span></span></summary>
        <returns><span data-ttu-id="43519-118">要求される型指定されたオブジェクト <paramref name="T" /> がある場合は、そのオブジェクト。ない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43519-118">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43519-119">これを使用して、チャネル スタックの適切な層のプロパティの設定、ステータスの取得を行うために、インターフェイスなどの型指定されたオブジェクトを要求します。</span><span class="sxs-lookup"><span data-stu-id="43519-119">Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</span></span> <span data-ttu-id="43519-120">その層が要求されたオブジェクトを返せる場合は、オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="43519-120">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="43519-121">それ以外の場合は、スタック内の次の層に呼び出しを代行させます。</span><span class="sxs-lookup"><span data-stu-id="43519-121">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="43519-122">スタックの最下位に達しても要求されたオブジェクトをサポートするチャネル層がない場合、メソッドは、`null` を返します。</span><span class="sxs-lookup"><span data-stu-id="43519-122">If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43519-123">次のサンプルは、このチャネルの内部チャネルを取得する`InnerChannel` プロパティを使用して、スタックの呼び出しを代行させるチャネルによってこのプロパティを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="43519-123">The following sample shows how this property can be implemented by a channel that delegates the call down the stack using an`InnerChannel` property that retrieves the inner channel for this channel.</span></span>  
  
 [!code-csharp[S_UEIChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueichannel/cs/generatedclient.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
