<Type Name="IRequestChannel" FullName="System.ServiceModel.Channels.IRequestChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9066fc77e085ae79445c9df31fc02552921257f0" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75161053" /></Metadata><TypeSignature Language="C#" Value="public interface IRequestChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IRequestChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRequestChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IRequestChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="69fff-101">チャネルがメッセージング エンドポイント間の要求/応答通信の要求側になるために実装する必要があるコントラクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="69fff-101">Defines the contract that a channel must implement to be on the requesting side of a request-reply communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="69fff-102"><xref:System.ServiceModel.Channels.IRequestChannel> は、応答メッセージを返す <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> メソッドの同期および非同期のバリエーションを定義します。</span><span class="sxs-lookup"><span data-stu-id="69fff-102">The <xref:System.ServiceModel.Channels.IRequestChannel> defines synchronous and asynchronous variants of a <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> method that returns a response message.</span></span> <span data-ttu-id="69fff-103">また、要求メッセージの送信先のエンドポイント アドレスと URI を取得するための <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> プロパティと <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> プロパティも提供されています。</span><span class="sxs-lookup"><span data-stu-id="69fff-103">It also provides a <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> properties to retrieve the endpoint address and URI to which the request message is sent.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69fff-104">要求/応答メッセージ交換の応答側に要求メッセージを送信する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="69fff-104">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="69fff-105">転送される要求 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-105">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <param name="callback"><span data-ttu-id="69fff-106">要求メッセージを転送する非同期操作の完了の通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="69fff-106">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</span></span></param>
        <param name="state"><span data-ttu-id="69fff-107">要求メッセージを転送する非同期操作に関連付けられている状態情報を格納するオブジェクト。アプリケーションで指定します。</span><span class="sxs-lookup"><span data-stu-id="69fff-107">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</span></span></param>
        <summary><span data-ttu-id="69fff-108">要求/応答メッセージ交換の応答側に要求メッセージを送信する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="69fff-108">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</span></span></summary>
        <returns><span data-ttu-id="69fff-109">非同期メッセージ転送を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69fff-110">要求メッセージが、使用されるバインドで許可されている最大メッセージ サイズを超える場合は、<xref:System.ServiceModel.QuotaExceededException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="69fff-110">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="69fff-111">最大メッセージ サイズは、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> プロパティで設定されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-111">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="69fff-112">既定値は65536バイトです。</span><span class="sxs-lookup"><span data-stu-id="69fff-112">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69fff-113">次のコードは、このメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="69fff-113">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="69fff-114">転送される要求 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-114">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <param name="timeout"><span data-ttu-id="69fff-115">応答受信の制限時間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-115">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</span></span></param>
        <param name="callback"><span data-ttu-id="69fff-116">要求メッセージを転送する非同期操作の完了の通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="69fff-116">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</span></span></param>
        <param name="state"><span data-ttu-id="69fff-117">要求メッセージを転送する非同期操作に関連付けられている状態情報を格納するオブジェクト。アプリケーションで指定します。</span><span class="sxs-lookup"><span data-stu-id="69fff-117">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</span></span></param>
        <summary><span data-ttu-id="69fff-118">指定した時間内で要求/応答メッセージ交換の応答側に要求メッセージを送信する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="69fff-118">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="69fff-119">非同期メッセージ転送を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-119">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69fff-120">要求メッセージが、使用されるバインドで許可されている最大メッセージ サイズを超える場合は、<xref:System.ServiceModel.QuotaExceededException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="69fff-120">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> should be thrown.</span></span> <span data-ttu-id="69fff-121">最大メッセージ サイズは、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> プロパティで設定されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-121">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="69fff-122">既定値は65536バイトです。</span><span class="sxs-lookup"><span data-stu-id="69fff-122">The default value is 65536 bytes.</span></span>  
  
 <span data-ttu-id="69fff-123">関数の呼び出し時に `timeout` が渡された場合は、その値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-123">If a `timeout` is passed while calling the function then that value is used.</span></span> <span data-ttu-id="69fff-124">バインドで <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> が設定されている場合は、関数の呼び出し時に `timeout` が指定されないと、バインドでの値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-124">If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.</span></span>  
  
 <span data-ttu-id="69fff-125">バインドでも、関数の呼び出し時にも、タイムアウトが指定されていない場合は、<xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-125">The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function.</span></span> <span data-ttu-id="69fff-126">既定値は 1 分です。</span><span class="sxs-lookup"><span data-stu-id="69fff-126">This default value is 1 minute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69fff-127">次のコードは、このメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="69fff-127">The following code shows how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="69fff-128">操作を完了する前に指定した <see cref="T:System.TimeoutException" /> が経過した場合、操作は <paramref name="timeout" /> をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="69fff-128">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRequest (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.EndRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="69fff-129"><see cref="T:System.IAsyncResult" /> メソッドの呼び出しで返された <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-129">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method.</span></span></param>
        <summary><span data-ttu-id="69fff-130">送信された要求に対してメッセージ ベースの応答を返す非同期操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="69fff-130">Completes an asynchronous operation to return a message-based response to a transmitted request.</span></span></summary>
        <returns><span data-ttu-id="69fff-131">要求に対する応答として受信した <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-131">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69fff-132">要求メッセージが、使用されるバインドで許可されている最大メッセージ サイズを超える場合は、<xref:System.ServiceModel.QuotaExceededException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="69fff-132">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="69fff-133">最大メッセージ サイズは、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> プロパティで設定されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-133">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="69fff-134">既定値は65536バイトです。</span><span class="sxs-lookup"><span data-stu-id="69fff-134">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69fff-135">次のコードは、このメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="69fff-135">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69fff-136">要求チャネルがメッセージを送信する先のリモート アドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="69fff-136">Gets the remote address to which the request channel sends messages.</span></span></summary>
        <value><span data-ttu-id="69fff-137">要求チャネルがメッセージを送信する先の <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-137">The <see cref="T:System.ServiceModel.EndpointAddress" /> to which the request channel sends messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69fff-138"><xref:System.ServiceModel.EndpointAddress> が指定されていない場合は、<xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> が、最終的な送信先と物理アドレスの両方として機能します。</span><span class="sxs-lookup"><span data-stu-id="69fff-138">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="69fff-139"><xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> が指定されている場合は、メッセージが送信される実際の物理アドレス、およびメッセージがその送信先に到達するまでに経由する必要がある物理アドレスとなります。</span><span class="sxs-lookup"><span data-stu-id="69fff-139">If the <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69fff-140">次のコードは、このプロパティを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="69fff-140">The following code shows how to implement this property.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Request">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69fff-141">メッセージ ベースの要求を送信し、対応するメッセージ ベースの応答を返します。</span><span class="sxs-lookup"><span data-stu-id="69fff-141">Sends a message-based request and returns the correlated message-based response.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="69fff-142">転送される要求 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-142">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <summary><span data-ttu-id="69fff-143">メッセージ ベースの要求を送信し、対応するメッセージ ベースの応答を返します。</span><span class="sxs-lookup"><span data-stu-id="69fff-143">Sends a message-based request and returns the correlated message-based response.</span></span></summary>
        <returns><span data-ttu-id="69fff-144">要求に対する応答として受信した <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-144">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69fff-145"><xref:System.ServiceModel.Channels.IRequestChannel> の実装により、応答メッセージが要求メッセージと確実に関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="69fff-145">Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.</span></span>  
  
 <span data-ttu-id="69fff-146">一般に、<xref:System.ServiceModel.Channels.IRequestChannel> の実装では、保留中の要求に関連付けられていないメッセージを受信すると、そのメッセージは削除されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-146">Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.</span></span>  
  
 <span data-ttu-id="69fff-147"><xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> メソッドは、複数のスレッドで同時に呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="69fff-147">The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.</span></span>  
  
 <span data-ttu-id="69fff-148">メッセージを要求チャネルに渡すと、メッセージにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="69fff-148">Passing the message into the request channel causes the message to be accessed.</span></span> <span data-ttu-id="69fff-149"><xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> を呼び出した後は、メッセージの検査、そのメッセージでの <xref:System.ServiceModel.Channels.Message.Close%2A> の呼び出しはできなくなります。</span><span class="sxs-lookup"><span data-stu-id="69fff-149">After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
 <span data-ttu-id="69fff-150">要求メッセージが、使用されるバインドで許可されている最大メッセージ サイズを超える場合は、<xref:System.ServiceModel.QuotaExceededException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="69fff-150">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="69fff-151">最大メッセージ サイズは、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> プロパティで設定されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-151">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="69fff-152">既定値は65536バイトです。</span><span class="sxs-lookup"><span data-stu-id="69fff-152">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69fff-153">次のコードは、このメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="69fff-153">The following code shows how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message * TimeSpan -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="69fff-154">転送される要求 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-154">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <param name="timeout"><span data-ttu-id="69fff-155">応答受信の制限時間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-155">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</span></span></param>
        <summary><span data-ttu-id="69fff-156">指定した時間内に、メッセージ ベースの要求を送信し、対応するメッセージ ベースの応答を返します。</span><span class="sxs-lookup"><span data-stu-id="69fff-156">Sends a message-based request and returns the correlated message-based response within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="69fff-157">要求に対する応答として受信した <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-157">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69fff-158"><xref:System.ServiceModel.Channels.IRequestChannel> の実装により、応答メッセージが要求メッセージと確実に関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="69fff-158">Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.</span></span>  
  
 <span data-ttu-id="69fff-159">一般に、<xref:System.ServiceModel.Channels.IRequestChannel> の実装では、保留中の要求に関連付けられていないメッセージを受信すると、そのメッセージは削除されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-159">Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.</span></span>  
  
 <span data-ttu-id="69fff-160"><xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> メソッドは、複数のスレッドで同時に呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="69fff-160">The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.</span></span>  
  
 <span data-ttu-id="69fff-161">メッセージを要求チャネルに渡すと、メッセージにアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="69fff-161">Passing the message into the request channel causes the message to be accessed.</span></span> <span data-ttu-id="69fff-162"><xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> を呼び出した後は、メッセージの検査、そのメッセージでの <xref:System.ServiceModel.Channels.Message.Close%2A> の呼び出しはできなくなります。</span><span class="sxs-lookup"><span data-stu-id="69fff-162">After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
 <span data-ttu-id="69fff-163">要求メッセージが、使用されるバインドで許可されている最大メッセージ サイズを超える場合は、<xref:System.ServiceModel.QuotaExceededException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="69fff-163">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="69fff-164">最大メッセージ サイズは、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> プロパティで設定されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-164">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="69fff-165">既定値は65536バイトです。</span><span class="sxs-lookup"><span data-stu-id="69fff-165">The default value is 65536 bytes.</span></span>  
  
 <span data-ttu-id="69fff-166">関数の呼び出し時に `timeout` が渡された場合は、その値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-166">If a `timeout` is passed while calling the function then that value is used.</span></span> <span data-ttu-id="69fff-167">バインドで <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> が設定されている場合は、関数の呼び出し時に `timeout` が指定されないと、バインドでの値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-167">If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.</span></span>  
  
 <span data-ttu-id="69fff-168">バインドでも、関数の呼び出し時にも、タイムアウトが指定されていない場合は、<xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="69fff-168">The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function.</span></span> <span data-ttu-id="69fff-169">既定値は 1 分です。</span><span class="sxs-lookup"><span data-stu-id="69fff-169">This default value is 1 minute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69fff-170">次のコードは、このメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="69fff-170">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="69fff-171">操作を完了する前に指定した <see cref="T:System.TimeoutException" /> が経過した場合、操作は <paramref name="timeout" /> をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="69fff-171">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69fff-172">要求の送信先のトランスポート アドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="69fff-172">Gets the transport address to which the request is send.</span></span></summary>
        <value><span data-ttu-id="69fff-173">メッセージの送信先のトランスポート アドレスを格納している <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="69fff-173">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69fff-174"><xref:System.ServiceModel.EndpointAddress> が指定されていない場合は、<xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> が、最終的な送信先と物理アドレスの両方として機能します。</span><span class="sxs-lookup"><span data-stu-id="69fff-174">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="69fff-175"><xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> が指定されている場合は、メッセージが送信される実際の物理アドレス、およびメッセージがその送信先に到達するまでに経由する必要がある物理アドレスとなります。</span><span class="sxs-lookup"><span data-stu-id="69fff-175">If the <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69fff-176">次のコードは、このプロパティを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="69fff-176">The following code shows how to implement this property.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
