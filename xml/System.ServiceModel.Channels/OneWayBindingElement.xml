<Type Name="OneWayBindingElement" FullName="System.ServiceModel.Channels.OneWayBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69d7bc82154fd49614e2a1262d9881dceecb54c1" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78792387" /></Metadata><TypeSignature Language="C#" Value="public sealed class OneWayBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OneWayBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.OneWayBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OneWayBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class OneWayBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type OneWayBindingElement = class&#xA;    inherit BindingElement&#xA;    interface IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5a741-101">パケット ルーティングを有効にし、一方向メソッドを使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="5a741-101">Enables packet routing and the use of one-way methods.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a741-102">パケットルーティングを有効にするには、このクラスによって提供される*一方向の変換*層が必要です。</span><span class="sxs-lookup"><span data-stu-id="5a741-102">To enable packet routing a *one-way conversion* layer is required, which this class provides.</span></span> <span data-ttu-id="5a741-103">このクラスは、バインディングのスタック内にあるバインディングであり、`OneWayBindingElement` と呼ばれるメッセージ レベルの形状変更を行います。</span><span class="sxs-lookup"><span data-stu-id="5a741-103">This class is a binding in the stack of bindings that performs a message-level shape change called `OneWayBindingElement`.</span></span> <span data-ttu-id="5a741-104">この形状変更は、<xref:System.ServiceModel.Channels.IDuplexSessionChannel> または <xref:System.ServiceModel.Channels.IRequestChannel> を受け取って <xref:System.ServiceModel.Channels.IInputChannel> として公開することも、逆に、<xref:System.ServiceModel.Channels.IDuplexSessionChannel> または <xref:System.ServiceModel.Channels.IRequestChannel> を受け取って <xref:System.ServiceModel.Channels.IOutputChannel> として公開することもできます。</span><span class="sxs-lookup"><span data-stu-id="5a741-104">This shape change can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IInputChannel>, or conversely it can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IOutputChannel>.</span></span> <span data-ttu-id="5a741-105">カスタム バインドを作成し、このバインディングをセッション対応または要求応答のトランスポートの上に重ねて、パケット ルーティング可能にすることができます。</span><span class="sxs-lookup"><span data-stu-id="5a741-105">A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.</span></span>  
  
 <span data-ttu-id="5a741-106">このクラスは、一方向メソッドをよりネイティブな形式で公開するときにも役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="5a741-106">This class is also useful when you want to expose one-way methods in a more native fashion.</span></span> <span data-ttu-id="5a741-107">複合二重や信頼できるメッセージ機能などのさらに大きい変換は、この層に対して適用できます。</span><span class="sxs-lookup"><span data-stu-id="5a741-107">More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OneWayBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OneWayBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a741-108"><see cref="T:System.ServiceModel.Channels.OneWayBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5a741-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.OneWayBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="oneWayBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="5a741-109">ファクトリが作成するチャネルの種類。</span><span class="sxs-lookup"><span data-stu-id="5a741-109">The type of channel that the factory builds.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5a741-110">バインディング要素のコンテキストを提供する <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-110">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="5a741-111">バインディング コンテキストから一方向チャネルを生成するためのチャネル ファクトリを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5a741-111">Initializes a channel factory for producing one-way channels from the binding context.</span></span></summary>
        <returns><span data-ttu-id="5a741-112"><see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> から初期化される <see cref="T:System.ServiceModel.Channels.IChannel" /> 型の <paramref name="context" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-112">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a741-113">このメソッドは、チャネル ファクトリを作成します。これは、このバインディングの送信メッセージを処理するチャネルの作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5a741-113">This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5a741-114"><paramref name="context" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5a741-114"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a741-115"><paramref name="TChannel" /> の型が <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="5a741-115">The type of <paramref name="TChannel" /> is not <see cref="T:System.ServiceModel.Channels.IOutputChannel" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5a741-116">内部バインディング要素は、<see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> または <see cref="T:System.ServiceModel.Channels.IRequestChannel" /> をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="5a741-116">The inner binding element does not support <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="oneWayBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="5a741-117">リスナーが受け入れるように作成されているチャネルの種類。</span><span class="sxs-lookup"><span data-stu-id="5a741-117">The type of channel that the listener is built to accept.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5a741-118">バインディング要素のコンテキストを提供する <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-118">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="5a741-119">一方向チャネルを受け入れるようにチャネル リスナーを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5a741-119">Initializes a channel listener for accepting one-way channels.</span></span></summary>
        <returns><span data-ttu-id="5a741-120"><see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> から初期化される <see cref="T:System.ServiceModel.Channels.IChannel" /> 型の <paramref name="context" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-120">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a741-121">このメソッドは、チャネル リスナーを作成します。これは、このバインディングの受信メッセージを処理するチャネルの作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5a741-121">This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5a741-122"><paramref name="context" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5a741-122"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a741-123"><paramref name="TChannel" /> の型が <see cref="T:System.ServiceModel.Channels.IInputChannel" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="5a741-123">The type of <paramref name="TChannel" /> is not <see cref="T:System.ServiceModel.Channels.IInputChannel" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5a741-124">内部バインディング要素は、<see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> または <see cref="T:System.ServiceModel.Channels.IRequestChannel" /> をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="5a741-124">The inner binding element does not support <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="oneWayBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="5a741-125">作成するチャネル ファクトリの種類。</span><span class="sxs-lookup"><span data-stu-id="5a741-125">The type of channel factory to build.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5a741-126">バインディング要素のコンテキストを提供する <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-126">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="5a741-127">指定した種類のチャネル ファクトリを作成できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5a741-127">Gets a value that indicates whether a channel factory of the specified type can be built.</span></span></summary>
        <returns><span data-ttu-id="5a741-128">指定した型のチャネル ファクトリを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-128"><see langword="true" /> if a channel factory of the specified type can be built; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5a741-129">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="5a741-129">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a741-130">チャネル ファクトリを作成する前にこのメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5a741-130">You should call this method before trying to create a channel factory.</span></span>  
  
 <span data-ttu-id="5a741-131">このメソッドは、`true` が `TChannel` である場合は <xref:System.ServiceModel.Channels.IOutputChannel> を返します。また、バインディング スタック内の現在のバインディングより下のバインディングは <xref:System.ServiceModel.Channels.IDuplexSessionChannel> または <xref:System.ServiceModel.Channels.IRequestChannel> です。</span><span class="sxs-lookup"><span data-stu-id="5a741-131">This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IOutputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IRequestChannel>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5a741-132"><paramref name="context" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5a741-132"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="oneWayBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="5a741-133">作成するチャネル リスナーの種類。</span><span class="sxs-lookup"><span data-stu-id="5a741-133">The type of channel listener to build.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5a741-134">バインディング要素のコンテキストを提供する <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-134">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="5a741-135">指定した種類のチャネル リスナーを作成できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5a741-135">Gets a value that indicates whether a channel listener of the specified type can be built.</span></span></summary>
        <returns><span data-ttu-id="5a741-136">指定した型のチャネル リスナーを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-136"><see langword="true" /> if a channel listener of the specified type can be built; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5a741-137">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="5a741-137">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a741-138">チャネル リスナーを作成する前にこのメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5a741-138">You should call this method before trying to create a channel listener.</span></span>  
  
 <span data-ttu-id="5a741-139">このメソッドは、`true` が `TChannel` である場合は <xref:System.ServiceModel.Channels.IInputChannel> を返します。また、バインディング スタック内の現在のバインディングより下のバインディングは <xref:System.ServiceModel.Channels.IDuplexSessionChannel> または <xref:System.ServiceModel.Channels.IReplyChannel> です。</span><span class="sxs-lookup"><span data-stu-id="5a741-139">This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IInputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IReplyChannel>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5a741-140"><paramref name="context" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5a741-140"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ChannelPoolSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.ChannelPoolSettings ChannelPoolSettings { get; }" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.ChannelPoolSettings ChannelPoolSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPoolSettings As ChannelPoolSettings" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::ChannelPoolSettings ^ ChannelPoolSettings { System::ServiceModel::Channels::ChannelPoolSettings ^ get(); };" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.ChannelPoolSettings : System.ServiceModel.Channels.ChannelPoolSettings" Usage="System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.ChannelPoolSettings ChannelPoolSettings { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelPoolSettings As ChannelPoolSettings" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::ChannelPoolSettings ^ ChannelPoolSettings { System::ServiceModel::Channels::ChannelPoolSettings ^ get(); void set(System::ServiceModel::Channels::ChannelPoolSettings ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ChannelPoolSettings : System.ServiceModel.Channels.ChannelPoolSettings with get, set" Usage="System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.ChannelPoolSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a741-141">チャネル プール設定を取得します。</span><span class="sxs-lookup"><span data-stu-id="5a741-141">Gets the channel pool settings.</span></span></summary>
        <value><span data-ttu-id="5a741-142">このバインド要素に関連付けられたチャネル プールのプロパティを格納する <see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5a741-142">A <see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" /> object that contains properties of the channel pool associated with this binding element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="oneWayBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a741-143">このクラスのインスタンスを複製します。</span><span class="sxs-lookup"><span data-stu-id="5a741-143">Clones an instance of this class.</span></span></summary>
        <returns><span data-ttu-id="5a741-144">このクラスのこのインスタンスの複製されたコピー。</span><span class="sxs-lookup"><span data-stu-id="5a741-144">A cloned copy of this instance of this class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="oneWayBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5a741-145">プロパティの型。</span><span class="sxs-lookup"><span data-stu-id="5a741-145">Type of the property.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5a741-146">バインディング要素のコンテキストを提供する <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-146">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="5a741-147">バインディング スタックにプロパティがある場合は、そのプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="5a741-147">Gets properties from the binding stack, if present.</span></span></summary>
        <returns><span data-ttu-id="5a741-148">バインド スタックに <paramref name="T" /> オブジェクトがある場合はそのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5a741-148">A <paramref name="T" /> object from the binding stack, if present.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a741-149">このメソッドは、バインディング コンテキストを入力パラメーターとして受信します。これは、バインド要素のスタックを表します。</span><span class="sxs-lookup"><span data-stu-id="5a741-149">This method receives a binding context as an input parameter, which represents the stack of binding elements.</span></span>  
  
 <span data-ttu-id="5a741-150">スタック内の各バインド要素は、問い合わせをそれ自体で処理することも代行させることも、その 2 つを組み合わせることもできます。</span><span class="sxs-lookup"><span data-stu-id="5a741-150">Each binding element in the stack can handle the inquiry itself or delegate the inquiry, or a combination of the two.</span></span> <span data-ttu-id="5a741-151">各バインド要素は、問い合わせを代行させる場合、コンテキストを変更できます。</span><span class="sxs-lookup"><span data-stu-id="5a741-151">Each binding element can modify the context if it delegates the inquiry.</span></span> <span data-ttu-id="5a741-152">ただし、トランスポート バインド要素は、問い合わせをそれ自体で処理します。</span><span class="sxs-lookup"><span data-stu-id="5a741-152">However, a transport binding element handles the inquiry itself.</span></span>  
  
 <span data-ttu-id="5a741-153">このメソッドは、バインド要素によって、また、ランタイム オブジェクト (<xref:System.ServiceModel.Channels.IChannelFactory>、<xref:System.ServiceModel.Channels.IChannelListener>、および <xref:System.ServiceModel.Channels.IChannel> など) によって実装されます。</span><span class="sxs-lookup"><span data-stu-id="5a741-153">This method is implemented by binding elements as well as by the runtime objects, such as <xref:System.ServiceModel.Channels.IChannelFactory>, <xref:System.ServiceModel.Channels.IChannelListener>, and <xref:System.ServiceModel.Channels.IChannel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAcceptedChannels">
      <MemberSignature Language="C#" Value="public int MaxAcceptedChannels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAcceptedChannels" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAcceptedChannels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAcceptedChannels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAcceptedChannels : int with get, set" Usage="System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a741-154">許可されるチャネルの最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5a741-154">Gets or sets the maximum number of channels that can be accepted.</span></span></summary>
        <value><span data-ttu-id="5a741-155">許可されるチャネルの最大数。</span><span class="sxs-lookup"><span data-stu-id="5a741-155">The maximum number of channels that can be accepted.</span></span> <span data-ttu-id="5a741-156">既定値は 10 です。</span><span class="sxs-lookup"><span data-stu-id="5a741-156">The default value is 10.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketRoutable">
      <MemberSignature Language="C#" Value="public bool PacketRoutable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PacketRoutable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable" />
      <MemberSignature Language="VB.NET" Value="Public Property PacketRoutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PacketRoutable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PacketRoutable : bool with get, set" Usage="System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a741-157">パケット ルーティングが有効かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5a741-157">Gets or sets a value that indicates whether packet routing is enabled.</span></span></summary>
        <value><span data-ttu-id="5a741-158">パケット ルーティングを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-158"><see langword="true" /> if packet routing is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5a741-159">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="5a741-159">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a741-160">このクラスでは、必要に応じて、`DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` を一方向チャネルに変換し、変換されたチャネルからのメッセージをルーティングできるようにするメッセージレベルのプロトコルを使用できます。</span><span class="sxs-lookup"><span data-stu-id="5a741-160">This class can optionally use a message-level protocol that transforms a `DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` to a one-way channel and allows the messages from the transformed channel to be routed.</span></span> <span data-ttu-id="5a741-161">このプロトコルの使用方法は、<xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A> プロパティによって制御されます。</span><span class="sxs-lookup"><span data-stu-id="5a741-161">Usage of this protocol is controlled by the <xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A> property.</span></span>  
  
 <span data-ttu-id="5a741-162">このプロパティが `true`場合、`DuplexSessionChannel` 開始時 (たとえば、バッファーされた TCP や名前付きパイプ)、このクラスは "このチャネルをパケットルーティングできる" という意味のメッセージヘッダー (MustUnderstand = `false`、セキュリティが有効な場合は署名済み) を追加します。</span><span class="sxs-lookup"><span data-stu-id="5a741-162">When this property is `true`, upon `DuplexSessionChannel` initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = `false`, signed if security is enabled) that semantically means "you can packet-route this channel".</span></span> <span data-ttu-id="5a741-163">アクセプタ側では、このプロパティが `true` であると、このクラスは、そのチャネルで受信した最初のメッセージでこのヘッダーを探します。</span><span class="sxs-lookup"><span data-stu-id="5a741-163">On the acceptor side, when this property is `true`, this class looks for this header in the first message received on the channel.</span></span> <span data-ttu-id="5a741-164">このヘッダーが存在しない場合、WCF はチャネルをエラーにします。</span><span class="sxs-lookup"><span data-stu-id="5a741-164">If this header does not exist, WCF faults the channel.</span></span> <span data-ttu-id="5a741-165">ヘッダーが存在する場合、WCF は新しいチャネルを共有入力チャネルにじょうごします。</span><span class="sxs-lookup"><span data-stu-id="5a741-165">If the header exists, then WCF funnels the new channel into a shared input channel.</span></span>  
  
 <span data-ttu-id="5a741-166">このプロパティが `true`ときに要求/応答チャネル (TCP ストリーミングや HTTP など) を変換するには、このヘッダーをすべての要求に追加して、要求をパケットルーティングできることを通知します。</span><span class="sxs-lookup"><span data-stu-id="5a741-166">To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is `true`, this header is added to every request to signal that the request can be packet routed.</span></span> <span data-ttu-id="5a741-167">また、WCF は、`SendRequest` が `null` を返し、サーバーの `null` と応答することも確認します。</span><span class="sxs-lookup"><span data-stu-id="5a741-167">WCF also verifies that `SendRequest` returns `null` and replies with `null` on the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeChannelPoolSettings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeChannelPoolSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeChannelPoolSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeChannelPoolSettings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeChannelPoolSettings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeChannelPoolSettings : unit -&gt; bool" Usage="oneWayBindingElement.ShouldSerializeChannelPoolSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a741-168">このバインド要素に関連付けられたチャネル プールのプロパティをシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5a741-168">Returns whether the properties of the channel pool that are associated with this binding element should be serialized.</span></span></summary>
        <returns><span data-ttu-id="5a741-169">チャネル プール設定をシリアル化する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-169"><see langword="true" /> if the channel pool settings should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit&#xA;override this.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="oneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="5a741-170">エクスポート プロセスを変更するために使用できる <see cref="T:System.ServiceModel.Description.MetadataExporter" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-170">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</span></span></param>
        <param name="context"><span data-ttu-id="5a741-171">カスタム ポリシー アサーションの挿入に使用できる <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</span><span class="sxs-lookup"><span data-stu-id="5a741-171">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</span></span></param>
        <summary><span data-ttu-id="5a741-172">一方向のバインディング要素を表すカスタム ポリシー アサーションをエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="5a741-172">Exports a custom policy assertion that represents the one-way binding element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a741-173">このメソッドは、バインディング関連のステートメントを、特定のコントラクトによって公開される WSDL 情報に書き込みます。このメソッドは、バインディングスタック内にこのカスタムバインド要素が存在することをクライアントに通知するために、WCF によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="5a741-173">This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by WCF to communicate to clients the existence of this custom binding element in the binding stack.</span></span>  
  
 <span data-ttu-id="5a741-174">このメソッドには、<xref:System.ServiceModel.Description.MetadataExporter> オブジェクトおよび <xref:System.ServiceModel.Description.PolicyConversionContext> オブジェクトの 2 つのパラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="5a741-174">This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects.</span></span> <span data-ttu-id="5a741-175"><xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>、<xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>、および <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> の各メソッドを使用して、既にさまざまなスコープでエクスポートされているポリシー アサーションのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="5a741-175">Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes.</span></span> <span data-ttu-id="5a741-176">次に、このメソッドを使用して、独自のポリシー アサーションを適切なコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="5a741-176">Then use this method to add your own policy assertions to the appropriate collection.</span></span>  
  
 <span data-ttu-id="5a741-177"><xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> プロパティは、エクスポートされるエンドポイントの <xref:System.ServiceModel.Description.ContractDescription> を公開します。</span><span class="sxs-lookup"><span data-stu-id="5a741-177">The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported.</span></span> <span data-ttu-id="5a741-178">これにより、このメソッドは、エクスポートされたポリシー アサーションを正しく特定できます。</span><span class="sxs-lookup"><span data-stu-id="5a741-178">This enables this method to correctly scope their exported policy assertions.</span></span> <span data-ttu-id="5a741-179">たとえば、コード内のセキュリティ属性は、セキュリティ ポリシー アサーションを追加する必要がある場所を示す<xref:System.ServiceModel.Description.ContractDescription> に動作を追加できます。</span><span class="sxs-lookup"><span data-stu-id="5a741-179">For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.</span></span>  
  
 <span data-ttu-id="5a741-180">カスタム ポリシー アサーションが WSDL 情報に結び付けられると、クライアントは、<xref:System.ServiceModel.Description.IPolicyImportExtension> インターフェイスを実装することによって、カスタム バインディング アサーションを検出し、インポートできます。</span><span class="sxs-lookup"><span data-stu-id="5a741-180">Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5a741-181"><paramref name="exporter" /> または <paramref name="context" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5a741-181"><paramref name="exporter" /> or <paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
