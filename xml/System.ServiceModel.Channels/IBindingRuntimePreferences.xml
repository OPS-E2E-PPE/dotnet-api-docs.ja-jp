<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcc679b1133127b4f86e81a32af13a2bf4add33b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83933951" /></Metadata><TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type IBindingRuntimePreferences = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="813a3-101">バインドが実装すると、受信した要求をサービスが同期または非同期のどちらで処理するかを指定できるようになるオプションのコントラクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="813a3-101">Defines the optional contract that a binding can implement to specify whether incoming requests are handled synchronously or asynchronously by the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813a3-102">状況によっては、バインドが同期方式の <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> メソッドまたは <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> メソッドを使用してメッセージを処理する方が効率的な場合があります。</span><span class="sxs-lookup"><span data-stu-id="813a3-102">In some cases it may be more efficient for a binding to process messages with the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods.</span></span> <span data-ttu-id="813a3-103">この方法が望ましいことを呼び出し側に示すために、<xref:System.ServiceModel.Channels.Binding> クラスでは、必要に応じて、<xref:System.ServiceModel.Channels.IBindingRuntimePreferences> を実装できます。</span><span class="sxs-lookup"><span data-stu-id="813a3-103">A <xref:System.ServiceModel.Channels.Binding> class can optionally implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> to indicate to callers that this is preferred.</span></span>  
  
 <span data-ttu-id="813a3-104">バインディングに <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>が実装されていない場合、Windows Communication Foundation (WCF) サービスモデルランタイム層は、既定では、`Receive` および `Request` メソッドの非同期バージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="813a3-104">If a binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the Windows Communication Foundation (WCF) Service Model Runtime layer defaults to using the asynchronous versions of the `Receive` and `Request` methods.</span></span> <span data-ttu-id="813a3-105">バインディングで <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>が実装されている場合、WCF サービスモデルランタイム層は <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> の値を確認し、それを使用して、これらのメソッドの同期バージョン (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> または <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) または非同期バージョン (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> と <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29>、または <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> と <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>を呼び出すかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="813a3-105">If a binding does implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the WCF Service Model Runtime layer checks the value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> and uses that to determine whether to call the synchronous versions of the these methods (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) or the asynchronous versions (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span></span> <span data-ttu-id="813a3-106">バインディングが <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> を実装していて、`true` プロパティが <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> を返す場合は、同期方式の <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> メソッドと <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> メソッドを使用して、チャネルからメッセージを受信することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813a3-106">If <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> is implemented by the binding and returns `true` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods to receive messages from the channel.</span></span> <span data-ttu-id="813a3-107">バインディングが <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> を実装していない場合、または `false` プロパティから <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> が返される場合は、非同期方式の <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> メソッドと <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> メソッド、または <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> メソッドと <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813a3-107">If the binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> or returns `false` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> methods.</span></span>  
  
 <span data-ttu-id="813a3-108"><xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> プロパティが返す値に関係なく、すべてのバインディングは、実装されている特定のチャネルの種類に対し、`Receive` メソッドの同期および非同期の両バージョンの有効な実装を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="813a3-108">Regardless of the value returned by the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, all bindings must still provide valid implementations of both the synchronous and asynchronous versions of the `Receive` methods for the specific channel types implemented.</span></span> <span data-ttu-id="813a3-109">カスタムチャネルの実装の詳細については、「[チャネルの開発](/dotnet/framework/wcf/extending/developing-channels)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="813a3-109">For more information about implementing custom channels, see [Developing Channels](/dotnet/framework/wcf/extending/developing-channels).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813a3-110"><xref:System.ServiceModel.Channels.IBindingRuntimePreferences> インターフェイスを実装するバインドの実装例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="813a3-110">The following example shows the implementation of a binding that implements the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> interface.</span></span> <span data-ttu-id="813a3-111">このコードは、[チャンキングチャネル](/dotnet/framework/wcf/samples/chunking-channel)のサンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="813a3-111">This code is taken from the [Chunking Channel](/dotnet/framework/wcf/samples/chunking-channel) sample:</span></span>  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="813a3-112">受信した要求を処理するには同期と非同期のどちらの方が効率的かを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="813a3-112">Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="813a3-113">要求を同期的に効率的に処理できるかどうかを <see langword="true" /> します。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="813a3-113"><see langword="true" /> if requests can be handled more efficiently synchronously; otherwise <see langword="false" />.</span></span> <span data-ttu-id="813a3-114">既定は <see langword="false" /> で、要求を非同期的に処理します。</span><span class="sxs-lookup"><span data-stu-id="813a3-114">The default is <see langword="false" />, to handle requests asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813a3-115">Windows Communication Foundation (WCF) によって提供される標準 (システム提供の) バインディングは、このインターフェイスを実装しており、場合によっては、受信メッセージを同期的に処理するために既定値をオーバーライドすることがあります。</span><span class="sxs-lookup"><span data-stu-id="813a3-115">The standard (system-provided) bindings provided by Windows Communication Foundation (WCF) have implemented this interface and in some cases override the default value to process incoming messages synchronously.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
