<Type Name="IOutputChannel" FullName="System.ServiceModel.Channels.IOutputChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3aab721b9f9801dc38db75244dad18de45fbbd54" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83974791" /></Metadata><TypeSignature Language="C#" Value="public interface IOutputChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOutputChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IOutputChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOutputChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOutputChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IOutputChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="fefe0-101">チャネルがメッセージを送信するために実装する必要があるインターフェイスを定義します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-101">Defines the interface that a channel must implement to send a message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="fefe0-102"><xref:System.ServiceModel.Channels.IOutputChannel> インターフェイスでは、<xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> 操作の同期および非同期のバリエーションが定義されています。</span><span class="sxs-lookup"><span data-stu-id="fefe0-102">The <xref:System.ServiceModel.Channels.IOutputChannel> interface defines synchronous and asynchronous variants of the <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> operation.</span></span> <span data-ttu-id="fefe0-103">チャネルで送信されるメッセージの送信先の <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A> を提供します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-103">It provides a <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A> for the destination of the messages sent out on the channel.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fefe0-104">メッセージ送信の非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-104">Begins an asynchronous operation to send a message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (message As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginSend : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOutputChannel.BeginSend (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="fefe0-105">出力チャネルで送信される <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-105">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span></span></param>
        <param name="callback"><span data-ttu-id="fefe0-106"><see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="fefe0-106">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="fefe0-107">非同期送信操作に関連付けられている状態情報を格納するオブジェクト。アプリケーションで指定します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-107">An object, specified by the application, that contains state information associated with the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="fefe0-108">出力チャネルの送信先に対してメッセージを送信する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-108">Begins an asynchronous operation to transmit a message to the destination of the output channel.</span></span></summary>
        <returns><span data-ttu-id="fefe0-109">非同期メッセージ転送を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe0-110">出力チャネルで送信されるメッセージの送信先は、チャネルの作成時に指定されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-110">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="fefe0-111"><xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> メソッドは、リモート エンドポイントへのメッセージ配信を保証しません。</span><span class="sxs-lookup"><span data-stu-id="fefe0-111">The <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="fefe0-112">配信保証が必要な場合は、<xref:System.ServiceModel.Channels.IOutputSessionChannel> を使用します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-112">If delivery guarantees are required, use the <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="fefe0-113">送信されたメッセージが、使用されるバインドで許可されている最大メッセージ サイズを超える場合は、<xref:System.ServiceModel.QuotaExceededException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-113">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="fefe0-114">最大メッセージ サイズは、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> プロパティで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-114">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="fefe0-115">既定値は 65536 バイトです。</span><span class="sxs-lookup"><span data-stu-id="fefe0-115">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe0-116">このメソッドを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-116">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (message As Message, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginSend : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOutputChannel.BeginSend (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="fefe0-117">出力チャネルで送信される <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-117">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span></span></param>
        <param name="timeout"><span data-ttu-id="fefe0-118">送信操作を完了する必要がある、タイムアウトまでの制限時間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-118">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="fefe0-119">非同期操作送信の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="fefe0-119">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation send completion.</span></span></param>
        <param name="state"><span data-ttu-id="fefe0-120">非同期送信操作に関連付けられている状態情報を格納するオブジェクト。アプリケーションで指定します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-120">An object, specified by the application, that contains state information associated with the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="fefe0-121">指定した時間内での出力チャネルの送信先に対するメッセージ送信の非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-121">Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="fefe0-122">非同期の送信操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-122">The <see cref="T:System.IAsyncResult" /> that references the asynchronous send operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe0-123">出力チャネルで送信されるメッセージの送信先は、チャネルの作成時に指定されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-123">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="fefe0-124"><xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> メソッドは、リモート エンドポイントへのメッセージ配信を保証しません。</span><span class="sxs-lookup"><span data-stu-id="fefe0-124">The <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="fefe0-125">配信保証が必要な場合は、<xref:System.ServiceModel.Channels.IOutputSessionChannel> を使用します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-125">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="fefe0-126">送信されたメッセージが、使用されるバインドで許可されている最大メッセージ サイズを超える場合は、<xref:System.ServiceModel.QuotaExceededException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-126">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="fefe0-127">最大メッセージ サイズは、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> プロパティで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-127">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="fefe0-128">既定値は 65536 バイトです。</span><span class="sxs-lookup"><span data-stu-id="fefe0-128">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe0-129">このメソッドを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-129">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fefe0-130">指定した <see cref="T:System.TimeoutException" /> が経過した場合、操作は <paramref name="timeout" /> をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="fefe0-130">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public void EndSend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSend (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndSend : IAsyncResult -&gt; unit" Usage="iOutputChannel.EndSend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="fefe0-131"><see cref="T:System.IAsyncResult" /> メソッドの呼び出しで返された <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-131">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" /> method.</span></span></param>
        <summary><span data-ttu-id="fefe0-132">出力チャネルの送信先に対してメッセージを送信する非同期操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-132">Completes an asynchronous operation to transmit a message to the destination of the output channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe0-133">送信されたメッセージが、使用されるバインドで許可されている最大メッセージ サイズを超える場合は、<xref:System.ServiceModel.QuotaExceededException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-133">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="fefe0-134">最大メッセージ サイズは、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> プロパティで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-134">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="fefe0-135">既定値は 65536 バイトです。</span><span class="sxs-lookup"><span data-stu-id="fefe0-135">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe0-136">このメソッドを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-136">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fefe0-137">出力チャネルで送信されるメッセージの送信先となるサービスの送信先を取得します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-137">Gets the destination of the service to which messages are sent out on the output channel.</span></span></summary>
        <value><span data-ttu-id="fefe0-138">出力チャネルでのメッセージの送信先となるサービスの <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-138">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the service to which the output channel sends messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe0-139"><xref:System.ServiceModel.EndpointAddress> が指定されていない場合は、<xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> が、最終的な送信先と物理アドレスの両方として機能します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-139">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="fefe0-140"><xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> が指定されている場合は、メッセージが送信される実際の物理アドレス、およびメッセージがその送信先に到達するまでに経由する必要がある物理アドレスとなります。</span><span class="sxs-lookup"><span data-stu-id="fefe0-140">If the <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe0-141">このプロパティを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-141">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fefe0-142">現在の出力チャネルでメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-142">Sends a message on the current output channel.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.ServiceModel.Channels.Message -&gt; unit" Usage="iOutputChannel.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="fefe0-143">出力チャネルで送信される <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-143">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span></span></param>
        <summary><span data-ttu-id="fefe0-144">出力チャネルの送信先にメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-144">Transmits a message to the destination of the output channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe0-145">出力チャネルで送信されるメッセージの送信先は、チャネルの作成時に指定されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-145">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="fefe0-146"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> メソッドは、リモート エンドポイントへのメッセージ配信を保証しません。</span><span class="sxs-lookup"><span data-stu-id="fefe0-146">The <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="fefe0-147"><xref:System.ServiceModel.Channels.IOutputChannel> の実装では、さまざまな理由で、メッセージがエラー表示なしで削除されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-147">An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons.</span></span> <span data-ttu-id="fefe0-148">たとえば、バッファーに空きがない場合が考えられます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-148">There may be no more buffer room, for example.</span></span> <span data-ttu-id="fefe0-149">配信保証が必要な場合は、<xref:System.ServiceModel.Channels.IOutputSessionChannel> を使用します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-149">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="fefe0-150">メッセージを出力チャネルに渡すと、メッセージが処理されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-150">Passing the message into the output channel causes the message to be consumed.</span></span> <span data-ttu-id="fefe0-151"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> を呼び出した後は、メッセージの検査、そのメッセージでの <xref:System.ServiceModel.Channels.Message.Close%2A> の呼び出しはできなくなります。</span><span class="sxs-lookup"><span data-stu-id="fefe0-151">After you call <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe0-152">このメソッドを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-152">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As Message, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="iOutputChannel.Send (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="fefe0-153">出力チャネルで送信される <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-153">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span></span></param>
        <param name="timeout"><span data-ttu-id="fefe0-154">送信操作を完了する必要がある、タイムアウトまでの制限時間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-154">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="fefe0-155">指定した時間内に現在の出力チャネルでメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-155">Sends a message on the current output channel within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe0-156">出力チャネルで送信されるメッセージの送信先は、チャネルの作成時に指定されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-156">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="fefe0-157"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> メソッドは、リモート エンドポイントへのメッセージ配信を保証しません。</span><span class="sxs-lookup"><span data-stu-id="fefe0-157">The <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="fefe0-158"><xref:System.ServiceModel.Channels.IOutputChannel> の実装では、さまざまな理由で、メッセージがエラー表示なしで削除されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-158">An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons.</span></span> <span data-ttu-id="fefe0-159">たとえば、バッファーに空きがない場合が考えられます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-159">There may be no more buffer room, for example.</span></span> <span data-ttu-id="fefe0-160">配信保証が必要な場合は、<xref:System.ServiceModel.Channels.IOutputSessionChannel> を使用します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-160">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="fefe0-161">メッセージを出力チャネルに渡すと、メッセージが処理されます。</span><span class="sxs-lookup"><span data-stu-id="fefe0-161">Passing the message into the output channel causes the message to be consumed.</span></span> <span data-ttu-id="fefe0-162"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> を呼び出した後は、メッセージの検査、そのメッセージでの <xref:System.ServiceModel.Channels.Message.Close%2A> の呼び出しはできなくなります。</span><span class="sxs-lookup"><span data-stu-id="fefe0-162">After you call <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe0-163">このメソッドを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-163">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fefe0-164">指定した <see cref="T:System.TimeoutException" /> が経過した場合、操作は <paramref name="timeout" /> をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="fefe0-164">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IOutputChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fefe0-165">出力チャネルで送信されるメッセージの送信先となるトランスポート アドレスを格納する URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-165">Gets the URI that contains the transport address to which messages are sent on the output channel.</span></span></summary>
        <value><span data-ttu-id="fefe0-166">出力チャネルで送信されるメッセージの送信先となるトランスポート アドレスを格納する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="fefe0-166">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fefe0-167"><xref:System.ServiceModel.EndpointAddress> が指定されていない場合は、<xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> が、最終的な送信先と物理アドレスの両方として機能します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-167">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="fefe0-168"><xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> が指定されている場合は、メッセージが送信される実際の物理アドレス、およびメッセージがその送信先に到達するまでに経由する必要がある物理アドレスとなります。</span><span class="sxs-lookup"><span data-stu-id="fefe0-168">If the <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fefe0-169">このプロパティを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="fefe0-169">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
