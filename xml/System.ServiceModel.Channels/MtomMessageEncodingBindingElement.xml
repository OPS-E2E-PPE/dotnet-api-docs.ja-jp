<Type Name="MtomMessageEncodingBindingElement" FullName="System.ServiceModel.Channels.MtomMessageEncodingBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8145438a55f3ba238b5dcee73b01e22b138407df" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78792309" /></Metadata><TypeSignature Language="C#" Value="public sealed class MtomMessageEncodingBindingElement : System.ServiceModel.Channels.MessageEncodingBindingElement, System.ServiceModel.Description.IPolicyExportExtension, System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MtomMessageEncodingBindingElement extends System.ServiceModel.Channels.MessageEncodingBindingElement implements class System.ServiceModel.Description.IPolicyExportExtension, class System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MtomMessageEncodingBindingElement&#xA;Inherits MessageEncodingBindingElement&#xA;Implements IPolicyExportExtension, IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MtomMessageEncodingBindingElement sealed : System::ServiceModel::Channels::MessageEncodingBindingElement, System::ServiceModel::Description::IPolicyExportExtension, System::ServiceModel::Description::IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type MtomMessageEncodingBindingElement = class&#xA;    inherit MessageEncodingBindingElement&#xA;    interface IWsdlExportExtension&#xA;    interface IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.MessageEncodingBindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IWsdlExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="cc813-101">Message Transmission Optimization Mechanism (MTOM) メッセージに使用するエンコーディングおよびバージョン管理を指定するバインド要素。</span><span class="sxs-lookup"><span data-stu-id="cc813-101">The binding element that specifies the encoding and versioning used for Message Transmission Optimization Mechanism (MTOM) messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-102">エンコーディングは、メッセージをバイト シーケンスに変換するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="cc813-102">Encoding is the process of transforming a message into a sequence of bytes.</span></span> <span data-ttu-id="cc813-103">デコードは、その逆のプロセスです。</span><span class="sxs-lookup"><span data-stu-id="cc813-103">Decoding is the reverse process.</span></span> <span data-ttu-id="cc813-104">WCF (Windows Communication Foundation) には、SOAP メッセージのエンコードとして、テキスト、バイナリ、および MTOM (Message Transmission Optimization Mechanism) の 3 種類があります。</span><span class="sxs-lookup"><span data-stu-id="cc813-104">Windows Communication Foundation (WCF) includes three types of encoding for SOAP messages: Text, Binary and Message Transmission Optimization Mechanism (MTOM).</span></span>  
  
 <span data-ttu-id="cc813-105"><xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement> は、Message Transmission Optimization Mechanism (MTOM) エンコーディングを使用するメッセージに対する文字エンコーディングとメッセージのバージョン管理およびその他の設定を指定するバインド要素を表します。</span><span class="sxs-lookup"><span data-stu-id="cc813-105">The <xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement> represents the binding element that specifies the character encoding and message versioning and other settings used for messages using a Message Transmission Optimization Mechanism (MTOM) encoding.</span></span> <span data-ttu-id="cc813-106">MTOM は、WCF メッセージでバイナリ データを転送するための効率的なテクノロジです。</span><span class="sxs-lookup"><span data-stu-id="cc813-106">MTOM is an efficient technology for transmitting binary data in WCF messages.</span></span> <span data-ttu-id="cc813-107">MTOM エンコーダーは、効率と相互運用性のバランスをとろうとします。</span><span class="sxs-lookup"><span data-stu-id="cc813-107">The MTOM encoder attempts to create a balance between efficiency and interoperability.</span></span> <span data-ttu-id="cc813-108">MTOM エンコーディングは、ほとんどの XML をテキスト形式で転送しますが、大きいサイズのバイナリ データ ブロックは、base64 でエンコードされた形式に変換せずに、そのまま転送することによって最適化します。</span><span class="sxs-lookup"><span data-stu-id="cc813-108">The MTOM encoding transmits most XML in textual form, but optimizes large blocks of binary data by transmitting them as-is, without conversion to their base64 encoded format.</span></span>  
  
 <span data-ttu-id="cc813-109">XML のテキスト表現を使用してメッセージをエンコードすることを指定するバインド要素の詳細については、「<xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc813-109">For more information about the binding element that specifies that messages are encoded using a textual representation of XML, see <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>.</span></span>  
  
 <span data-ttu-id="cc813-110">XML 用の .NET バイナリ形式を使用してメッセージをエンコードするよう指定するバインド要素の詳細については、「<xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc813-110">For more information about the binding element that specifies messages are encoded using the .NET Binary Format for XML, see <xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement>.</span></span>  
  
 <span data-ttu-id="cc813-111">カスタム メッセージ エンコーダーを実装するには、<xref:System.ServiceModel.Channels.MessageEncodingBindingElement> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="cc813-111">To implement a custom message encoder, use the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc813-112"><see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cc813-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MtomMessageEncodingBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MtomMessageEncodingBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc813-113"><see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cc813-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-114">使用される既定の <xref:System.ServiceModel.Channels.MessageVersion> は、WS-Addressing 1.0 および SOAP1.2 のバージョンで構成されます。</span><span class="sxs-lookup"><span data-stu-id="cc813-114">The default <xref:System.ServiceModel.Channels.MessageVersion> used consists of the version of WS-Addressing 1.0 and SOAP1.2.</span></span> <span data-ttu-id="cc813-115">既定の文字エンコーディングは UTF-8 です。</span><span class="sxs-lookup"><span data-stu-id="cc813-115">The default character encoding is UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MtomMessageEncodingBindingElement (System.ServiceModel.Channels.MessageVersion messageVersion, System.Text.Encoding writeEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.MessageVersion messageVersion, class System.Text.Encoding writeEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (messageVersion As MessageVersion, writeEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MtomMessageEncodingBindingElement(System::ServiceModel::Channels::MessageVersion ^ messageVersion, System::Text::Encoding ^ writeEncoding);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.MtomMessageEncodingBindingElement : System.ServiceModel.Channels.MessageVersion * System.Text.Encoding -&gt; System.ServiceModel.Channels.MtomMessageEncodingBindingElement" Usage="new System.ServiceModel.Channels.MtomMessageEncodingBindingElement (messageVersion, writeEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="messageVersion" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="writeEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="messageVersion"><span data-ttu-id="cc813-116">SOAP メッセージで使用される <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-116">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the SOAP message.</span></span></param>
        <param name="writeEncoding"><span data-ttu-id="cc813-117">メッセージの文字の書式設定に使用される <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-117">The <see cref="T:System.Text.Encoding" /> that is used to format the message characters.</span></span></param>
        <summary><span data-ttu-id="cc813-118">指定したメッセージ バージョンと文字エンコーディングを使用して、<see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cc813-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class with a specified message version and character encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-119">使用される既定の <xref:System.ServiceModel.Channels.MessageVersion> は、WS-Addressing 1.0 および SOAP1.2 のバージョンで構成されます。</span><span class="sxs-lookup"><span data-stu-id="cc813-119">The default <xref:System.ServiceModel.Channels.MessageVersion> used consists of the version of WS-Addressing 1.0 and SOAP1.2.</span></span> <span data-ttu-id="cc813-120">既定の文字エンコーディングは UTF-8 です。</span><span class="sxs-lookup"><span data-stu-id="cc813-120">The default character encoding is UTF-8.</span></span> <span data-ttu-id="cc813-121">既定でサポートされている文字エンコーディングは、UTF-8、Unicode、および Big-Endian Unicode です。</span><span class="sxs-lookup"><span data-stu-id="cc813-121">The character encodings supported by default are UTF-8, Unicode, and Big Endian Unicode.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc813-122"><paramref name="messageVersion" /> 、または <paramref name="encoding" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc813-122"><paramref name="messageVersion" /> or <paramref name="encoding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc813-123"><paramref name="messageVersion" /> は <see cref="P:System.ServiceModel.Channels.MessageVersion.None" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="cc813-123"><paramref name="messageVersion" /> is set to <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="mtomMessageEncodingBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="cc813-124">チャネル ファクトリが作成するチャネルの種類。</span><span class="sxs-lookup"><span data-stu-id="cc813-124">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="context"><span data-ttu-id="cc813-125">チャネルの <see cref="T:System.ServiceModel.Channels.BindingContext" /> 。</span><span class="sxs-lookup"><span data-stu-id="cc813-125">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</span></span></param>
        <summary><span data-ttu-id="cc813-126">指定したコンテキストに対して指定した種類のチャネルを作成するチャネル ファクトリ スタックをクライアント上に作成します。</span><span class="sxs-lookup"><span data-stu-id="cc813-126">Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</span></span></summary>
        <returns><span data-ttu-id="cc813-127">指定したコンテキストの <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 型の <paramref name="TChannel" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-127">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="mtomMessageEncodingBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="cc813-128">チャネル リスナーが受け入れるチャネルの種類。</span><span class="sxs-lookup"><span data-stu-id="cc813-128">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="context"><span data-ttu-id="cc813-129">リスナーの <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-129">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</span></span></param>
        <summary><span data-ttu-id="cc813-130">指定したコンテキストに対する、指定した種類のチャネルを受け入れるチャネル リスナー スタックをクライアント上に作成します。</span><span class="sxs-lookup"><span data-stu-id="cc813-130">Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.</span></span></summary>
        <returns><span data-ttu-id="cc813-131">指定したコンテキストの <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 型の <paramref name="TChannel" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-131">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> for the specified context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="mtomMessageEncodingBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="cc813-132">チャネル ファクトリが作成するチャネルの種類。</span><span class="sxs-lookup"><span data-stu-id="cc813-132">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="context"><span data-ttu-id="cc813-133">チャネルの <see cref="T:System.ServiceModel.Channels.BindingContext" /> 。</span><span class="sxs-lookup"><span data-stu-id="cc813-133">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</span></span></param>
        <summary><span data-ttu-id="cc813-134">指定した種類のチャネルとコンテキストに対するファクトリを現在のバインドが作成できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="cc813-134">Returns a value that indicates whether the current binding can build a factory for a specified type of channel and context.</span></span></summary>
        <returns><span data-ttu-id="cc813-135">指定したチャネル ファクトリ スタックをサービス上に作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-135"><see langword="true" /> if the specified channel factory stack can be built on the service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="mtomMessageEncodingBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="cc813-136">チャネル リスナーが受け入れるチャネルの種類。</span><span class="sxs-lookup"><span data-stu-id="cc813-136">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="context"><span data-ttu-id="cc813-137">リスナーの <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-137">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</span></span></param>
        <summary><span data-ttu-id="cc813-138">指定した種類のチャネルとコンテキストに対するリスナーを現在のバインディングが作成できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="cc813-138">Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.</span></span></summary>
        <returns><span data-ttu-id="cc813-139">指定したチャネル リスナー スタックをサービスで作成できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-139"><see langword="true" /> if the specified channel listener stack can be built on the service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="mtomMessageEncodingBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc813-140">新しい <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> オブジェクトを作成し、現在のオブジェクトを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="cc813-140">Creates a new <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> object initialized from the current one.</span></span></summary>
        <returns><span data-ttu-id="cc813-141">現在の要素と同じプロパティ値が設定された <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc813-141">A <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> object with property values equal to those of the current element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-142">これは、現在のバインド要素のオブジェクト ツリーの完全なコピーを作成します。これはディープ クローンとも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="cc813-142">This creates a complete copy of the current binding element object tree, also called a deep clone.</span></span> <span data-ttu-id="cc813-143">オブジェクトのディープ クローンでは、オブジェクトのコピーと、このオブジェクトによって直接的または間接的に参照されるすべての対象のコピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="cc813-143">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="cc813-144">(これは、オブジェクトグラフ全体のコピーと呼ばれます)。ディープクローンを返すと、ランタイムは、複数のカスタムバインドがカスタムバインド要素を共有している場合をサポートできます。</span><span class="sxs-lookup"><span data-stu-id="cc813-144">(This is called copying the entire object graph.) Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="cc813-145">ディープ クローンが返されない場合、ランタイムの動作は未定義です。</span><span class="sxs-lookup"><span data-stu-id="cc813-145">If a deep clone is not returned, the run-time behavior is undefined.</span></span> <span data-ttu-id="cc813-146">オブジェクトのシャロー クローンは、対照的に、オブジェクトだけをコピーしたものです。</span><span class="sxs-lookup"><span data-stu-id="cc813-146">A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="cc813-147">オブジェクトが他のオブジェクトへの参照を含んでいる場合、シャロー コピーでは、参照されるオブジェクトのコピーは作成されません。代わりに元のオブジェクトへの参照だけがコピーされます。</span><span class="sxs-lookup"><span data-stu-id="cc813-147">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageEncoderFactory">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.MessageEncoderFactory CreateMessageEncoderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.MessageEncoderFactory CreateMessageEncoderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CreateMessageEncoderFactory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateMessageEncoderFactory () As MessageEncoderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::MessageEncoderFactory ^ CreateMessageEncoderFactory();" />
      <MemberSignature Language="F#" Value="override this.CreateMessageEncoderFactory : unit -&gt; System.ServiceModel.Channels.MessageEncoderFactory" Usage="mtomMessageEncodingBindingElement.CreateMessageEncoderFactory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc813-148">MTOM メッセージをエンコードするメッセージ エンコーダー ファクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="cc813-148">Creates a message encoder factory that encodes MTOM messages.</span></span></summary>
        <returns><span data-ttu-id="cc813-149">MTOM メッセージをエンコードする <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-149">The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that encodes MTOM messages.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="mtomMessageEncodingBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cc813-150">メソッドが照会している、型指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc813-150">The typed object for which the method is querying.</span></span></typeparam>
        <param name="context"><span data-ttu-id="cc813-151">バインディング要素の <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-151">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span></span></param>
        <summary><span data-ttu-id="cc813-152">バインディング要素スタックの適切な層から、要求のあった型指定されたオブジェクト (ある場合) を返します。</span><span class="sxs-lookup"><span data-stu-id="cc813-152">Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</span></span></summary>
        <returns><span data-ttu-id="cc813-153">要求される型指定されたオブジェクト <paramref name="T" /> がある場合は、そのオブジェクト。ない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-153">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-154">これを使用して、バインド要素スタックの適切な層のプロパティの設定、ステータスの取得を行うために、型指定されたオブジェクトを要求します。</span><span class="sxs-lookup"><span data-stu-id="cc813-154">Use this to request a typed object for setting properties or getting status from the appropriate layer in the binding element stack.</span></span> <span data-ttu-id="cc813-155">その層が要求されたオブジェクトを返せる場合は、オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="cc813-155">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="cc813-156">それ以外の場合は、スタック内の次の層に呼び出しを代行させます。</span><span class="sxs-lookup"><span data-stu-id="cc813-156">If not, it simply delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="cc813-157">スタックの最下位に達しても要求されたオブジェクトをサポートするバインディング要素層がない場合、メソッドは、`null` を返します。</span><span class="sxs-lookup"><span data-stu-id="cc813-157">If it gets to the bottom of the stack and no binding element layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferSize : int with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc813-158">最大バッファー サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cc813-158">Gets or sets the maximum buffer size.</span></span></summary>
        <value><span data-ttu-id="cc813-159">バッファーの最大サイズ。</span><span class="sxs-lookup"><span data-stu-id="cc813-159">The maximum size of the buffer.</span></span> <span data-ttu-id="cc813-160">既定値は 65536 (0x10000) バイトです。</span><span class="sxs-lookup"><span data-stu-id="cc813-160">The default value is 65536 (0x10000) bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-161">Windows Communication Foundation (WCF) のメッセージ伝送最適化メカニズム (MTOM) メッセージは、複数の MIME 部分で構成されます。</span><span class="sxs-lookup"><span data-stu-id="cc813-161">Message Transmission Optimization Mechanism (MTOM) messages in Windows Communication Foundation (WCF) can consist of multiple MIME parts.</span></span> <span data-ttu-id="cc813-162">メッセージには、常に、メッセージの Infoset 部分を格納する Multipurpose Internet Mail Extensions (MIME) パートが含まれます。</span><span class="sxs-lookup"><span data-stu-id="cc813-162">The message always includes a Multipurpose Internet Mail Extensions (MIME) part that contains the infoset portion of the message.</span></span> <span data-ttu-id="cc813-163">さらに、最適化されたバイナリ データがメッセージに含まれる場合は、バイナリ データを格納する追加の MIME パートを含むことができます。</span><span class="sxs-lookup"><span data-stu-id="cc813-163">In addition, if the message contains binary data that is optimized, it may contain additional MIME parts that contain binary data.</span></span> <span data-ttu-id="cc813-164">これらの MIME パートがメッセージ内で出現する順序に対する要件はありません。</span><span class="sxs-lookup"><span data-stu-id="cc813-164">There are no requirements imposed about what order these MIME parts must appear in the message.</span></span> <span data-ttu-id="cc813-165">MIME パートの出現順序が正しくない場合、メッセージ読み取り処理で MIME パートをバッファーに格納することが必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="cc813-165">The message reading process sometimes must buffer MIME parts if they appear out of order.</span></span> <span data-ttu-id="cc813-166">また、メッセージ読み取り処理では、各パートに関連する MIME ヘッダー情報のバッファー処理も必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="cc813-166">The message reading process also may have to buffer relevant MIME header information in each part.</span></span> <span data-ttu-id="cc813-167"><xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize%2A> クォータは、MTOM メッセージを読み込むときに割り当てることのできるメモリの量に上限を設けて、バッファーによる過剰なメモリの使用を制限するためのものです。</span><span class="sxs-lookup"><span data-stu-id="cc813-167">This <xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize%2A> quota is intended to cap the amount of memory that can be allocated when reading MTOM messages and so limit the excessive consumption of memory due to the buffering requirements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc813-168">値が 0 以下の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="cc813-168">The value set is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxReadPoolSize">
      <MemberSignature Language="C#" Value="public int MaxReadPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxReadPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxReadPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReadPoolSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxReadPoolSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReadPoolSize : int with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxReadPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(64)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc813-169">受信メッセージの処理に使用できるようにプールに割り当てる XML リーダーの最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cc813-169">Gets or sets the maximum number of XML readers that is allocated to a pool and is ready for use to process incoming messages.</span></span></summary>
        <value><span data-ttu-id="cc813-170">プールで保持するリーダーの最大数。</span><span class="sxs-lookup"><span data-stu-id="cc813-170">The maximum number of readers to be kept in the pool.</span></span> <span data-ttu-id="cc813-171">既定値は 64 リーダーです。</span><span class="sxs-lookup"><span data-stu-id="cc813-171">The default value is 64 readers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-172">この数を増やすとメモリの消費量が増えますが、受信メッセージ数の急激な増加にエンコーダーが対処できるようになります。これは、作成済みのリーダーをプールから使用でき、新しいリーダーを作成する必要がないためです。</span><span class="sxs-lookup"><span data-stu-id="cc813-172">Increasing this number increases memory consumption, but prepares the encoder to deal with sudden bursts of incoming messages because it is able to use readers from the pool that are already created instead of creating new ones.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc813-173">値が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="cc813-173">The value is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxWritePoolSize">
      <MemberSignature Language="C#" Value="public int MaxWritePoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWritePoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxWritePoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWritePoolSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWritePoolSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWritePoolSize : int with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxWritePoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(16)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc813-174">送信メッセージの処理に使用できるようにプールに割り当てる XML ライターの最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cc813-174">Gets or sets the maximum number of XML writers that is allocated to a pool and are ready for use to process outgoing messages.</span></span></summary>
        <value><span data-ttu-id="cc813-175">プールで保持するライターの最大数。</span><span class="sxs-lookup"><span data-stu-id="cc813-175">The maximum number of writers to be kept in the pool.</span></span> <span data-ttu-id="cc813-176">既定値は 16 ライターです。</span><span class="sxs-lookup"><span data-stu-id="cc813-176">The default value is 16 writers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-177">この数を増やすとメモリの消費が増えますが、送信メッセージ数の急激な増加にエンコーダーが対処できるようになります。これは、作成済みのライターをプールから使用でき、新しいライターを作成する必要がないためです。</span><span class="sxs-lookup"><span data-stu-id="cc813-177">Increasing this number increases memory consumption, but prepares the encoder to deal with sudden bursts of outgoing messages because it is able to use writers from the pool that are already created instead of creating new ones.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cc813-178">値が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="cc813-178">The value is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); void set(System::ServiceModel::Channels::MessageVersion ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc813-179">使用または予想される SOAP メッセージおよび WS-Addressing のバージョンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cc813-179">Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</span></span></summary>
        <value><span data-ttu-id="cc813-180">SOAP メッセージで使用される <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-180">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the SOAP message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-181">使用される既定の <xref:System.ServiceModel.Channels.MessageVersion> は、WS-Addressing 1.0 および SOAP1.2 のバージョンで構成されます。</span><span class="sxs-lookup"><span data-stu-id="cc813-181">The default <xref:System.ServiceModel.Channels.MessageVersion> used consists of the version of WS-Addressing 1.0 and SOAP1.2.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc813-182">値は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc813-182">The value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc813-183">値 <see cref="P:System.ServiceModel.Channels.MessageVersion.None" /> は使用できません。</span><span class="sxs-lookup"><span data-stu-id="cc813-183">The value <see cref="P:System.ServiceModel.Channels.MessageVersion.None" /> is not allowed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc813-184">このバインド要素を使用して設定されるエンドポイントにより処理可能な、XML メッセージの複雑さに対する制約を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cc813-184">Gets or sets constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</span></span></summary>
        <value><span data-ttu-id="cc813-185">交換される SOAP メッセージに対する複雑さの制約を指定する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-185">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged.</span></span> <span data-ttu-id="cc813-186">これらの制約の既定値については、後の「解説」で説明します。</span><span class="sxs-lookup"><span data-stu-id="cc813-186">The default values for these constraints are provided in the following Remarks section.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-187">複雑さの制約は、メッセージの複雑さを使用してエンドポイント処理リソースを停滞させるサービス拒否 (DOS) 型の攻撃から保護します。</span><span class="sxs-lookup"><span data-stu-id="cc813-187">The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span> <span data-ttu-id="cc813-188">これらの制約とその既定値を公開するプロパティを次に示します。</span><span class="sxs-lookup"><span data-stu-id="cc813-188">The properties that express these constraints and their default values are as follows:</span></span>  
  
-   <span data-ttu-id="cc813-189"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span><span class="sxs-lookup"><span data-stu-id="cc813-189"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span></span>  
  
-   <span data-ttu-id="cc813-190"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span><span class="sxs-lookup"><span data-stu-id="cc813-190"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span></span>  
  
-   <span data-ttu-id="cc813-191"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="cc813-191"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span></span>  
  
-   <span data-ttu-id="cc813-192"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span><span class="sxs-lookup"><span data-stu-id="cc813-192"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span></span>  
  
-   <span data-ttu-id="cc813-193"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="cc813-193"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span></span>  
  
 <span data-ttu-id="cc813-194">詳細については、<xref:System.Xml.XmlDictionaryReaderQuotas> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc813-194">For more information, see <xref:System.Xml.XmlDictionaryReaderQuotas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMessageVersion">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMessageVersion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMessageVersion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ShouldSerializeMessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMessageVersion () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMessageVersion();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeMessageVersion : unit -&gt; bool" Usage="mtomMessageEncodingBindingElement.ShouldSerializeMessageVersion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc813-195">SOAP メッセージ構造のバージョンをシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="cc813-195">Returns whether the SOAP message structure version should be serialized.</span></span></summary>
        <returns><span data-ttu-id="cc813-196">SOAP バージョンをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-196"><see langword="true" /> if the SOAP version should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="mtomMessageEncodingBindingElement.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc813-197">SOAP メッセージ構造の複雑さに対する制約をシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="cc813-197">Returns whether the constraints placed on the complexity of SOAP message structure should be serialized.</span></span></summary>
        <returns><span data-ttu-id="cc813-198">SOAP メッセージ制約をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-198"><see langword="true" /> if the SOAP message constraints should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWriteEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWriteEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWriteEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ShouldSerializeWriteEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWriteEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWriteEncoding();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWriteEncoding : unit -&gt; bool" Usage="mtomMessageEncodingBindingElement.ShouldSerializeWriteEncoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc813-199">メッセージの文字の書式設定に使用される <see cref="T:System.Text.Encoding" /> をシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="cc813-199">Returns whether the <see cref="T:System.Text.Encoding" /> that is used to format the message characters should be serialized.</span></span></summary>
        <returns><span data-ttu-id="cc813-200">メッセージの文字の書式設定の種類をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-200"><see langword="true" /> if the type of message character formatting should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext policyContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext policyContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, policyContext As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ policyContext) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit&#xA;override this.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="mtomMessageEncodingBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy (exporter, policyContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="policyContext" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="cc813-201">コントラクト情報をエクスポートする <see cref="T:System.ServiceModel.Description.WsdlExporter" /> 。</span><span class="sxs-lookup"><span data-stu-id="cc813-201">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span></span></param>
        <param name="policyContext"><span data-ttu-id="cc813-202">エクスポートされた WSDL 要素からコントラクトの説明へのマッピングを提供する <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc813-202">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</span></span></param>
        <summary><span data-ttu-id="cc813-203">WSDL の生成時に WSDL にポリシー アサーションを挿入し、MTOM エンコーディングが使用されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="cc813-203">Inserts a policy assertion into the WSDL, when it is generated, which indicates that an MTOM encoding is being used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-204">このポリシー アサーションは、このエンドポイントで MTOM の最適化を使用できることを示します。</span><span class="sxs-lookup"><span data-stu-id="cc813-204">This policy assertion indicates that MTOM optimization can be used at this endpoint.</span></span> <span data-ttu-id="cc813-205">テキスト形式または MTOM 形式のメッセージを受け入れる必要があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="cc813-205">It implies that messages either in the text or MTOM format must be accepted.</span></span> <span data-ttu-id="cc813-206">クライアントでは、このポリシー アサーションを解析し、MTOM でエンコードされたメッセージを受け入れる機能を有効にします。</span><span class="sxs-lookup"><span data-stu-id="cc813-206">On the client, this policy assertion is parsed and the ability to accept MTOM-encoded messages is enabled.</span></span> <span data-ttu-id="cc813-207">ポリシー アサーションは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cc813-207">The policy assertion is as follows.</span></span>  
  
```  
<wsoma:OptimizedMimeSerialization xmlns:wsoma="http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc813-208"><paramref name="policyContext" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc813-208"><paramref name="policyContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportContract">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext) Implements IWsdlExportExtension.ExportContract" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context) = System::ServiceModel::Description::IWsdlExportExtension::ExportContract;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IWsdlExportExtension.ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit&#xA;override this.System.ServiceModel.Description.IWsdlExportExtension.ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="mtomMessageEncodingBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportContract (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="cc813-209">コントラクト情報をエクスポートする <see cref="T:System.ServiceModel.Description.WsdlExporter" /> 。</span><span class="sxs-lookup"><span data-stu-id="cc813-209">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span></span></param>
        <param name="context"><span data-ttu-id="cc813-210">エクスポートされた WSDL 要素からコントラクトの説明へのマッピングを提供する <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc813-210">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</span></span></param>
        <summary><span data-ttu-id="cc813-211">MTOM 固有の情報用に WSDL コントラクトを変更します。</span><span class="sxs-lookup"><span data-stu-id="cc813-211">Modifies the WSDL contract for MTOM-specific information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-212">SOAP メッセージのバージョンを WSDL に格納するための <xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System%23ServiceModel%23Description%23IWsdlExportExtension%23ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29> メソッド。</span><span class="sxs-lookup"><span data-stu-id="cc813-212">The <xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System%23ServiceModel%23Description%23IWsdlExportExtension%23ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29> method puts the SOAP message version into the WSDL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext) Implements IWsdlExportExtension.ExportEndpoint" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context) = System::ServiceModel::Description::IWsdlExportExtension::ExportEndpoint;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit&#xA;override this.System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="mtomMessageEncodingBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="cc813-213">コントラクト情報をエクスポートする <see cref="T:System.ServiceModel.Description.WsdlExporter" /> 。</span><span class="sxs-lookup"><span data-stu-id="cc813-213">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span></span></param>
        <param name="context"><span data-ttu-id="cc813-214">エクスポートされた WSDL 要素からエンドポイントの説明へのマッピングを提供する <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc813-214">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the endpoint description.</span></span></param>
        <summary><span data-ttu-id="cc813-215">SOAP メッセージのバージョンを WSDL に格納します。</span><span class="sxs-lookup"><span data-stu-id="cc813-215">Puts the SOAP message version into the WSDL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-216">SOAP をサポートするすべてのカスタム メッセージ エンコーディング バインド要素は、SOAP メッセージのバージョンを WSDL に追加します。</span><span class="sxs-lookup"><span data-stu-id="cc813-216">Any custom message encoding binding element that supports SOAP is responsible for adding the SOAP message version into the WSDL.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc813-217"><paramref name="context" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc813-217"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding WriteEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding WriteEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.WriteEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ WriteEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.Channels.MtomMessageEncodingBindingElement.WriteEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc813-218">テキスト メッセージの文字の書式設定に使用されるエンコーディングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cc813-218">Gets or sets the encoding that is used to format the characters in the text message.</span></span></summary>
        <value><span data-ttu-id="cc813-219">テキスト メッセージの文字の書式設定に使用される <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="cc813-219">The <see cref="T:System.Text.Encoding" /> that is used to format the characters in the text message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc813-220">既定のテキスト エンコーディングは UTF-8 形式です。</span><span class="sxs-lookup"><span data-stu-id="cc813-220">The default text encoding is the UTF-8 format.</span></span> <span data-ttu-id="cc813-221">他に使用可能なエンコーディングには、Unicode や Big Endian Unicode などがあります。</span><span class="sxs-lookup"><span data-stu-id="cc813-221">Other possible encodings include, for example, Unicode and Big Endian Unicode.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc813-222">値は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc813-222">The value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc813-223">値が有効なテキスト エンコーディング値ではありません。</span><span class="sxs-lookup"><span data-stu-id="cc813-223">The value is not valid text encoding value.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
