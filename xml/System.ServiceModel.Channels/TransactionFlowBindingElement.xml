<Type Name="TransactionFlowBindingElement" FullName="System.ServiceModel.Channels.TransactionFlowBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8406d763da71fcaf65d5969486462be70174fb1" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78791035" /></Metadata><TypeSignature Language="C#" Value="public sealed class TransactionFlowBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransactionFlowBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransactionFlowBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionFlowBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type TransactionFlowBindingElement = class&#xA;    inherit BindingElement&#xA;    interface IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5c194-101">バインディングのトランザクション フロー サポートを指定する構成要素を表します。</span><span class="sxs-lookup"><span data-stu-id="5c194-101">Represents the configuration element that specifies transaction flow support for a binding.</span></span> <span data-ttu-id="5c194-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="5c194-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c194-103">この要素を使用すると、エンドポイントのバインディング設定で受信トランザクションフローを有効または無効にしたり、受信トランザクションに必要なプロトコル形式を指定したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="5c194-103">This element allows you to enable or disable incoming transaction flow in an endpoint's binding settings, as well as to specify the desired protocol format for incoming transactions.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5c194-104"><xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> プロトコルを使用してエンドポイント間でトランザクションをフローさせるとき、フロー先のエンドポイントが <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> 以外のプロトコルを使用して再びフローを試みると、トランザクション タイムアウトが失われる場合があります。</span><span class="sxs-lookup"><span data-stu-id="5c194-104">When using the <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> protocol to flow transactions from endpoint to endpoint, the transaction timeout can be lost if the destination endpoint attempts to flow again using any protocol other than <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A>.</span></span> <span data-ttu-id="5c194-105">その結果、<xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> ホップより後のすべてのダウンレベル ノードが、予想より遅くタイムアウトする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5c194-105">This can cause all down-level nodes after the <xref:System.ServiceModel.TransactionProtocol.OleTransactions%2A> hop to timeout later than expected.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/wcf/feature-details/enabling-transaction-flow.md"><span data-ttu-id="5c194-106">トランザクション フローの有効化</span><span class="sxs-lookup"><span data-stu-id="5c194-106">Enabling Transaction Flow</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c194-107"><see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5c194-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionFlowBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionFlowBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c194-108"><see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5c194-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionFlowBindingElement (System.ServiceModel.TransactionProtocol transactionProtocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.TransactionProtocol transactionProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.#ctor(System.ServiceModel.TransactionProtocol)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionProtocol As TransactionProtocol)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionFlowBindingElement(System::ServiceModel::TransactionProtocol ^ transactionProtocol);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.TransactionFlowBindingElement : System.ServiceModel.TransactionProtocol -&gt; System.ServiceModel.Channels.TransactionFlowBindingElement" Usage="new System.ServiceModel.Channels.TransactionFlowBindingElement transactionProtocol" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="transactionProtocol" Type="System.ServiceModel.TransactionProtocol" />
      </Parameters>
      <Docs>
        <param name="transactionProtocol"><span data-ttu-id="5c194-109">トランザクションをフローするために使用されるトランザクション プロトコルを含む <see cref="T:System.ServiceModel.TransactionProtocol" /> 値。</span><span class="sxs-lookup"><span data-stu-id="5c194-109">A <see cref="T:System.ServiceModel.TransactionProtocol" /> value that contains the transaction protocol used in flowing a transaction.</span></span></param>
        <summary><span data-ttu-id="5c194-110">トランザクションをフローさせるために使用するプロトコルを指定して、<see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5c194-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> class with the specified protocol that is used to flow a transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c194-111">使用するプロトコルの選択の詳細については、「[トランザクションフローの有効化](~/docs/framework/wcf/feature-details/enabling-transaction-flow.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5c194-111">For more information about choosing the protocol to be used, see [Enabling Transaction Flow](~/docs/framework/wcf/feature-details/enabling-transaction-flow.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWildcardAction">
      <MemberSignature Language="C#" Value="public bool AllowWildcardAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWildcardAction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransactionFlowBindingElement.AllowWildcardAction" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWildcardAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWildcardAction { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWildcardAction : bool with get, set" Usage="System.ServiceModel.Channels.TransactionFlowBindingElement.AllowWildcardAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c194-112">複製対象のトランザクション フロー バインド要素に対してワイルドカード アクションを許可するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5c194-112">Gets or sets whether wildcard action is set to be allowed on a transaction flow binding element to be cloned.</span></span></summary>
        <value><span data-ttu-id="5c194-113">ワイルドカード アクションを許可する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-113"><see langword="true" /> if wildcard action is allowed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="transactionFlowBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="5c194-114">チャネルの型。</span><span class="sxs-lookup"><span data-stu-id="5c194-114">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5c194-115">チャネル ファクトリを構築するために使用する必要がある <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-115">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to build the channel factory.</span></span></param>
        <summary><span data-ttu-id="5c194-116">バインド コンテキストから指定した種類のチャネルを生成するためのチャネル ファクトリを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5c194-116">Initializes a channel factory for producing channels of a specified type from a binding context.</span></span></summary>
        <returns><span data-ttu-id="5c194-117"><see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> から初期化される <paramref name="TChannel" /> 型の <paramref name="context" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-117">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c194-118">このメソッドは、指定した種類の送信チャネルを作成するために使用できるチャネル ファクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="5c194-118">This method creates a channel factory that can be used to make outgoing channels of the specified type.</span></span> <span data-ttu-id="5c194-119">このメソッドは、チャネル スタックを構築するときにインフラストラクチャによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5c194-119">This method is called by the infrastructure when building the channel stack.</span></span> <span data-ttu-id="5c194-120">コードでは、カスタム バインド要素を実装している場合にのみ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c194-120">You should use it in your code only when you implement a custom binding element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c194-121"><paramref name="context" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c194-121"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c194-122">指定した種類のチャネルのチャネル ファクトリは作成できません。</span><span class="sxs-lookup"><span data-stu-id="5c194-122">A channel factory for the specified channel type cannot be built.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="transactionFlowBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="5c194-123">チャネルの型。</span><span class="sxs-lookup"><span data-stu-id="5c194-123">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5c194-124">チャネル リスナーを構築するために使用する必要がある <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-124">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to build the channel listener.</span></span></param>
        <summary><span data-ttu-id="5c194-125">指定した種類のチャネルを受け入れるよう、バインド コンテキストからチャネル リスナーを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5c194-125">Initializes a channel listener for accepting channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="5c194-126"><see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> から初期化される <paramref name="TChannel" /> 型の <paramref name="context" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-126">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> initialized from <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c194-127">このメソッドは、このバインドのメッセージを受信するためのチャネル リスナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="5c194-127">This method creates a channel listener to receive messages for this binding.</span></span>  
  
 <span data-ttu-id="5c194-128">このメソッドは、チャネルを構築するときにインフラストラクチャによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5c194-128">This method is called by the infrastructure when building the channel.</span></span> <span data-ttu-id="5c194-129">コードでは、カスタム バインド要素を実装している場合にのみ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c194-129">You should use it in your code only when you implement a custom binding element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c194-130"><paramref name="context" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c194-130"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c194-131">指定した種類のチャネルのチャネル リスナーは作成できません。</span><span class="sxs-lookup"><span data-stu-id="5c194-131">A channel listener for the specified channel type cannot be built.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="transactionFlowBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="5c194-132">チャネルの型。</span><span class="sxs-lookup"><span data-stu-id="5c194-132">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5c194-133">チャネル ファクトリを構築できるかどうかの判断に使用する必要がある <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-133">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to determine if a channel factory can be built.</span></span></param>
        <summary><span data-ttu-id="5c194-134">指定した種類のチャネルを生成するためのチャネル ファクトリを、指定したバインド コンテキストが作成できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5c194-134">Returns a value that indicates whether the specified binding context can build a channel factory for producing channels of a specified type.</span></span></summary>
        <returns><span data-ttu-id="5c194-135">指定した型のチャネルに対するチャネル ファクトリを <see langword="true" /> から構築できる場合は <paramref name="context" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-135"><see langword="true" /> if a channel factory for the specified type of channel can be built from <paramref name="context" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c194-136">実際にファクトリを作成する前に、このメソッドを呼び出して、指定した `TChannel` 用に、`context` 型のチャネルのチャネル ファクトリを作成できることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c194-136">You should call this method to check that the channel factory for channels of type `TChannel` can be built for the specified `context`, before attempting to actually build the factory.</span></span> <span data-ttu-id="5c194-137">指定したチャネル型のチャネル ファクトリを作成できない場合、<xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory%2A> は例外をスローすることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5c194-137">Note that <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelFactory%2A> throws an exception if it cannot build a channel factory for the specified channel type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c194-138"><paramref name="context" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c194-138"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="transactionFlowBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="5c194-139">チャネルの型。</span><span class="sxs-lookup"><span data-stu-id="5c194-139">The channel type.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5c194-140">チャネル リスナーを構築できるかどうかの判断に使用する必要がある <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-140">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that should be used to determine if a channel listener can be built.</span></span></param>
        <summary><span data-ttu-id="5c194-141">指定した種類のチャネルを受け入れるチャネル リスナーを、指定したバインド コンテキストが作成できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5c194-141">Returns a value that indicates whether the specified binding context can build a channel listener for accepting channels of a specified type.</span></span></summary>
        <returns><span data-ttu-id="5c194-142">指定した型のチャネルに対するチャネル リスナーを <see langword="true" /> から構築できる場合は <paramref name="context" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-142"><see langword="true" /> if a channel listener for the specified type of channel can be built from <paramref name="context" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c194-143">実際にリスナーを作成する前に、このメソッドを呼び出して、指定した `TChannel` 用に、`context` 型のチャネルのチャネル リスナーを作成できることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c194-143">You should call this method to check that the channel listener for channels of type of `TChannel` can be built for the specified `context`, before attempting to actually build the listener.</span></span> <span data-ttu-id="5c194-144">指定したチャネル型のチャネル リスナーを作成できない場合、<xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener%2A> は例外をスローすることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5c194-144">Note that <xref:System.ServiceModel.Channels.TransactionFlowBindingElement.BuildChannelListener%2A> throws an exception if it cannot build a channel listener for the specified channel type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c194-145"><paramref name="context" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c194-145"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="transactionFlowBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c194-146">この要素の複製を作成します。</span><span class="sxs-lookup"><span data-stu-id="5c194-146">Creates a duplicate of this element.</span></span></summary>
        <returns><span data-ttu-id="5c194-147">この要素の複製である <see cref="T:System.ServiceModel.Channels.BindingElement" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-147">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> that is a duplicate of this element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c194-148">このメソッドは、このバインド要素のディープ クローンを作成します。</span><span class="sxs-lookup"><span data-stu-id="5c194-148">This method creates a deep clone of this binding element.</span></span> <span data-ttu-id="5c194-149">オブジェクトのディープ クローンでは、オブジェクトのコピーと、このオブジェクトによって直接的または間接的に参照されるすべての対象のコピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5c194-149">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="5c194-150">(これは、オブジェクトグラフ全体のコピーとも呼ばれます)。一方、オブジェクトのシャロークローンは、オブジェクトのコピーにすぎません。</span><span class="sxs-lookup"><span data-stu-id="5c194-150">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="5c194-151">オブジェクトが他のオブジェクトへの参照を含んでいる場合、シャロー コピーでは、参照されるオブジェクトのコピーは作成されません。代わりに元のオブジェクトへの参照だけがコピーされます。</span><span class="sxs-lookup"><span data-stu-id="5c194-151">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="transactionFlowBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5c194-152">メソッドが照会している、型指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5c194-152">The typed object for which the method is querying.</span></span></typeparam>
        <param name="context"><span data-ttu-id="5c194-153"><see cref="T:System.ServiceModel.Channels.BindingContext" /></span><span class="sxs-lookup"><span data-stu-id="5c194-153">The <see cref="T:System.ServiceModel.Channels.BindingContext" /></span></span>  
  
<span data-ttu-id="5c194-154">要求されるプロパティを取得するには、これを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c194-154">that should be used to get the requested property.</span></span></param>
        <summary><span data-ttu-id="5c194-155">バインド スタックの適切な層から、要求のあった型指定されたオブジェクト (ある場合) を取得します。</span><span class="sxs-lookup"><span data-stu-id="5c194-155">Gets the typed object requested, if present, from the appropriate layer in the binding stack.</span></span></summary>
        <returns><span data-ttu-id="5c194-156">要求される型指定されたオブジェクト <paramref name="T" /> がある場合はそのオブジェクト。ない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-156">The typed object <paramref name="T" /> requested if it is present; <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c194-157">このメソッドを使用すると、バインディング要素スタックから機能、要件、およびパラメーターを取得できます。</span><span class="sxs-lookup"><span data-stu-id="5c194-157">You can use this method to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="5c194-158">バインド要素が、要求されたオブジェクトを返せる場合は、オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5c194-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="5c194-159">それ以外の場合は、スタック内の次のバインド要素に呼び出しを代行させます。</span><span class="sxs-lookup"><span data-stu-id="5c194-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="5c194-160">スタックの最下位に達しても要求されたオブジェクトをサポートするバインド要素がない場合、このメソッドは `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="5c194-160">If it gets to the bottom of the stack and no binding element supported the requested object, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c194-161"><paramref name="context" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c194-161"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionProtocol">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.ShouldSerializeTransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionProtocol () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionProtocol();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionProtocol : unit -&gt; bool" Usage="transactionFlowBindingElement.ShouldSerializeTransactionProtocol " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c194-162">トランザクション フローで使用されるトランザクション プロトコルをシリアル化できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5c194-162">Returns whether the transaction protocol used for transaction flow can be serialized.</span></span></summary>
        <returns><span data-ttu-id="5c194-163">トランザクション プロトコルをシリアル化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-163"><see langword="true" /> if the transaction protocol can be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransactionFlowBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit&#xA;override this.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="transactionFlowBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><span data-ttu-id="5c194-164">このバインド要素のポリシーをエクスポートするときに使用する <see cref="T:System.ServiceModel.Description.MetadataExporter" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-164">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> to be used when exporting the policy of this binding element.</span></span></param>
        <param name="context"><span data-ttu-id="5c194-165">このバインド要素のポリシーをエクスポートするときに使用する <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-165">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> to be used when exporting the policy of this binding element.</span></span></param>
        <summary><span data-ttu-id="5c194-166">バインディングに関するカスタム ポリシー アサーションをエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="5c194-166">Exports a custom policy assertion about the binding.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c194-167"><paramref name="context" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5c194-167"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.TransactionProtocol TransactionProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransactionFlowBindingElement.TransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionProtocol As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransactionProtocol ^ TransactionProtocol { System::ServiceModel::TransactionProtocol ^ get(); void set(System::ServiceModel::TransactionProtocol ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionProtocol : System.ServiceModel.TransactionProtocol with get, set" Usage="System.ServiceModel.Channels.TransactionFlowBindingElement.TransactionProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c194-168">トランザクションをフローするために使用されるトランザクション プロトコルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5c194-168">Gets or sets the transaction protocol used in flowing a transaction.</span></span></summary>
        <value><span data-ttu-id="5c194-169">トランザクション フローで使用されるトランザクション プロトコルを指定する <see cref="T:System.ServiceModel.TransactionProtocol" />。</span><span class="sxs-lookup"><span data-stu-id="5c194-169">A <see cref="T:System.ServiceModel.TransactionProtocol" /> that specifies the transaction protocol to be used for transaction flow.</span></span> <span data-ttu-id="5c194-170">既定では、 <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />です。</span><span class="sxs-lookup"><span data-stu-id="5c194-170">The default is <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c194-171">使用するプロトコルの選択の詳細については、「[トランザクションフローの有効化](~/docs/framework/wcf/feature-details/enabling-transaction-flow.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5c194-171">For more information about choosing the protocol to be used, see [Enabling Transaction Flow](~/docs/framework/wcf/feature-details/enabling-transaction-flow.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
