<Type Name="IChannelFactory&lt;TChannel&gt;" FullName="System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41575ef9eca82b8f0cdfffd52029376147f95a4e" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73350848" /></Metadata><TypeSignature Language="C#" Value="public interface IChannelFactory&lt;TChannel&gt; : System.ServiceModel.Channels.IChannelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelFactory`1&lt;TChannel&gt; implements class System.ServiceModel.Channels.IChannelFactory, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelFactory(Of TChannel)&#xA;Implements IChannelFactory" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA;public interface class IChannelFactory : System::ServiceModel::Channels::IChannelFactory" />
  <TypeSignature Language="F#" Value="type IChannelFactory&lt;'Channel&gt; = interface&#xA;    interface IChannelFactory&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TChannel"><span data-ttu-id="9ec26-101">チャネル ファクトリが作成するチャネルの型。</span><span class="sxs-lookup"><span data-stu-id="9ec26-101">The type of channel that the channel factory creates.</span></span></typeparam>
    <summary><span data-ttu-id="9ec26-102">種類に固有のチャネルを作成するためにチャネル ファクトリが実装する必要があるインターフェイスを定義します。</span><span class="sxs-lookup"><span data-stu-id="9ec26-102">Defines the interface that must be implemented by channel factories that create type-specific channels.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ec26-103"><xref:System.ServiceModel.Channels.IChannelFactory%601> コントラクトを実装することで、その都度チャネルの種類を指定することなく、特定の種類の複数のチャネルを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="9ec26-103">Implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> contract allows users to create multiple channels of a given type without having to specify the channel type each time.</span></span> <span data-ttu-id="9ec26-104">つまり、<xref:System.ServiceModel.Channels.IChannelFactory%601> インターフェイスを実装するチャネル ファクトリのジェネリック パラメーターとしてチャネルの種類を定義することは、<xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A> のメソッドに種類を渡す必要がないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="9ec26-104">In other words, defining the channel type as a generic parameter for the channel factory implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A> methods.</span></span> <span data-ttu-id="9ec26-105">異なる種類のチャネルを作成する必要がある場合は、必要なチャネルの種類ごとに別のチャネル ファクトリを作成できます。</span><span class="sxs-lookup"><span data-stu-id="9ec26-105">If users want to create different channel types, they can create additional channel factories for each type of channel required.</span></span> <span data-ttu-id="9ec26-106"><xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> のオーバーロードにより、メッセージが最初に送信されるアドレスと、最終的な宛先を区別することができます。</span><span class="sxs-lookup"><span data-stu-id="9ec26-106">The <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload allows you to distinguish the address to which the message is initially sent from the ultimate destination.</span></span> <span data-ttu-id="9ec26-107">アドレス指定の詳細については、[アドレス](~/docs/framework/wcf/feature-details/endpoint-addresses.md)に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9ec26-107">For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9ec26-108">指定したエンドポイント アドレスへの指定した種類のチャネルを作成します。</span><span class="sxs-lookup"><span data-stu-id="9ec26-108">Creates a channel of a specified type to a specified endpoint address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ec26-109">メッセージの最初の送信先アドレスと最後の宛先アドレスを区別することが手動ルーティングで必要な場合、<xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="9ec26-109">Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing.</span></span> <span data-ttu-id="9ec26-110">チャネル ファクトリを閉じると、そのチャネル ファクトリで作成されたチャネルも閉じられることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="9ec26-110">Note that any channels created by this channel factory are closed when the channel factory is closed.</span></span> <span data-ttu-id="9ec26-111">アドレス指定の詳細については、[アドレス](~/docs/framework/wcf/feature-details/endpoint-addresses.md)に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9ec26-111">For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.EndpointAddress to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel (to As EndpointAddress) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannel(System::ServiceModel::EndpointAddress ^ to);" />
      <MemberSignature Language="F#" Value="abstract member CreateChannel : System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="iChannelFactory.CreateChannel to" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="to"><span data-ttu-id="9ec26-112">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="9ec26-112">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <summary><span data-ttu-id="9ec26-113">指定したエンドポイント アドレスへの指定した種類のチャネルを作成します。</span><span class="sxs-lookup"><span data-stu-id="9ec26-113">Creates a channel of a specified type to a specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="9ec26-114">指定したエンドポイント アドレスへの <paramref name="TChannel" /> 型のチャネル。</span><span class="sxs-lookup"><span data-stu-id="9ec26-114">A channel of type <paramref name="TChannel" /> to the specified endpoint address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ec26-115">メッセージの最初の送信先アドレスと最後の宛先アドレスを区別することが手動ルーティングで必要な場合、<xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="9ec26-115">Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing.</span></span> <span data-ttu-id="9ec26-116">チャネル ファクトリを閉じると、そのチャネル ファクトリで作成されたチャネルも閉じられることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="9ec26-116">Note that any channels created by this channel factory are closed when the channel factory is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.EndpointAddress to, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress to, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel (to As EndpointAddress, via As Uri) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannel(System::ServiceModel::EndpointAddress ^ to, Uri ^ via);" />
      <MemberSignature Language="F#" Value="abstract member CreateChannel : System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="iChannelFactory.CreateChannel (to, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="to"><span data-ttu-id="9ec26-117">サービスの場所を提供する <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="9ec26-117">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span></span></param>
        <param name="via"><span data-ttu-id="9ec26-118">メッセージの送信先のトランスポート アドレスを格納している <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="9ec26-118">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</span></span></param>
        <summary><span data-ttu-id="9ec26-119">チャネルの種類と、メッセージの送信先のエンドポイント アドレスとトランスポート アドレスを指定して、チャネルを作成します。</span><span class="sxs-lookup"><span data-stu-id="9ec26-119">Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.</span></span></summary>
        <returns><span data-ttu-id="9ec26-120">指定したエンドポイント アドレスとトランスポート アドレスへの <paramref name="TChannel" /> 型のチャネル。</span><span class="sxs-lookup"><span data-stu-id="9ec26-120">A channel of type <paramref name="TChannel" /> to the specified endpoint address and transport address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ec26-121">`via` によって指定されるトランスポート アドレスはメッセージが最初に送信される場所で、この後にメッセージは、`to` によって指定された、サービスが存在する別のリモート アドレスに送信されます。</span><span class="sxs-lookup"><span data-stu-id="9ec26-121">The transport address specified by the `via` is the location to which a message should initially be sent on its way to some other remote address specified by the `to` at which the service is located.</span></span> <span data-ttu-id="9ec26-122">インターネットの場合、`via` URI は、サービスの最終的な <xref:System.ServiceModel.EndpointAddress.Uri%2A> アドレスの `to` と同じになります。</span><span class="sxs-lookup"><span data-stu-id="9ec26-122">In most Internet scenarios, the `via` URI is the same as the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the final `to` address of the service.</span></span> <span data-ttu-id="9ec26-123">この 2 つのアドレスを区別するのは、ある種の手動ルーティングを行う必要がある場合のみです。</span><span class="sxs-lookup"><span data-stu-id="9ec26-123">You only distinguish between these two addresses when you want to do some kind of manual routing.</span></span> <span data-ttu-id="9ec26-124">チャネル ファクトリを閉じると、そのチャネル ファクトリで作成されたチャネルも閉じられることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="9ec26-124">Note that any channels created by this channel factory are closed when the channel factory is closed.</span></span> <span data-ttu-id="9ec26-125">アドレス指定の詳細については、[アドレス](~/docs/framework/wcf/feature-details/endpoint-addresses.md)に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9ec26-125">For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
