<Type Name="TcpTransportBindingElement" FullName="System.ServiceModel.Channels.TcpTransportBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4e9922dbb1aee3291d4cbe710f54e2470f19e5f" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82473258" /></Metadata><TypeSignature Language="C#" Value="public class TcpTransportBindingElement : System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpTransportBindingElement extends System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.TcpTransportBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpTransportBindingElement&#xA;Inherits ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpTransportBindingElement : System::ServiceModel::Channels::ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="F#" Value="type TcpTransportBindingElement = class&#xA;    inherit ConnectionOrientedTransportBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.NetTcp" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.NetTcp" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.NetTcp" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.NetTcp" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ce4bf-101">TCP トランスポートのバインド要素を表します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-101">Represents the binding element for the TCP transport.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-102">このトランスポートでは、"`net.tcp`://`hostname`:`port`/`path`" の形式の Uri を使用します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-102">This transport uses URIs of the form "`net.tcp`://`hostname`:`port`/`path`".</span></span> <span data-ttu-id="ce4bf-103">他の URI コンポーネントは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-103">Other URI components are optional.</span></span>  
  
 <span data-ttu-id="ce4bf-104"><xref:System.ServiceModel.Channels.TcpTransportBindingElement> クラスを基にして、TCP トランスポート プロトコルを実装するカスタム バインドを作成します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-104">The <xref:System.ServiceModel.Channels.TcpTransportBindingElement> class is the starting point for creating a custom binding that implements the TCP transport protocol.</span></span> <span data-ttu-id="ce4bf-105">このトランスポートは、WCF 通信用に最適化されています。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-105">This transport is optimized for WCF communication.</span></span>  
  
 <span data-ttu-id="ce4bf-106">WCF サービスモデルは、このクラスを使用して、<xref:System.ServiceModel.Channels.IChannelFactory> および <xref:System.ServiceModel.Channels.IChannelListener> インターフェイスを実装するファクトリオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-106">The WCF service model uses this class to create factory objects that implement the <xref:System.ServiceModel.Channels.IChannelFactory> and <xref:System.ServiceModel.Channels.IChannelListener> interfaces.</span></span> <span data-ttu-id="ce4bf-107">これらのファクトリ オブジェクトは、TCP プロトコルを使用して SOAP メッセージを送信するチャネルを作成して受け入れます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-107">These factory objects, in turn, create and accept the channels that transmit SOAP messages using the TCP protocol.</span></span>  
  
 <span data-ttu-id="ce4bf-108">このクラスが作成するファクトリを構成するには、<xref:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled%2A> や <xref:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout%2A> などのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-108">You configure the factories that this class creates by setting its properties, such as <xref:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled%2A> and <xref:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout%2A>.</span></span>  
  
 <span data-ttu-id="ce4bf-109">また、基本クラス <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement> では、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize%2A>、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A>、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize%2A> などのプロパティも設定できます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-109">You can also set properties on the base class <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>, such as <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize%2A>, <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A>, and <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize%2A>.</span></span> <span data-ttu-id="ce4bf-110">プロパティの全一覧については、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-110">For a complete list of properties, see <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>.</span></span>  
  
 <span data-ttu-id="ce4bf-111">最後に、基本クラス <xref:System.ServiceModel.Channels.TransportBindingElement> では、<xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> や <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A> などのプロパティを設定できます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-111">Finally, you can set properties on the base class <xref:System.ServiceModel.Channels.TransportBindingElement>, such as <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> and <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>.</span></span> <span data-ttu-id="ce4bf-112">プロパティの全一覧については、<xref:System.ServiceModel.Channels.TransportBindingElement> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-112">For a complete list of properties, see <xref:System.ServiceModel.Channels.TransportBindingElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce4bf-113">このクラスを使用する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-113">The following example shows how to use this class.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce4bf-114"><see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpTransportBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce4bf-115"><see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce4bf-116">次の例では、<xref:System.ServiceModel.Channels.TcpTransportBindingElement> クラスの新しいインスタンスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-116">The following example shows how to create a new instance of the <xref:System.ServiceModel.Channels.TcpTransportBindingElement> class.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TcpTransportBindingElement (System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As TcpTransportBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TcpTransportBindingElement(System::ServiceModel::Channels::TcpTransportBindingElement ^ elementToBeCloned);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.TcpTransportBindingElement : System.ServiceModel.Channels.TcpTransportBindingElement -&gt; System.ServiceModel.Channels.TcpTransportBindingElement" Usage="new System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.TcpTransportBindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned"><span data-ttu-id="ce4bf-117"><see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-117">An instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span></span></param>
        <summary><span data-ttu-id="ce4bf-118"><see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-119">このメソッドは、バインド要素の複製に使用されるコピー コンストラクターであり、派生クラスが <xref:System.ServiceModel.Channels.TcpTransportBindingElement.Clone%2A> を実装できるように公開されます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-119">This method is a copy constructor used to clone the binding element, and is exposed so that derived classes can implement <xref:System.ServiceModel.Channels.TcpTransportBindingElement.Clone%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="tcpTransportBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="ce4bf-120">チャネル ファクトリの種類。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-120">Type of channel factory.</span></span></typeparam>
        <param name="context"><span data-ttu-id="ce4bf-121">バインド、動作、コントラクト、およびチャネル ファクトリの作成に必要なその他の情報を記述する <see cref="T:System.ServiceModel.Channels.BindingContext" /> メンバー。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-121"><see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</span></span></param>
        <summary><span data-ttu-id="ce4bf-122">チャネルを作成するために使用できるチャネル ファクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-122">Creates a channel factory that can be used to create a channel.</span></span></summary>
        <returns><span data-ttu-id="ce4bf-123">指定した種類のチャネル ファクトリを返します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-123">Returns a channel factory of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-124">このメソッドを使用すると、TCP バインディング要素の構成に基づいてメッセージを送信するためのチャネル ファクトリを作成できます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-124">This method can be used to create a channel factory for sending messages based on the configuration of the TCP binding element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce4bf-125">次の例では、チャネルを作成するために使用できるチャネル ファクトリを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-125">The following example shows how to create a channel factory that can be used to create a channel.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce4bf-126"><paramref name="context" /> として <see langword="null" /> を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-126"><paramref name="context" /> cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce4bf-127">無効な引数が渡されました。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-127">An invalid argument was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="tcpTransportBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="ce4bf-128">チャネル リスナーの種類。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-128">Type of channel listener.</span></span></typeparam>
        <param name="context"><span data-ttu-id="ce4bf-129">バインド、動作、コントラクト、およびチャネル ファクトリの作成に必要なその他の情報を記述する <see cref="T:System.ServiceModel.Channels.BindingContext" /> メンバー。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-129"><see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</span></span></param>
        <summary><span data-ttu-id="ce4bf-130">指定した種類のチャネル リスナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-130">Creates a channel listener of the specified type.</span></span></summary>
        <returns><span data-ttu-id="ce4bf-131">指定した種類のチャネル リスナーを返します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-131">Returns a channel listener of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-132">このメソッドを使用すると、TCP バインディング要素の構成に基づいてメッセージを受信するためのチャネル リスナーを作成できます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-132">This method can be used to create a channel listener for receiving messages based on the configuration of the TCP binding element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce4bf-133">次の例では、指定した種類のチャネル リスナーを返す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-133">The following example shows how to return a channel listener of the specified type.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce4bf-134"><paramref name="context" /> として <see langword="null" /> を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-134"><paramref name="context" /> cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce4bf-135">無効な引数が渡されました。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-135">An invalid argument was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="tcpTransportBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce4bf-136">現在のバインド要素のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-136">Creates a copy of the current binding element.</span></span></summary>
        <returns><span data-ttu-id="ce4bf-137">現在のバインド要素のコピーを返します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-137">Returns a copy of the current binding element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce4bf-138">次の例では、現在のバインド要素のコピーを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-138">The following example shows how to create a copy of the current binding element.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionPoolSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.TcpConnectionPoolSettings ConnectionPoolSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.TcpConnectionPoolSettings ConnectionPoolSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionPoolSettings As TcpConnectionPoolSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::TcpConnectionPoolSettings ^ ConnectionPoolSettings { System::ServiceModel::Channels::TcpConnectionPoolSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionPoolSettings : System.ServiceModel.Channels.TcpConnectionPoolSettings" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TcpConnectionPoolSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce4bf-139">接続プール設定のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-139">Gets a collection of connection pool settings.</span></span></summary>
        <value><span data-ttu-id="ce4bf-140">接続プールに関連するさまざまなプロパティを格納する <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-140">A <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" /> object that contains various properties related to connection pooling.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce4bf-141">次の例では、接続プール設定のコレクションを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-141">The following example shows how to get a collection of connection pool settings.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce4bf-142">現在の拡張保護ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-142">Gets or sets the current extended protection policy.</span></span></summary>
        <value><span data-ttu-id="ce4bf-143">拡張保護ポリシー。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-143">The extended protection policy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-144">拡張保護ポリシーは、受信クライアント接続を検証するためにサーバーによって使用されるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-144">An extended protection policy is an object used by the server to validate incoming client connections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="tcpTransportBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce4bf-145">取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-145">The object to get.</span></span></typeparam>
        <param name="context"><span data-ttu-id="ce4bf-146"><see cref="T:System.ServiceModel.Channels.BindingContext" /> です。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-146">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span></span></param>
        <summary><span data-ttu-id="ce4bf-147"><see cref="T:System.ServiceModel.Channels.BindingContext" /> から指定したオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-147">Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span></span></summary>
        <returns><span data-ttu-id="ce4bf-148"><see cref="T:System.ServiceModel.Channels.BindingContext" /> から取得した指定オブジェクト。オブジェクトが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-148">The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or <see langword="null" /> if the object is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-149">このメソッドは、基本クラスまたはそのクラスの先祖から、指定したオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-149">This method gets the specified object from the base class, or from one of that class's ancestors.</span></span> <span data-ttu-id="ce4bf-150">返されるオブジェクトは、通常、プロパティのコレクションです。たとえば、<xref:System.ServiceModel.Channels.ISecurityCapabilities> を実装するオブジェクトなどです。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-150">The object returned is usually a collection of properties, for example, an object that implements <xref:System.ServiceModel.Channels.ISecurityCapabilities>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce4bf-151">次の例では、<xref:System.ServiceModel.Channels.BindingContext> から指定したオブジェクトを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-151">The following example shows how to get a specified object from the <xref:System.ServiceModel.Channels.BindingContext>.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenBacklog">
      <MemberSignature Language="C#" Value="public int ListenBacklog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListenBacklog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenBacklog As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListenBacklog { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ListenBacklog : int with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce4bf-152">保留可能なキュー内の接続要求の最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-152">Gets or sets the maximum number of queued connection requests that can be pending.</span></span></summary>
        <value><span data-ttu-id="ce4bf-153">保留可能なキュー内の接続要求の最大数を返します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-153">Returns the maximum number of queued connection requests that can be pending.</span></span> <span data-ttu-id="ce4bf-154">既定値は 10 です。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-154">The default is 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-155"><xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> は、キューに置かれた "受入保留" 要求の数を記述するソケット レベルのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-155"><xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of "pending accept" requests to be queued.</span></span> <span data-ttu-id="ce4bf-156">基になるソケット キューでコンカレント接続の最大数を超えないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-156">Ensure that the underlying socket queue is not exceeded by the maximum number of concurrent connections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce4bf-157">次の例では、ListenBacklog の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-157">The following example shows how to get the ListenBacklog value.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce4bf-158">値は 1 未満には設定できません。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-158">The value cannot be less than one.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PortSharingEnabled">
      <MemberSignature Language="C#" Value="public bool PortSharingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PortSharingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PortSharingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PortSharingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PortSharingEnabled : bool with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce4bf-159">TCP ポート共有をこの接続で有効にするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-159">Gets or sets a value that indicates whether TCP port sharing is enabled for this connection.</span></span></summary>
        <value><span data-ttu-id="ce4bf-160">TCP ポート共有が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-160"><see langword="true" /> if TCP port sharing is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ce4bf-161">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-162">この設定を使用するには、[スタートアップの種類] を [手動] または [自動] に変更して、WCF TCP ポート共有サービスを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-162">Using this setting requires enabling the WCF TCP Port Sharing Service by changing its Startup Type to Manual or Automatic.</span></span>  
  
 <span data-ttu-id="ce4bf-163">TCP リスナーとその起動方法については、「 [Net.tcp ポート共有](~/docs/framework/wcf/feature-details/net-tcp-port-sharing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-163">For information about the TCP Listener and how to start it, see [Net.TCP Port Sharing](~/docs/framework/wcf/feature-details/net-tcp-port-sharing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce4bf-164">次の例では、TCP ポート共有が有効かどうかを示す値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-164">The following example shows how to get a value that indicates whether TCP port sharing is enabled.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce4bf-165">トランスポートの URI スキームを返します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-165">Returns the URI scheme for the transport.</span></span></summary>
        <value><span data-ttu-id="ce4bf-166">"net.tcp" であるトランスポートの URI スキームを返します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-166">Returns the URI scheme for the transport, which is "net.tcp".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-167">このプロパティは、ベース アドレスに対するバインドを検証するために提供されます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-167">The property is provided for validating bindings against base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce4bf-168">次の例では、トランスポートの URI スキームを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-168">The following example shows how to get the URI scheme for the transport.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeExtendedProtectionPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeExtendedProtectionPolicy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeExtendedProtectionPolicy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeExtendedProtectionPolicy();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeExtendedProtectionPolicy : unit -&gt; bool" Usage="tcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce4bf-169">拡張保護ポリシーを XAML シリアル化できないことを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-169">Returns an indication that the extended protection policy is not XAML serializable.</span></span></summary>
        <returns><span data-ttu-id="ce4bf-170"><see langword="false" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-170">Returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-171">拡張保護ポリシーは、受信クライアント接続を検証するためにサーバーによって使用されるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-171">An extended protection policy is an object used by the server to validate incoming client connections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeListenBacklog">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeListenBacklog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeListenBacklog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeListenBacklog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeListenBacklog () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeListenBacklog();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeListenBacklog : unit -&gt; bool" Usage="tcpTransportBindingElement.ShouldSerializeListenBacklog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce4bf-172">TCP トランスポート バインディング要素でリッスン バックログをシリアル化する必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-172">Indicates whether the TCP transport binding element should serialize listen backlog.</span></span></summary>
        <returns><span data-ttu-id="ce4bf-173">TCP トランスポート バインディング要素でリッスン バックログをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-173"><see langword="true" /> if the TCP transport binding element should serialize listen backlog; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TeredoEnabled">
      <MemberSignature Language="C#" Value="public bool TeredoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TeredoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property TeredoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TeredoEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TeredoEnabled : bool with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce4bf-174">Teredo (ファイアウォールの内側にあるクライアントをアドレス指定するためのテクノロジ) が有効であるかどうかを指定するブール値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-174">Gets or sets a Boolean that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.</span></span></summary>
        <value><span data-ttu-id="ce4bf-175">Teredo が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-175"><see langword="true" /> if Teredo is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ce4bf-176">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-176">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce4bf-177">このプロパティは、基になる TCP ソケットで Tredo を有効にします。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-177">This property enables Teredo for the underlying TCP socket.</span></span> <span data-ttu-id="ce4bf-178">詳細については、「 [Teredo の概要](https://go.microsoft.com/fwlink/?LinkId=96649)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-178">For more information, see [Teredo Overview](https://go.microsoft.com/fwlink/?LinkId=96649).</span></span>  
  
 <span data-ttu-id="ce4bf-179">このプロパティは [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] および [!INCLUDE[ws2003](~/includes/ws2003-md.md)] にのみ適用できます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-179">This property is applicable only on [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] and [!INCLUDE[ws2003](~/includes/ws2003-md.md)].</span></span> [!INCLUDE[wv](~/includes/wv-md.md)] <span data-ttu-id="ce4bf-180">には、Teredo 用のコンピューター全体の構成オプションがあるので、[!INCLUDE[wv](~/includes/wv-md.md)] を実行する場合は、このプロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-180">has a machine-wide configuration option for Teredo, so when running [!INCLUDE[wv](~/includes/wv-md.md)], this property is ignored.</span></span> <span data-ttu-id="ce4bf-181">Teredo の場合、クライアント コンピューターおよびサービス コンピューターの両方に Microsoft IPv6 スタックをインストールし、Teredo 用に正しく設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-181">Teredo requires that the client and service machines both have the Microsoft IPv6 stack installed and correctly configured for Teredo usage.</span></span> <span data-ttu-id="ce4bf-182">Teredo の構成の詳細については、「 [teredo の概要](https://go.microsoft.com/fwlink/?LinkId=96649)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-182">For more information about configuring Teredo, see [Teredo Overview](https://go.microsoft.com/fwlink/?LinkId=96649).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="ce4bf-183">次の例では、基になる TCP ソケットで Teredo を有効にする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ce4bf-183">The following example shows how to enable Teredo for the underlying TCP socket.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
