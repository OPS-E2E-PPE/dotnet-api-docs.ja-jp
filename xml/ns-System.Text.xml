<Namespace Name="System.Text">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e9d84443ac35fb686445ce5dca4bbc77cdbab9a" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83976070" /></Metadata><Docs>
    <summary><see cref="N:System.Text" /> 名前空間には、ASCII および Unicode 文字エンコーディングを表すクラスが含まれます。バイトのブロック間で文字ブロックを変換するための抽象型基本クラス、<see cref="T:System.String" /> の中間インスタンスを作成せずに <see cref="T:System.String" /> オブジェクトを操作および書式設定するヘルパー クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エンコーディングクラスは、主に、異なるエンコーディングまたはコードページと Unicode エンコーディングの間で変換を行うことを目的としています。 <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> (UTF-16) エンコーディングは、.NET Framework によって内部的に使用されます。また、多くの場合、コンピューターとカルチャ間での移植性を確保するために、文字データを格納するために <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> エンコーディングが使用されます。  
  
 <xref:System.Text.Encoding> から派生したクラスを使用すると、フォールバックストラテジを選択できます。これにより、バイトシーケンスにエンコードできない文字または文字にデコードできないバイトを処理する方法が決定されます。 次のいずれかを選択できます。  
  
-   例外フォールバック。 一部のクラスコンストラクターで使用できる `throwonerror` フラグを使用するか、<xref:System.Text.EncoderExceptionFallback> クラスと <xref:System.Text.DecoderExceptionFallback> クラスを使用することにより、データエラーに対して例外をスローすることを選択できます。 データストリームの整合性に不安がある場合は、例外をスローすることをお勧めします。  
  
-   置換フォールバック。 <xref:System.Text.EncoderFallback> クラスと <xref:System.Text.DecoderFallback> クラスを使用すると、文字を "?" または Unicode の置換文字 (U + FFFD) にサイレントに変更できます。  
  
-   最適フォールバック。 このオプションは、あるエンコーディングの文字を別のエンコーディングの文字にマップします。 ベストフィットフォールバックは、データの損失や混乱を招く可能性があり、単純な "?" 文字の置換よりも低速であるため、推奨されません。 ただし、ANSI コードページの場合は、最適な動作が既定値になります。  
  
 <xref:System.Text.StringBuilder> クラスは、1つの文字列に対して広範な操作を実行する操作向けに設計されています。 <xref:System.String> クラスとは異なり、<xref:System.Text.StringBuilder> クラスは変更可能であり、文字列を連結または削除するときにパフォーマンスが向上します。  
  
 <xref:System.Text?displayProperty=nameWithType>の詳細については、 [.NET Framework の「Character Encoding](/dotnet/standard/base-types/character-encoding) 」を参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>
