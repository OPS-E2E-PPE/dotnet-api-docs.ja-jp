<Type Name="CodeGenerator" FullName="System.CodeDom.Compiler.CodeGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="61c7e722108cb23f87de9025147444ac4cba9038" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75153526" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeGenerator : System.CodeDom.Compiler.ICodeGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeGenerator extends System.Object implements class System.CodeDom.Compiler.ICodeGenerator" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeGenerator&#xA;Implements ICodeGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeGenerator abstract : System::CodeDom::Compiler::ICodeGenerator" />
  <TypeSignature Language="F#" Value="type CodeGenerator = class&#xA;    interface ICodeGenerator" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.CodeDom.Compiler.ICodeGenerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="088e4-101"><see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> インターフェイスの実装例を提供します。</span><span class="sxs-lookup"><span data-stu-id="088e4-101">Provides an example implementation of the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> interface.</span></span> <span data-ttu-id="088e4-102">このクラスは抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="088e4-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-103">これは、コードジェネレーターが派生するのに便利な基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="088e4-103">This is a useful base class for code generators to derive from.</span></span> <span data-ttu-id="088e4-104">コードジェネレーターは、Code Document Object Model (CodeDOM) グラフの構造に従って、特定の言語でソースコードを表示できます。</span><span class="sxs-lookup"><span data-stu-id="088e4-104">Code generators are capable of rendering source code in a specific language according to the structure of a Code Document Object Model (CodeDOM) graph.</span></span> <span data-ttu-id="088e4-105">このクラスには、CodeDOM グラフから特定の種類のコードを生成するための多数の関数とメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="088e4-105">This class provides many functions and methods to generate specific types of code from a CodeDOM graph.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="088e4-106">このクラスには、リンク確認要求と、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</span><span class="sxs-lookup"><span data-stu-id="088e4-106">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="088e4-107">直接の呼び出し元か派生クラスのいずれかに完全信頼アクセス許可がない場合、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="088e4-107">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="088e4-108">セキュリティ要求の詳細については、「[リンク](~/docs/framework/misc/link-demands.md)確認要求と[継承の要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="088e4-108">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="088e4-109">直前の呼び出し元に対する完全な信頼の場合。</span><span class="sxs-lookup"><span data-stu-id="088e4-109">for full trust for the immediate caller.</span></span> <span data-ttu-id="088e4-110">このクラスは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="088e4-110">This class cannot be used by partially trusted code.</span></span></permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="088e4-111">継承者に対する完全な信頼の場合。</span><span class="sxs-lookup"><span data-stu-id="088e4-111">for full trust for inheritors.</span></span> <span data-ttu-id="088e4-112">このクラスを、部分的に信頼されているコードが継承することはできません。</span><span class="sxs-lookup"><span data-stu-id="088e4-112">This class cannot be inherited by partially trusted code.</span></span></permission>
    <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
    <altmember cref="T:System.CodeDom.Compiler.CodeCompiler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeGenerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="088e4-113"><see cref="T:System.CodeDom.Compiler.CodeGenerator" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="088e4-113">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeGenerator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="088e4-114">直前の呼び出し元に対する完全な信頼の場合。</span><span class="sxs-lookup"><span data-stu-id="088e4-114">for full trust for the immediate caller.</span></span> <span data-ttu-id="088e4-115">このクラスは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="088e4-115">This class cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ContinueOnNewLine">
      <MemberSignature Language="C#" Value="protected virtual void ContinueOnNewLine (string st);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ContinueOnNewLine(string st) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ContinueOnNewLine (st As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ContinueOnNewLine(System::String ^ st);" />
      <MemberSignature Language="F#" Value="abstract member ContinueOnNewLine : string -&gt; unit&#xA;override this.ContinueOnNewLine : string -&gt; unit" Usage="codeGenerator.ContinueOnNewLine st" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="st" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="st"><span data-ttu-id="088e4-116">新しい行に書き込まれる文字列。</span><span class="sxs-lookup"><span data-stu-id="088e4-116">The string to write on the new line.</span></span></param>
        <summary><span data-ttu-id="088e4-117">行連結文字を生成し、指定した文字列を新しい行に出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-117">Generates a line-continuation character and outputs the specified string on a new line.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="088e4-118">行連結文字 (Visual Basic など) をサポートする言語のコードジェネレーターを実装する場合、このメソッドは改行文字を出力する前に行連結文字を出力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="088e4-118">When implementing a code generator for a language that supports a line-continuation character (for example, Visual Basic), this method should output the line-continuation character before it outputs a newline character.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="protected abstract string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateEscapedIdentifier : string -&gt; string" Usage="codeGenerator.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-119">エスケープ識別子を作成する対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="088e4-119">The string to create an escaped identifier for.</span></span></param>
        <summary><span data-ttu-id="088e4-120">指定した値のエスケープ識別子を作成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-120">Creates an escaped identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="088e4-121">その値のエスケープ識別子。</span><span class="sxs-lookup"><span data-stu-id="088e4-121">The escaped identifier for the value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-122">識別子が予約語または言語キーワードと競合しているかどうかをテスト <xref:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier%2A>、その場合は、言語固有のエスケープコード書式を使用して同等の名前を返します。</span><span class="sxs-lookup"><span data-stu-id="088e4-122"><xref:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="088e4-123">返された名前は、エスケープされた識別子と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="088e4-123">The returned name is referred to an escaped identifier.</span></span> <span data-ttu-id="088e4-124">エスケープされた識別子は同じ `value` を含んでいますが、競合するキーワードと区別するためにエスケープコードの書式が含まれています。</span><span class="sxs-lookup"><span data-stu-id="088e4-124">The escaped identifier contains the same `value` but includes escape code formatting to differentiate it from conflicting keywords.</span></span> <span data-ttu-id="088e4-125">たとえば、`value` の前にアットマーク ("@") を付けるか、角かっこ ("[" および "]") で区切り、エスケープされた識別子を作成することができます。</span><span class="sxs-lookup"><span data-stu-id="088e4-125">For example, `value` could be preceded by an at sign ("@") or delimited by square brackets ("[" and "]") to create an escaped identifier.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="088e4-126">このメソッドの既定の実装では、何も実行されません。</span><span class="sxs-lookup"><span data-stu-id="088e4-126">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="protected abstract string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateValidIdentifier : string -&gt; string" Usage="codeGenerator.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-127">有効な識別子を作成する対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="088e4-127">A string to create a valid identifier for.</span></span></param>
        <summary><span data-ttu-id="088e4-128">指定した値の有効な識別子を作成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-128">Creates a valid identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="088e4-129">その値の有効な識別子。</span><span class="sxs-lookup"><span data-stu-id="088e4-129">A valid identifier for the value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-130">識別子が予約キーワードまたは言語キーワードと競合しているかどうかをテスト <xref:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier%2A> し、存在する場合は、競合しない有効な識別子名を返します。</span><span class="sxs-lookup"><span data-stu-id="088e4-130"><xref:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, returns a valid identifier name that does not conflict.</span></span> <span data-ttu-id="088e4-131">返される識別子には同じ `value` が含まれていますが、競合するキーワードと区別するためにエスケープコードの書式が含まれています。</span><span class="sxs-lookup"><span data-stu-id="088e4-131">The returned identifier contains the same `value` but includes escape code formatting to differentiate it from conflicting keywords.</span></span> <span data-ttu-id="088e4-132">通常、値の変更が必要な場合は、その前にアンダースコア "_" が付きます。</span><span class="sxs-lookup"><span data-stu-id="088e4-132">Typically, if the value requires modification, it is preceded by an underscore "_".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="088e4-133">このメソッドの既定の実装では、何も実行されません。</span><span class="sxs-lookup"><span data-stu-id="088e4-133">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentClass">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeTypeDeclaration CurrentClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeDeclaration CurrentClass" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.CurrentClass" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentClass As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::CodeDom::CodeTypeDeclaration ^ CurrentClass { System::CodeDom::CodeTypeDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentClass : System.CodeDom.CodeTypeDeclaration" Usage="System.CodeDom.Compiler.CodeGenerator.CurrentClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-134">現在のクラスのコード型宣言を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-134">Gets the code type declaration for the current class.</span></span></summary>
        <value><span data-ttu-id="088e4-135">現在のクラスのコード型宣言。</span><span class="sxs-lookup"><span data-stu-id="088e4-135">The code type declaration for the current class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentMember">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeTypeMember CurrentMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeMember CurrentMember" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.CurrentMember" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentMember As CodeTypeMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::CodeDom::CodeTypeMember ^ CurrentMember { System::CodeDom::CodeTypeMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMember : System.CodeDom.CodeTypeMember" Usage="System.CodeDom.Compiler.CodeGenerator.CurrentMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-136">クラスの現在のメンバーを取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-136">Gets the current member of the class.</span></span></summary>
        <value><span data-ttu-id="088e4-137">クラスの現在のメンバー。</span><span class="sxs-lookup"><span data-stu-id="088e4-137">The current member of the class.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMemberName">
      <MemberSignature Language="C#" Value="protected string CurrentMemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentMemberName" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentMemberName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ CurrentMemberName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMemberName : string" Usage="System.CodeDom.Compiler.CodeGenerator.CurrentMemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-138">現在のメンバーの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-138">Gets the current member name.</span></span></summary>
        <value><span data-ttu-id="088e4-139">現在のメンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="088e4-139">The name of the current member.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTypeName">
      <MemberSignature Language="C#" Value="protected string CurrentTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentTypeName" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.CurrentTypeName" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ CurrentTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTypeName : string" Usage="System.CodeDom.Compiler.CodeGenerator.CurrentTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-140">現在のクラスの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-140">Gets the current class name.</span></span></summary>
        <value><span data-ttu-id="088e4-141">現在のクラスの名前。</span><span class="sxs-lookup"><span data-stu-id="088e4-141">The current class name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateArgumentReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateArgumentReferenceExpression (System.CodeDom.CodeArgumentReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateArgumentReferenceExpression(class System.CodeDom.CodeArgumentReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateArgumentReferenceExpression (e As CodeArgumentReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateArgumentReferenceExpression(System::CodeDom::CodeArgumentReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateArgumentReferenceExpression : System.CodeDom.CodeArgumentReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateArgumentReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeArgumentReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-142">コード生成の対象となる式を示す <see cref="T:System.CodeDom.CodeArgumentReferenceExpression" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-142">A <see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-143">指定した引数参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-143">Generates code for the specified argument reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeArgumentReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateArrayCreateExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateArrayCreateExpression (System.CodeDom.CodeArrayCreateExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateArrayCreateExpression(class System.CodeDom.CodeArrayCreateExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateArrayCreateExpression (e As CodeArrayCreateExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateArrayCreateExpression(System::CodeDom::CodeArrayCreateExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateArrayCreateExpression : System.CodeDom.CodeArrayCreateExpression -&gt; unit" Usage="codeGenerator.GenerateArrayCreateExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeArrayCreateExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-144">コード生成の対象となる式を示す <see cref="T:System.CodeDom.CodeArrayCreateExpression" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-144">A <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-145">指定した配列作成式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-145">Generates code for the specified array creation expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeArrayCreateExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateArrayIndexerExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateArrayIndexerExpression (System.CodeDom.CodeArrayIndexerExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateArrayIndexerExpression(class System.CodeDom.CodeArrayIndexerExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateArrayIndexerExpression (e As CodeArrayIndexerExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateArrayIndexerExpression(System::CodeDom::CodeArrayIndexerExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateArrayIndexerExpression : System.CodeDom.CodeArrayIndexerExpression -&gt; unit" Usage="codeGenerator.GenerateArrayIndexerExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeArrayIndexerExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-146">コード生成の対象となる式を示す <see cref="T:System.CodeDom.CodeArrayIndexerExpression" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-146">A <see cref="T:System.CodeDom.CodeArrayIndexerExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-147">指定した配列インデクサー式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-147">Generates code for the specified array indexer expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeArrayIndexerExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateAssignStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateAssignStatement (System.CodeDom.CodeAssignStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateAssignStatement(class System.CodeDom.CodeAssignStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateAssignStatement (e As CodeAssignStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateAssignStatement(System::CodeDom::CodeAssignStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAssignStatement : System.CodeDom.CodeAssignStatement -&gt; unit" Usage="codeGenerator.GenerateAssignStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeAssignStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-148">コード生成の対象となるステートメントを示す <see cref="T:System.CodeDom.CodeAssignStatement" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-148">A <see cref="T:System.CodeDom.CodeAssignStatement" /> that indicates the statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-149">指定した代入ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-149">Generates code for the specified assignment statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAssignStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateAttachEventStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateAttachEventStatement (System.CodeDom.CodeAttachEventStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateAttachEventStatement(class System.CodeDom.CodeAttachEventStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateAttachEventStatement (e As CodeAttachEventStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateAttachEventStatement(System::CodeDom::CodeAttachEventStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAttachEventStatement : System.CodeDom.CodeAttachEventStatement -&gt; unit" Usage="codeGenerator.GenerateAttachEventStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeAttachEventStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-150">コード生成の対象となるステートメントを示す <see cref="T:System.CodeDom.CodeAttachEventStatement" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-150">A <see cref="T:System.CodeDom.CodeAttachEventStatement" /> that indicates the statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-151">指定した結合イベント ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-151">Generates code for the specified attach event statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttachEventStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateAttributeDeclarationsEnd">
      <MemberSignature Language="C#" Value="protected abstract void GenerateAttributeDeclarationsEnd (System.CodeDom.CodeAttributeDeclarationCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateAttributeDeclarationsEnd(class System.CodeDom.CodeAttributeDeclarationCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateAttributeDeclarationsEnd (attributes As CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateAttributeDeclarationsEnd(System::CodeDom::CodeAttributeDeclarationCollection ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAttributeDeclarationsEnd : System.CodeDom.CodeAttributeDeclarationCollection -&gt; unit" Usage="codeGenerator.GenerateAttributeDeclarationsEnd attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="088e4-152">コード生成の対象となる属性ブロックの終了を示す <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-152">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the end of the attribute block to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-153">指定した属性ブロックの終了のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-153">Generates code for the specified attribute block end.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />
      </Docs>
    </Member>
    <Member MemberName="GenerateAttributeDeclarationsStart">
      <MemberSignature Language="C#" Value="protected abstract void GenerateAttributeDeclarationsStart (System.CodeDom.CodeAttributeDeclarationCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateAttributeDeclarationsStart(class System.CodeDom.CodeAttributeDeclarationCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateAttributeDeclarationsStart (attributes As CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateAttributeDeclarationsStart(System::CodeDom::CodeAttributeDeclarationCollection ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAttributeDeclarationsStart : System.CodeDom.CodeAttributeDeclarationCollection -&gt; unit" Usage="codeGenerator.GenerateAttributeDeclarationsStart attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="088e4-154">コード生成の対象となる属性ブロックの開始を示す <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-154">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the start of the attribute block to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-155">指定した属性ブロックの開始のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-155">Generates code for the specified attribute block start.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />
      </Docs>
    </Member>
    <Member MemberName="GenerateBaseReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateBaseReferenceExpression (System.CodeDom.CodeBaseReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateBaseReferenceExpression(class System.CodeDom.CodeBaseReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateBaseReferenceExpression (e As CodeBaseReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateBaseReferenceExpression(System::CodeDom::CodeBaseReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateBaseReferenceExpression : System.CodeDom.CodeBaseReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateBaseReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeBaseReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-156">コード生成の対象となる式を示す <see cref="T:System.CodeDom.CodeBaseReferenceExpression" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-156">A <see cref="T:System.CodeDom.CodeBaseReferenceExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-157">指定したベース参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-157">Generates code for the specified base reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeBaseReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateBinaryOperatorExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateBinaryOperatorExpression (System.CodeDom.CodeBinaryOperatorExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateBinaryOperatorExpression(class System.CodeDom.CodeBinaryOperatorExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateBinaryOperatorExpression (e As CodeBinaryOperatorExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateBinaryOperatorExpression(System::CodeDom::CodeBinaryOperatorExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateBinaryOperatorExpression : System.CodeDom.CodeBinaryOperatorExpression -&gt; unit&#xA;override this.GenerateBinaryOperatorExpression : System.CodeDom.CodeBinaryOperatorExpression -&gt; unit" Usage="codeGenerator.GenerateBinaryOperatorExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeBinaryOperatorExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-158">コード生成の対象となる式を示す <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-158">A <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-159">指定した二項演算式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-159">Generates code for the specified binary operator expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="088e4-160"><paramref name="e" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="088e4-160"><paramref name="e" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeBinaryOperatorExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCastExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateCastExpression (System.CodeDom.CodeCastExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCastExpression(class System.CodeDom.CodeCastExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateCastExpression (e As CodeCastExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateCastExpression(System::CodeDom::CodeCastExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCastExpression : System.CodeDom.CodeCastExpression -&gt; unit" Usage="codeGenerator.GenerateCastExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCastExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-161">コード生成の対象となる式を示す <see cref="T:System.CodeDom.CodeCastExpression" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-161">A <see cref="T:System.CodeDom.CodeCastExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-162">指定したキャスト式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-162">Generates code for the specified cast expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCastExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeGenerator.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="088e4-163">コード生成の対象となるクラス メンバー。</span><span class="sxs-lookup"><span data-stu-id="088e4-163">The class member to generate code for.</span></span></param>
        <param name="writer"><span data-ttu-id="088e4-164">コードの出力先となるテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="088e4-164">The text writer to output code to.</span></span></param>
        <param name="options"><span data-ttu-id="088e4-165">コードの生成時に使用するオプション。</span><span class="sxs-lookup"><span data-stu-id="088e4-165">The options to use when generating the code.</span></span></param>
        <summary><span data-ttu-id="088e4-166">指定したテキスト ライターおよびコード ジェネレーターのオプションを使用して、指定したクラス メンバーのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-166">Generates code for the specified class member using the specified text writer and code generator options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-167">メンバーのコードは、コンテキストによって異なる方法で生成されます。</span><span class="sxs-lookup"><span data-stu-id="088e4-167">Code for members is generated differently depending on the context.</span></span> <span data-ttu-id="088e4-168">たとえば、インターフェイスまたは列挙型のフィールドのメソッドのコードは、クラスの同じメンバーのコードとは異なる方法で生成されます。</span><span class="sxs-lookup"><span data-stu-id="088e4-168">For example, code for methods on an interface or fields on an enumeration is generated differently from code for the same member on a class.</span></span> <span data-ttu-id="088e4-169">この実装では、クラスコンテキストに対してメンバーが生成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="088e4-169">This implementation assumes that the member is being generated for the class context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="088e4-170"><see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /> プロパティは <see langword="null" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="088e4-170">The <see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /> property is not <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateComment">
      <MemberSignature Language="C#" Value="protected abstract void GenerateComment (System.CodeDom.CodeComment e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateComment(class System.CodeDom.CodeComment e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateComment (e As CodeComment)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateComment(System::CodeDom::CodeComment ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateComment : System.CodeDom.CodeComment -&gt; unit" Usage="codeGenerator.GenerateComment e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeComment" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-171">コード生成の対象となる <see cref="T:System.CodeDom.CodeComment" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-171">A <see cref="T:System.CodeDom.CodeComment" /> to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-172">指定したコメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-172">Generates code for the specified comment.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeComment" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCommentStatement">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCommentStatement (System.CodeDom.CodeCommentStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCommentStatement(class System.CodeDom.CodeCommentStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCommentStatement (e As CodeCommentStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCommentStatement(System::CodeDom::CodeCommentStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCommentStatement : System.CodeDom.CodeCommentStatement -&gt; unit&#xA;override this.GenerateCommentStatement : System.CodeDom.CodeCommentStatement -&gt; unit" Usage="codeGenerator.GenerateCommentStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCommentStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-173">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-173">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-174">指定したコメント ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-174">Generates code for the specified comment statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="088e4-175"><see cref="P:System.CodeDom.CodeCommentStatement.Comment" /> の <paramref name="e" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="088e4-175">The <see cref="P:System.CodeDom.CodeCommentStatement.Comment" /> property of <paramref name="e" /> is not set.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeCommentStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCommentStatements">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCommentStatements (System.CodeDom.CodeCommentStatementCollection e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCommentStatements(class System.CodeDom.CodeCommentStatementCollection e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCommentStatements (e As CodeCommentStatementCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCommentStatements(System::CodeDom::CodeCommentStatementCollection ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCommentStatements : System.CodeDom.CodeCommentStatementCollection -&gt; unit&#xA;override this.GenerateCommentStatements : System.CodeDom.CodeCommentStatementCollection -&gt; unit" Usage="codeGenerator.GenerateCommentStatements e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCommentStatementCollection" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-176">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-176">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-177">指定した複数のコメント ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-177">Generates code for the specified comment statements.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCommentStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCompileUnit">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCompileUnit (System.CodeDom.CodeCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCompileUnit(class System.CodeDom.CodeCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCompileUnit (e As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCompileUnit(System::CodeDom::CodeCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCompileUnit : System.CodeDom.CodeCompileUnit -&gt; unit&#xA;override this.GenerateCompileUnit : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeGenerator.GenerateCompileUnit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-178">コード生成の対象となるコンパイル単位。</span><span class="sxs-lookup"><span data-stu-id="088e4-178">The compile unit to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-179">指定したコンパイル単位のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-179">Generates code for the specified compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCompileUnitEnd">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCompileUnitEnd (System.CodeDom.CodeCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCompileUnitEnd(class System.CodeDom.CodeCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCompileUnitEnd (e As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCompileUnitEnd(System::CodeDom::CodeCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCompileUnitEnd : System.CodeDom.CodeCompileUnit -&gt; unit&#xA;override this.GenerateCompileUnitEnd : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeGenerator.GenerateCompileUnitEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-180">コード生成の対象となるコンパイル単位。</span><span class="sxs-lookup"><span data-stu-id="088e4-180">The compile unit to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-181">コンパイル単位の終了のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-181">Generates code for the end of a compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCompileUnitStart">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCompileUnitStart (System.CodeDom.CodeCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCompileUnitStart(class System.CodeDom.CodeCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCompileUnitStart (e As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCompileUnitStart(System::CodeDom::CodeCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCompileUnitStart : System.CodeDom.CodeCompileUnit -&gt; unit&#xA;override this.GenerateCompileUnitStart : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeGenerator.GenerateCompileUnitStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-182">コード生成の対象となるコンパイル単位。</span><span class="sxs-lookup"><span data-stu-id="088e4-182">The compile unit to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-183">コンパイル単位の開始のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-183">Generates code for the start of a compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateConditionStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateConditionStatement (System.CodeDom.CodeConditionStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateConditionStatement(class System.CodeDom.CodeConditionStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateConditionStatement (e As CodeConditionStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateConditionStatement(System::CodeDom::CodeConditionStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateConditionStatement : System.CodeDom.CodeConditionStatement -&gt; unit" Usage="codeGenerator.GenerateConditionStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeConditionStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-184">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-184">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-185">指定した条件付きステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-185">Generates code for the specified conditional statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-186">ほとんどの言語では、このメソッドは `if` ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-186">For most languages, this method will generate code for an `if` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeConditionStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateConstructor">
      <MemberSignature Language="C#" Value="protected abstract void GenerateConstructor (System.CodeDom.CodeConstructor e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateConstructor(class System.CodeDom.CodeConstructor e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateConstructor (e As CodeConstructor, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateConstructor(System::CodeDom::CodeConstructor ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateConstructor : System.CodeDom.CodeConstructor * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateConstructor (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeConstructor" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-187">コード生成の対象となるコンストラクター。</span><span class="sxs-lookup"><span data-stu-id="088e4-187">The constructor to generate code for.</span></span></param>
        <param name="c"><span data-ttu-id="088e4-188">このコンストラクターが構築するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="088e4-188">The type of the object that this constructor constructs.</span></span></param>
        <summary><span data-ttu-id="088e4-189">指定したコンストラクターのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-189">Generates code for the specified constructor.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeConstructor" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateDecimalValue">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDecimalValue (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDecimalValue(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDecimalValue (d As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDecimalValue(System::Decimal d);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDecimalValue : decimal -&gt; unit&#xA;override this.GenerateDecimalValue : decimal -&gt; unit" Usage="codeGenerator.GenerateDecimalValue d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="088e4-190">コード生成の対象となる 10 進値。</span><span class="sxs-lookup"><span data-stu-id="088e4-190">The decimal value to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-191">指定した 10 進値のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-191">Generates code for the specified decimal value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDefaultValueExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDefaultValueExpression (System.CodeDom.CodeDefaultValueExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDefaultValueExpression(class System.CodeDom.CodeDefaultValueExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDefaultValueExpression (e As CodeDefaultValueExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDefaultValueExpression(System::CodeDom::CodeDefaultValueExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDefaultValueExpression : System.CodeDom.CodeDefaultValueExpression -&gt; unit&#xA;override this.GenerateDefaultValueExpression : System.CodeDom.CodeDefaultValueExpression -&gt; unit" Usage="codeGenerator.GenerateDefaultValueExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeDefaultValueExpression" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-192">コード生成の対象となる参照。</span><span class="sxs-lookup"><span data-stu-id="088e4-192">The reference to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-193">既定値への指定した参照のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-193">Generates code for the specified reference to a default value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDelegateCreateExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateDelegateCreateExpression (System.CodeDom.CodeDelegateCreateExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDelegateCreateExpression(class System.CodeDom.CodeDelegateCreateExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateDelegateCreateExpression (e As CodeDelegateCreateExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateDelegateCreateExpression(System::CodeDom::CodeDelegateCreateExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDelegateCreateExpression : System.CodeDom.CodeDelegateCreateExpression -&gt; unit" Usage="codeGenerator.GenerateDelegateCreateExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeDelegateCreateExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-194">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-194">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-195">指定したデリゲート作成式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-195">Generates code for the specified delegate creation expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeDelegateCreateExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateDelegateInvokeExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateDelegateInvokeExpression (System.CodeDom.CodeDelegateInvokeExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDelegateInvokeExpression(class System.CodeDom.CodeDelegateInvokeExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateDelegateInvokeExpression (e As CodeDelegateInvokeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateDelegateInvokeExpression(System::CodeDom::CodeDelegateInvokeExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDelegateInvokeExpression : System.CodeDom.CodeDelegateInvokeExpression -&gt; unit" Usage="codeGenerator.GenerateDelegateInvokeExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeDelegateInvokeExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-196">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-196">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-197">指定したデリゲート呼び出し式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-197">Generates code for the specified delegate invoke expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeDelegateInvokeExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateDirectionExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDirectionExpression (System.CodeDom.CodeDirectionExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDirectionExpression(class System.CodeDom.CodeDirectionExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDirectionExpression (e As CodeDirectionExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDirectionExpression(System::CodeDom::CodeDirectionExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDirectionExpression : System.CodeDom.CodeDirectionExpression -&gt; unit&#xA;override this.GenerateDirectionExpression : System.CodeDom.CodeDirectionExpression -&gt; unit" Usage="codeGenerator.GenerateDirectionExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeDirectionExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-198">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-198">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-199">指定した方向式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-199">Generates code for the specified direction expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeDirectionExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateDirectives">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDirectives (System.CodeDom.CodeDirectiveCollection directives);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDirectives(class System.CodeDom.CodeDirectiveCollection directives) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDirectives (directives As CodeDirectiveCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDirectives(System::CodeDom::CodeDirectiveCollection ^ directives);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDirectives : System.CodeDom.CodeDirectiveCollection -&gt; unit&#xA;override this.GenerateDirectives : System.CodeDom.CodeDirectiveCollection -&gt; unit" Usage="codeGenerator.GenerateDirectives directives" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directives" Type="System.CodeDom.CodeDirectiveCollection" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directives"><span data-ttu-id="088e4-200">コード生成の対象となるコード ディレクティブ。</span><span class="sxs-lookup"><span data-stu-id="088e4-200">The code directives to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-201">指定したコード ディレクティブのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-201">Generates code for the specified code directives.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDoubleValue">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDoubleValue (double d);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDoubleValue(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDoubleValue (d As Double)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDoubleValue(double d);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDoubleValue : double -&gt; unit&#xA;override this.GenerateDoubleValue : double -&gt; unit" Usage="codeGenerator.GenerateDoubleValue d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="088e4-202">コード生成の対象となる値。</span><span class="sxs-lookup"><span data-stu-id="088e4-202">The value to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-203">倍精度浮動小数点数のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-203">Generates code for a double-precision floating point number.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateEntryPointMethod">
      <MemberSignature Language="C#" Value="protected abstract void GenerateEntryPointMethod (System.CodeDom.CodeEntryPointMethod e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateEntryPointMethod(class System.CodeDom.CodeEntryPointMethod e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateEntryPointMethod (e As CodeEntryPointMethod, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateEntryPointMethod(System::CodeDom::CodeEntryPointMethod ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateEntryPointMethod : System.CodeDom.CodeEntryPointMethod * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateEntryPointMethod (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeEntryPointMethod" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-204">コードのエントリ ポイント。</span><span class="sxs-lookup"><span data-stu-id="088e4-204">The entry point for the code.</span></span></param>
        <param name="c"><span data-ttu-id="088e4-205">型を宣言するコード。</span><span class="sxs-lookup"><span data-stu-id="088e4-205">The code that declares the type.</span></span></param>
        <summary><span data-ttu-id="088e4-206">指定したエントリ ポイント メソッドのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-206">Generates code for the specified entry point method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeEntryPointMethod" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateEvent">
      <MemberSignature Language="C#" Value="protected abstract void GenerateEvent (System.CodeDom.CodeMemberEvent e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateEvent(class System.CodeDom.CodeMemberEvent e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateEvent (e As CodeMemberEvent, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateEvent(System::CodeDom::CodeMemberEvent ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateEvent : System.CodeDom.CodeMemberEvent * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateEvent (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMemberEvent" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-207">コード生成の対象となるメンバー イベント。</span><span class="sxs-lookup"><span data-stu-id="088e4-207">The member event to generate code for.</span></span></param>
        <param name="c"><span data-ttu-id="088e4-208">このイベントが発生するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="088e4-208">The type of the object that this event occurs on.</span></span></param>
        <summary><span data-ttu-id="088e4-209">指定したイベントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-209">Generates code for the specified event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMemberEvent" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateEventReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateEventReferenceExpression (System.CodeDom.CodeEventReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateEventReferenceExpression(class System.CodeDom.CodeEventReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateEventReferenceExpression (e As CodeEventReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateEventReferenceExpression(System::CodeDom::CodeEventReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateEventReferenceExpression : System.CodeDom.CodeEventReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateEventReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeEventReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-210">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-210">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-211">指定したイベント参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-211">Generates code for the specified event reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeEventReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateExpression">
      <MemberSignature Language="C#" Value="protected void GenerateExpression (System.CodeDom.CodeExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateExpression(class System.CodeDom.CodeExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateExpression (e As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateExpression(System::CodeDom::CodeExpression ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateExpression : System.CodeDom.CodeExpression -&gt; unit" Usage="codeGenerator.GenerateExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-212">コード生成の対象となるコード式。</span><span class="sxs-lookup"><span data-stu-id="088e4-212">The code expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-213">指定したコード式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-213">Generates code for the specified code expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="088e4-214"><paramref name="e" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="088e4-214"><paramref name="e" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="088e4-215"><paramref name="e" /> は有効な <see cref="T:System.CodeDom.CodeStatement" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="088e4-215"><paramref name="e" /> is not a valid <see cref="T:System.CodeDom.CodeStatement" />.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateExpressionStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateExpressionStatement (System.CodeDom.CodeExpressionStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateExpressionStatement(class System.CodeDom.CodeExpressionStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateExpressionStatement (e As CodeExpressionStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateExpressionStatement(System::CodeDom::CodeExpressionStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateExpressionStatement : System.CodeDom.CodeExpressionStatement -&gt; unit" Usage="codeGenerator.GenerateExpressionStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeExpressionStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-216">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-216">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-217">指定した式ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-217">Generates code for the specified expression statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpressionStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateField">
      <MemberSignature Language="C#" Value="protected abstract void GenerateField (System.CodeDom.CodeMemberField e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateField(class System.CodeDom.CodeMemberField e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateField (e As CodeMemberField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateField(System::CodeDom::CodeMemberField ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateField : System.CodeDom.CodeMemberField -&gt; unit" Usage="codeGenerator.GenerateField e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMemberField" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-218">コード生成の対象となるフィールド。</span><span class="sxs-lookup"><span data-stu-id="088e4-218">The field to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-219">指定したメンバー フィールドのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-219">Generates code for the specified member field.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMemberField" />
      </Docs>
    </Member>
    <Member MemberName="GenerateFieldReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateFieldReferenceExpression (System.CodeDom.CodeFieldReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateFieldReferenceExpression(class System.CodeDom.CodeFieldReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateFieldReferenceExpression (e As CodeFieldReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateFieldReferenceExpression(System::CodeDom::CodeFieldReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateFieldReferenceExpression : System.CodeDom.CodeFieldReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateFieldReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeFieldReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-220">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-220">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-221">指定したフィールド参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-221">Generates code for the specified field reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeFieldReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateGotoStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateGotoStatement (System.CodeDom.CodeGotoStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateGotoStatement(class System.CodeDom.CodeGotoStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateGotoStatement (e As CodeGotoStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateGotoStatement(System::CodeDom::CodeGotoStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateGotoStatement : System.CodeDom.CodeGotoStatement -&gt; unit" Usage="codeGenerator.GenerateGotoStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeGotoStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-222">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-222">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-223">指定した <see langword="goto" /> ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-223">Generates code for the specified <see langword="goto" /> statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeGotoStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateIndexerExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateIndexerExpression (System.CodeDom.CodeIndexerExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateIndexerExpression(class System.CodeDom.CodeIndexerExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateIndexerExpression (e As CodeIndexerExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateIndexerExpression(System::CodeDom::CodeIndexerExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateIndexerExpression : System.CodeDom.CodeIndexerExpression -&gt; unit" Usage="codeGenerator.GenerateIndexerExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeIndexerExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-224">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-224">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-225">指定したインデクサー式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-225">Generates code for the specified indexer expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeIndexerExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateIterationStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateIterationStatement (System.CodeDom.CodeIterationStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateIterationStatement(class System.CodeDom.CodeIterationStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateIterationStatement (e As CodeIterationStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateIterationStatement(System::CodeDom::CodeIterationStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateIterationStatement : System.CodeDom.CodeIterationStatement -&gt; unit" Usage="codeGenerator.GenerateIterationStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeIterationStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-226">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-226">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-227">指定した繰り返しステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-227">Generates code for the specified iteration statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-228">ほとんどの言語では、このメソッドは、`for` ループまたは `while` ループのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-228">For most languages, this method will generate code for a `for` loop or a `while` loop.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeIterationStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateLabeledStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateLabeledStatement (System.CodeDom.CodeLabeledStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateLabeledStatement(class System.CodeDom.CodeLabeledStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateLabeledStatement (e As CodeLabeledStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateLabeledStatement(System::CodeDom::CodeLabeledStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateLabeledStatement : System.CodeDom.CodeLabeledStatement -&gt; unit" Usage="codeGenerator.GenerateLabeledStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeLabeledStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-229">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-229">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-230">指定したラベル付きステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-230">Generates code for the specified labeled statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeLabeledStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateLinePragmaEnd">
      <MemberSignature Language="C#" Value="protected abstract void GenerateLinePragmaEnd (System.CodeDom.CodeLinePragma e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateLinePragmaEnd(class System.CodeDom.CodeLinePragma e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateLinePragmaEnd (e As CodeLinePragma)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateLinePragmaEnd(System::CodeDom::CodeLinePragma ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateLinePragmaEnd : System.CodeDom.CodeLinePragma -&gt; unit" Usage="codeGenerator.GenerateLinePragmaEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeLinePragma" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-231">コード生成の対象となる line プラグマの終了。</span><span class="sxs-lookup"><span data-stu-id="088e4-231">The end of the line pragma to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-232">指定した line プラグマの終了のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-232">Generates code for the specified line pragma end.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeLinePragma" />
      </Docs>
    </Member>
    <Member MemberName="GenerateLinePragmaStart">
      <MemberSignature Language="C#" Value="protected abstract void GenerateLinePragmaStart (System.CodeDom.CodeLinePragma e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateLinePragmaStart(class System.CodeDom.CodeLinePragma e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateLinePragmaStart (e As CodeLinePragma)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateLinePragmaStart(System::CodeDom::CodeLinePragma ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateLinePragmaStart : System.CodeDom.CodeLinePragma -&gt; unit" Usage="codeGenerator.GenerateLinePragmaStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeLinePragma" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-233">コード生成の対象となる line プラグマの開始。</span><span class="sxs-lookup"><span data-stu-id="088e4-233">The start of the line pragma to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-234">指定した line プラグマの開始のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-234">Generates code for the specified line pragma start.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeLinePragma" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMethod">
      <MemberSignature Language="C#" Value="protected abstract void GenerateMethod (System.CodeDom.CodeMemberMethod e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateMethod(class System.CodeDom.CodeMemberMethod e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateMethod (e As CodeMemberMethod, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateMethod(System::CodeDom::CodeMemberMethod ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateMethod : System.CodeDom.CodeMemberMethod * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateMethod (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMemberMethod" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-235">コード生成の対象となるメンバー メソッド。</span><span class="sxs-lookup"><span data-stu-id="088e4-235">The member method to generate code for.</span></span></param>
        <param name="c"><span data-ttu-id="088e4-236">このメソッドが出現するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="088e4-236">The type of the object that this method occurs on.</span></span></param>
        <summary><span data-ttu-id="088e4-237">指定したメソッドのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-237">Generates code for the specified method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMemberMethod" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMethodInvokeExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateMethodInvokeExpression (System.CodeDom.CodeMethodInvokeExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateMethodInvokeExpression(class System.CodeDom.CodeMethodInvokeExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateMethodInvokeExpression (e As CodeMethodInvokeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateMethodInvokeExpression(System::CodeDom::CodeMethodInvokeExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateMethodInvokeExpression : System.CodeDom.CodeMethodInvokeExpression -&gt; unit" Usage="codeGenerator.GenerateMethodInvokeExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMethodInvokeExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-238">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-238">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-239">指定したメソッド呼び出し式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-239">Generates code for the specified method invoke expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMethodInvokeExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMethodReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateMethodReferenceExpression (System.CodeDom.CodeMethodReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateMethodReferenceExpression(class System.CodeDom.CodeMethodReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateMethodReferenceExpression (e As CodeMethodReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateMethodReferenceExpression(System::CodeDom::CodeMethodReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateMethodReferenceExpression : System.CodeDom.CodeMethodReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateMethodReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMethodReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-240">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-240">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-241">指定したメソッド参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-241">Generates code for the specified method reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMethodReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMethodReturnStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateMethodReturnStatement (System.CodeDom.CodeMethodReturnStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateMethodReturnStatement(class System.CodeDom.CodeMethodReturnStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateMethodReturnStatement (e As CodeMethodReturnStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateMethodReturnStatement(System::CodeDom::CodeMethodReturnStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateMethodReturnStatement : System.CodeDom.CodeMethodReturnStatement -&gt; unit" Usage="codeGenerator.GenerateMethodReturnStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMethodReturnStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-242">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-242">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-243">指定したメソッドの return ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-243">Generates code for the specified method return statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMethodReturnStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespace">
      <MemberSignature Language="C#" Value="protected virtual void GenerateNamespace (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateNamespace(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateNamespace (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateNamespace(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateNamespace : System.CodeDom.CodeNamespace -&gt; unit&#xA;override this.GenerateNamespace : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateNamespace e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-244">コード生成の対象となる名前空間。</span><span class="sxs-lookup"><span data-stu-id="088e4-244">The namespace to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-245">指定した名前空間のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-245">Generates code for the specified namespace.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaceEnd">
      <MemberSignature Language="C#" Value="protected abstract void GenerateNamespaceEnd (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateNamespaceEnd(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateNamespaceEnd (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateNamespaceEnd(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateNamespaceEnd : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateNamespaceEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-246">コード生成の対象となる名前空間。</span><span class="sxs-lookup"><span data-stu-id="088e4-246">The namespace to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-247">名前空間の終了のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-247">Generates code for the end of a namespace.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaceImport">
      <MemberSignature Language="C#" Value="protected abstract void GenerateNamespaceImport (System.CodeDom.CodeNamespaceImport e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateNamespaceImport(class System.CodeDom.CodeNamespaceImport e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateNamespaceImport (e As CodeNamespaceImport)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateNamespaceImport(System::CodeDom::CodeNamespaceImport ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateNamespaceImport : System.CodeDom.CodeNamespaceImport -&gt; unit" Usage="codeGenerator.GenerateNamespaceImport e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespaceImport" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-248">コード生成の対象となる名前空間インポート。</span><span class="sxs-lookup"><span data-stu-id="088e4-248">The namespace import to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-249">指定した名前空間へのインポートのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-249">Generates code for the specified namespace import.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespaceImport" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaceImports">
      <MemberSignature Language="C#" Value="protected void GenerateNamespaceImports (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateNamespaceImports(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateNamespaceImports (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateNamespaceImports(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateNamespaceImports : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateNamespaceImports e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-250">コード生成の対象となる名前空間インポート。</span><span class="sxs-lookup"><span data-stu-id="088e4-250">The namespace import to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-251">指定した名前空間へのインポートのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-251">Generates code for the specified namespace import.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaces">
      <MemberSignature Language="C#" Value="protected void GenerateNamespaces (System.CodeDom.CodeCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateNamespaces(class System.CodeDom.CodeCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateNamespaces (e As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateNamespaces(System::CodeDom::CodeCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateNamespaces : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeGenerator.GenerateNamespaces e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-252">名前空間生成の対象となるコンパイル単位。</span><span class="sxs-lookup"><span data-stu-id="088e4-252">The compile unit to generate namespaces for.</span></span></param>
        <summary><span data-ttu-id="088e4-253">指定したコンパイル単位にある名前空間のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-253">Generates code for the namespaces in the specified compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaceStart">
      <MemberSignature Language="C#" Value="protected abstract void GenerateNamespaceStart (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateNamespaceStart(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateNamespaceStart (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateNamespaceStart(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateNamespaceStart : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateNamespaceStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-254">コード生成の対象となる名前空間。</span><span class="sxs-lookup"><span data-stu-id="088e4-254">The namespace to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-255">名前空間の開始のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-255">Generates code for the start of a namespace.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateObjectCreateExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateObjectCreateExpression (System.CodeDom.CodeObjectCreateExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateObjectCreateExpression(class System.CodeDom.CodeObjectCreateExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateObjectCreateExpression (e As CodeObjectCreateExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateObjectCreateExpression(System::CodeDom::CodeObjectCreateExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateObjectCreateExpression : System.CodeDom.CodeObjectCreateExpression -&gt; unit" Usage="codeGenerator.GenerateObjectCreateExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeObjectCreateExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-256">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-256">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-257">指定したオブジェクト作成式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-257">Generates code for the specified object creation expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeObjectCreateExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterDeclarationExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateParameterDeclarationExpression (System.CodeDom.CodeParameterDeclarationExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateParameterDeclarationExpression(class System.CodeDom.CodeParameterDeclarationExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateParameterDeclarationExpression (e As CodeParameterDeclarationExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateParameterDeclarationExpression(System::CodeDom::CodeParameterDeclarationExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterDeclarationExpression : System.CodeDom.CodeParameterDeclarationExpression -&gt; unit&#xA;override this.GenerateParameterDeclarationExpression : System.CodeDom.CodeParameterDeclarationExpression -&gt; unit" Usage="codeGenerator.GenerateParameterDeclarationExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeParameterDeclarationExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-258">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-258">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-259">指定したパラメーター宣言式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-259">Generates code for the specified parameter declaration expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpression" />
      </Docs>
    </Member>
    <Member MemberName="GeneratePrimitiveExpression">
      <MemberSignature Language="C#" Value="protected virtual void GeneratePrimitiveExpression (System.CodeDom.CodePrimitiveExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GeneratePrimitiveExpression(class System.CodeDom.CodePrimitiveExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GeneratePrimitiveExpression (e As CodePrimitiveExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GeneratePrimitiveExpression(System::CodeDom::CodePrimitiveExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GeneratePrimitiveExpression : System.CodeDom.CodePrimitiveExpression -&gt; unit&#xA;override this.GeneratePrimitiveExpression : System.CodeDom.CodePrimitiveExpression -&gt; unit" Usage="codeGenerator.GeneratePrimitiveExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodePrimitiveExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-260">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-260">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-261">指定したプリミティブ式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-261">Generates code for the specified primitive expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="088e4-262"><paramref name="e" /> は無効なデータ型を使用しています。</span><span class="sxs-lookup"><span data-stu-id="088e4-262"><paramref name="e" /> uses an invalid data type.</span></span> <span data-ttu-id="088e4-263">次のデータ型のみが有効です。</span><span class="sxs-lookup"><span data-stu-id="088e4-263">Only the following data types are valid:</span></span> 
<span data-ttu-id="088e4-264">-   string</span><span class="sxs-lookup"><span data-stu-id="088e4-264">-   string</span></span> 
<span data-ttu-id="088e4-265">-   char</span><span class="sxs-lookup"><span data-stu-id="088e4-265">-   char</span></span> 
<span data-ttu-id="088e4-266">-   byte</span><span class="sxs-lookup"><span data-stu-id="088e4-266">-   byte</span></span> 
<span data-ttu-id="088e4-267">-   Int16</span><span class="sxs-lookup"><span data-stu-id="088e4-267">-   Int16</span></span> 
<span data-ttu-id="088e4-268">-   Int32</span><span class="sxs-lookup"><span data-stu-id="088e4-268">-   Int32</span></span> 
<span data-ttu-id="088e4-269">-   Int64</span><span class="sxs-lookup"><span data-stu-id="088e4-269">-   Int64</span></span> 
<span data-ttu-id="088e4-270">-   Single</span><span class="sxs-lookup"><span data-stu-id="088e4-270">-   Single</span></span> 
<span data-ttu-id="088e4-271">-   Double</span><span class="sxs-lookup"><span data-stu-id="088e4-271">-   Double</span></span> 
<span data-ttu-id="088e4-272">-   Decimal</span><span class="sxs-lookup"><span data-stu-id="088e4-272">-   Decimal</span></span></exception>
        <altmember cref="T:System.CodeDom.CodePrimitiveExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateProperty">
      <MemberSignature Language="C#" Value="protected abstract void GenerateProperty (System.CodeDom.CodeMemberProperty e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateProperty(class System.CodeDom.CodeMemberProperty e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateProperty (e As CodeMemberProperty, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateProperty(System::CodeDom::CodeMemberProperty ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateProperty : System.CodeDom.CodeMemberProperty * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateProperty (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMemberProperty" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-273">コード生成の対象となるプロパティ。</span><span class="sxs-lookup"><span data-stu-id="088e4-273">The property to generate code for.</span></span></param>
        <param name="c"><span data-ttu-id="088e4-274">このプロパティが出現するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="088e4-274">The type of the object that this property occurs on.</span></span></param>
        <summary><span data-ttu-id="088e4-275">指定したプロパティのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-275">Generates code for the specified property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMemberProperty" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GeneratePropertyReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GeneratePropertyReferenceExpression (System.CodeDom.CodePropertyReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GeneratePropertyReferenceExpression(class System.CodeDom.CodePropertyReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GeneratePropertyReferenceExpression (e As CodePropertyReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GeneratePropertyReferenceExpression(System::CodeDom::CodePropertyReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GeneratePropertyReferenceExpression : System.CodeDom.CodePropertyReferenceExpression -&gt; unit" Usage="codeGenerator.GeneratePropertyReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodePropertyReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-276">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-276">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-277">指定したプロパティ参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-277">Generates code for the specified property reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodePropertyReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GeneratePropertySetValueReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GeneratePropertySetValueReferenceExpression (System.CodeDom.CodePropertySetValueReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GeneratePropertySetValueReferenceExpression(class System.CodeDom.CodePropertySetValueReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GeneratePropertySetValueReferenceExpression (e As CodePropertySetValueReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GeneratePropertySetValueReferenceExpression(System::CodeDom::CodePropertySetValueReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GeneratePropertySetValueReferenceExpression : System.CodeDom.CodePropertySetValueReferenceExpression -&gt; unit" Usage="codeGenerator.GeneratePropertySetValueReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodePropertySetValueReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-278">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-278">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-279">指定したプロパティ セット値参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-279">Generates code for the specified property set value reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodePropertySetValueReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateRemoveEventStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateRemoveEventStatement (System.CodeDom.CodeRemoveEventStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateRemoveEventStatement(class System.CodeDom.CodeRemoveEventStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateRemoveEventStatement (e As CodeRemoveEventStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateRemoveEventStatement(System::CodeDom::CodeRemoveEventStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateRemoveEventStatement : System.CodeDom.CodeRemoveEventStatement -&gt; unit" Usage="codeGenerator.GenerateRemoveEventStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeRemoveEventStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-280">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-280">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-281">指定した削除イベント ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-281">Generates code for the specified remove event statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeRemoveEventStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSingleFloatValue">
      <MemberSignature Language="C#" Value="protected virtual void GenerateSingleFloatValue (float s);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSingleFloatValue(float32 s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateSingleFloatValue (s As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateSingleFloatValue(float s);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSingleFloatValue : single -&gt; unit&#xA;override this.GenerateSingleFloatValue : single -&gt; unit" Usage="codeGenerator.GenerateSingleFloatValue s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="088e4-282">コード生成の対象となる値。</span><span class="sxs-lookup"><span data-stu-id="088e4-282">The value to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-283">単精度浮動小数点数のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-283">Generates code for a single-precision floating point number.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSnippetCompileUnit">
      <MemberSignature Language="C#" Value="protected virtual void GenerateSnippetCompileUnit (System.CodeDom.CodeSnippetCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSnippetCompileUnit(class System.CodeDom.CodeSnippetCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateSnippetCompileUnit (e As CodeSnippetCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateSnippetCompileUnit(System::CodeDom::CodeSnippetCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSnippetCompileUnit : System.CodeDom.CodeSnippetCompileUnit -&gt; unit&#xA;override this.GenerateSnippetCompileUnit : System.CodeDom.CodeSnippetCompileUnit -&gt; unit" Usage="codeGenerator.GenerateSnippetCompileUnit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeSnippetCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-284">コード生成の対象となるリテラル コード片コンパイル単位。</span><span class="sxs-lookup"><span data-stu-id="088e4-284">The literal code fragment compile unit to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-285">指定したリテラル コード片コンパイル単位のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-285">Outputs the code of the specified literal code fragment compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeSnippetCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSnippetExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateSnippetExpression (System.CodeDom.CodeSnippetExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSnippetExpression(class System.CodeDom.CodeSnippetExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateSnippetExpression (e As CodeSnippetExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateSnippetExpression(System::CodeDom::CodeSnippetExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSnippetExpression : System.CodeDom.CodeSnippetExpression -&gt; unit" Usage="codeGenerator.GenerateSnippetExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeSnippetExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-286">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-286">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-287">指定したリテラル コード片式のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-287">Outputs the code of the specified literal code fragment expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeSnippetExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSnippetMember">
      <MemberSignature Language="C#" Value="protected abstract void GenerateSnippetMember (System.CodeDom.CodeSnippetTypeMember e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSnippetMember(class System.CodeDom.CodeSnippetTypeMember e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateSnippetMember (e As CodeSnippetTypeMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateSnippetMember(System::CodeDom::CodeSnippetTypeMember ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSnippetMember : System.CodeDom.CodeSnippetTypeMember -&gt; unit" Usage="codeGenerator.GenerateSnippetMember e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeSnippetTypeMember" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-288">コード生成の対象となるメンバー。</span><span class="sxs-lookup"><span data-stu-id="088e4-288">The member to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-289">指定したリテラル コード片クラス メンバーのコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-289">Outputs the code of the specified literal code fragment class member.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeSnippetTypeMember" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSnippetStatement">
      <MemberSignature Language="C#" Value="protected virtual void GenerateSnippetStatement (System.CodeDom.CodeSnippetStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSnippetStatement(class System.CodeDom.CodeSnippetStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateSnippetStatement (e As CodeSnippetStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateSnippetStatement(System::CodeDom::CodeSnippetStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSnippetStatement : System.CodeDom.CodeSnippetStatement -&gt; unit&#xA;override this.GenerateSnippetStatement : System.CodeDom.CodeSnippetStatement -&gt; unit" Usage="codeGenerator.GenerateSnippetStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeSnippetStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-290">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-290">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-291">指定したリテラル コード片ステートメントのコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-291">Outputs the code of the specified literal code fragment statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeSnippetStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateStatement">
      <MemberSignature Language="C#" Value="protected void GenerateStatement (System.CodeDom.CodeStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateStatement(class System.CodeDom.CodeStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateStatement (e As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateStatement(System::CodeDom::CodeStatement ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateStatement : System.CodeDom.CodeStatement -&gt; unit" Usage="codeGenerator.GenerateStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-292">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-292">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-293">指定したステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-293">Generates code for the specified statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="088e4-294"><paramref name="e" /> は有効な <see cref="T:System.CodeDom.CodeStatement" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="088e4-294"><paramref name="e" /> is not a valid <see cref="T:System.CodeDom.CodeStatement" />.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateStatements">
      <MemberSignature Language="C#" Value="protected void GenerateStatements (System.CodeDom.CodeStatementCollection stms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateStatements(class System.CodeDom.CodeStatementCollection stms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateStatements (stms As CodeStatementCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateStatements(System::CodeDom::CodeStatementCollection ^ stms);" />
      <MemberSignature Language="F#" Value="member this.GenerateStatements : System.CodeDom.CodeStatementCollection -&gt; unit" Usage="codeGenerator.GenerateStatements stms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stms" Type="System.CodeDom.CodeStatementCollection" />
      </Parameters>
      <Docs>
        <param name="stms"><span data-ttu-id="088e4-295">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-295">The statements to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-296">指定したステートメント コレクションのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-296">Generates code for the specified statement collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="GenerateThisReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateThisReferenceExpression (System.CodeDom.CodeThisReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateThisReferenceExpression(class System.CodeDom.CodeThisReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateThisReferenceExpression (e As CodeThisReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateThisReferenceExpression(System::CodeDom::CodeThisReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateThisReferenceExpression : System.CodeDom.CodeThisReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateThisReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeThisReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-297">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-297">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-298">指定した this 参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-298">Generates code for the specified this reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeThisReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateThrowExceptionStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateThrowExceptionStatement (System.CodeDom.CodeThrowExceptionStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateThrowExceptionStatement(class System.CodeDom.CodeThrowExceptionStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateThrowExceptionStatement (e As CodeThrowExceptionStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateThrowExceptionStatement(System::CodeDom::CodeThrowExceptionStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateThrowExceptionStatement : System.CodeDom.CodeThrowExceptionStatement -&gt; unit" Usage="codeGenerator.GenerateThrowExceptionStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeThrowExceptionStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-299">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-299">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-300">指定した throw 例外ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-300">Generates code for the specified throw exception statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeThrowExceptionStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTryCatchFinallyStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateTryCatchFinallyStatement (System.CodeDom.CodeTryCatchFinallyStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTryCatchFinallyStatement(class System.CodeDom.CodeTryCatchFinallyStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateTryCatchFinallyStatement (e As CodeTryCatchFinallyStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateTryCatchFinallyStatement(System::CodeDom::CodeTryCatchFinallyStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTryCatchFinallyStatement : System.CodeDom.CodeTryCatchFinallyStatement -&gt; unit" Usage="codeGenerator.GenerateTryCatchFinallyStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTryCatchFinallyStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-301">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-301">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-302">指定した <see langword="try...catch...finally" /> ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-302">Generates code for the specified <see langword="try...catch...finally" /> statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTryCatchFinallyStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeConstructor">
      <MemberSignature Language="C#" Value="protected abstract void GenerateTypeConstructor (System.CodeDom.CodeTypeConstructor e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeConstructor(class System.CodeDom.CodeTypeConstructor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateTypeConstructor (e As CodeTypeConstructor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateTypeConstructor(System::CodeDom::CodeTypeConstructor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeConstructor : System.CodeDom.CodeTypeConstructor -&gt; unit" Usage="codeGenerator.GenerateTypeConstructor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeConstructor" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-303">コード生成の対象となるクラス コンストラクター。</span><span class="sxs-lookup"><span data-stu-id="088e4-303">The class constructor to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-304">指定したクラス コンストラクターのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-304">Generates code for the specified class constructor.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeConstructor" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeEnd">
      <MemberSignature Language="C#" Value="protected abstract void GenerateTypeEnd (System.CodeDom.CodeTypeDeclaration e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeEnd(class System.CodeDom.CodeTypeDeclaration e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateTypeEnd (e As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateTypeEnd(System::CodeDom::CodeTypeDeclaration ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeEnd : System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateTypeEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-305">コード生成の対象となるクラスの終了。</span><span class="sxs-lookup"><span data-stu-id="088e4-305">The end of the class to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-306">指定したクラスの終了のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-306">Generates code for the specified end of the class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeOfExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateTypeOfExpression (System.CodeDom.CodeTypeOfExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeOfExpression(class System.CodeDom.CodeTypeOfExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateTypeOfExpression (e As CodeTypeOfExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateTypeOfExpression(System::CodeDom::CodeTypeOfExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeOfExpression : System.CodeDom.CodeTypeOfExpression -&gt; unit&#xA;override this.GenerateTypeOfExpression : System.CodeDom.CodeTypeOfExpression -&gt; unit" Usage="codeGenerator.GenerateTypeOfExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeOfExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-307">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-307">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-308">指定した型の式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-308">Generates code for the specified type of expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeOfExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeReferenceExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateTypeReferenceExpression (System.CodeDom.CodeTypeReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeReferenceExpression(class System.CodeDom.CodeTypeReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateTypeReferenceExpression (e As CodeTypeReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateTypeReferenceExpression(System::CodeDom::CodeTypeReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeReferenceExpression : System.CodeDom.CodeTypeReferenceExpression -&gt; unit&#xA;override this.GenerateTypeReferenceExpression : System.CodeDom.CodeTypeReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateTypeReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-309">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-309">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-310">指定した型参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-310">Generates code for the specified type reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypes">
      <MemberSignature Language="C#" Value="protected void GenerateTypes (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateTypes(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateTypes (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateTypes(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypes : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateTypes e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-311">クラス生成の対象となる名前空間。</span><span class="sxs-lookup"><span data-stu-id="088e4-311">The namespace to generate classes for.</span></span></param>
        <summary><span data-ttu-id="088e4-312">指定した名前空間とその名前空間に格納されているクラスのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-312">Generates code for the specified namespace and the classes it contains.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeStart">
      <MemberSignature Language="C#" Value="protected abstract void GenerateTypeStart (System.CodeDom.CodeTypeDeclaration e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeStart(class System.CodeDom.CodeTypeDeclaration e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateTypeStart (e As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateTypeStart(System::CodeDom::CodeTypeDeclaration ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeStart : System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateTypeStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-313">コード生成の対象となるクラスの開始。</span><span class="sxs-lookup"><span data-stu-id="088e4-313">The start of the class to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-314">指定したクラスの開始のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-314">Generates code for the specified start of the class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateVariableDeclarationStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateVariableDeclarationStatement (System.CodeDom.CodeVariableDeclarationStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateVariableDeclarationStatement(class System.CodeDom.CodeVariableDeclarationStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateVariableDeclarationStatement (e As CodeVariableDeclarationStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateVariableDeclarationStatement(System::CodeDom::CodeVariableDeclarationStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateVariableDeclarationStatement : System.CodeDom.CodeVariableDeclarationStatement -&gt; unit" Usage="codeGenerator.GenerateVariableDeclarationStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeVariableDeclarationStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-315">コード生成の対象となるステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-315">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-316">指定した変数宣言ステートメントのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-316">Generates code for the specified variable declaration statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeVariableDeclarationStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateVariableReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateVariableReferenceExpression (System.CodeDom.CodeVariableReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateVariableReferenceExpression(class System.CodeDom.CodeVariableReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateVariableReferenceExpression (e As CodeVariableReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateVariableReferenceExpression(System::CodeDom::CodeVariableReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateVariableReferenceExpression : System.CodeDom.CodeVariableReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateVariableReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-317">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-317">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-318">指定した変数参照式のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-318">Generates code for the specified variable reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeVariableReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="protected abstract string GetTypeOutput (System.CodeDom.CodeTypeReference value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetTypeOutput (value As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="codeGenerator.GetTypeOutput value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-319">名前が返される型。</span><span class="sxs-lookup"><span data-stu-id="088e4-319">The type whose name will be returned.</span></span></param>
        <summary><span data-ttu-id="088e4-320">指定したデータ型の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-320">Gets the name of the specified data type.</span></span></summary>
        <returns><span data-ttu-id="088e4-321">データ型参照の名前。</span><span class="sxs-lookup"><span data-stu-id="088e4-321">The name of the data type reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeReference" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="protected int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.Indent" />
      <MemberSignature Language="VB.NET" Value="Protected Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.CodeDom.Compiler.CodeGenerator.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-322">各インデント レベルにインデント幅として適用する空白文字の数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="088e4-322">Gets or sets the amount of spaces to indent each indentation level.</span></span></summary>
        <value><span data-ttu-id="088e4-323">各インデント レベルにインデント幅として適用する空白文字の数。</span><span class="sxs-lookup"><span data-stu-id="088e4-323">The number of spaces to indent for each indentation level.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-324">一般的に、コードのセグメントは、認識しやすいようにインデントされます。</span><span class="sxs-lookup"><span data-stu-id="088e4-324">Segments of code are commonly indented for ease of recognition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentClass">
      <MemberSignature Language="C#" Value="protected bool IsCurrentClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentClass" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentClass" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentClass { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentClass : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-325">生成されている現在のオブジェクトがクラスかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-325">Gets a value indicating whether the current object being generated is a class.</span></span></summary>
        <value><span data-ttu-id="088e4-326">現在のオブジェクトがクラスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-326"><see langword="true" /> if the current object is a class; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentDelegate">
      <MemberSignature Language="C#" Value="protected bool IsCurrentDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentDelegate" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentDelegate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentDelegate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentDelegate : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-327">生成されている現在のオブジェクトがデリゲートかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-327">Gets a value indicating whether the current object being generated is a delegate.</span></span></summary>
        <value><span data-ttu-id="088e4-328">現在のオブジェクトがデリゲートである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-328"><see langword="true" /> if the current object is a delegate; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentEnum">
      <MemberSignature Language="C#" Value="protected bool IsCurrentEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentEnum" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentEnum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentEnum { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentEnum : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-329">生成されている現在のオブジェクトが列挙体かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-329">Gets a value indicating whether the current object being generated is an enumeration.</span></span></summary>
        <value><span data-ttu-id="088e4-330">現在のオブジェクトが列挙体である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-330"><see langword="true" /> if the current object is an enumeration; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentInterface">
      <MemberSignature Language="C#" Value="protected bool IsCurrentInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentInterface" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentInterface As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentInterface { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentInterface : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-331">生成されている現在のオブジェクトがインターフェイスかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-331">Gets a value indicating whether the current object being generated is an interface.</span></span></summary>
        <value><span data-ttu-id="088e4-332">現在のオブジェクトがインターフェイスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-332"><see langword="true" /> if the current object is an interface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentStruct">
      <MemberSignature Language="C#" Value="protected bool IsCurrentStruct { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentStruct" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentStruct As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentStruct { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentStruct : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-333">生成されている現在のオブジェクトが値型または構造体かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-333">Gets a value indicating whether the current object being generated is a value type or struct.</span></span></summary>
        <value><span data-ttu-id="088e4-334">現在のオブジェクトが値型または構造体である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-334"><see langword="true" /> if the current object is a value type or struct; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="protected abstract bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool" Usage="codeGenerator.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-335">有効な識別子と競合するかどうかをテストする対象の値。</span><span class="sxs-lookup"><span data-stu-id="088e4-335">The value to test for conflicts with valid identifiers.</span></span></param>
        <summary><span data-ttu-id="088e4-336">指定した値が有効な識別子かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-336">Gets a value indicating whether the specified value is a valid identifier.</span></span></summary>
        <returns><span data-ttu-id="088e4-337">値が有効な識別子である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-337"><see langword="true" /> if the value is a valid identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidLanguageIndependentIdentifier">
      <MemberSignature Language="C#" Value="public static bool IsValidLanguageIndependentIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidLanguageIndependentIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidLanguageIndependentIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidLanguageIndependentIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidLanguageIndependentIdentifier : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-338">有効かどうかをテストする対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="088e4-338">The string to test for validity.</span></span></param>
        <summary><span data-ttu-id="088e4-339">指定した文字列が有効な識別子かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-339">Gets a value indicating whether the specified string is a valid identifier.</span></span></summary>
        <returns><span data-ttu-id="088e4-340">指定した文字列が有効な識別子である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-340"><see langword="true" /> if the specified string is a valid identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-341">このメソッドは、指定された文字列をチェックして、識別子フィールドをエスケープするために使用できる特定の文字が含まれていないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="088e4-341">This method checks the specified string to ensure that it does not contain certain characters that can be used to escape an identifier field.</span></span> <span data-ttu-id="088e4-342"><xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A> メソッドは、このメソッドを呼び出して文字列の検証を実行します。</span><span class="sxs-lookup"><span data-stu-id="088e4-342">The <xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A> method calls this method to perform string validation.</span></span> <span data-ttu-id="088e4-343"><xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A> メソッドを呼び出し、そこからコードを生成する前に <xref:System.CodeDom.CodeCompileUnit> を渡すと、特定の文字シーケンスを使用して、識別子フィールド内に非表示のコードを含めることができなくなる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="088e4-343">Calling the <xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A> method and passing a <xref:System.CodeDom.CodeCompileUnit> before generating code from it can prevent the use of certain character sequences to include hidden code within an identifier field.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="088e4-344">直前の呼び出し元に対する完全な信頼の場合。</span><span class="sxs-lookup"><span data-stu-id="088e4-344">for full trust for the immediate caller.</span></span> <span data-ttu-id="088e4-345">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="088e4-345">This member cannot be used by partially trusted code.</span></span></permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)" />
      </Docs>
    </Member>
    <Member MemberName="NullToken">
      <MemberSignature Language="C#" Value="protected abstract string NullToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullToken" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.NullToken" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property NullToken As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ NullToken { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NullToken : string" Usage="System.CodeDom.Compiler.CodeGenerator.NullToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-346"><see langword="null" /> を表すトークンを取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-346">Gets the token that represents <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="088e4-347"><see langword="null" /> を表すトークン。</span><span class="sxs-lookup"><span data-stu-id="088e4-347">The token that represents <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected System.CodeDom.Compiler.CodeGeneratorOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeGeneratorOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.Options" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Options As CodeGeneratorOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::CodeDom::Compiler::CodeGeneratorOptions ^ Options { System::CodeDom::Compiler::CodeGeneratorOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.CodeDom.Compiler.CodeGeneratorOptions" Usage="System.CodeDom.Compiler.CodeGenerator.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeGeneratorOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-348">コード ジェネレーターで使用されるオプションを取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-348">Gets the options to be used by the code generator.</span></span></summary>
        <value><span data-ttu-id="088e4-349">コード ジェネレーターで使用されるオプションを示すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="088e4-349">An object that indicates the options for the code generator to use.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="protected System.IO.TextWriter Output { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Output" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.Output" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Output As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Output : System.IO.TextWriter" Usage="System.CodeDom.Compiler.CodeGenerator.Output" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="088e4-350">出力に使用するテキスト ライターを取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-350">Gets the text writer to use for output.</span></span></summary>
        <value><span data-ttu-id="088e4-351">出力に使用するテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="088e4-351">The text writer to use for output.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="OutputAttributeArgument">
      <MemberSignature Language="C#" Value="protected virtual void OutputAttributeArgument (System.CodeDom.CodeAttributeArgument arg);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputAttributeArgument(class System.CodeDom.CodeAttributeArgument arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputAttributeArgument (arg As CodeAttributeArgument)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputAttributeArgument(System::CodeDom::CodeAttributeArgument ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member OutputAttributeArgument : System.CodeDom.CodeAttributeArgument -&gt; unit&#xA;override this.OutputAttributeArgument : System.CodeDom.CodeAttributeArgument -&gt; unit" Usage="codeGenerator.OutputAttributeArgument arg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.CodeDom.CodeAttributeArgument" />
      </Parameters>
      <Docs>
        <param name="arg"><span data-ttu-id="088e4-352">コード生成の対象となる属性引数。</span><span class="sxs-lookup"><span data-stu-id="088e4-352">The attribute argument to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-353">属性ブロックにある引数を出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-353">Outputs an argument in an attribute block.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeArgument" />
      </Docs>
    </Member>
    <Member MemberName="OutputAttributeDeclarations">
      <MemberSignature Language="C#" Value="protected virtual void OutputAttributeDeclarations (System.CodeDom.CodeAttributeDeclarationCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputAttributeDeclarations(class System.CodeDom.CodeAttributeDeclarationCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputAttributeDeclarations (attributes As CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputAttributeDeclarations(System::CodeDom::CodeAttributeDeclarationCollection ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member OutputAttributeDeclarations : System.CodeDom.CodeAttributeDeclarationCollection -&gt; unit&#xA;override this.OutputAttributeDeclarations : System.CodeDom.CodeAttributeDeclarationCollection -&gt; unit" Usage="codeGenerator.OutputAttributeDeclarations attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="088e4-354">コード生成の対象となる属性。</span><span class="sxs-lookup"><span data-stu-id="088e4-354">The attributes to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-355">指定した属性宣言コレクションのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-355">Generates code for the specified attribute declaration collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />
      </Docs>
    </Member>
    <Member MemberName="OutputDirection">
      <MemberSignature Language="C#" Value="protected virtual void OutputDirection (System.CodeDom.FieldDirection dir);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputDirection(valuetype System.CodeDom.FieldDirection dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputDirection (dir As FieldDirection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputDirection(System::CodeDom::FieldDirection dir);" />
      <MemberSignature Language="F#" Value="abstract member OutputDirection : System.CodeDom.FieldDirection -&gt; unit&#xA;override this.OutputDirection : System.CodeDom.FieldDirection -&gt; unit" Usage="codeGenerator.OutputDirection dir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.CodeDom.FieldDirection" />
      </Parameters>
      <Docs>
        <param name="dir"><span data-ttu-id="088e4-356">フィールドの属性を示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="088e4-356">One of the enumeration values that indicates the attribute of the field.</span></span></param>
        <summary><span data-ttu-id="088e4-357">指定した <see cref="T:System.CodeDom.FieldDirection" /> のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-357">Generates code for the specified <see cref="T:System.CodeDom.FieldDirection" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.FieldDirection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OutputExpressionList">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="088e4-358">指定した式リストのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-358">Generates code for the specified expression list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OutputExpressionList">
      <MemberSignature Language="C#" Value="protected virtual void OutputExpressionList (System.CodeDom.CodeExpressionCollection expressions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputExpressionList(class System.CodeDom.CodeExpressionCollection expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputExpressionList (expressions As CodeExpressionCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputExpressionList(System::CodeDom::CodeExpressionCollection ^ expressions);" />
      <MemberSignature Language="F#" Value="abstract member OutputExpressionList : System.CodeDom.CodeExpressionCollection -&gt; unit&#xA;override this.OutputExpressionList : System.CodeDom.CodeExpressionCollection -&gt; unit" Usage="codeGenerator.OutputExpressionList expressions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.CodeDom.CodeExpressionCollection" />
      </Parameters>
      <Docs>
        <param name="expressions"><span data-ttu-id="088e4-359">コード生成の対象となる式。</span><span class="sxs-lookup"><span data-stu-id="088e4-359">The expressions to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-360">指定した式リストのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-360">Generates code for the specified expression list.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="OutputExpressionList">
      <MemberSignature Language="C#" Value="protected virtual void OutputExpressionList (System.CodeDom.CodeExpressionCollection expressions, bool newlineBetweenItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputExpressionList(class System.CodeDom.CodeExpressionCollection expressions, bool newlineBetweenItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputExpressionList (expressions As CodeExpressionCollection, newlineBetweenItems As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputExpressionList(System::CodeDom::CodeExpressionCollection ^ expressions, bool newlineBetweenItems);" />
      <MemberSignature Language="F#" Value="abstract member OutputExpressionList : System.CodeDom.CodeExpressionCollection * bool -&gt; unit&#xA;override this.OutputExpressionList : System.CodeDom.CodeExpressionCollection * bool -&gt; unit" Usage="codeGenerator.OutputExpressionList (expressions, newlineBetweenItems)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.CodeDom.CodeExpressionCollection" />
        <Parameter Name="newlineBetweenItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expressions"><span data-ttu-id="088e4-361">コード生成の対象となる式。</span><span class="sxs-lookup"><span data-stu-id="088e4-361">The expressions to generate code for.</span></span></param>
        <param name="newlineBetweenItems"><span data-ttu-id="088e4-362">各項目の後に改行文字を挿入する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-362"><see langword="true" /> to insert a new line after each item; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="088e4-363">指定した式リストのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-363">Generates code for the specified expression list.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="OutputFieldScopeModifier">
      <MemberSignature Language="C#" Value="protected virtual void OutputFieldScopeModifier (System.CodeDom.MemberAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputFieldScopeModifier(valuetype System.CodeDom.MemberAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputFieldScopeModifier (attributes As MemberAttributes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputFieldScopeModifier(System::CodeDom::MemberAttributes attributes);" />
      <MemberSignature Language="F#" Value="abstract member OutputFieldScopeModifier : System.CodeDom.MemberAttributes -&gt; unit&#xA;override this.OutputFieldScopeModifier : System.CodeDom.MemberAttributes -&gt; unit" Usage="codeGenerator.OutputFieldScopeModifier attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="088e4-364">属性を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="088e4-364">One of the enumeration values that specifies the attributes.</span></span></param>
        <summary><span data-ttu-id="088e4-365">指定した属性に対応するフィールド スコープ修飾子を出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-365">Outputs a field scope modifier that corresponds to the specified attributes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.MemberAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OutputIdentifier">
      <MemberSignature Language="C#" Value="protected virtual void OutputIdentifier (string ident);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputIdentifier(string ident) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputIdentifier (ident As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputIdentifier(System::String ^ ident);" />
      <MemberSignature Language="F#" Value="abstract member OutputIdentifier : string -&gt; unit&#xA;override this.OutputIdentifier : string -&gt; unit" Usage="codeGenerator.OutputIdentifier ident" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ident" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ident"><span data-ttu-id="088e4-366">出力する識別子。</span><span class="sxs-lookup"><span data-stu-id="088e4-366">The identifier to output.</span></span></param>
        <summary><span data-ttu-id="088e4-367">指定した識別子を出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-367">Outputs the specified identifier.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMemberAccessModifier">
      <MemberSignature Language="C#" Value="protected virtual void OutputMemberAccessModifier (System.CodeDom.MemberAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputMemberAccessModifier(valuetype System.CodeDom.MemberAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputMemberAccessModifier (attributes As MemberAttributes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputMemberAccessModifier(System::CodeDom::MemberAttributes attributes);" />
      <MemberSignature Language="F#" Value="abstract member OutputMemberAccessModifier : System.CodeDom.MemberAttributes -&gt; unit&#xA;override this.OutputMemberAccessModifier : System.CodeDom.MemberAttributes -&gt; unit" Usage="codeGenerator.OutputMemberAccessModifier attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="088e4-368">コード生成の対象となるメンバー アクセス修飾子を示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="088e4-368">One of the enumeration values that indicates the member access modifier to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-369">指定したメンバー アクセス修飾子のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-369">Generates code for the specified member access modifier.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.MemberAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OutputMemberScopeModifier">
      <MemberSignature Language="C#" Value="protected virtual void OutputMemberScopeModifier (System.CodeDom.MemberAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputMemberScopeModifier(valuetype System.CodeDom.MemberAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputMemberScopeModifier (attributes As MemberAttributes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputMemberScopeModifier(System::CodeDom::MemberAttributes attributes);" />
      <MemberSignature Language="F#" Value="abstract member OutputMemberScopeModifier : System.CodeDom.MemberAttributes -&gt; unit&#xA;override this.OutputMemberScopeModifier : System.CodeDom.MemberAttributes -&gt; unit" Usage="codeGenerator.OutputMemberScopeModifier attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="088e4-370">コード生成の対象となるメンバー スコープ修飾子を示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="088e4-370">One of the enumeration values that indicates the member scope modifier to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-371">指定したメンバー スコープ修飾子のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-371">Generates code for the specified member scope modifier.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.MemberAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OutputOperator">
      <MemberSignature Language="C#" Value="protected virtual void OutputOperator (System.CodeDom.CodeBinaryOperatorType op);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputOperator(valuetype System.CodeDom.CodeBinaryOperatorType op) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputOperator (op As CodeBinaryOperatorType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputOperator(System::CodeDom::CodeBinaryOperatorType op);" />
      <MemberSignature Language="F#" Value="abstract member OutputOperator : System.CodeDom.CodeBinaryOperatorType -&gt; unit&#xA;override this.OutputOperator : System.CodeDom.CodeBinaryOperatorType -&gt; unit" Usage="codeGenerator.OutputOperator op" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.CodeDom.CodeBinaryOperatorType" />
      </Parameters>
      <Docs>
        <param name="op"><span data-ttu-id="088e4-372">コード生成の対象となる演算子。</span><span class="sxs-lookup"><span data-stu-id="088e4-372">The operator to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-373">指定した演算子のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-373">Generates code for the specified operator.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeBinaryOperatorType" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="protected virtual void OutputParameters (System.CodeDom.CodeParameterDeclarationExpressionCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputParameters(class System.CodeDom.CodeParameterDeclarationExpressionCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputParameters (parameters As CodeParameterDeclarationExpressionCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputParameters(System::CodeDom::CodeParameterDeclarationExpressionCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member OutputParameters : System.CodeDom.CodeParameterDeclarationExpressionCollection -&gt; unit&#xA;override this.OutputParameters : System.CodeDom.CodeParameterDeclarationExpressionCollection -&gt; unit" Usage="codeGenerator.OutputParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.CodeDom.CodeParameterDeclarationExpressionCollection" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="088e4-374">コード生成の対象となるパラメーター宣言式。</span><span class="sxs-lookup"><span data-stu-id="088e4-374">The parameter declaration expressions to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-375">指定されたパラメーターのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-375">Generates code for the specified parameters.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="OutputType">
      <MemberSignature Language="C#" Value="protected abstract void OutputType (System.CodeDom.CodeTypeReference typeRef);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputType(class System.CodeDom.CodeTypeReference typeRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OutputType (typeRef As CodeTypeReference)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OutputType(System::CodeDom::CodeTypeReference ^ typeRef);" />
      <MemberSignature Language="F#" Value="abstract member OutputType : System.CodeDom.CodeTypeReference -&gt; unit" Usage="codeGenerator.OutputType typeRef" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeRef" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="typeRef"><span data-ttu-id="088e4-376">コード生成の対象となる型。</span><span class="sxs-lookup"><span data-stu-id="088e4-376">The type to generate code for.</span></span></param>
        <summary><span data-ttu-id="088e4-377">指定した型のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-377">Generates code for the specified type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypeAttributes">
      <MemberSignature Language="C#" Value="protected virtual void OutputTypeAttributes (System.Reflection.TypeAttributes attributes, bool isStruct, bool isEnum);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTypeAttributes(valuetype System.Reflection.TypeAttributes attributes, bool isStruct, bool isEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTypeAttributes (attributes As TypeAttributes, isStruct As Boolean, isEnum As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTypeAttributes(System::Reflection::TypeAttributes attributes, bool isStruct, bool isEnum);" />
      <MemberSignature Language="F#" Value="abstract member OutputTypeAttributes : System.Reflection.TypeAttributes * bool * bool -&gt; unit&#xA;override this.OutputTypeAttributes : System.Reflection.TypeAttributes * bool * bool -&gt; unit" Usage="codeGenerator.OutputTypeAttributes (attributes, isStruct, isEnum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="isStruct" Type="System.Boolean" />
        <Parameter Name="isEnum" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="088e4-378">コード生成の対象となる型属性を示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="088e4-378">One of the enumeration values that indicates the type attributes to generate code for.</span></span></param>
        <param name="isStruct"><span data-ttu-id="088e4-379">型が構造体である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-379"><see langword="true" /> if the type is a struct; otherwise, <see langword="false" />.</span></span></param>
        <param name="isEnum"><span data-ttu-id="088e4-380">型が列挙型である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-380"><see langword="true" /> if the type is an enum; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="088e4-381">指定した型属性のコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-381">Generates code for the specified type attributes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.TypeAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OutputTypeNamePair">
      <MemberSignature Language="C#" Value="protected virtual void OutputTypeNamePair (System.CodeDom.CodeTypeReference typeRef, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTypeNamePair(class System.CodeDom.CodeTypeReference typeRef, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTypeNamePair (typeRef As CodeTypeReference, name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTypeNamePair(System::CodeDom::CodeTypeReference ^ typeRef, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member OutputTypeNamePair : System.CodeDom.CodeTypeReference * string -&gt; unit&#xA;override this.OutputTypeNamePair : System.CodeDom.CodeTypeReference * string -&gt; unit" Usage="codeGenerator.OutputTypeNamePair (typeRef, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeRef" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeRef"><span data-ttu-id="088e4-382">型。</span><span class="sxs-lookup"><span data-stu-id="088e4-382">The type.</span></span></param>
        <param name="name"><span data-ttu-id="088e4-383">オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="088e4-383">The name for the object.</span></span></param>
        <summary><span data-ttu-id="088e4-384">指定したオブジェクト型とオブジェクト名の組み合わせのコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-384">Generates code for the specified object type and name pair.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteSnippetString">
      <MemberSignature Language="C#" Value="protected abstract string QuoteSnippetString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string QuoteSnippetString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function QuoteSnippetString (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ QuoteSnippetString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member QuoteSnippetString : string -&gt; string" Usage="codeGenerator.QuoteSnippetString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-385">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="088e4-385">The string to convert.</span></span></param>
        <summary><span data-ttu-id="088e4-386">エスケープ コード書式を付けることによって、指定した文字列を変換します。</span><span class="sxs-lookup"><span data-stu-id="088e4-386">Converts the specified string by formatting it with escape codes.</span></span></summary>
        <returns><span data-ttu-id="088e4-387">変換された文字列。</span><span class="sxs-lookup"><span data-stu-id="088e4-387">The converted string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-388">このメソッドは、エスケープコード文字で書式設定された、指定された文字列の変更後のバージョンを返します。</span><span class="sxs-lookup"><span data-stu-id="088e4-388">This method returns a modified version of the specified string that has been formatted with escape code characters.</span></span> <span data-ttu-id="088e4-389">たとえば、`"`を表すために `/"` が使用される場合があります。</span><span class="sxs-lookup"><span data-stu-id="088e4-389">For example, `/"` might be used to represent `"`.</span></span> <span data-ttu-id="088e4-390">これらのエスケープコードを使用して、言語の構文と競合する可能性がある、指定した文字列の要素を置換します。</span><span class="sxs-lookup"><span data-stu-id="088e4-390">These escape codes are used to replace elements of the specified string that might otherwise conflict with language syntax.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="protected abstract bool Supports (System.CodeDom.Compiler.GeneratorSupport support);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport support) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Supports (support As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool Supports(System::CodeDom::Compiler::GeneratorSupport support);" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeGenerator.Supports support" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="support" Type="System.CodeDom.Compiler.GeneratorSupport" />
      </Parameters>
      <Docs>
        <param name="support"><span data-ttu-id="088e4-391">コードを生成できるかどうかをテストする対象の型。</span><span class="sxs-lookup"><span data-stu-id="088e4-391">The type of code generation support to test for.</span></span></param>
        <summary><span data-ttu-id="088e4-392">指定したコードを生成できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-392">Gets a value indicating whether the specified code generation support is provided.</span></span></summary>
        <returns><span data-ttu-id="088e4-393">指定したコードを生成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-393"><see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="string ICodeGenerator.CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CreateEscapedIdentifier (value As String) As String Implements ICodeGenerator.CreateEscapedIdentifier" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System::String ^ value) = System::CodeDom::Compiler::ICodeGenerator::CreateEscapedIdentifier;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-394">エスケープ識別子を作成する対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="088e4-394">The string to create an escaped identifier for.</span></span></param>
        <summary><span data-ttu-id="088e4-395">指定した値のエスケープ識別子を作成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-395">Creates an escaped identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="088e4-396">その値のエスケープ識別子。</span><span class="sxs-lookup"><span data-stu-id="088e4-396">The escaped identifier for the value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier">
      <MemberSignature Language="C#" Value="string ICodeGenerator.CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CreateValidIdentifier (value As String) As String Implements ICodeGenerator.CreateValidIdentifier" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System::String ^ value) = System::CodeDom::Compiler::ICodeGenerator::CreateValidIdentifier;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-397">有効な識別子を作成する対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="088e4-397">The string to generate a valid identifier for.</span></span></param>
        <summary><span data-ttu-id="088e4-398">指定した値の有効な識別子を作成します。</span><span class="sxs-lookup"><span data-stu-id="088e4-398">Creates a valid identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="088e4-399">指定した値の有効な識別子。</span><span class="sxs-lookup"><span data-stu-id="088e4-399">A valid identifier for the specified value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromCompileUnit (e As CodeCompileUnit, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromCompileUnit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromCompileUnit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-400">コードを生成する CodeDOM コンパイル ユニット。</span><span class="sxs-lookup"><span data-stu-id="088e4-400">The CodeDOM compilation unit to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="088e4-401">コードの出力先となるテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="088e4-401">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="088e4-402">コード生成に使用するオプション。</span><span class="sxs-lookup"><span data-stu-id="088e4-402">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="088e4-403">指定した Code Document Object Model (CodeDOM) の コンパイル ユニットのコードを生成し、指定したオプションを使用して、指定したテキスト ライターに出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-403">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="088e4-404"><paramref name="w" /> が使用できません。</span><span class="sxs-lookup"><span data-stu-id="088e4-404"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="088e4-405">メソッドの呼び出しが行われる前に <paramref name="w" /> が閉じられた可能性があります。</span><span class="sxs-lookup"><span data-stu-id="088e4-405"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(class System.CodeDom.CodeExpression e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromExpression (e As CodeExpression, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromExpression" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromExpression;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-406">コードを生成する式。</span><span class="sxs-lookup"><span data-stu-id="088e4-406">The expression to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="088e4-407">コードの出力先となるテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="088e4-407">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="088e4-408">コード生成に使用するオプション。</span><span class="sxs-lookup"><span data-stu-id="088e4-408">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="088e4-409">指定した Code Document Object Model (CodeDOM) の式のコードを生成し、指定したテキスト ライターに出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-409">Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="088e4-410"><paramref name="w" /> が使用できません。</span><span class="sxs-lookup"><span data-stu-id="088e4-410"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="088e4-411">メソッドの呼び出しが行われる前に <paramref name="w" /> が閉じられた可能性があります。</span><span class="sxs-lookup"><span data-stu-id="088e4-411"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromNamespace (e As CodeNamespace, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-412">コード生成の対象となる名前空間。</span><span class="sxs-lookup"><span data-stu-id="088e4-412">The namespace to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="088e4-413">コードの出力先となるテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="088e4-413">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="088e4-414">コード生成に使用するオプション。</span><span class="sxs-lookup"><span data-stu-id="088e4-414">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="088e4-415">指定した Code Document Object Model (CodeDOM) の名前空間のコードを生成し、指定したオプションを使用して、指定したテキスト ライターに出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-415">Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="088e4-416"><paramref name="w" /> が使用できません。</span><span class="sxs-lookup"><span data-stu-id="088e4-416"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="088e4-417">メソッドの呼び出しが行われる前に <paramref name="w" /> が閉じられた可能性があります。</span><span class="sxs-lookup"><span data-stu-id="088e4-417"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(class System.CodeDom.CodeStatement e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromStatement (e As CodeStatement, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromStatement" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromStatement;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-418">翻訳する CodeDOM 要素を含むステートメント。</span><span class="sxs-lookup"><span data-stu-id="088e4-418">The statement that contains the CodeDOM elements to translate.</span></span></param>
        <param name="w"><span data-ttu-id="088e4-419">コードの出力先となるテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="088e4-419">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="088e4-420">コード生成に使用するオプション。</span><span class="sxs-lookup"><span data-stu-id="088e4-420">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="088e4-421">指定した Code Document Object Model (CodeDOM) のステートメントのコードを生成し、指定したオプションを使用して、指定したテキスト ライターに出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-421">Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="088e4-422"><paramref name="w" /> が使用できません。</span><span class="sxs-lookup"><span data-stu-id="088e4-422"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="088e4-423">メソッドの呼び出しが行われる前に <paramref name="w" /> が閉じられた可能性があります。</span><span class="sxs-lookup"><span data-stu-id="088e4-423"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromType (e As CodeTypeDeclaration, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromType" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-424">コード生成の対象となる型。</span><span class="sxs-lookup"><span data-stu-id="088e4-424">The type to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="088e4-425">コードの出力先となるテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="088e4-425">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="088e4-426">コード生成に使用するオプション。</span><span class="sxs-lookup"><span data-stu-id="088e4-426">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="088e4-427">指定した Code Document Object Model (CodeDOM) の型宣言のコードを生成し、指定したオプションを使用して、指定したテキスト ライターに出力します。</span><span class="sxs-lookup"><span data-stu-id="088e4-427">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="088e4-428"><paramref name="w" /> が使用できません。</span><span class="sxs-lookup"><span data-stu-id="088e4-428"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="088e4-429">メソッドの呼び出しが行われる前に <paramref name="w" /> が閉じられた可能性があります。</span><span class="sxs-lookup"><span data-stu-id="088e4-429"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput">
      <MemberSignature Language="C#" Value="string ICodeGenerator.GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeOutput (type As CodeTypeReference) As String Implements ICodeGenerator.GetTypeOutput" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System::CodeDom::CodeTypeReference ^ type) = System::CodeDom::Compiler::ICodeGenerator::GetTypeOutput;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="088e4-430">返す型。</span><span class="sxs-lookup"><span data-stu-id="088e4-430">The type to return.</span></span></param>
        <summary><span data-ttu-id="088e4-431">指定した <see cref="T:System.CodeDom.CodeTypeReference" /> で示される型を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-431">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span></span></summary>
        <returns><span data-ttu-id="088e4-432">データ型参照の名前。</span><span class="sxs-lookup"><span data-stu-id="088e4-432">The name of the data type reference.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier">
      <MemberSignature Language="C#" Value="bool ICodeGenerator.IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsValidIdentifier (value As String) As Boolean Implements ICodeGenerator.IsValidIdentifier" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System::String ^ value) = System::CodeDom::Compiler::ICodeGenerator::IsValidIdentifier;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-433">評価対象の値です。</span><span class="sxs-lookup"><span data-stu-id="088e4-433">The value to test.</span></span></param>
        <summary><span data-ttu-id="088e4-434">指定した値が現在の言語で有効な識別子かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-434">Gets a value that indicates whether the specified value is a valid identifier for the current language.</span></span></summary>
        <returns><span data-ttu-id="088e4-435"><see langword="true" /> パラメーターが有効な識別子である場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-435"><see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.Supports">
      <MemberSignature Language="C#" Value="bool ICodeGenerator.Supports (System.CodeDom.Compiler.GeneratorSupport support);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.CodeDom.Compiler.ICodeGenerator.Supports(valuetype System.CodeDom.Compiler.GeneratorSupport support) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)" />
      <MemberSignature Language="VB.NET" Value="Function Supports (support As GeneratorSupport) As Boolean Implements ICodeGenerator.Supports" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.CodeDom.Compiler.ICodeGenerator.Supports(System::CodeDom::Compiler::GeneratorSupport support) = System::CodeDom::Compiler::ICodeGenerator::Supports;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="support" Type="System.CodeDom.Compiler.GeneratorSupport" />
      </Parameters>
      <Docs>
        <param name="support"><span data-ttu-id="088e4-436">コード ジェネレーターがサポートしているかどうかをテストする対象の機能。</span><span class="sxs-lookup"><span data-stu-id="088e4-436">The capabilities to test the generator for.</span></span></param>
        <summary><span data-ttu-id="088e4-437">ジェネレーターが、指定した <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> オブジェクトで表される言語機能のサポートを提供するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="088e4-437">Gets a value indicating whether the generator provides support for the language features represented by the specified <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object.</span></span></summary>
        <returns><span data-ttu-id="088e4-438">指定した機能がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="088e4-438"><see langword="true" /> if the specified capabilities are supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier">
      <MemberSignature Language="C#" Value="void ICodeGenerator.ValidateIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub ValidateIdentifier (value As String) Implements ICodeGenerator.ValidateIdentifier" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System::String ^ value) = System::CodeDom::Compiler::ICodeGenerator::ValidateIdentifier;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-439">検証する識別子。</span><span class="sxs-lookup"><span data-stu-id="088e4-439">The identifier to validate.</span></span></param>
        <summary><span data-ttu-id="088e4-440">指定した値が有効な識別子ではない場合に、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="088e4-440">Throws an exception if the specified value is not a valid identifier.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateIdentifier">
      <MemberSignature Language="C#" Value="protected virtual void ValidateIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateIdentifier (value As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ValidateIdentifier : string -&gt; unit&#xA;override this.ValidateIdentifier : string -&gt; unit" Usage="codeGenerator.ValidateIdentifier value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="088e4-441">識別子として有効かどうかをテストする対象の識別子。</span><span class="sxs-lookup"><span data-stu-id="088e4-441">The identifier to test for validity as an identifier.</span></span></param>
        <summary><span data-ttu-id="088e4-442">指定した文字列が有効な識別子ではない場合に、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="088e4-442">Throws an exception if the specified string is not a valid identifier.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="088e4-443">指定した識別子が無効な場合、または予約済みキーワードや言語キーワードと競合する場合。</span><span class="sxs-lookup"><span data-stu-id="088e4-443">If the specified identifier is invalid or conflicts with reserved or language keywords.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateIdentifiers">
      <MemberSignature Language="C#" Value="public static void ValidateIdentifiers (System.CodeDom.CodeObject e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateIdentifiers(class System.CodeDom.CodeObject e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidateIdentifiers (e As CodeObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateIdentifiers(System::CodeDom::CodeObject ^ e);" />
      <MemberSignature Language="F#" Value="static member ValidateIdentifiers : System.CodeDom.CodeObject -&gt; unit" Usage="System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeObject" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="088e4-444">無効な識別子をテストするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="088e4-444">An object to test for invalid identifiers.</span></span></param>
        <summary><span data-ttu-id="088e4-445">指定した <see cref="T:System.CodeDom.CodeObject" /> または <see cref="N:System.CodeDom" /> のツリーに格納されている各識別子フィールドの検証を試みます。</span><span class="sxs-lookup"><span data-stu-id="088e4-445">Attempts to validate each identifier field contained in the specified <see cref="T:System.CodeDom.CodeObject" /> or <see cref="N:System.CodeDom" /> tree.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="088e4-446"><xref:System.CodeDom.CodeObject> オブジェクトの識別子フィールドに、セキュリティ違反を許容するフィールドエスケープ文字と非表示コードを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="088e4-446">It is possible for the identifier fields of <xref:System.CodeDom.CodeObject> objects to contain field escape characters and hidden code which can allow security violations.</span></span> <span data-ttu-id="088e4-447">このメソッドは、<xref:System.CodeDom> ツリー内の各 <xref:System.CodeDom.CodeObject> のリテラルフィールドで、コードを非表示にするために使用できる文字を確認し、識別子フィールドに無効な文字が含まれている場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="088e4-447">This method checks the literal fields of each <xref:System.CodeDom.CodeObject> in a <xref:System.CodeDom> tree for characters which could be used to hide code, and throws an exception if an identifier field contains an invalid character.</span></span>  
  
 <span data-ttu-id="088e4-448">このメソッドは、<xref:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier%2A> メソッドを呼び出して、指定された <xref:System.CodeDom.CodeObject> または <xref:System.CodeDom> ツリー内の各識別子を検証し、識別子が無効であるか、または無効な文字を含んでいる場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="088e4-448">This method calls the <xref:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier%2A> method to validate each identifier in the specified <xref:System.CodeDom.CodeObject> or <xref:System.CodeDom> tree, and throws an exception if an identifier is invalid or contains invalid characters.</span></span>  
  
 <span data-ttu-id="088e4-449">このメソッドを呼び出し、識別子フィールド内に非表示のコードを含めるために使用できる特定の文字シーケンスの使用をブロックするコードを生成する前に、生成するコードグラフを含む <xref:System.CodeDom.CodeCompileUnit> を渡します。</span><span class="sxs-lookup"><span data-stu-id="088e4-449">Call this method and pass it the <xref:System.CodeDom.CodeCompileUnit> containing the code graph to generate before generating code to block the use of certain character sequences that can be used to include hidden code within an identifier field.</span></span> <span data-ttu-id="088e4-450">このメソッドは、コード生成メソッドによって自動的に呼び出されるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="088e4-450">This method is not called automatically by any generate code methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="088e4-451">指定した <see cref="T:System.CodeDom.CodeObject" /> に無効な識別子が含まれています。</span><span class="sxs-lookup"><span data-stu-id="088e4-451">The specified <see cref="T:System.CodeDom.CodeObject" /> contains an invalid identifier.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="088e4-452">直前の呼び出し元に対する完全な信頼の場合。</span><span class="sxs-lookup"><span data-stu-id="088e4-452">for full trust for the immediate caller.</span></span> <span data-ttu-id="088e4-453">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="088e4-453">This member cannot be used by partially trusted code.</span></span></permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
