<Type Name="SqlMethodAttribute" FullName="Microsoft.SqlServer.Server.SqlMethodAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5e722cc2e3d7948332a1e78b419ed93e228a6043" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75156555" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlMethodAttribute : Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlMethodAttribute extends Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlMethodAttribute&#xA;Inherits SqlFunctionAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMethodAttribute sealed : Microsoft::SqlServer::Server::SqlFunctionAttribute" />
  <TypeSignature Language="F#" Value="type SqlMethodAttribute = class&#xA;    inherit SqlFunctionAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Server.SqlFunctionAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-2.2;netcore-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="72ed3-101">ユーザー定義型 (UDT) が持つメソッドまたはプロパティの決定論とデータ アクセス プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="72ed3-101">Indicates the determinism and data access properties of a method or property on a user-defined type (UDT).</span></span> <span data-ttu-id="72ed3-102">この属性には、型を SQL Server に登録する際に使用される物理的な特性を反映した、いくつかのプロパティが格納されます。</span><span class="sxs-lookup"><span data-stu-id="72ed3-102">The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72ed3-103">プロパティの場合は、setter または getter で直接 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72ed3-103">For a property, the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> should be used on the setter or the getter directly.</span></span>  
  
 <span data-ttu-id="72ed3-104"><xref:Microsoft.SqlServer.Server.SqlMethodAttribute> は <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>から継承されるため、<xref:Microsoft.SqlServer.Server.SqlMethodAttribute> は `TableDefinition` から `FillRowMethodName` および <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>のフィールドを継承します。</span><span class="sxs-lookup"><span data-stu-id="72ed3-104"><xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits from a <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>, so <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits the `FillRowMethodName` and `TableDefinition` fields from <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>.</span></span> <span data-ttu-id="72ed3-105">テーブル値メソッドを記述することはできないことに注意してください。ただし、これらのフィールドの名前では可能であることが示唆されている場合があります。</span><span class="sxs-lookup"><span data-stu-id="72ed3-105">Note that it is not possible to write a table-valued method, although the names of these fields might suggest that it is possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72ed3-106">次の例は、メソッドが型の null インスタンスで呼び出されないこと、メソッドが型の状態を変更しないこと、およびメソッドの呼び出しに `null` パラメーターが指定された場合にメソッドが呼び出されないことを示すために属性が設定されている UDT メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="72ed3-106">The following example shows a UDT method that is attributed to indicate that the method will not be invoked on null instances of the type, that the method will not change the state of the type, and that the method will not be called when `null` parameters are supplied to the method invocation.</span></span>  
  
 [!code-csharp[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72ed3-107">ユーザー定義型 (UDT) に対する属性。UDT が持つメソッドまたはプロパティの決定論とデータ アクセス プロパティを指定するときに使用します。</span><span class="sxs-lookup"><span data-stu-id="72ed3-107">An attribute on a user-defined type (UDT), used to indicate the determinism and data access properties of a method or a property on a UDT.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIfReceiverIsNull">
      <MemberSignature Language="C#" Value="public bool InvokeIfReceiverIsNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeIfReceiverIsNull" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberSignature Language="VB.NET" Value="Public Property InvokeIfReceiverIsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeIfReceiverIsNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InvokeIfReceiverIsNull : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72ed3-108">SQL Server が null インスタンスでメソッドを呼び出す必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="72ed3-108">Indicates whether SQL Server should invoke the method on null instances.</span></span></summary>
        <value><span data-ttu-id="72ed3-109">SQL Server が null インスタンスでメソッドを呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72ed3-109"><see langword="true" /> if SQL Server should invoke the method on null instances; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="72ed3-110">メソッドの属性が原因でメソッドを呼び出すことができない場合は、SQL Server <see langword="DbNull" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="72ed3-110">If the method cannot be invoked (because of an attribute on the method), the SQL Server <see langword="DbNull" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="72ed3-111">`InvokeIfReceiverIsNull` プロパティの既定値は `false`です。</span><span class="sxs-lookup"><span data-stu-id="72ed3-111">The default value of the `InvokeIfReceiverIsNull` property is `false`.</span></span> <span data-ttu-id="72ed3-112">つまり、メソッドは、null インスタンスでは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="72ed3-112">That is, the method is not invoked on a null instance.</span></span> <span data-ttu-id="72ed3-113">`InvokeIfReceiverIsNull` が `true`の場合、メソッドの戻り値はその型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="72ed3-113">If `InvokeIfReceiverIsNull` is `true`, the return value of the method depends upon its type.</span></span> <span data-ttu-id="72ed3-114">メソッドの戻り値の型が null 値を許容する場合は、型の識別された null 値が返されます。</span><span class="sxs-lookup"><span data-stu-id="72ed3-114">If the return type of the method is nullable, the distinguished null value for the type is returned.</span></span> <span data-ttu-id="72ed3-115">戻り値の型が null 非許容の場合は、型の既定の CLR 値が返されます。</span><span class="sxs-lookup"><span data-stu-id="72ed3-115">If the return type is non-nullable, the default CLR value for the type is returned.</span></span> <span data-ttu-id="72ed3-116">参照型の既定値は `null`です。</span><span class="sxs-lookup"><span data-stu-id="72ed3-116">The default value for reference types is `null`.</span></span> <span data-ttu-id="72ed3-117">値型の既定値は、型のパラメーターなしのコンストラクターを呼び出すと返される値です。</span><span class="sxs-lookup"><span data-stu-id="72ed3-117">The default value for a value type is the value that is returned when you call the parameterless constructor for the type.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutator">
      <MemberSignature Language="C#" Value="public bool IsMutator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMutator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMutator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMutator : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72ed3-118">ユーザー定義型 (UDT) に含まれるメソッドがミューテーターであるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="72ed3-118">Indicates whether a method on a user-defined type (UDT) is a mutator.</span></span></summary>
        <value><span data-ttu-id="72ed3-119">メソッドがミューテーターである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72ed3-119"><see langword="true" /> if the method is a mutator; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72ed3-120"><xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> プロパティが `true` に設定されていて、メソッドの戻り値の型が `void`場合、は SQL Server メソッドをミューテーターとしてマークします。</span><span class="sxs-lookup"><span data-stu-id="72ed3-120">If the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is set to `true` and the return type of the method is `void`, SQL Server marks the method as a mutator.</span></span> <span data-ttu-id="72ed3-121">ミューテーターメソッドは、UDT インスタンスの状態が変化する原因です。</span><span class="sxs-lookup"><span data-stu-id="72ed3-121">A mutator method is one that causes a state change in the UDT instance.</span></span> <span data-ttu-id="72ed3-122">ミューテーターメソッドは、代入ステートメントまたはデータ変更ステートメントで呼び出すことができますが、クエリでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="72ed3-122">Mutator methods can be called in assignment statements or data modification statements, but cannot be used in queries.</span></span> <span data-ttu-id="72ed3-123">メソッドがミューテーターとしてマークされていても void を返さない場合、CREATE TYPE はエラーで失敗しません。</span><span class="sxs-lookup"><span data-stu-id="72ed3-123">If a method is marked as a mutator but does not return void, then CREATE TYPE does not fail with an error.</span></span> <span data-ttu-id="72ed3-124">`void` 以外の戻り値ではエラーは発生しませんが、返される値にはアクセスできず、使用することもできません。</span><span class="sxs-lookup"><span data-stu-id="72ed3-124">Even though a returned value other than `void` does not raise an error, the returned value is not accessible and cannot be used.</span></span>  
  
 <span data-ttu-id="72ed3-125"><xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> プロパティの既定値は `false`です。</span><span class="sxs-lookup"><span data-stu-id="72ed3-125">The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="72ed3-126">Setter で <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> が使用され、<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> が `true`に設定されている場合、プロパティはミューテーターになることがあります。</span><span class="sxs-lookup"><span data-stu-id="72ed3-126">A property can be a mutator if <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> is used on the setter and <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> is set to `true`.</span></span> <span data-ttu-id="72ed3-127">ただし、プロパティセッターは、暗黙的にミューテーターとして扱われるため、<xref:Microsoft.SqlServer.Server.SqlMethodAttribute> の <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> プロパティを `true`に設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="72ed3-127">However, a property setter is implicitly treated as a mutator, so it is not necessary to set the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNullCall">
      <MemberSignature Language="C#" Value="public bool OnNullCall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OnNullCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberSignature Language="VB.NET" Value="Public Property OnNullCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OnNullCall { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OnNullCall : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72ed3-128"><see langword="null" /> 入力引数がメソッドの呼び出しで指定されたときにユーザー定義型 (UDT) のメソッドが呼び出されるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="72ed3-128">Indicates whether the method on a user-defined type (UDT) is called when <see langword="null" /> input arguments are specified in the method invocation.</span></span></summary>
        <value><span data-ttu-id="72ed3-129">メソッドの呼び出しで <see langword="true" /> 入力引数を指定したときにこのメソッドが呼び出される場合は <see langword="null" />。入力パラメーターのいずれかが <see langword="false" /> で、メソッドが <see langword="null" /> 値を返す場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="72ed3-129"><see langword="true" /> if the method is called when <see langword="null" /> input arguments are specified in the method invocation; <see langword="false" /> if the method returns a <see langword="null" /> value when any of its input parameters are <see langword="null" />.</span></span> <span data-ttu-id="72ed3-130">メソッドの属性が原因でメソッドを呼び出すことができない場合は、SQL Server <see langword="DbNull" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="72ed3-130">If the method cannot be invoked (because of an attribute on the method), the SQL Server <see langword="DbNull" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72ed3-131"><xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> プロパティの既定値は `true`です。</span><span class="sxs-lookup"><span data-stu-id="72ed3-131">The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
