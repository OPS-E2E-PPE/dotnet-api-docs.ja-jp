<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4349d39b5042e0a2da26407506d6bc6c169d47a9" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75156646" /></Metadata><TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> および <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> がユーザー定義型 (UDT) または集計のシリアル化形式を指定するときに使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

この列挙体は、ユーザー定義型 (UDT) または集計のシリアル化形式を示すために <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> および <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> によって使用されます。 `Native` と `UserDefined` 列挙型メンバーの使用には特別な要件があります。   

- `Format.Native`

   `Format.Native` 形式の要件は次のとおりです。  
  
   - <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value> プロパティ値が <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> の <xref:System.Runtime.InteropServices.StructLayoutAttribute> は、構造体ではなくクラスで定義されている場合は、集計または UDT に適用する必要があります。 これは、データフィールドの物理的なレイアウトを制御し、メンバーが表示される順序で順番に配置されるようにするために使用されます。 SQL Server は、この属性を使用して、複数のフィールドを持つ Udt のフィールドの順序を決定します。
  
   - 型には少なくとも1つのメンバーが含まれている必要があります (シリアル化された値のサイズは0バイトにはできません)。  
  
   - 集計のすべてのフィールドは*blittable*型である必要があります。つまり、マネージメモリとアンマネージメモリの両方に共通の表現が必要であり、相互運用マーシャラーによる特別な処理は必要ありません。  
  
   - UDT のすべてのフィールドは、シリアル化可能な次のいずれかの型である必要があります。 `bool`、`byte`、`sbyte`、`short`、`ushort`、`int`、`uint`、`long`、`ulong`、`float`、`double`、<xref:System.Data.SqlTypes.SqlByte>、<xref:System.Data.SqlTypes.SqlInt16>、<xref:System.Data.SqlTypes.SqlInt32>、<xref:System.Data.SqlTypes.SqlInt64>、またはこれらの型のいずれかのフィールドを含むユーザーが定義したその他の値の型です。<xref:System.Data.SqlTypes.SqlDateTime><xref:System.Data.SqlTypes.SqlSingle><xref:System.Data.SqlTypes.SqlDouble><xref:System.Data.SqlTypes.SqlMoney>  

   - 集計で `MaxByteSize`の値を指定することはできません。  
  
   - 集計には [シリアル化されていません] フィールドを含めることはできません。  
  
   - フィールドを明示的なレイアウトとしてマークすることはできません (<xref:System.Runtime.InteropServices.StructLayoutAttribute.Value?displayProperty=nameWithType> <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>)。  

- `Format.UserDefined`

   `Format.UserDefined` 形式の要件は次のとおりです。

   - 集計では `MaxByteSize`の値を指定する必要があります。  
  
   - <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A?displayProperty=nameWithType> 属性のプロパティを指定します。 既定値は `false`です。  
  
   - <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A?displayProperty=nameWithType> または <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A?displayProperty=nameWithType> メソッドでフィールドを省略した場合、そのフィールドの状態はシリアル化されません。  

## Examples  

次の例は、Point UDT の `UserDefinedType` 属性を示しています。  UDT はバイト順で、"Point" という名前が付けられ、"ValidatePoint" という名前の検証メソッドを持ち、ネイティブシリアル化形式を使用します。  
  
[!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
[!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>このシリアル化形式には、SQL Server が UDT 表現をディスク上に効率よく格納できるようにする、きわめてシンプルなアルゴリズムが使用されています。 <see langword="Native" /> シリアル化の対象となる型には、値型 (Microsoft Visual C# の struct、Microsoft Visual Basic .NET の Structure) のみ、メンバーとして割り当てることができます。 参照型のメンバー (Visual C# や Visual Basic のクラスなど) は、ユーザー定義型であるか .NET クラス ライブラリに存在するもの (<see cref="T:System.String" /> など) であるかに関係なく、サポートされません。</summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>シリアル化形式は未知です。</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>このシリアル化形式を使用すると、開発者は、<see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" /> および <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" /> メソッドを通じてバイナリ形式を完全に制御できます。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
