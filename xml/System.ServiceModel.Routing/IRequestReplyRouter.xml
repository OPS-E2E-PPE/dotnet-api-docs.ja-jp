<Type Name="IRequestReplyRouter" FullName="System.ServiceModel.Routing.IRequestReplyRouter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1b899d5089e0596252d19882889d90c0b56a97f" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78743832" /></Metadata><TypeSignature Language="C#" Value="public interface IRequestReplyRouter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestReplyRouter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.IRequestReplyRouter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestReplyRouter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRequestReplyRouter" />
  <TypeSignature Language="F#" Value="type IRequestReplyRouter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", SessionMode=System.ServiceModel.SessionMode.Allowed)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5f38e-101">要求/応答チャネルからのメッセージの処理に必要なインターフェイスを定義します。</span><span class="sxs-lookup"><span data-stu-id="5f38e-101">Defines the interface required to process messages from request-reply channels.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f38e-102">このコントラクトには、次の設定があります。</span><span class="sxs-lookup"><span data-stu-id="5f38e-102">This contract has the following settings:</span></span>  
  
-   <span data-ttu-id="5f38e-103">セッションが許可されます。</span><span class="sxs-lookup"><span data-stu-id="5f38e-103">Sessions are allowed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginProcessRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginProcessRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessRequest(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginProcessRequest (message As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginProcessRequest(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginProcessRequest : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestReplyRouter.BeginProcessRequest (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(Action="*", AsyncPattern=true, IsOneWay=false, ReplyAction="*")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="5f38e-104">処理されるメッセージ。</span><span class="sxs-lookup"><span data-stu-id="5f38e-104">The message to be processed.</span></span></param>
        <param name="callback"><span data-ttu-id="5f38e-105">メッセージ処理が完了したときに呼び出される非同期コールバック デリゲート。</span><span class="sxs-lookup"><span data-stu-id="5f38e-105">An asynchronous callback delegate that is invoked when the message processing has completed.</span></span></param>
        <param name="state"><span data-ttu-id="5f38e-106">コールバック プロシージャに渡されるユーザー定義の状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5f38e-106">A user-defined state object that is passed to the callback procedure.</span></span></param>
        <summary><span data-ttu-id="5f38e-107">メッセージの非同期処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="5f38e-107">Initiates the asynchronous processing of the message.</span></span></summary>
        <returns><span data-ttu-id="5f38e-108">結果のポーリング、待機、またはその両方に使用する非同期の結果。この値は、<see cref="M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)" /> を呼び出す場合にも必要となります。</span><span class="sxs-lookup"><span data-stu-id="5f38e-108">An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <see cref="M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndProcessRequest (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndProcessRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndProcessRequest : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="iRequestReplyRouter.EndProcessRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="5f38e-109"><see cref="M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /> の呼び出しから返される非同期の結果。</span><span class="sxs-lookup"><span data-stu-id="5f38e-109">The asynchronous result returned by the call to <see cref="M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="5f38e-110">メッセージ処理の非同期実行を終了します。</span><span class="sxs-lookup"><span data-stu-id="5f38e-110">Finishes asynchronous execution of message processing.</span></span></summary>
        <returns><span data-ttu-id="5f38e-111">応答。</span><span class="sxs-lookup"><span data-stu-id="5f38e-111">The reply.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
