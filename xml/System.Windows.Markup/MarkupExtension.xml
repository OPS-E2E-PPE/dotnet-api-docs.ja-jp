<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcf2796b9d66aab0bcdf5b00dc2e35b01fa212e9" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78840279" /></Metadata><TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Xaml" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>.NET Framework XAML サービスおよびその他の XAML リーダーと XAML ライターによってサポートされる XAML マークアップ拡張機能の実装のための基底クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マークアップ拡張は、XAML の文字列属性値またはマークアップ要素の入力に基づいて、オブジェクトを呼び出し元に返します。 マークアップ拡張機能は、型コンバーターだけが実行できるより洗練された方法でオブジェクトを返します。 型またはメンバーには、型コンバーターの実装が関連付けられているため、XAML オブジェクトライターは型コンバーターを呼び出します。 これは、参照の CLR フレームから、型またはメンバーに属性が <xref:System.ComponentModel.TypeConverterAttribute> されていることを意味します。 Xaml 型システムの観点から見ると、これは、XAML 型または XAML メンバーに `TypeConverter` プロパティの値があることを意味します。 型コンバーターの呼び出しは、型またはプロパティの定義に関連付けられており、常にこのような場合に XAML 処理によって呼び出されます。 これに対し、マークアップ拡張機能は、ユーザーコードとユーザーが生成したマークアップの制御下にあり、アプリケーションのシナリオで要求されるたびに適用できます。 マークアップ拡張機能を呼び出すことができ、異なる型メンバー値を設定するために使用できます。ただし、マークアップ拡張機能の戻り値の型がその値に割り当て可能である必要があります。  
  
 カスタムマークアップ拡張機能の作成の詳細については、「<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>」を参照してください。 マークアップ拡張機能全般の詳細については、「 [XAML のマークアップ拡張機能の概要](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)」を参照してください。 WPF でビルドし、XAML のマークアップ拡張機能を使用または作成する場合、他の関連情報については、「[マークアップ拡張機能と WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)」を参照してください。  
  
 各マークアップ拡張機能の実装の <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> メソッドでは、実行時にコンテキストを提供できる <xref:System.IServiceProvider> を使用できます。 この <xref:System.IServiceProvider> は、<xref:System.Windows.Markup.IProvideValueTarget> や <xref:System.Windows.Markup.IXamlTypeResolver>などの情報を渡す特定のサービスに対してクエリを行います。 マークアップ拡張機能のサービスコンテキストの詳細については、「[型コンバーターおよびマークアップ拡張機能で使用できるサービスコンテキスト](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)」を参照してください。  
  
 派生クラスは、マークアップ拡張機能の <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> 実装で使用できる最も具体的な戻り値の型をコンシューマーに通知するために、<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> で属性付けされている必要があります。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">XAML の型コンバーターまたはマークアップ拡張機能</related>
    <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">XAML のマークアップ拡張機能の概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Markup.MarkupExtension" /> から派生したクラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.MarkupExtension> 抽象クラスには、初期化を必要とするプライベート値は保持されません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>機能マークアップ拡張機能では、独自のパブリックなパラメーターなしのコンストラクターを定義する必要があります。 また、マークアップ拡張機能には、拡張機能の目的とマークアップの使用に適したコンストラクターを実装する必要があります。 詳細については、「 [XAML のマークアップ拡張機能の概要](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)」を参照してください。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるサービス プロバイダーのヘルパー。</param>
        <summary>派生クラスで実装された場合、このマークアップ拡張機能のターゲット プロパティの値として提供されるオブジェクトを返します。</summary>
        <returns>拡張機能が適用されたプロパティで設定するオブジェクト値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML プロセッサは、マークアップ拡張機能である型ノードとメンバー値を処理するときに、そのマークアップ拡張機能の <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> メソッドを呼び出し、その結果をオブジェクトグラフまたはシリアル化ストリームに書き込みます。 XAML オブジェクトライターは、`serviceProvider` パラメーターを使用して、そのような各実装にサービスコンテキストを渡します。  
  
 カスタムマークアップ拡張機能に <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> を実装する方法の詳細については、「実装に関するメモ」を参照してください。  
  
## <a name="wpf-usage-notes"></a>WPF の使用上の注意  
  
> [!IMPORTANT]
>  マークアップセット操作との特定の相互作用を持つ WPF クラスは、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] の実装に <xref:System.Windows.Markup.IReceiveMarkupExtension> に依存しないようにする必要があります。 代わりに <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>属性付きコールバックを使用してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>既定のサービスプロバイダーによって返される一般的なサービスには、通常、カスタムまたは既存の <see cref="T:System.Windows.Markup.MarkupExtension" /> の実装で使用できますが、次のような主なサービスがあります。  
  
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> は、マークアップ拡張機能が使用されているコンテキストからオブジェクト参照とプロパティ識別子を報告します 
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> は、xaml の型名に基づいて <see cref="T:System.Type" /> を提供できる XAML オブジェクトの一般的な書き込み動作と同じサービスを公開します。 名前には、必要に応じて、マップされた XAML 名前空間のプレフィックスを含めることができます。  
  
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> では、アクティブな XAML スキーマコンテキストが直接公開されます。 報告された <see cref="T:System.Xaml.XamlSchemaContext" />から、XAML スキーマコンテキスト情報を取得できます。この情報には、アセンブリが型サポートに対してどのようにマップされているか、アセンブリの優先プレフィックス、アセンブリ内の各 <see cref="T:System.Xaml.XamlType" /> の一覧などが含まれます。  
  
-その他の特殊なマークアップ拡張シナリオで使用できるその他のサービスは次のとおりです。 
    -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" />  
  
場合によっては、<see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> を実装すると、<paramref name="serviceProvider" /> パラメーターが無視される可能性があります。 これは、いくつかの基本的なシナリオで、値を返すためにコンテキストがまったく必要ない場合に使用できます。  
  
一般的な使用法では .NET Framework、xaml サービスと実装された XAML オブジェクトライターは、XAML 処理中に呼び出されるすべての値コンバーターメソッドにサービスプロバイダーを提供します。 ただし、堅牢性を確保するには、サービスプロバイダー自体と要求されたすべてのサービスに対して、null 値のコードパスを提供する必要があります。 XAML プロセッサインフラストラクチャによって提供される一般的なサービスサポートが使用できない状況で、マークアップ拡張機能が適用されると、Null 値が発生する可能性があります。  
  
XAML サービスプロバイダーコンテキストから使用できるサービスとその使用方法の詳細については、「 [xaml の型コンバーターとマークアップ拡張機能](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)」を参照してください。  
  
有用な <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> 結果を生成するために特定のサービスを使用する必要がある実装は、そのサービスが使用できない場合に例外をスローすることが期待されます。 スローすることをお勧めする例外は <see cref="T:System.InvalidOperationException" />です。  
  
実装では、カスタムマークアップ拡張機能が値を指定するために必要な引数のいずれかが null、データ型に対して無効である、またはマークアップ拡張機能が処理できる値を含んでいない場合に、例外がスローされることもあります。 スローすることをお勧めする例外は <see cref="T:System.InvalidOperationException" />です。</para></block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">XAML の型コンバーターまたはマークアップ拡張機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">XAML のマークアップ拡張機能の概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
