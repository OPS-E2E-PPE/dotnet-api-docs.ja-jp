<Type Name="ContentPropertyAttribute" FullName="System.Windows.Markup.ContentPropertyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7871b82b6b5c0247a67e5b84088f7c82f1e34bfd" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968899" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContentPropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContentPropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ContentPropertyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContentPropertyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentPropertyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ContentPropertyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.Xaml" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.Xaml" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>型のどのプロパティが XAML コンテンツ プロパティであるかを示します。 この情報を使用して、XAML プロセッサは属性付き型の XAML 表現の XAML 子要素を処理します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.ContentPropertyAttribute> の関連付けられているプロパティが `string` または `object`型ではない場合、XAML プロセッサは値の変換手法を識別しようとします。 最初のチェックでは、XAML 言語プリミティブまたは特定の XAML ライター実装によって有効にされた特定のネイティブ変換のいずれかについて、ネイティブ型変換を行います。 次の手順では、型コンバーターを探します。 .NET 実装では、型コンバーターは、適用されるメンバーレベルまたは型レベルの定義の <xref:System.ComponentModel.TypeConverterAttribute> に基づいて識別されます。 値の変換を識別できない場合、通常、XAML オブジェクトライターは例外をスローします。  
  
 複数のオブジェクト要素をコンテンツとして受け入れるには、XAML コンテンツプロパティの型がコレクション型としてサポート可能である必要があります。  
  
 属性の `Inherited=true` 宣言のため、<xref:System.Windows.Markup.ContentPropertyAttribute> の値は通常、コンテンツプロパティの指定をすべての派生クラスにも適用します。 空の <xref:System.Windows.Markup.ContentPropertyAttribute> を適用すると、派生クラスは、基本クラスによってコンテンツプロパティ属性の宣言を削除できます (および、クラスにコンテンツプロパティがないことに注意してください)。 別の名前付き <xref:System.Windows.Markup.ContentPropertyAttribute> を適用すると、継承された <xref:System.Windows.Markup.ContentPropertyAttribute> が新しいものに置き換えられます。  
  
 以前のバージョンの .NET Framework では、このクラスは WPF 固有のアセンブリ WindowsBase に存在していましたが、Windows Communication Foundation (WCF) でも並列実装されていました。 .NET Framework 4.0 以降では、<xref:System.Windows.Markup.ContentPropertyAttribute> が .Xaml アセンブリに含まれています。 詳細については、「 [Types Migrated from WPF to System.Xaml](/dotnet/framework/xaml-services/types-migrated-from-wpf-to-system-xaml)」を参照してください。  
  
## <a name="wpf-usage-notes"></a>WPF の使用上の注意  
 <xref:System.Windows.Markup.ContentPropertyAttribute> を使用する Windows Presentation Foundation (WPF) のクラスの例として、<xref:System.Windows.Controls.Button> クラスがから継承している <xref:System.Windows.Controls.ContentControl>があります。  <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> プロパティは、<xref:System.Windows.Markup.ContentPropertyAttribute>によって設定されたコンテンツプロパティです。  XAML で <xref:System.Windows.Controls.Button> がインスタンス化される場合、<xref:System.Windows.Controls.Button> の <xref:System.Windows.Controls.ContentControl.Content%2A> は、開始ボタンと終了タグの間にある要素に設定されます。  
    
## Examples  
 次の例では、<xref:System.Windows.Markup.ContentPropertyAttribute> が適用されている `Film` という名前のクラスを作成します。  `Title` という名前のプロパティは、content プロパティとして示されます。  
  
 [!code-csharp[MarkupSnippets#MarkupContentPropertyAttribute](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml.cs#markupcontentpropertyattribute)]
 [!code-vb[MarkupSnippets#MarkupContentPropertyAttribute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MarkupSnippets/visualbasic/window1.xaml.vb#markupcontentpropertyattribute)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">カスタム型およびライブラリの XAML 関連の CLR 属性</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">.NET Framework XAML サービスで使用するためのカスタム型の定義</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">NET XAML サービスの概念説明ドキュメント</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPropertyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性の `Inherited=true` 宣言のため、<xref:System.Windows.Markup.ContentPropertyAttribute> の値は通常、コンテンツプロパティの指定をすべての派生クラスにも適用します。 このシグネチャを使用するか、空の <xref:System.Windows.Markup.ContentPropertyAttribute>を適用することで、派生クラスは、基本クラスによってコンテンツプロパティ属性の宣言を削除できます (また、クラスにコンテンツプロパティがないことに注意してください)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPropertyAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.ContentPropertyAttribute : string -&gt; System.Windows.Markup.ContentPropertyAttribute" Usage="new System.Windows.Markup.ContentPropertyAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">コンテンツ プロパティであるプロパティのプロパティ名。</param>
        <summary>指定された名前を使用して、<see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 CLR のバッキングと想定すると、指定された `name` は CLR 型システムの関連プロパティの <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> と一致している必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ContentPropertyAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Markup.ContentPropertyAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ プロパティであるプロパティの名前を取得します。</summary>
        <value>コンテンツ プロパティであるプロパティの名前。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
