<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78732f2b7abbe05d954732b1cec29dd42e3a312f" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82424729" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f28c1-101">指定されたプロパティを現在のスコープでアンビエントとして扱う必要があるかどうかを照会します。</span><span class="sxs-lookup"><span data-stu-id="f28c1-101">Queries for whether a specified property should be treated as ambient in the current scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f28c1-102">アンビエントプロパティ機構の目的は、特定のオブジェクトをインスタンス化しないように XAML オブジェクトライターに通知することによって、解析時間を短縮することです。これは、オブジェクトが一時的なものであり、通常の実行時アプリケーションでは役に立たない値であることがわかっている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="f28c1-102">The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</span></span> <span data-ttu-id="f28c1-103">通常、プロパティ get アクセサーの XAML 参照または XAML 処理では、このようなオブジェクトをインスタンス化して、すぐに使用できる値でオブジェクトグラフの表現を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f28c1-103">Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</span></span>  
  
 <span data-ttu-id="f28c1-104"><xref:System.Windows.Markup.IQueryAmbient> には、<xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>のメンバーが1つあります。</span><span class="sxs-lookup"><span data-stu-id="f28c1-104"><xref:System.Windows.Markup.IQueryAmbient> has one member: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</span></span>  
  
 <span data-ttu-id="f28c1-105"><xref:System.Windows.Markup.IQueryAmbient> は、<xref:System.Windows.Markup.AmbientAttribute>するための並列メカニズムです。</span><span class="sxs-lookup"><span data-stu-id="f28c1-105"><xref:System.Windows.Markup.IQueryAmbient> is a parallel mechanism to <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="f28c1-106"><xref:System.Windows.Markup.IQueryAmbient> は、情報を決定するためのリフレクションの使用を回避し、く (特定のオブジェクトが <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>に対して `true` または `false` を報告するように選択することもありますが、属性は実質的に静的分析) であることを回避するための特殊なメカニズムです。</span><span class="sxs-lookup"><span data-stu-id="f28c1-106"><xref:System.Windows.Markup.IQueryAmbient> is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report `true` or `false` for <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), whereas the attribute is essentially static analysis).</span></span> <span data-ttu-id="f28c1-107"><xref:System.Windows.Markup.AmbientAttribute> は、XAML オブジェクトライターが使用できる一般的なメカニズムであり、通常、専用の XAML 型システムプロパティ <xref:System.Xaml.XamlMember.IsAmbient%2A> と <xref:System.Xaml.XamlType.IsAmbient%2A>に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="f28c1-107"><xref:System.Windows.Markup.AmbientAttribute> is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties <xref:System.Xaml.XamlMember.IsAmbient%2A> and <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
## <a name="wpf-implementations-of-iqueryambient"></a><span data-ttu-id="f28c1-108">IQueryAmbient の WPF 実装</span><span class="sxs-lookup"><span data-stu-id="f28c1-108">WPF Implementations of IQueryAmbient</span></span>  
 <span data-ttu-id="f28c1-109">WPF では、リソースディクショナリの参照プロセスに <xref:System.Windows.Markup.IQueryAmbient> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f28c1-109">In WPF, <xref:System.Windows.Markup.IQueryAmbient> is used for the resource dictionary lookup process.</span></span> <span data-ttu-id="f28c1-110">参照プロセスは、WPF 論理ツリー全体の連続する `Resources` 値を取得し、キーが見つかるかキーがスコープ内に存在しないと判断されるまで、リソーススコープのルートに向かって動作します。</span><span class="sxs-lookup"><span data-stu-id="f28c1-110">The lookup process gets successive `Resources` values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</span></span> <span data-ttu-id="f28c1-111">通常、これを行うには、結果を受け取るために毎回 <xref:System.Windows.ResourceDictionary> をインスタンス化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f28c1-111">Normally, doing so would require instantiating a <xref:System.Windows.ResourceDictionary> each time to receive the results.</span></span> <span data-ttu-id="f28c1-112">`Resources` が存在する限り、`Resources` の内容をアンビエントとして宣言すると、この参照プロセスが最適化されます。</span><span class="sxs-lookup"><span data-stu-id="f28c1-112">Declaring the contents of `Resources` as ambient so long as `Resources` exists optimizes this lookup process.</span></span> <span data-ttu-id="f28c1-113">WPF では、このインターフェイスは次のような場合に実装されます。</span><span class="sxs-lookup"><span data-stu-id="f28c1-113">In WPF, this interface is implemented in the following cases:</span></span>  
  
-   <span data-ttu-id="f28c1-114"><xref:System.Windows.FrameworkElement> は、<xref:System.Windows.FrameworkElement.Resources%2A>の既存の <xref:System.Windows.ResourceDictionary> が含まれている場合は、すべてのプロパティ名に対して `true` を返すように <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> を実装します。ただし、クエリが <xref:System.Windows.FrameworkElement.Resources%2A> プロパティ自体に対してではない場合に限ります。</span><span class="sxs-lookup"><span data-stu-id="f28c1-114"><xref:System.Windows.FrameworkElement> implements <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> to return `true` for all property names if it contains an existing <xref:System.Windows.ResourceDictionary> for <xref:System.Windows.FrameworkElement.Resources%2A>, and so long as the query is not for the <xref:System.Windows.FrameworkElement.Resources%2A> property itself.</span></span>  
  
-   <span data-ttu-id="f28c1-115"><xref:System.Windows.Style> は、<xref:System.Windows.Style.Resources%2A>に同じパターンを実装します。</span><span class="sxs-lookup"><span data-stu-id="f28c1-115"><xref:System.Windows.Style> implements the same pattern for its <xref:System.Windows.Style.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="f28c1-116"><xref:System.Windows.Application> は、<xref:System.Windows.Application.Resources%2A>に同じパターンを実装します。</span><span class="sxs-lookup"><span data-stu-id="f28c1-116"><xref:System.Windows.Application> implements the same pattern for its <xref:System.Windows.Application.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="f28c1-117"><xref:System.Windows.FrameworkContentElement> は、<xref:System.Windows.FrameworkContentElement.Resources%2A>に同じパターンを実装します。</span><span class="sxs-lookup"><span data-stu-id="f28c1-117"><xref:System.Windows.FrameworkContentElement> implements the same pattern for its <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="f28c1-118"><xref:System.Windows.FrameworkTemplate> は、<xref:System.Windows.FrameworkTemplate.Resources%2A>に同じパターンを実装します。</span><span class="sxs-lookup"><span data-stu-id="f28c1-118"><xref:System.Windows.FrameworkTemplate> implements the same pattern for its <xref:System.Windows.FrameworkTemplate.Resources%2A>.</span></span> <span data-ttu-id="f28c1-119">また、<xref:System.Windows.FrameworkTemplate.Template%2A> コンテンツをアンビエントとして報告しますが、<xref:System.Windows.FrameworkTemplate.Template%2A> 自体に対してクエリを実行する場合は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="f28c1-119">It also reports <xref:System.Windows.FrameworkTemplate.Template%2A> content as ambient but returns `false` if querying for <xref:System.Windows.FrameworkTemplate.Template%2A> itself.</span></span>  
  
-   <span data-ttu-id="f28c1-120">これらの各ケースでは、関連する `Resources` プロパティ (および <xref:System.Windows.FrameworkTemplate.Template%2A>) は <xref:System.Windows.Markup.AmbientAttribute>として属性付けされます。</span><span class="sxs-lookup"><span data-stu-id="f28c1-120">In each of these cases, the relevant `Resources` property (and <xref:System.Windows.FrameworkTemplate.Template%2A>) are attributed as <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="f28c1-121">一般的な使用方法は、インターフェイスを定義するオブジェクトの <xref:System.Windows.Markup.AmbientAttribute> 属性付きプロパティではないプロパティを照会することです。</span><span class="sxs-lookup"><span data-stu-id="f28c1-121">The typical usage is to query for the properties that are NOT the <xref:System.Windows.Markup.AmbientAttribute> attributed properties of the object that defines the interface.</span></span> <span data-ttu-id="f28c1-122">つまり、オブジェクトグラフを作成するときに、実行時間の可能性のある値を提供するためにリソースディクショナリが存在する限り、リソースディクショナリのプロパティコンテナー以外のプロパティはすべてアンビエントとして扱うことができます。</span><span class="sxs-lookup"><span data-stu-id="f28c1-122">In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="f28c1-123">アンビエンス状態を確認するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="f28c1-123">The name of the property to check for ambience state.</span></span></param>
        <summary><span data-ttu-id="f28c1-124">指定された名前付きプロパティを現在のスコープでアンビエントと見なすことができるかどうかを照会します。</span><span class="sxs-lookup"><span data-stu-id="f28c1-124">Queries for whether a specified named property can be considered ambient in the current scope.</span></span></summary>
        <returns><span data-ttu-id="f28c1-125">要求されたプロパティをアンビエントと見なすことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f28c1-125"><see langword="true" /> if the requested property can be considered ambient; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
