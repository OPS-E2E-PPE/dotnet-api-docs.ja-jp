<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df0442cd2cbe2af2264596b64ce28fe009f56f30" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78839980" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <TypeSignature Language="F#" Value="type XamlTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XAML 要素名をアセンブリ内の適切な CLR <see cref="T:System.Type" /> に割り当てます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper> は、<xref:System.Windows.Markup.XamlReader> と <xref:System.Windows.Markup.XamlWriter>に代替コンテキストを提供する高度な WPF シナリオの一部です。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF アプリケーションの場合、<xref:System.Windows.Markup.XamlTypeMapper>を使用するのではなく、このシナリオで <xref:System.Xaml.XamlSchemaContext> をオーバーライドすることを検討してください。  
  
 <xref:System.Windows.Markup.XamlTypeMapper> を使用すると、アセンブリコードの <xref:System.Windows.Markup.XmlnsDefinitionAttribute> 値を適用するよりも直接的な手法を使用して、XAML パーサーにカスタムマッピング情報を提供できます。 これは、アセンブリ内のすべての CLR 名前空間を統合する場合や、既存のアセンブリで XAML 準備ができている型を参照する場合に、<xref:System.Windows.Markup.XmlnsDefinitionAttribute> 属性を追加するためだけに再コンパイルする必要がない場合に便利です。  
  
 通常は、<xref:System.Windows.Markup.ParserContext>の <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> プロパティ値を指定するために <xref:System.Windows.Markup.XamlTypeMapper> インスタンスを作成します。 <xref:System.Windows.Markup.ParserContext> は、<xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> 呼び出しのコンテキストとして使用できます。  
  
## <a name="default-mapper"></a>既定のマッパー  
 <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> の静的プロパティを使用して、既定のマッパーを取得できます。 既定のマッパーは、既定のアセンブリリストでのみ機能します。 アセンブリに関する特定の情報 (<xref:System.Windows.Markup.XamlTypeMapper> コンストラクターで指定されているとおり) が使用されます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Markup.XamlTypeMapper" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames"><see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用するアセンブリ名の配列。</param>
        <summary><see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用するアセンブリ名の配列を指定して、<see cref="T:System.Windows.Markup.XamlTypeMapper" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] * System.Windows.Markup.NamespaceMapEntry[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper (assemblyNames, namespaceMaps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames"><see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用するアセンブリ名の配列。</param>
        <param name="namespaceMaps"><see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用する名前空間の割り当ての配列。</param>
        <summary>指定されたアセンブリ名の配列と名前空間の割り当てを使用して、<see cref="T:System.Windows.Markup.XamlTypeMapper" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingProcessingInstruction : string * string * string -&gt; unit" Usage="xamlTypeMapper.AddMappingProcessingInstruction (xmlNamespace, clrNamespace, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">XML 名前空間のプレフィックス。</param>
        <param name="clrNamespace">割り当てる型が含まれている CLR 名前空間。</param>
        <param name="assemblyName">CLR 名前空間を格納するアセンブリ。</param>
        <summary>XML 名前空間とアセンブリの CLR 名前空間の間の割り当てを定義し、それを <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 情報に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> は、プログラムによってマッピングを追加する方法です。  たとえば、次の XAML マッピング命令のさまざまな部分は、<xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>のパラメーターに対応します。  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 `xmlNamespace` が `SDK`、`clrNamespace` が `Samples`、`assemblyName` が `SDKSamples`です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> は <see langword="null" /> です  
  
または 
 <paramref name="clrNamespace" /> は <see langword="null" /> です  
  
または 
 <paramref name="assemblyName" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AllowInternalType (type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AllowInternalType : Type -&gt; bool&#xA;override this.AllowInternalType : Type -&gt; bool" Usage="xamlTypeMapper.AllowInternalType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">アクセスする型。</param>
        <summary>特定の内部型にアクセスするために完全な信頼で呼び出される <see cref="T:System.Windows.Markup.XamlTypeMapper" /> の派生型に対して、アクセス許可を要求します。</summary>
        <returns>内部型にアクセスできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サブクラスによってオーバーライドされない場合、<xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> は常に `false`を返します。  
  
 サブクラスによってオーバーライドされる場合、内部型にアクセスできる場合は <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> が `true` を返すようにする必要があります。それ以外の場合は、`false`ます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMapper : System.Windows.Markup.XamlTypeMapper" Usage="System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されていない場合、使用する <see cref="T:System.Windows.Markup.XamlTypeMapper" /> のインスタンスを取得します。</summary>
        <value>既定の型マッパー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のマッパーは、既定のアセンブリリストでのみ機能します。 アセンブリに関する特定の情報 (<xref:System.Windows.Markup.XamlTypeMapper> コンストラクターで指定されているとおり) が使用されます。 現在の実装では、既定のアセンブリリストは `WindowsBase`、`PresentationCore`、`PresentationFramework`です。  
  
 既定のマッパーを使用することは、XAML でカスタムアセンブリ/型を使用できないという意味ではありません。 これは、カスタム型/アセンブリを使用する場合は、型マッパー API ではなく、型またはアセンブリを参照する各 XAML ページで、`xmlns` 属性としてマッピングを作成する従来の XAML 手法を使用する必要があることを意味します。 詳細については、「 [WPF xaml の Xaml 名前空間と名前空間のマッピング](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="xamlTypeMapper.GetType (xmlNamespace, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">指定した XML 名前空間プレフィックス。</param>
        <param name="localName">割り当てられた <see cref="T:System.Type" /> を取得する XAML 要素の "ローカル" 名。 このコンテキストでの "ローカル" とは、提供された <paramref name="xmlNamespace" /> に対して割り当てられたものであることを意味します。</param>
        <summary>指定された XML 名前空間プレフィックスおよび要素名を使用して、特定の XAML 要素が割り当てられる CLR <see cref="T:System.Type" /> を取得します。</summary>
        <returns>オブジェクトの <see cref="T:System.Type" />。割り当てを解決できない場合は、<see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された情報に対応する型が見つからない場合は、`null` が返されます。  
  
 `localName`の一部としてプレフィックスを含めないでください。 プレフィックス付き XAML 要素情報については、この API 呼び出しの `xmlNamespace` と `localName` コンポーネントに分離します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> は <see langword="null" /> です  
  
または 
 <paramref name="localName" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.SetAssemblyPath : string * string -&gt; unit" Usage="xamlTypeMapper.SetAssemblyPath (assemblyName, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">拡張子やパスを指定しない、アセンブリの短い名前 (<see cref="P:System.Reflection.AssemblyName.Name" /> と等価)。</param>
        <param name="assemblyPath">アセンブリのファイル パス。 アセンブリのパスは、拡張子を含む完全なファイル パスである必要があります。</param>
        <summary>アセンブリの読み込み時に使用するパスを指定します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyName" /> は <see langword="null" /> です  
  
または 
 <paramref name="assemblyPath" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Windows.Markup.XamlParseException"><paramref name="assemblyName" /> は <see cref="F:System.String.Empty" /> です  
  
または 
 <paramref name="assemblyPath" /> は <see cref="F:System.String.Empty" /> です  
  
または 
 <paramref name="assemblyPath" /> は、拡張子を含むファイルの完全パスではありません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
