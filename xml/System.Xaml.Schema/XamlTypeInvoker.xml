<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d155bca2aaa96e96ca9e65e2fe859e60123643e" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82294131" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <TypeSignature Language="F#" Value="type XamlTypeInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>リフレクションまたはコンストラクター以外の方法で XAML 型のインスタンスを構築できる拡張ポイントを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.Schema.XamlTypeInvoker> の目的は、CLR 属性、<xref:System.Type> と <xref:System.Reflection.MemberInfo>によるリフレクション情報など、CLR の機能に完全に依存しない、拡張可能な XAML 型システム、スキーマ、および動作実行時間を有効にすることです。 <xref:System.Xaml.Schema.XamlTypeInvoker> のサブクラスは、<xref:System.Xaml.XamlType>などの XAML スキーマクラスの代替コンストラクターの入力パラメーターとして使用されます。 <xref:System.Xaml.XamlType> をサブクラス化し、を使用して <xref:System.Xaml.Schema.XamlTypeInvoker> を基本コンストラクターに渡します。 コンストラクターの <xref:System.Xaml.Schema.XamlTypeInvoker> を定義すると共に、少なくとも <xref:System.Xaml.XamlType>の `Lookup` メソッドの一部に対してオーバーライドを指定する必要があります。  
  
 <xref:System.Xaml.Schema.XamlTypeInvoker> には既定の実装があります。 既定の実装は、XAML スキーマ型 <xref:System.Xaml.XamlType> および <xref:System.Xaml.XamlMember>の既定の実装と同様のモデルに従います。 clr 型システムは、CLR 属性、<xref:System.Type>、および <xref:System.Reflection.MemberInfo>などを使用した、インスタンス化、値、および参照のために使用されます。  
  
 <xref:System.Xaml.Schema.XamlTypeInvoker> には、基本インスタンス化 (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) のメソッドと、<xref:System.Xaml.XamlType> がコレクション、ディクショナリ、または配列 (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>) を表す型に関連するメソッドが用意されています。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、空のままです。  
  
 このコンストラクターは、<xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>の値を提供するために、内部的に呼び出されます。 <xref:System.Xaml.Schema.XamlTypeInvoker> サブクラスの場合、構築には <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> シグネチャを使用するか、ベースとして <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> を呼び出すオーバーライドを提供する必要があります。 <xref:System.Xaml.XamlType> を提供すると、<xref:System.Xaml.Schema.XamlTypeInvoker> が不変の既定のパターンが実装されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeInvoker : System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="new System.Xaml.Schema.XamlTypeInvoker type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">この <see cref="T:System.Xaml.XamlType" /> に関連する固有の XAML 型の <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 値。</param>
        <summary>提供された <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、<xref:System.Xaml.Schema.XamlTypeInvoker> が構築に使用される <xref:System.Xaml.XamlType> に基づいて内部的に呼び出されます。 ここで提供される `type` は、<xref:System.Xaml.Schema.XamlTypeInvoker>のその他のすべてのメソッド呼び出しに関連しています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToCollection : obj * obj -&gt; unit&#xA;override this.AddToCollection : obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToCollection (instance, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">この <see cref="T:System.Xaml.XamlType" /> を構築するために使用した <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> によって指定された型のインスタンス。</param>
        <param name="item">追加するアイテムです。</param>
        <summary>指定した項目を、この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連する型のインスタンスに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、コレクションを表す <xref:System.Xaml.XamlType> でのみ呼び出す必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">不明な <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づく <see cref="T:System.Xaml.XamlType" /> で、このメソッドを呼び出しました。  
  
 **- または -**  
  
関連する型がコレクションではない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Xaml.XamlSchemaException">この <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> の <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> は、<see langword="null" /> を返します。</exception>
        <block subset="none" type="overrides"><para>基本実装には、内部ヘルパー <c>ThrowIfUnknown</c>の呼び出しが含まれます。 このヘルパーは、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> が不明な <see cref="T:System.Xaml.XamlType" />に基づいている場合に、常にをスローします。これには、<see cref="T:System.Xaml.XamlType" /> の <see cref="P:System.Xaml.XamlType.UnderlyingType" /> が <see langword="null" />ているケースが含まれます。  
  
内部的には、基本実装は <see cref="P:System.Xaml.XamlType.IsCollection" />を呼び出し、結果が <see langword="false" />場合はをスローします。  
  
基本実装では、必ずしも独自の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> の実装を使用するわけではありません。 まず、<paramref name="instance" /> を <see cref="T:System.Collections.IList" /> にキャストしようとしました。 これが成功すると、<see cref="M:System.Collections.IList.Add(System.Object)" /> の呼び出しが行われ、メソッドはを返します。 それ以外の場合、基本実装は CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> を使用して、この <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> の呼び出しから取得された、基になる <see langword="Add" /> メソッドを呼び出します。  
  
基本実装では、<paramref name="item" /> が <see langword="null" />場合、このレベルで例外は発生しません。 この場合も、基になる <see langword="Add" /> メソッドが呼び出されると、例外が発生する可能性があります。 <see cref="P:System.Xaml.XamlType.ItemType" /> が有効な結果を返さない場合は、その他の実行時例外が発生する可能性があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToDictionary : obj * obj * obj -&gt; unit&#xA;override this.AddToDictionary : obj * obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToDictionary (instance, key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">この <see cref="T:System.Xaml.XamlType" /> を構築するために使用した <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> によって指定された型のインスタンス。</param>
        <param name="key">追加するアイテムのディクショナリ キー。</param>
        <param name="item">追加する項目値。</param>
        <summary>指定したキーと項目の値を、この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連する型のインスタンスに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、ディクショナリを表す <xref:System.Xaml.XamlType> でのみ呼び出す必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">不明な <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づく <see cref="T:System.Xaml.XamlType" /> で、このメソッドを呼び出しました。  
  
 **- または -**  
  
関連する型がディクショナリではない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Xaml.XamlSchemaException">この <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> の <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> は、<see langword="null" /> を返します。</exception>
        <block subset="none" type="overrides"><para>基本実装には、内部ヘルパー <c>ThrowIfUnknown</c>の呼び出しが含まれます。 このヘルパーは、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> が不明な <see cref="T:System.Xaml.XamlType" />に基づいている場合に、常にをスローします。これには、<see cref="T:System.Xaml.XamlType" /> の <see cref="P:System.Xaml.XamlType.UnderlyingType" /> が <see langword="null" />ているケースが含まれます。  
  
内部的には、基本実装は <see cref="P:System.Xaml.XamlType.IsDictionary" />を呼び出し、結果が <see langword="false" />場合はをスローします。  
  
基本実装では、必ずしも独自の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> の実装を使用するわけではありません。 まず、<paramref name="instance" /> を <see cref="T:System.Collections.IDictionary" /> にキャストしようとしました。 これが成功すると、<see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> の呼び出しが行われ、メソッドはを返します。 それ以外の場合、基本実装は CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> を使用して、この <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> の呼び出しから取得された、基になる <see langword="Add" /> メソッドを呼び出します。  
  
基本実装では、<paramref name="item" /> または <paramref name="key" /> が <see langword="null" />場合、このレベルで例外は発生しません。 この場合も、基になる <see langword="Add" /> メソッドが呼び出されると、例外が発生する可能性があります。 <see cref="P:System.Xaml.XamlType.ItemType" /> が有効な結果を返さない場合は、その他の実行時例外が発生する可能性があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : obj[] -&gt; obj&#xA;override this.CreateInstance : obj[] -&gt; obj" Usage="xamlTypeInvoker.CreateInstance arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments">インスタンスの <see langword="x:ConstructorArgs" /> を指定するオブジェクトの配列。 <see langword="null" /> を必要としないか、または使用しない型の場合は <see langword="x:ConstructorArgs" /> にできます。</param>
        <summary>この <see cref="T:System.Xaml.XamlType" /> の構築が開始された <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づいて、オブジェクト インスタンスを作成します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> の構築が開始された <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づいて作成されたインスタンス。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">コンストラクターを解決できませんでした。</exception>
        <block subset="none" type="overrides"><para>基本実装には、内部ヘルパー <c>ThrowIfUnknown</c>の呼び出しが含まれます。 このヘルパーは、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> が不明な <see cref="T:System.Xaml.XamlType" />に基づいている場合に、常にをスローします。これには、<see cref="T:System.Xaml.XamlType" /> の <see cref="P:System.Xaml.XamlType.UnderlyingType" /> が <see langword="null" />ているケースが含まれます。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo&#xA;override this.GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetAddMethod contentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType"><see cref="T:System.Xaml.XamlType" /> メソッドで使用されるアイテムの種類の <see langword="Add" />。</param>
        <summary>コレクションまたはディクショナリに関連する <see langword="Add" /> の関連する <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> メソッドを返します。</summary>
        <returns><see cref="T:System.Reflection.MethodInfo" /> メソッドの CLR <see langword="Add" /> 情報、または null。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、この <xref:System.Xaml.Schema.XamlTypeInvoker> の <xref:System.Xaml.XamlType> が書き込み可能なコレクションまたはディクショナリでない場合に `null` を返します。 具体的には、は、<xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> が `None`を返す場合に `null` を返します。  
  
> [!IMPORTANT]
>  完全に信頼された XAML 型システムにアクセスしていない場合、このメソッドは、偽の <xref:System.Reflection.MethodInfo> 情報を呼び出し元に報告する可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentType" /> が <see langword="null" /> です。</exception>
        <block subset="none" type="overrides"><para>基本実装は、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> が不明な <see cref="T:System.Xaml.XamlType" />に基づいている場合に <see langword="null" /> を返します。これには、<see cref="T:System.Xaml.XamlType" /> の <see cref="P:System.Xaml.XamlType.UnderlyingType" /> が <see langword="null" />されているケースが含まれます。 <see cref="P:System.Xaml.XamlType.ItemType" /> が <see langword="null" />場合は、<see langword="null" /> も返されます。  
  
Xaml コレクションでは複数のコンテンツの種類がサポートされる可能性があるため、XAML コレクションには複数の <see langword="Add" /> メソッドが存在する可能性があります (<see cref="P:System.Xaml.XamlType.AllowedContentTypes" />を参照するか、WPF でのこの概念の1つの実装について <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> を参照してください)。 既定の実装では、内部ロジックを使用して、指定された <paramref name="contentType" />のシグネチャと型に基づいて、最も一致するものが返されます。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetEnumeratorMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アイテムを列挙できるメソッドを表すオブジェクトを返します。</summary>
        <returns>列挙子メソッドの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> が `None`を返す場合は、`null` を返す必要があります。  
  
> [!IMPORTANT]
>  完全に信頼された XAML 型システムにアクセスしていない場合、このメソッドは、偽の <xref:System.Reflection.MethodInfo> 情報を呼び出し元に報告する可能性があります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>基本実装は、内部ヘルパーメソッドを呼び出します。 このヘルパーは、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> が不明な <see cref="T:System.Xaml.XamlType" />に基づいている場合に <see langword="null" /> を返します。これには、<see cref="T:System.Xaml.XamlType" /> の <see cref="P:System.Xaml.XamlType.UnderlyingType" /> が <see langword="null" />されているケースが含まれます。 また、<see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> が <see langword="None" />を返す場合にも <see langword="null" /> を返します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetItems : obj -&gt; System.Collections.IEnumerator&#xA;override this.GetItems : obj -&gt; System.Collections.IEnumerator" Usage="xamlTypeInvoker.GetItems instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">この <see cref="T:System.Xaml.XamlType" /> を構築するために使用した <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> によって指定された型のインスタンス。</param>
        <summary>アイテムのセットを表す <see cref="T:System.Collections.IEnumerator" /> オブジェクトを返します。</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> オブジェクト、または <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">不明な <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づく <see cref="T:System.Xaml.XamlType" /> で、このメソッドを呼び出しました。  
  
 **- または -**  
  
このメソッドを、関連する型がコレクションまたは辞書でない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で呼び出しました。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> が <see langword="null" /> です。</exception>
        <block subset="none" type="overrides"><para>基本実装には、内部ヘルパー <c>ThrowIfUnknown</c>の呼び出しが含まれます。 このヘルパーは、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> が不明な <see cref="T:System.Xaml.XamlType" />に基づいている場合に、常にをスローします。これには、<see cref="T:System.Xaml.XamlType" /> の <see cref="P:System.Xaml.XamlType.UnderlyingType" /> が <see langword="null" />ているケースが含まれます。  
  
基本実装では、必ずしも独自の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> の実装を使用するわけではありません。 まず、<paramref name="instance" /> を <see cref="T:System.Collections.IEnumerable" /> にキャストしようとしました。 これが成功すると、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> の呼び出しが行われ、メソッドから戻り値が返されます。 それ以外の場合、基本実装は CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> を使用して、この <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> の呼び出しから取得された、基になる <see langword="GetEnumerator" /> メソッドを呼び出します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetMarkupExtensionHandler : EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlObjectWriter" /> が実装された <see cref="T:System.Windows.Markup.MarkupExtension" /> を呼び出すときに使用するハンドラーを取得します。</summary>
        <value>このような場合の処理を行うハンドラーの実装。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントハンドラーは、<xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> イベントデータで制限された <xref:System.EventHandler%601> に基づいています。  
  
 返される値は、<xref:System.Xaml.Schema.XamlTypeInvoker> の基になっている <xref:System.Xaml.XamlType> の <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> 動作を呼び出します。  
  
 この戻り値は、不明な <xref:System.Xaml.XamlType>に基づく <xref:System.Xaml.Schema.XamlTypeInvoker> に対して `null` ます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetTypeConverterHandler : EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlObjectWriter" /> が CLR によって実装された <see cref="T:System.ComponentModel.TypeConverter" /> を呼び出したときに使用するハンドラーを取得します。</summary>
        <value>このような場合の処理を行うハンドラーの実装。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントハンドラーは、<xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> イベントデータで制限された <xref:System.EventHandler%601> に基づいています。  
  
 返される値は、<xref:System.Xaml.Schema.XamlTypeInvoker> の基になっている <xref:System.Xaml.XamlType> の <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> 動作を呼び出します。  
  
 この戻り値は、不明な <xref:System.Xaml.XamlType>に基づく <xref:System.Xaml.Schema.XamlTypeInvoker> に対して `null` ます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>不明な、完全に実装されていない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を表す静的な値を提供します。</summary>
        <value>不明な、完全に実装されていない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を表す静的な値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 System.string によって定義された API の <xref:System.Xaml.Schema.XamlTypeInvoker> パラメーターにこの値を指定すると、通常、呼び出されたコードが例外をスローします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
