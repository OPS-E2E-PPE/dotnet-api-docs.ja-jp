<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c525148f9f35484ee4da9f7efe5966eded238bd1" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75052308" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="09646-101"><see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.PriorityBinding" />、および <see cref="T:System.Windows.Data.MultiBinding" /> の各クラスに共通する特性を定義します。</span><span class="sxs-lookup"><span data-stu-id="09646-101">Defines the common characteristics of the <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" />, and <see cref="T:System.Windows.Data.MultiBinding" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09646-102"><xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> メソッドはシールされているため、<xref:System.Windows.Data.BindingBase> から派生するカスタムバインドクラスは、[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] マークアップ拡張機能として正しく機能しません。</span><span class="sxs-lookup"><span data-stu-id="09646-102">Because the <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> method is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] markup extension.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09646-103">そのバインディングが属している <see cref="T:System.Windows.Data.BindingGroup" /> の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09646-103">Gets or sets the name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span></span></summary>
        <value><span data-ttu-id="09646-104">そのバインディングが属している <see cref="T:System.Windows.Data.BindingGroup" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="09646-104">The name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09646-105"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A> が設定されていない場合、バインドは、バインドのソースと <xref:System.Windows.Data.BindingGroup> を持つ親要素の <xref:System.Windows.FrameworkElement.DataContext%2A> が同じオブジェクトである場合にのみ、<xref:System.Windows.Data.BindingGroup> に属します。</span><span class="sxs-lookup"><span data-stu-id="09646-105">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set, the binding belongs to a <xref:System.Windows.Data.BindingGroup> only if the binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> are the same object.</span></span>  
  
 <span data-ttu-id="09646-106"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A> が値に設定されている場合、次の条件に該当する場合は、バインドが <xref:System.Windows.Data.BindingGroup> に属します。</span><span class="sxs-lookup"><span data-stu-id="09646-106">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to a value, the binding belongs to a <xref:System.Windows.Data.BindingGroup> if the following conditions are true:</span></span>  
  
-   <span data-ttu-id="09646-107"><xref:System.Windows.Data.BindingGroup> と <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> の <xref:System.Windows.Data.BindingGroup.Name%2A> が等しい。</span><span class="sxs-lookup"><span data-stu-id="09646-107">The <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> are equal.</span></span>  
  
-   <span data-ttu-id="09646-108"><xref:System.Windows.Data.BindingGroup> は、バインディングの target 要素の親要素に属しています。</span><span class="sxs-lookup"><span data-stu-id="09646-108">The <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
 <span data-ttu-id="09646-109"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A> が `null`に設定されている場合、バインドは <xref:System.Windows.Data.BindingGroup>の一部ではありません。</span><span class="sxs-lookup"><span data-stu-id="09646-109">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to `null`, the binding is never a part of a <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="09646-110"><xref:System.Windows.Data.BindingGroup> を持つ親要素の <xref:System.Windows.FrameworkElement.DataContext%2A> とは異なるソースを持つバインディングを含めることができます。そのためには、<xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> を設定し、バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティを同じ値に設定します。</span><span class="sxs-lookup"><span data-stu-id="09646-110">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span>  <span data-ttu-id="09646-111"><xref:System.Windows.Data.BindingGroup> を持つ親要素の <xref:System.Windows.FrameworkElement.DataContext%2A> と同じソースを持つバインディングを除外するには、<xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> を設定し、バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティを別の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="09646-111">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09646-112">次の例は、ユーザーが2つのオブジェクトのプロパティを等しい値に設定したかどうかを確認するアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="09646-112">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="09646-113">最初の例では、2つの <xref:System.Windows.Controls.TextBox> コントロールを作成し、それぞれが異なるソースにデータをバインドします。最初の <xref:System.Windows.Controls.TextBox> のバインドは <xref:System.Windows.Data.BindingGroup> に含まれています。これは、<xref:System.Windows.Controls.TextBox> が親から <xref:System.Windows.FrameworkElement.DataContext%2A> と <xref:System.Windows.Data.BindingGroup> を継承するためです。<xref:System.Windows.Controls.StackPanel></span><span class="sxs-lookup"><span data-stu-id="09646-113">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to a different source: The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel></span></span>  
  
 <span data-ttu-id="09646-114">2番目の <xref:System.Windows.Controls.TextBox> のバインドは、<xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> と <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> の <xref:System.Windows.Data.Binding> の両方が `bindingGroup`に設定されているため、<xref:System.Windows.Data.BindingGroup> に含まれています。</span><span class="sxs-lookup"><span data-stu-id="09646-114">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="09646-115">次の例では、前の例で使用している <xref:System.Windows.Controls.ValidationRule> を示します。</span><span class="sxs-lookup"><span data-stu-id="09646-115">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span>  <span data-ttu-id="09646-116"><xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドでは、この例では <xref:System.Windows.Data.BindingGroup> から各ソースオブジェクトを取得し、オブジェクトのプロパティが等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="09646-116">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09646-117">ターゲット上の値が変更された後でバインディング ソースを更新する前に待機する時間 (ミリ秒単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09646-117">Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</span></span></summary>
        <value><span data-ttu-id="09646-118">バインディング ソースが更新されるまで待機する、ミリ秒単位の時間。</span><span class="sxs-lookup"><span data-stu-id="09646-118">The amount of time, in milliseconds, to wait before updating the binding source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09646-119">バインディングを使用して、ターゲットでプロパティの値が変更されるたびにバインディングソースを更新する場合は、<xref:System.Windows.Data.Binding.Mode%2A> プロパティを <xref:System.Windows.Data.BindingMode.TwoWay> に設定し、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> を <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>に設定します。</span><span class="sxs-lookup"><span data-stu-id="09646-119">When you use a binding to update the binding source whenever the value of the property changes on the target, you set the <xref:System.Windows.Data.Binding.Mode%2A> property to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="09646-120">このような場合は、<xref:System.Windows.Data.BindingBase.Delay%2A> プロパティを使用して、ターゲットが変更されてからソースが更新されるまでの時間の遅延があるかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="09646-120">In this situation, you can use the <xref:System.Windows.Data.BindingBase.Delay%2A> property to specify whether there should be a time delay between when the target is changed and when the source is updated.</span></span>  <span data-ttu-id="09646-121">これは、ユーザーがソースオブジェクトのプロパティを変更できるようにし、各変更をすぐにソースにコミットしないようにする場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="09646-121">This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</span></span>  <span data-ttu-id="09646-122">たとえば、データオブジェクトのプロパティに双方向でバインドされたデータのテキストボックスがあるとします。</span><span class="sxs-lookup"><span data-stu-id="09646-122">For example, suppose that you have a text box that is data two-way bound to a property of a data object.</span></span>  <span data-ttu-id="09646-123">ユーザーがテキストボックスの値を変更すると、ソースが更新されます。</span><span class="sxs-lookup"><span data-stu-id="09646-123">When the user changes the value in the text box, the source gets updated.</span></span>  <span data-ttu-id="09646-124">このシナリオを有効にするには、<xref:System.Windows.Data.Binding> の [<xref:System.Windows.Data.Binding.Mode%2A>] プロパティを <xref:System.Windows.Data.BindingMode.TwoWay> に設定し、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> を <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>に設定します。</span><span class="sxs-lookup"><span data-stu-id="09646-124">To enable this scenario, you set the <xref:System.Windows.Data.Binding.Mode%2A> property on the <xref:System.Windows.Data.Binding> to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="09646-125">すべてのキーストロークを使用してソースオブジェクトを更新しないようにするには、<xref:System.Windows.Data.BindingBase.Delay%2A> プロパティを適切な値に設定します。これにより、ユーザーが入力を停止してから、その時間が経過した後にのみバインドが更新されます。</span><span class="sxs-lookup"><span data-stu-id="09646-125">To avoid updating the source object with every keystroke, set the <xref:System.Windows.Data.BindingBase.Delay%2A> property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09646-126">バインドが値を返すことができないときに使用する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09646-126">Gets or sets the value to use when the binding is unable to return a value.</span></span></summary>
        <value><span data-ttu-id="09646-127">既定値は <see cref="F:System.Windows.DependencyProperty.UnsetValue" />です。</span><span class="sxs-lookup"><span data-stu-id="09646-127">The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09646-128">バインドは、次の場合に値を正常に返します。</span><span class="sxs-lookup"><span data-stu-id="09646-128">A binding returns a value successfully if:</span></span>  
  
1.  <span data-ttu-id="09646-129">バインディングソースへのパスが正常に解決されます。</span><span class="sxs-lookup"><span data-stu-id="09646-129">The path to the binding source resolves successfully.</span></span>  
  
2.  <span data-ttu-id="09646-130">値コンバーター (存在する場合) は、結果の値を変換できます。</span><span class="sxs-lookup"><span data-stu-id="09646-130">The value converter, if any, is able to convert the resulting value.</span></span>  
  
3.  <span data-ttu-id="09646-131">結果の値は、バインディングターゲット (ターゲット) プロパティに対して有効です。</span><span class="sxs-lookup"><span data-stu-id="09646-131">The resulting value is valid for the binding target (target) property.</span></span>  
  
 <span data-ttu-id="09646-132">1と2が <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>を返す場合、target プロパティは <xref:System.Windows.Data.BindingBase.FallbackValue%2A>の値 (使用可能な場合) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="09646-132">If 1 and 2 return <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, the target property is set to the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available.</span></span> <span data-ttu-id="09646-133"><xref:System.Windows.Data.BindingBase.FallbackValue%2A>がない場合は、target プロパティの既定値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="09646-133">If there is no <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, the default value of the target property is used.</span></span>  
  
 <span data-ttu-id="09646-134">値 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> は、正常な戻り値とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="09646-134">The value <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> is not considered a successful return value.</span></span>  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="09646-135">XAML テキストの使用</span><span class="sxs-lookup"><span data-stu-id="09646-135">XAML Text Usage</span></span>  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 <span data-ttu-id="09646-136">**もしくは**</span><span class="sxs-lookup"><span data-stu-id="09646-136">**- or -**</span></span>  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="09646-137">XAML 値</span><span class="sxs-lookup"><span data-stu-id="09646-137">XAML Values</span></span>  
 <span data-ttu-id="09646-138">*fallbackValue*</span><span class="sxs-lookup"><span data-stu-id="09646-138">*fallbackValue*</span></span>  
 <span data-ttu-id="09646-139">ターゲットプロパティと同じ型の属性またはオブジェクト要素の値。</span><span class="sxs-lookup"><span data-stu-id="09646-139">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="09646-140">XAML の使用情報については、その型のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="09646-140">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="09646-141">その型は、その値の属性構文をサポートしているか、またはサポートしていないか、またはオブジェクト要素構文 (その型のパラメーターなしのコンストラクターを必要とする) をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="09646-141">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a parameterless constructor on that type).</span></span> <span data-ttu-id="09646-142">したがって、ターゲットプロパティの型は、<xref:System.Windows.Data.BindingBase.FallbackValue%2A> プロパティの値に使用する構文に影響します。</span><span class="sxs-lookup"><span data-stu-id="09646-142">The target property type will therefore influence which syntax you use for the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="09646-143">マークアップ拡張機能のサービスを提供できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09646-143">The object that can provide services for the markup extension.</span></span> <span data-ttu-id="09646-144"><see langword="null" /> である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="09646-144">May be <see langword="null" />;</span></span></param>
        <summary><span data-ttu-id="09646-145">このバインディングおよび拡張機能の適用先のプロパティに設定されるオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="09646-145">Returns an object that should be set on the property where this binding and extension are applied.</span></span></summary>
        <returns><span data-ttu-id="09646-146">バインディング ターゲット プロパティに設定する値。</span><span class="sxs-lookup"><span data-stu-id="09646-146">The value to set on the binding target property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09646-147">この実装では、提供されているすべての実用的な派生クラス (<xref:System.Windows.Data.Binding>、<xref:System.Windows.Data.PriorityBinding>、および <xref:System.Windows.Data.MultiBinding>) に対して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] を通じてバインディングを行うための基本構文がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="09646-147">This implementation provides the base syntax support for binding through [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] for all provided practical derived classes (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding>).</span></span>  
  
 <span data-ttu-id="09646-148">このメソッドの <xref:System.Windows.Data.BindingBase> クラスの実装では、バインディングの結果である式オブジェクトを返すことが想定されています。</span><span class="sxs-lookup"><span data-stu-id="09646-148">The <xref:System.Windows.Data.BindingBase> class implementation of this method is expected to return an expression object that is the result of a binding.</span></span> <span data-ttu-id="09646-149">プロパティのバインドは、特定の <xref:System.Windows.DependencyObject>で特定の <xref:System.Windows.DependencyProperty> を対象にすることによって機能します。</span><span class="sxs-lookup"><span data-stu-id="09646-149">Binding a property works by targeting a given <xref:System.Windows.DependencyProperty> on a given <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="09646-150">この2つの情報は、`serviceProvider`で <xref:System.Windows.Markup.IProvideValueTarget> 実装を照会することによって送信されます。 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] リーダーは、バインディングの解析中に使用できます。</span><span class="sxs-lookup"><span data-stu-id="09646-150">These two pieces of information are transmitted by querying for an <xref:System.Windows.Markup.IProvideValueTarget> implementation on the `serviceProvider`, which the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] reader makes available during parsing of a binding.</span></span> <span data-ttu-id="09646-151">この基本クラスの実装は、有効な <xref:System.Windows.DependencyProperty> と <xref:System.Windows.DependencyObject>を確認する役割を担います。</span><span class="sxs-lookup"><span data-stu-id="09646-151">This base class implementation is responsible for checking for a valid <xref:System.Windows.DependencyProperty> and <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="09646-152">これらが見つかった場合は、基底クラスが内部抽象メソッドを呼び出すことによって実装されているように、バインディング式を返す実際の実装がさまざまな派生クラスに分類されます。</span><span class="sxs-lookup"><span data-stu-id="09646-152">If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</span></span> <span data-ttu-id="09646-153">それ以外の場合、拡張機能はバインドオブジェクト自体を返します。</span><span class="sxs-lookup"><span data-stu-id="09646-153">Otherwise, the extension returns the binding object itself.</span></span> <span data-ttu-id="09646-154">バインディング自体を返すと、型の不一致エラーが発生しますが、通常の状況では発生しません。</span><span class="sxs-lookup"><span data-stu-id="09646-154">Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09646-155">このメソッドに実装されている [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] を通じてバインドする構文は内部オーバーライドの実装に依存しているため、<xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> 自体はシールされているため、<xref:System.Windows.Data.BindingBase> から派生するカスタムバインドクラスは [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] マークアップ拡張機能として正しく機能しません。</span><span class="sxs-lookup"><span data-stu-id="09646-155">Because the syntax for binding through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] as implemented in this method relies on implementing an internal override, and because <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> itself is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] markup extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09646-156">シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="09646-156">Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="09646-157"><see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09646-157"><see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09646-158"><see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> プロパティをシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="09646-158">Returns a value that indicates whether the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized.</span></span></summary>
        <returns><span data-ttu-id="09646-159"><see langword="true" /> プロパティをシリアル化する必要がある場合は <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09646-159"><see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09646-160">バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09646-160">Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</span></span></summary>
        <value><span data-ttu-id="09646-161">バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="09646-161">A string that specifies how to format the binding if it displays the bound value as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09646-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> には、定義済み、複合、またはカスタムの文字列形式を使用できます。</span><span class="sxs-lookup"><span data-stu-id="09646-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> can be a predefined, composite, or custom string format.</span></span> <span data-ttu-id="09646-163">文字列形式の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="09646-163">For more information about string formats, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="09646-164"><xref:System.Windows.Data.Binding.Converter%2A> と <xref:System.Windows.Data.BindingBase.StringFormat%2A> のプロパティを設定すると、最初にコンバーターがデータ値に適用され、その後 <xref:System.Windows.Data.BindingBase.StringFormat%2A> が適用されます。</span><span class="sxs-lookup"><span data-stu-id="09646-164">If you set the <xref:System.Windows.Data.Binding.Converter%2A> and <xref:System.Windows.Data.BindingBase.StringFormat%2A> properties, the converter is applied to the data value first, and then the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is applied.</span></span>  
  
 <span data-ttu-id="09646-165"><xref:System.Windows.Data.Binding> の <xref:System.Windows.Data.BindingBase.StringFormat%2A> を複合文字列形式に設定する場合は、パラメーターを1つだけ指定できます。</span><span class="sxs-lookup"><span data-stu-id="09646-165">When you set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on a <xref:System.Windows.Data.Binding> to a composite string format, you can specify only one parameter.</span></span>  
  
 <span data-ttu-id="09646-166"><xref:System.Windows.Data.MultiBinding>を使用する場合、<xref:System.Windows.Data.BindingBase.StringFormat%2A> プロパティは <xref:System.Windows.Data.MultiBinding>に設定されている場合にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="09646-166">When you use a <xref:System.Windows.Data.MultiBinding>, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property applies only when it is set on the <xref:System.Windows.Data.MultiBinding>.</span></span>  <span data-ttu-id="09646-167">子 <xref:System.Windows.Data.Binding> オブジェクトに設定されている <xref:System.Windows.Data.BindingBase.StringFormat%2A> の値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="09646-167">The value of <xref:System.Windows.Data.BindingBase.StringFormat%2A> that is set on any child <xref:System.Windows.Data.Binding> objects is ignored.</span></span>  <span data-ttu-id="09646-168">複合文字列形式のパラメーターの数は、<xref:System.Windows.Data.MultiBinding>内の子 <xref:System.Windows.Data.Binding> オブジェクトの数を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="09646-168">The number of parameters in a composite string format cannot exceed the number of child <xref:System.Windows.Data.Binding> objects in the <xref:System.Windows.Data.MultiBinding>.</span></span>  
  
 <span data-ttu-id="09646-169"><xref:System.Windows.Data.PriorityBinding>を使用する場合は、<xref:System.Windows.Data.PriorityBinding>、子バインドオブジェクト、またはその両方で <xref:System.Windows.Data.BindingBase.StringFormat%2A> を設定できます。</span><span class="sxs-lookup"><span data-stu-id="09646-169">When you use a <xref:System.Windows.Data.PriorityBinding>, you can set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on the <xref:System.Windows.Data.PriorityBinding>, on child binding objects, or both.</span></span>  <span data-ttu-id="09646-170">適用される子バインディングに <xref:System.Windows.Data.BindingBase.StringFormat%2A> が設定されている場合、その値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="09646-170">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is set on the child binding that is applied, that value is used.</span></span>  <span data-ttu-id="09646-171">適用される子バインドで <xref:System.Windows.Data.BindingBase.StringFormat%2A> が設定されていない場合は、<xref:System.Windows.Data.PriorityBinding> の <xref:System.Windows.Data.BindingBase.StringFormat%2A> が設定されている場合に適用されます。</span><span class="sxs-lookup"><span data-stu-id="09646-171">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is not set on the child binding that is applied, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> of the <xref:System.Windows.Data.PriorityBinding> is applied if it is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09646-172">次の例では、<xref:System.Windows.Data.BindingBase.StringFormat%2A> プロパティを使用して、`Price`(<xref:System.Double>) を通貨を表す文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="09646-172">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property to convert `Price`, which is a <xref:System.Double>, to a string that represents a currency.</span></span>  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 <span data-ttu-id="09646-173">次の例では、<xref:System.Windows.Data.MultiBinding> の <xref:System.Windows.Data.BindingBase.StringFormat%2A> プロパティを使用して、<xref:System.Windows.Controls.ListBox>内の各項目の `Description` および `Price` を含む文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="09646-173">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property on a <xref:System.Windows.Data.MultiBinding> to build a string that includes the `Description` and `Price` of each item in a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09646-174">ソースの値が <see langword="null" /> のときにターゲットで使用される値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09646-174">Gets or sets the value that is used in the target when the value of the source is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="09646-175">ソースの値が <see langword="null" /> のときにターゲットで使用される値。</span><span class="sxs-lookup"><span data-stu-id="09646-175">The value that is used in the target when the value of the source is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="09646-176">XAML テキストの使用</span><span class="sxs-lookup"><span data-stu-id="09646-176">XAML Text Usage</span></span>  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 <span data-ttu-id="09646-177">**もしくは**</span><span class="sxs-lookup"><span data-stu-id="09646-177">**- or -**</span></span>  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="09646-178">XAML 値</span><span class="sxs-lookup"><span data-stu-id="09646-178">XAML Values</span></span>  
 <span data-ttu-id="09646-179">*nullValue*</span><span class="sxs-lookup"><span data-stu-id="09646-179">*nullValue*</span></span>  
 <span data-ttu-id="09646-180">ターゲットプロパティと同じ型の属性またはオブジェクト要素の値。</span><span class="sxs-lookup"><span data-stu-id="09646-180">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="09646-181">XAML の使用情報については、その型のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="09646-181">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="09646-182">その型は、その値の属性構文をサポートしているか、またはサポートしていないか、またはオブジェクト要素構文 (その型のパラメーターなしのコンストラクターを必要とする) をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="09646-182">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a parameterless constructor on that type).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09646-183">次の例では、<xref:System.Windows.Controls.TextBox> をオブジェクトのプロパティにバインドしています。</span><span class="sxs-lookup"><span data-stu-id="09646-183">The following example binds a <xref:System.Windows.Controls.TextBox> to a property of an object.</span></span>  <span data-ttu-id="09646-184">プロパティが `null`場合、<xref:System.Windows.Controls.TextBox> に "文字列を入力してください" と表示されます。</span><span class="sxs-lookup"><span data-stu-id="09646-184">If the property is `null`, the <xref:System.Windows.Controls.TextBox> displays "please enter a string."</span></span>  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
