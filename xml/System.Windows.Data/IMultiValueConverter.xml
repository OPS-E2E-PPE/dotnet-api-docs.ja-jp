<Type Name="IMultiValueConverter" FullName="System.Windows.Data.IMultiValueConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5afee00a9742fa6b37a5d042903d4c1e9fa83f4e" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82504718" /></Metadata><TypeSignature Language="C#" Value="public interface IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiValueConverter" />
  <TypeSignature Language="F#" Value="type IMultiValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>カスタム ロジックを <see cref="T:System.Windows.Data.MultiBinding" /> に適用する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンバーターを <xref:System.Windows.Data.MultiBinding>に関連付けるには、<xref:System.Windows.Data.IMultiValueConverter> インターフェイスを実装するクラスを作成し、<xref:System.Windows.Data.IMultiValueConverter.Convert%2A> および <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> メソッドを実装します。  
  
 コレクション内の個々のバインドは、独自の値コンバーターを持つことができます。 詳細については、「<xref:System.Windows.Data.IValueConverter>」を参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iMultiValueConverter.Convert (values, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Windows.Data.MultiBinding" /> のソース バインディングが生成する値の配列。 値 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> は、ソース バインディングに変換対象となる値がないことを示します。</param>
        <param name="targetType">バインディング ターゲット プロパティの型。</param>
        <param name="parameter">使用するコンバーター パラメーター。</param>
        <param name="culture">コンバーターで使用するカルチャ。</param>
        <summary>ソース値をバインディング ターゲットの値に変換します。 データ バインディング エンジンでは、ソース バインディングからの値をバインディング ターゲットに伝達するときに、このメソッドを呼び出します。</summary>
        <returns>変換された値。  
  
メソッドが <see langword="null" /> を返す場合は、有効な <see langword="null" /> 値が使用されています。  
  
<see cref="T:System.Windows.DependencyProperty" /> の戻り値。<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> は、コンバーターで値を生成しなかったこと、および <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> が使用できる場合にバインディングでそれを使用し、使用できない場合は既定値を使用することを示します。  
  
<see cref="T:System.Windows.Data.Binding" /> の戻り値。<see cref="F:System.Windows.Data.Binding.DoNothing" /> は、バインディングで値を転送しないこと、あるいは <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> または既定値を使用しないことを示します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データバインディングエンジンは、ユーザーが指定したコンバーターによってスローされた例外をキャッチしません。 <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> メソッドによってスローされる例外や、<xref:System.Windows.Data.IMultiValueConverter.Convert%2A> メソッドが呼び出すメソッドによってスローされるキャッチされない例外は、実行時エラーとして扱われます。 <xref:System.Windows.DependencyProperty>を返すことによって、予想される問題を処理します。<xref:System.Windows.DependencyProperty.UnsetValue>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]" Usage="iMultiValueConverter.ConvertBack (value, targetTypes, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">バインディング ターゲットによって生成される値。</param>
        <param name="targetTypes">変換対象の型の配列。 配列の長さは、メソッドの戻り値として推奨されている値の数と型を示します。</param>
        <param name="parameter">使用するコンバーター パラメーター。</param>
        <param name="culture">コンバーターで使用するカルチャ。</param>
        <summary>バインディング ターゲットの値をバインディング ソースの値に変換します。</summary>
        <returns>ターゲット値からソース値に変換された値の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.MultiBinding>内のバインディングよりも多くの戻り値がある場合、超過した戻り値は無視されます。 戻り値よりも多くのソースバインディングがある場合、残りのソースバインディングには値が設定されていません。 戻り値の型は `targetTypes`に対して検証されません。値は、ソースバインドで直接設定されます。  
  
 インデックス `i`でソースバインディングに値が設定されていないことを示すために、`i` 位置に <xref:System.Windows.Data.Binding.DoNothing> を返します。  
  
 <xref:System.Windows.DependencyProperty>を返します。<xref:System.Windows.DependencyProperty.UnsetValue> `i` 位置では、コンバーターがインデックス `i`でソースバインドの値を指定できず、値が設定されないことを示します。  
  
 コンバーターが変換を実行できないか、またはこの方向の変換をサポートしていないことを示すために `null` を返します。  
  
 データバインディングエンジンは、ユーザーが指定したコンバーターによってスローされた例外をキャッチしません。 <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> メソッドによってスローされる例外や、<xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> メソッドが呼び出すメソッドによってスローされるキャッチされない例外は、実行時エラーとして扱われます。 `null`を返すことによって、予想される問題を処理します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
  </Members>
</Type>
