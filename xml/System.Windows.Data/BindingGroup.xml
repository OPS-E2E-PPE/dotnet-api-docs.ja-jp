<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22b335186a7f3b88802e3f1e8cc8bbc8212e769c" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73397756" /></Metadata><TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>あるオブジェクトの検証に使用されるバインディングと <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトのコレクションを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup> によって、複数のバインド間のリレーションシップが作成されます。これは、1つの検証と更新を行うことができます。 たとえば、ユーザーにアドレスの入力を求めるアプリケーションがあるとします。 次に、アプリケーションは `Address`型のオブジェクトを設定します。このオブジェクトには、プロパティ、`Street`、`City`、`ZipCode`、および `Country`と、ユーザーが指定した値が含まれます。 このアプリケーションには、4つの <xref:System.Windows.Controls.TextBox> コントロールを含むパネルがあり、それぞれがオブジェクトのプロパティの1つにバインドされています。 <xref:System.Windows.Data.BindingGroup> 内の <xref:System.Windows.Controls.ValidationRule> を使用して、`Address` オブジェクトを検証できます。 バインドが同じ <xref:System.Windows.Data.BindingGroup>に参加している場合は、郵便番号が住所の国/地域に対して有効であることを確認できます。  
  
 <xref:System.Windows.FrameworkElement> または <xref:System.Windows.FrameworkContentElement>の <xref:System.Windows.FrameworkElement.BindingGroup%2A> プロパティを設定します。 子要素は、他の継承可能なプロパティと同様に、親要素から <xref:System.Windows.Data.BindingGroup> を継承します。 次のいずれかの状況が発生した場合、子孫要素のバインドが <xref:System.Windows.Data.BindingGroup> に追加されます。  
  
-   <xref:System.Windows.Data.BindingGroup> を持つ要素のバインディングのソースと <xref:System.Windows.FrameworkElement.DataContext%2A> が同じオブジェクトであり、<xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティが設定されていません。  
  
-   バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティは <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> の <xref:System.Windows.Data.BindingGroup.Name%2A> と同じであり、明示的に `null`に設定されていません。  
  
 アドレスの例では、<xref:System.Windows.Controls.Panel> の <xref:System.Windows.FrameworkElement.DataContext%2A> が `Address`型のオブジェクトに設定されているとします。 各 <xref:System.Windows.Controls.TextBox> のバインドが、パネルの <xref:System.Windows.Data.BindingGroup> に追加されます。  
  
 <xref:System.Windows.Data.BindingGroup>に <xref:System.Windows.Controls.ValidationRule> オブジェクトを追加します。 <xref:System.Windows.Controls.ValidationRule> を実行すると、<xref:System.Windows.Data.BindingGroup> が <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの最初のパラメーターとして渡されます。 この <xref:System.Windows.Data.BindingGroup> で <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> または <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> メソッドを使用して、オブジェクトの提案された値を取得したり、<xref:System.Windows.Data.BindingGroup.Items%2A> プロパティを使用してバインディングのソースを取得したりできます。  
  
 <xref:System.Windows.Data.BindingGroup> は、各バインドが個別に更新されるのではなく、バインドのソースを同時に更新します。 いずれかのメソッドを呼び出してデータ (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>、<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>、または <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>) を検証すると、この例の各 <xref:System.Windows.Controls.TextBox> のバインドが検証され、更新される可能性があります。 バインドが <xref:System.Windows.Data.BindingGroup>の一部である場合、明示的に <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> プロパティを設定しない限り、バインドのソースは、<xref:System.Windows.Data.BindingGroup>で <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> または <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> を呼び出すまで更新されません。  
  
   
  
## Examples  
 次の例では、項目の説明と価格、およびプランの有効期限が切れる日付を入力するようにユーザーに求めるアプリケーションを作成します。 アプリケーションによって、フォームの下の項目の現在の情報が表示されます。 ユーザーは、変更を送信またはキャンセルできます。  
  
 この動作を実現するために、アプリケーションは次の処理を実行します。  
  
-   <xref:System.Windows.Data.BindingGroup> を作成し、アプリケーションの [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] を作成するときにルート <xref:System.Windows.Controls.StackPanel> に追加します。  
  
-   アプリケーションのロジックで <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>、および <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> を呼び出して、変更をロールバックできるようにします。  
  
-   <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドで <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> を呼び出してユーザーの入力を取得し、100ドル以上の項目が少なくとも7日間利用可能であることを確認します。  
  
 次の例では、アプリケーションの [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] を作成します。 ルート <xref:System.Windows.Controls.StackPanel> には、前に説明したように、項目を検証する <xref:System.Windows.Controls.ValidationRule> を含む <xref:System.Windows.Data.BindingGroup> があります。 `Price` プロパティのバインドオブジェクトと `OfferExpires` プロパティは <xref:System.Windows.Data.BindingGroup> の一部になり、各バインドには、それぞれ価格と日付が有効な値であることを確認するための <xref:System.Windows.Controls.ValidationRule> があります。 個々のプロパティの検証規則は、<xref:System.Windows.Data.BindingGroup>上の <xref:System.Windows.Controls.ValidationRule> の前に実行されます。  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 次の例は、アプリケーションのイベントハンドラーを示しています。 ユーザーが [送信] ボタンをクリックすると、アプリケーションは <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> を呼び出して、<xref:System.Windows.Data.BindingGroup>に関連付けられている各 <xref:System.Windows.Controls.ValidationRule> を実行します。 各 <xref:System.Windows.Controls.ValidationRule> が成功した場合、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A> はオブジェクトに値を保存し、編集トランザクションを終了します。 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> が成功した場合、アプリケーションは別の編集トランザクションを開始します。 <xref:System.Windows.Controls.ValidationRule> が失敗した場合、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> イベントは、アプリケーションセットが <xref:System.Windows.Data.BindingGroup> (前の例では) に `true` する <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> れるために発生します。 `ItemError` は、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> イベントを処理し、検証エラーに関する情報をユーザーに表示します。 この例では、<xref:System.Windows.Controls.StackPanel> の <xref:System.Windows.FrameworkElement.Loaded> イベントと **[キャンセル**] ボタンの <xref:System.Windows.Controls.Primitives.ButtonBase.Click> イベントも処理します。  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 次の例は、最初の例の <xref:System.Windows.Data.BindingGroup> に追加されたカスタム <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`を示しています。 <xref:System.Windows.Controls.ValidationRule> は <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの <xref:System.Windows.Data.BindingGroup> を使用して、ユーザーがフォームに入力した値を取得します。また、100ドル以上の項目がある場合は、少なくとも7日間使用できることを確認します。  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> 内のソースに対する編集トランザクションを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup> のソースが保留中の変更の破棄をサポートしている場合は、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を呼び出して編集トランザクションを開始し、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A> を呼び出して保留中の変更を保存し、<xref:System.Windows.Data.BindingGroup.CancelEdit%2A> を呼び出して保留中の変更を破棄することができます。  
  
 <xref:System.ComponentModel.IEditableObject>を実装する <xref:System.Windows.Data.BindingGroup.Items%2A> 内の各オブジェクトに対して、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A> の呼び出し <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 次の例では、ウィンドウが読み込まれて編集トランザクションを開始するときに <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を呼び出します。  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingExpression> は、次のいずれかのケースが発生した場合に <xref:System.Windows.Data.BindingGroup> に属します。  
  
-   バインディングのソースと、<xref:System.Windows.Data.BindingGroup> を持つ要素の <xref:System.Windows.FrameworkElement.DataContext%2A> が同じオブジェクトで、<xref:System.Windows.Data.BindingBase.BindingGroupName%2A> が設定されていません。  
  
-   バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティと <xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> は、同じ null 以外の値に設定され、<xref:System.Windows.Data.BindingGroup> はバインドの target 要素の親要素に属しています。  
  
-   <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>に <xref:System.Windows.Data.BindingExpression> を追加します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>編集トランザクションを終了し、保留中の変更を破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを実行すると、ソースオブジェクトが、編集トランザクションを終了できる場合は、保留中の変更が破棄されます。 次に、メソッドは、保存されたソース値を使用してターゲットプロパティを更新します。  
  
 <xref:System.ComponentModel.IEditableObject>を実装する <xref:System.Windows.Data.BindingGroup.Items%2A> 内の各オブジェクトに対して、<xref:System.Windows.Data.BindingGroup.CancelEdit%2A> の呼び出し <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Data.BindingGroup.CancelEdit%2A> を呼び出して保留中の変更を破棄し、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を呼び出してソースを再編集できるように準備します。  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディングの各ソースが保留中の変更を破棄して元の値を復元できるかどうかを取得します。</summary>
        <value>バインディングの各ソースが保留中の変更を破棄して元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableObject>を実装している場合、ソースは保留中の変更を破棄できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべての <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトを実行し、すべての検証ルールが成功した場合はバインディング ソースを更新します。</summary>
        <returns>すべての <see cref="T:System.Windows.Controls.ValidationRule" /> が成功して値がソースにコミットされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべての <xref:System.Windows.Controls.ValidationRule> が成功した場合、ソースオブジェクトがこの操作を実行できる場合は、このメソッドによって保留中の変更がコミットされ、編集トランザクションが終了します。  
  
 <xref:System.ComponentModel.IEditableObject>を実装する <xref:System.Windows.Data.BindingGroup.Items%2A> 内の各オブジェクトに対して、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A> の呼び出し <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A> を呼び出して保留中の変更を保存し、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を呼び出して、ソースを再編集できるように準備します。  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">指定されているプロパティを含むオブジェクト。</param>
        <param name="propertyName">提示されている値を取得するプロパティ。</param>
        <summary>指定されているプロパティと項目に対して提示されている値を返します。</summary>
        <returns>提示されているプロパティ値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> メソッドでこのメソッドを使用して、ソースにコミットする値を取得します。 戻り値の型は、<xref:System.Windows.Controls.ValidationRule> が発生する段階によって異なります。 たとえば、<xref:System.Windows.Controls.TextBox> が integer 型のプロパティにバインドされたデータであり、<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> を呼び出す <xref:System.Windows.Controls.ValidationRule> の <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> が <xref:System.Windows.Controls.ValidationStep.RawProposedValue>に設定されている場合、メソッドは文字列を返します。 <xref:System.Windows.Controls.ValidationRule> の <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> が <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>に設定されている場合、メソッドはバインドのコンバーターによって返される任意の型を返します。 この例では、<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 通常、整数が返されます。  
  
   
  
## Examples  
 次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるようにユーザーに求めるアプリケーションの一部です。 アプリケーションは、営業担当者と顧客が同じリージョンに属していることを確認します。 この例は、<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドを示しています。このメソッドは、<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> メソッドを使用して、顧客が入力した値を取得します。  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定されている項目とプロパティにはバインディングがありません。</exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">変換エラーまたは前の検証ルールが失敗したために、指定されているプロパティの値は使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> のバインディングに失敗した検証規則があるかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> に失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案された値を含んでいるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案される値を含む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソースを取得します。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソース。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ソースとして使用される各オブジェクトは、オブジェクトが複数のバインドのソースとして使用されている場合でも、<xref:System.Windows.Data.BindingGroup.Items%2A> プロパティに1回追加されます。 多くの場合、<xref:System.Windows.Data.BindingGroup.Items%2A>の項目は1つだけです。これは、<xref:System.Windows.Data.BindingGroup>を使用する要素の <xref:System.Windows.FrameworkElement.DataContext%2A> であるオブジェクトです。 ただし、<xref:System.Windows.Data.BindingGroup> は複数のソースを持つことができます。 たとえば、バインドオブジェクトが同じ <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> を共有し、異なるソースオブジェクトを使用する場合、ソースとして使用される各オブジェクトは <xref:System.Windows.Data.BindingGroup.Items%2A>になります。  
  
 バインディングのパスがソースの入れ子になったプロパティに解決される場合は、<xref:System.Windows.Data.BindingGroup.Items%2A> に複数のオブジェクトを指定することもできます。 たとえば、<xref:System.Windows.Controls.TextBox> コントロールのバインディングが <xref:System.Windows.Data.BindingGroup> の一部であり、その <xref:System.Windows.FrameworkElement.DataContext%2A> が `Address`型のプロパティを持つ `Customer` オブジェクトであるとします。 <xref:System.Windows.Data.Binding> の <xref:System.Windows.Data.Binding.Path%2A> が `Address.ZipCode` プロパティの場合、`Address` は <xref:System.Windows.Data.BindingGroup.Items%2A> プロパティに追加されます。  
  
   
  
## Examples  
 次の例は、ユーザーが2つのオブジェクトのプロパティを等しい値に設定したかどうかを確認するアプリケーションの一部です。 最初の例では、2つの <xref:System.Windows.Controls.TextBox> コントロールを作成し、それぞれが異なるソースにデータをバインドします。 最初の <xref:System.Windows.Controls.TextBox> のバインドでは、<xref:System.Windows.Controls.TextBox> コントロールの親要素 (<xref:System.Windows.Controls.StackPanel>) の <xref:System.Windows.FrameworkElement.DataContext%2A> からソース `object1`を取得します。 2番目の <xref:System.Windows.Controls.TextBox>では、バインドのソースは `object2`に設定されています。 また、この例では、検証エラーを表示する <xref:System.Windows.Controls.Label> も作成します。  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 次の例では、前の例で使用している <xref:System.Windows.Controls.ValidationRule> を示します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドでは、この例では <xref:System.Windows.Data.BindingGroup> から各ソースオブジェクトを取得し、オブジェクトのプロパティが等しいかどうかを確認します。  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> を示す名前を取得または設定します。<see cref="T:System.Windows.Data.BindingGroup" /> ではこの名前を使用して、バインディング オブジェクトを含めたり除外したりできます。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> を示す名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup.Name%2A> が `null`の場合、<xref:System.Windows.Data.BindingGroup> が <xref:System.Windows.Data.BindingGroup>に含まれる要素の <xref:System.Windows.FrameworkElement.DataContext%2A> と同じオブジェクトであるソースを持つバインディング。  
  
 <xref:System.Windows.Data.BindingGroup> を持つ親要素の <xref:System.Windows.FrameworkElement.DataContext%2A> とは異なるソースを持つバインディングを含めることができます。そのためには、<xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> を設定し、バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティを同じ値に設定します。 <xref:System.Windows.Data.BindingGroup> を持つ親要素の <xref:System.Windows.FrameworkElement.DataContext%2A> と同じソースを持つバインディングを除外するには、<xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> を設定し、バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティを別の値に設定します。  
  
   
  
## Examples  
 次の例は、ユーザーが2つのオブジェクトのプロパティを等しい値に設定したかどうかを確認するアプリケーションの一部です。 最初の例では、2つの <xref:System.Windows.Controls.TextBox> コントロールを作成し、それぞれが異なるソースにデータをバインドします。 最初の <xref:System.Windows.Controls.TextBox> のバインドは、<xref:System.Windows.Controls.TextBox> が親 <xref:System.Windows.Data.BindingGroup> から <xref:System.Windows.FrameworkElement.DataContext%2A> および <xref:System.Windows.Controls.StackPanel>を継承するため、<xref:System.Windows.Data.BindingGroup> に含まれています。  
  
 2番目の <xref:System.Windows.Controls.TextBox> のバインドは、<xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> と <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> の <xref:System.Windows.Data.Binding> の両方が `bindingGroup`に設定されているため、<xref:System.Windows.Data.BindingGroup> に含まれています。  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 次の例では、前の例で使用している <xref:System.Windows.Controls.ValidationRule> を示します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドでは、この例では <xref:System.Windows.Data.BindingGroup> から各ソースオブジェクトを取得し、オブジェクトのプロパティが等しいかどうかを確認します。  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化したときに <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生するかどうかを取得または設定します。</summary>
        <value><see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化すると <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 添付イベントは、<xref:System.Windows.Data.BindingGroup>を持つ要素で発生します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Data.BindingGroup> を作成し、<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> を `true` に設定して、<xref:System.Windows.Controls.ValidationRule> が失敗したときにアプリケーションが <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> イベントを処理できるようにします。  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 次の例では、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> イベントを処理します。  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクトを取得します。</summary>
        <value>この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提案された値は、バインディングのターゲットで変更されたがソースにコミットされていない値です。 たとえば、<xref:System.Windows.Controls.TextBox> に双方向のバインドがあり、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> プロパティが <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>に設定されているとします。 ユーザーが <xref:System.Windows.Controls.TextBox>の値を変更した場合、提案された値は、ソースにコミットされる前の <xref:System.Windows.Controls.TextBox> 内の値になります。  
  
 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> が `true`場合、<xref:System.Windows.Data.BindingGroup> は、1つのバインドが BindingGroup から出たときに提示された値を使用し、同じソースを持つ別のバインドが BindingGroup に参加します。  たとえば、アプリケーションが複数のフィールドを編集し、ボタンをクリックしてソースオブジェクトを更新できるようにするとします。 フィールドが編集されていない場合は、アプリケーションによって <xref:System.Windows.Controls.TextBlock>に表示されます。 ユーザーがフィールドの編集を開始すると、アプリケーションによって <xref:System.Windows.Controls.TextBlock> が <xref:System.Windows.Controls.TextBox>に置き換えられます。 ユーザーがそのフィールドの編集を完了すると、アプリケーションによって <xref:System.Windows.Controls.TextBox> が <xref:System.Windows.Controls.TextBlock>に置き換えられます。 ソースは、ユーザーがボタンをクリックするまで更新されないため、<xref:System.Windows.Controls.TextBlock> が提案された値を表示する方法が必要です。 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> を `true`に設定すると、ソースが更新されていない場合でも、アプリケーションによってフィールドに対するユーザーの変更が表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string * obj -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">指定されているプロパティを含むオブジェクト。</param>
        <param name="propertyName">提示されている値を取得するプロパティ。</param>
        <param name="value">このメソッドが返るときには、提示されているプロパティ値を表すオブジェクトを格納しています。 このパラメーターは初期化せずに渡されます。</param>
        <summary>指定されているプロパティと項目に対して提示されている値の取得を試みます。</summary>
        <returns>値が指定されたプロパティの提示されている値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された項目およびプロパティのバインディングが存在しない場合、または変換エラーまたは以前の検証規則が失敗したために、指定されたプロパティの値が使用できない場合、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A> は `false` を返します。  
  
 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> メソッドでこのメソッドを使用して、ソースにコミットする値を取得します。 `value` 型は、<xref:System.Windows.Controls.ValidationRule> が発生する段階に依存します。 たとえば、<xref:System.Windows.Controls.TextBox> が integer 型のプロパティにデータバインドされている場合、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A> を呼び出す <xref:System.Windows.Controls.ValidationRule> の <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> が <xref:System.Windows.Controls.ValidationStep.RawProposedValue>に設定されている場合、`value` は文字列になります。 <xref:System.Windows.Controls.ValidationRule> の <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> が <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>に設定されている場合、`value` の種類は、バインディングのコンバーターによって返される任意の型になります。 この例では、通常、`value` は整数です。  
  
   
  
## Examples  
 次の例では、`ValidateDateAndPrice`という名前のカスタム <xref:System.Windows.Controls.ValidationRule> を作成します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドでは、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A> メソッドと <xref:System.Windows.Data.BindingGroup.Items%2A> プロパティを使用して、ユーザーがフォームに入力した値を取得します。 この例では、項目が100ドルを超えている場合、少なくとも7日間は使用できることを確認します。 この例は、<xref:System.Windows.Data.BindingGroup> クラスの大きな例の一部です。  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />、または <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> オブジェクトに対してコンバーターを実行し、すべての検証ルールが成功した場合は、ターゲットの値をソース オブジェクトに保存します。</summary>
        <returns>すべての検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、すべての <xref:System.Windows.Controls.ValidationRule> が成功した場合にソースを更新しますが、ソースが保留中の変更をコミットして編集トランザクションを終了することはありません。 つまり、ソースオブジェクトが <xref:System.ComponentModel.IEditableObject>を実装している場合はです。 このメソッドを呼び出すと <xref:System.ComponentModel.IEditableObject.EndEdit%2A> は呼び出されません。 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> メソッドを使用して、ソースが保留中の変更をコミットするようにします。  
  
   
  
## Examples  
 次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるようにユーザーに求めるアプリケーションの一部です。 アプリケーションは、営業担当者と顧客が同じリージョンに属していることを確認します。 この例では、<xref:System.Windows.Data.BindingGroup.UpdateSources%2A> を呼び出してバインドを検証し、すべての検証規則が成功した場合は、ソースに値を保存します。  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> が `true`場合、バインドは <xref:System.ComponentModel.INotifyDataErrorInfo>を実装するデータソースによって発生したエラーを確認して報告します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> または <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> オブジェクトに対し、コンバーターを実行します。</summary>
        <returns>検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出すと、ソースは更新されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。  エラーがない場合、値は <see langword="null" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ValidationRule> が <xref:System.Windows.Data.BindingGroup>に追加されると、<xref:System.Windows.Data.BindingGroup> は <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの最初のパラメーターとして渡されます。 オブジェクトの提案された値を取得するには、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A> または <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> メソッドを使用します。 バインディングのソースであるオブジェクトは、<xref:System.Windows.Data.BindingGroup.Items%2A> プロパティから取得できます。  
  
   
  
## Examples  
 次の例では、カスタム <xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`を <xref:System.Windows.Data.BindingGroup>に追加します。  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 `ValidateDateAndPrice` クラスの例を次に示します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドは、<xref:System.Windows.Data.BindingGroup> を使用して、ユーザーがフォームに入力した値を取得します。また、100ドル以上の項目がある場合は、少なくとも7日間使用できることを確認します。  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
