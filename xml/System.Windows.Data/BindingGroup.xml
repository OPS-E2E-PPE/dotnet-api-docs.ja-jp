<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22b335186a7f3b88802e3f1e8cc8bbc8212e769c" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73397756" /></Metadata><TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d6219-101">あるオブジェクトの検証に使用されるバインディングと <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトのコレクションを格納します。</span><span class="sxs-lookup"><span data-stu-id="d6219-101">Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-102"><xref:System.Windows.Data.BindingGroup> によって、複数のバインド間のリレーションシップが作成されます。これは、1つの検証と更新を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="d6219-102">A <xref:System.Windows.Data.BindingGroup> creates a relationship between multiple bindings, which can be validated and updated together.</span></span> <span data-ttu-id="d6219-103">たとえば、ユーザーにアドレスの入力を求めるアプリケーションがあるとします。</span><span class="sxs-lookup"><span data-stu-id="d6219-103">For example, suppose that an application prompts the user to enter an address.</span></span> <span data-ttu-id="d6219-104">次に、アプリケーションは `Address`型のオブジェクトを設定します。このオブジェクトには、プロパティ、`Street`、`City`、`ZipCode`、および `Country`と、ユーザーが指定した値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="d6219-104">The application then populates an object of type `Address`, which has the properties, `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="d6219-105">このアプリケーションには、4つの <xref:System.Windows.Controls.TextBox> コントロールを含むパネルがあり、それぞれがオブジェクトのプロパティの1つにバインドされています。</span><span class="sxs-lookup"><span data-stu-id="d6219-105">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to one of the object's properties.</span></span> <span data-ttu-id="d6219-106"><xref:System.Windows.Data.BindingGroup> 内の <xref:System.Windows.Controls.ValidationRule> を使用して、`Address` オブジェクトを検証できます。</span><span class="sxs-lookup"><span data-stu-id="d6219-106">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="d6219-107">バインドが同じ <xref:System.Windows.Data.BindingGroup>に参加している場合は、郵便番号が住所の国/地域に対して有効であることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="d6219-107">If the bindings participate in the same <xref:System.Windows.Data.BindingGroup>, you can ensure that the zip-code is valid for the country/region of the address.</span></span>  
  
 <span data-ttu-id="d6219-108"><xref:System.Windows.FrameworkElement> または <xref:System.Windows.FrameworkContentElement>の <xref:System.Windows.FrameworkElement.BindingGroup%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d6219-108">You set the <xref:System.Windows.FrameworkElement.BindingGroup%2A> property on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="d6219-109">子要素は、他の継承可能なプロパティと同様に、親要素から <xref:System.Windows.Data.BindingGroup> を継承します。</span><span class="sxs-lookup"><span data-stu-id="d6219-109">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span> <span data-ttu-id="d6219-110">次のいずれかの状況が発生した場合、子孫要素のバインドが <xref:System.Windows.Data.BindingGroup> に追加されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-110">A binding on a descendent element is added to a <xref:System.Windows.Data.BindingGroup> if one of the following situations occurs:</span></span>  
  
-   <span data-ttu-id="d6219-111"><xref:System.Windows.Data.BindingGroup> を持つ要素のバインディングのソースと <xref:System.Windows.FrameworkElement.DataContext%2A> が同じオブジェクトであり、<xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="d6219-111">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="d6219-112">バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティは <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> の <xref:System.Windows.Data.BindingGroup.Name%2A> と同じであり、明示的に `null`に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="d6219-112">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding is equal to the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> and they are not explicitly set to `null`.</span></span>  
  
 <span data-ttu-id="d6219-113">アドレスの例では、<xref:System.Windows.Controls.Panel> の <xref:System.Windows.FrameworkElement.DataContext%2A> が `Address`型のオブジェクトに設定されているとします。</span><span class="sxs-lookup"><span data-stu-id="d6219-113">In the example of the address, suppose that the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.Panel> is set to the object of type `Address`.</span></span> <span data-ttu-id="d6219-114">各 <xref:System.Windows.Controls.TextBox> のバインドが、パネルの <xref:System.Windows.Data.BindingGroup> に追加されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-114">The binding for each <xref:System.Windows.Controls.TextBox> is added to the <xref:System.Windows.Data.BindingGroup> of the panel.</span></span>  
  
 <span data-ttu-id="d6219-115"><xref:System.Windows.Data.BindingGroup>に <xref:System.Windows.Controls.ValidationRule> オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="d6219-115">You add <xref:System.Windows.Controls.ValidationRule> objects to a <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="d6219-116"><xref:System.Windows.Controls.ValidationRule> を実行すると、<xref:System.Windows.Data.BindingGroup> が <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの最初のパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-116">The <xref:System.Windows.Data.BindingGroup> is passed as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method when the <xref:System.Windows.Controls.ValidationRule> runs.</span></span> <span data-ttu-id="d6219-117">この <xref:System.Windows.Data.BindingGroup> で <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> または <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> メソッドを使用して、オブジェクトの提案された値を取得したり、<xref:System.Windows.Data.BindingGroup.Items%2A> プロパティを使用してバインディングのソースを取得したりできます。</span><span class="sxs-lookup"><span data-stu-id="d6219-117">You can use the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method on that <xref:System.Windows.Data.BindingGroup> to get the proposed values of the object, and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the sources of the bindings.</span></span>  
  
 <span data-ttu-id="d6219-118"><xref:System.Windows.Data.BindingGroup> は、各バインドが個別に更新されるのではなく、バインドのソースを同時に更新します。</span><span class="sxs-lookup"><span data-stu-id="d6219-118">A <xref:System.Windows.Data.BindingGroup> updates the sources of the binding at the same time instead of each binding being updated separately.</span></span> <span data-ttu-id="d6219-119">いずれかのメソッドを呼び出してデータ (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>、<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>、または <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>) を検証すると、この例の各 <xref:System.Windows.Controls.TextBox> のバインドが検証され、更新される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d6219-119">When you call one of the methods to validate the data (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), the binding for each <xref:System.Windows.Controls.TextBox> in the example is validated and potentially updated.</span></span> <span data-ttu-id="d6219-120">バインドが <xref:System.Windows.Data.BindingGroup>の一部である場合、明示的に <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> プロパティを設定しない限り、バインドのソースは、<xref:System.Windows.Data.BindingGroup>で <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> または <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> を呼び出すまで更新されません。</span><span class="sxs-lookup"><span data-stu-id="d6219-120">When a binding is part of a <xref:System.Windows.Data.BindingGroup>, the source of the binding is not updated until you call <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> on the <xref:System.Windows.Data.BindingGroup>, unless you explicitly set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-121">次の例では、項目の説明と価格、およびプランの有効期限が切れる日付を入力するようにユーザーに求めるアプリケーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="d6219-121">The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires.</span></span> <span data-ttu-id="d6219-122">アプリケーションによって、フォームの下の項目の現在の情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-122">The application displays the current information for the item below the form.</span></span> <span data-ttu-id="d6219-123">ユーザーは、変更を送信またはキャンセルできます。</span><span class="sxs-lookup"><span data-stu-id="d6219-123">The user can submit or cancel the changes.</span></span>  
  
 <span data-ttu-id="d6219-124">この動作を実現するために、アプリケーションは次の処理を実行します。</span><span class="sxs-lookup"><span data-stu-id="d6219-124">The application does the following to achieve this behavior.</span></span>  
  
-   <span data-ttu-id="d6219-125"><xref:System.Windows.Data.BindingGroup> を作成し、アプリケーションの [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] を作成するときにルート <xref:System.Windows.Controls.StackPanel> に追加します。</span><span class="sxs-lookup"><span data-stu-id="d6219-125">Creates a <xref:System.Windows.Data.BindingGroup> and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span>  
  
-   <span data-ttu-id="d6219-126">アプリケーションのロジックで <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>、および <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> を呼び出して、変更をロールバックできるようにします。</span><span class="sxs-lookup"><span data-stu-id="d6219-126">Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.</span></span>  
  
-   <span data-ttu-id="d6219-127"><xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドで <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> を呼び出してユーザーの入力を取得し、100ドル以上の項目が少なくとも7日間利用可能であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6219-127">Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.</span></span>  
  
 <span data-ttu-id="d6219-128">次の例では、アプリケーションの [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] を作成します。</span><span class="sxs-lookup"><span data-stu-id="d6219-128">The following example creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span> <span data-ttu-id="d6219-129">ルート <xref:System.Windows.Controls.StackPanel> には、前に説明したように、項目を検証する <xref:System.Windows.Controls.ValidationRule> を含む <xref:System.Windows.Data.BindingGroup> があります。</span><span class="sxs-lookup"><span data-stu-id="d6219-129">The root <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously.</span></span> <span data-ttu-id="d6219-130">`Price` プロパティのバインドオブジェクトと `OfferExpires` プロパティは <xref:System.Windows.Data.BindingGroup> の一部になり、各バインドには、それぞれ価格と日付が有効な値であることを確認するための <xref:System.Windows.Controls.ValidationRule> があります。</span><span class="sxs-lookup"><span data-stu-id="d6219-130">The binding objects on the `Price` property and the `OfferExpires` property become part of the <xref:System.Windows.Data.BindingGroup> and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values.</span></span> <span data-ttu-id="d6219-131">個々のプロパティの検証規則は、<xref:System.Windows.Data.BindingGroup>上の <xref:System.Windows.Controls.ValidationRule> の前に実行されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-131">The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="d6219-132">次の例は、アプリケーションのイベントハンドラーを示しています。</span><span class="sxs-lookup"><span data-stu-id="d6219-132">The following example shows the event handlers for the application.</span></span> <span data-ttu-id="d6219-133">ユーザーが [送信] ボタンをクリックすると、アプリケーションは <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> を呼び出して、<xref:System.Windows.Data.BindingGroup>に関連付けられている各 <xref:System.Windows.Controls.ValidationRule> を実行します。</span><span class="sxs-lookup"><span data-stu-id="d6219-133">When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="d6219-134">各 <xref:System.Windows.Controls.ValidationRule> が成功した場合、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A> はオブジェクトに値を保存し、編集トランザクションを終了します。</span><span class="sxs-lookup"><span data-stu-id="d6219-134">If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction.</span></span> <span data-ttu-id="d6219-135"><xref:System.Windows.Data.BindingGroup.CommitEdit%2A> が成功した場合、アプリケーションは別の編集トランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="d6219-135">If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction.</span></span> <span data-ttu-id="d6219-136"><xref:System.Windows.Controls.ValidationRule> が失敗した場合、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> イベントは、アプリケーションセットが <xref:System.Windows.Data.BindingGroup> (前の例では) に `true` する <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> れるために発生します。</span><span class="sxs-lookup"><span data-stu-id="d6219-136">When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the <xref:System.Windows.Data.BindingGroup> (in the previous example).</span></span> <span data-ttu-id="d6219-137">`ItemError` は、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> イベントを処理し、検証エラーに関する情報をユーザーに表示します。</span><span class="sxs-lookup"><span data-stu-id="d6219-137">`ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event and displays information about the validation error to the user.</span></span> <span data-ttu-id="d6219-138">この例では、<xref:System.Windows.Controls.StackPanel> の <xref:System.Windows.FrameworkElement.Loaded> イベントと **[キャンセル**] ボタンの <xref:System.Windows.Controls.Primitives.ButtonBase.Click> イベントも処理します。</span><span class="sxs-lookup"><span data-stu-id="d6219-138">The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 <span data-ttu-id="d6219-139">次の例は、最初の例の <xref:System.Windows.Data.BindingGroup> に追加されたカスタム <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`を示しています。</span><span class="sxs-lookup"><span data-stu-id="d6219-139">The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the <xref:System.Windows.Data.BindingGroup> in the first example.</span></span> <span data-ttu-id="d6219-140"><xref:System.Windows.Controls.ValidationRule> は <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの <xref:System.Windows.Data.BindingGroup> を使用して、ユーザーがフォームに入力した値を取得します。また、100ドル以上の項目がある場合は、少なくとも7日間使用できることを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6219-140">The <xref:System.Windows.Controls.ValidationRule> uses the <xref:System.Windows.Data.BindingGroup> in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6219-141"><see cref="T:System.Windows.Data.BindingGroup" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d6219-141">Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6219-142"><see cref="T:System.Windows.Data.BindingGroup" /> 内のソースに対する編集トランザクションを開始します。</span><span class="sxs-lookup"><span data-stu-id="d6219-142">Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-143"><xref:System.Windows.Data.BindingGroup> のソースが保留中の変更の破棄をサポートしている場合は、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を呼び出して編集トランザクションを開始し、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A> を呼び出して保留中の変更を保存し、<xref:System.Windows.Data.BindingGroup.CancelEdit%2A> を呼び出して保留中の変更を破棄することができます。</span><span class="sxs-lookup"><span data-stu-id="d6219-143">If the sources in the <xref:System.Windows.Data.BindingGroup> support discarding pending changes, you can call <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to begin the edit transaction, call <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes, call <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes.</span></span>  
  
 <span data-ttu-id="d6219-144"><xref:System.ComponentModel.IEditableObject>を実装する <xref:System.Windows.Data.BindingGroup.Items%2A> 内の各オブジェクトに対して、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A> の呼び出し <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d6219-144">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> calls <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-145">次の例では、ウィンドウが読み込まれて編集トランザクションを開始するときに <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d6219-145">The following example calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> when a window loads to begin the edit transaction.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-146"><see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-146">Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="d6219-147"><see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="d6219-147">A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-148"><xref:System.Windows.Data.BindingExpression> は、次のいずれかのケースが発生した場合に <xref:System.Windows.Data.BindingGroup> に属します。</span><span class="sxs-lookup"><span data-stu-id="d6219-148">A <xref:System.Windows.Data.BindingExpression> belongs to a <xref:System.Windows.Data.BindingGroup> if one of the following cases occurs:</span></span>  
  
-   <span data-ttu-id="d6219-149">バインディングのソースと、<xref:System.Windows.Data.BindingGroup> を持つ要素の <xref:System.Windows.FrameworkElement.DataContext%2A> が同じオブジェクトで、<xref:System.Windows.Data.BindingBase.BindingGroupName%2A> が設定されていません。</span><span class="sxs-lookup"><span data-stu-id="d6219-149">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set.</span></span>  
  
-   <span data-ttu-id="d6219-150">バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティと <xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> は、同じ null 以外の値に設定され、<xref:System.Windows.Data.BindingGroup> はバインドの target 要素の親要素に属しています。</span><span class="sxs-lookup"><span data-stu-id="d6219-150">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding and the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> are set to the same non-null value and the <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
-   <span data-ttu-id="d6219-151"><xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>に <xref:System.Windows.Data.BindingExpression> を追加します。</span><span class="sxs-lookup"><span data-stu-id="d6219-151">You add a <xref:System.Windows.Data.BindingExpression> to <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6219-152">編集トランザクションを終了し、保留中の変更を破棄します。</span><span class="sxs-lookup"><span data-stu-id="d6219-152">Ends the edit transaction and discards the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-153">このメソッドを実行すると、ソースオブジェクトが、編集トランザクションを終了できる場合は、保留中の変更が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-153">This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</span></span> <span data-ttu-id="d6219-154">次に、メソッドは、保存されたソース値を使用してターゲットプロパティを更新します。</span><span class="sxs-lookup"><span data-stu-id="d6219-154">Then the method updates the target properties with the saved source values.</span></span>  
  
 <span data-ttu-id="d6219-155"><xref:System.ComponentModel.IEditableObject>を実装する <xref:System.Windows.Data.BindingGroup.Items%2A> 内の各オブジェクトに対して、<xref:System.Windows.Data.BindingGroup.CancelEdit%2A> の呼び出し <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d6219-155">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> calls <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-156">次の例では、<xref:System.Windows.Data.BindingGroup.CancelEdit%2A> を呼び出して保留中の変更を破棄し、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を呼び出してソースを再編集できるように準備します。</span><span class="sxs-lookup"><span data-stu-id="d6219-156">The following example calls <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-157">バインディングの各ソースが保留中の変更を破棄して元の値を復元できるかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-157">Gets whether each source in the binding can discard pending changes and restore the original values.</span></span></summary>
        <value><span data-ttu-id="d6219-158">バインディングの各ソースが保留中の変更を破棄して元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-158"><see langword="true" /> if each source in the binding can discard pending changes and restore the original values; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-159"><xref:System.ComponentModel.IEditableObject>を実装している場合、ソースは保留中の変更を破棄できます。</span><span class="sxs-lookup"><span data-stu-id="d6219-159">A source can discard pending changes if it implements <xref:System.ComponentModel.IEditableObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6219-160">すべての <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトを実行し、すべての検証ルールが成功した場合はバインディング ソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="d6219-160">Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="d6219-161">すべての <see cref="T:System.Windows.Controls.ValidationRule" /> が成功して値がソースにコミットされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-161"><see langword="true" /> if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-162">すべての <xref:System.Windows.Controls.ValidationRule> が成功した場合、ソースオブジェクトがこの操作を実行できる場合は、このメソッドによって保留中の変更がコミットされ、編集トランザクションが終了します。</span><span class="sxs-lookup"><span data-stu-id="d6219-162">If every <xref:System.Windows.Controls.ValidationRule> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</span></span>  
  
 <span data-ttu-id="d6219-163"><xref:System.ComponentModel.IEditableObject>を実装する <xref:System.Windows.Data.BindingGroup.Items%2A> 内の各オブジェクトに対して、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A> の呼び出し <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d6219-163">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> calls <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-164">次の例では、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A> を呼び出して保留中の変更を保存し、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を呼び出して、ソースを再編集できるように準備します。</span><span class="sxs-lookup"><span data-stu-id="d6219-164">The following example calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d6219-165">指定されているプロパティを含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d6219-165">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="d6219-166">提示されている値を取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="d6219-166">The property whose proposed value to get.</span></span></param>
        <summary><span data-ttu-id="d6219-167">指定されているプロパティと項目に対して提示されている値を返します。</span><span class="sxs-lookup"><span data-stu-id="d6219-167">Returns the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="d6219-168">提示されているプロパティ値。</span><span class="sxs-lookup"><span data-stu-id="d6219-168">The proposed property value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-169"><xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> メソッドでこのメソッドを使用して、ソースにコミットする値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-169">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="d6219-170">戻り値の型は、<xref:System.Windows.Controls.ValidationRule> が発生する段階によって異なります。</span><span class="sxs-lookup"><span data-stu-id="d6219-170">The type of the return value depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="d6219-171">たとえば、<xref:System.Windows.Controls.TextBox> が integer 型のプロパティにバインドされたデータであり、<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> を呼び出す <xref:System.Windows.Controls.ValidationRule> の <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> が <xref:System.Windows.Controls.ValidationStep.RawProposedValue>に設定されている場合、メソッドは文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="d6219-171">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer and the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, the method returns a string.</span></span> <span data-ttu-id="d6219-172"><xref:System.Windows.Controls.ValidationRule> の <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> が <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>に設定されている場合、メソッドはバインドのコンバーターによって返される任意の型を返します。</span><span class="sxs-lookup"><span data-stu-id="d6219-172">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the method returns whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="d6219-173">この例では、<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 通常、整数が返されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-173">In this example, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> usually returns an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-174">次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるようにユーザーに求めるアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="d6219-174">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="d6219-175">アプリケーションは、営業担当者と顧客が同じリージョンに属していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6219-175">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="d6219-176">この例は、<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドを示しています。このメソッドは、<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> メソッドを使用して、顧客が入力した値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-176">The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method to get values that the customer entered.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6219-177">指定されている項目とプロパティにはバインディングがありません。</span><span class="sxs-lookup"><span data-stu-id="d6219-177">There is not a binding for the specified item and property.</span></span></exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException"><span data-ttu-id="d6219-178">変換エラーまたは前の検証ルールが失敗したために、指定されているプロパティの値は使用できません。</span><span class="sxs-lookup"><span data-stu-id="d6219-178">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-179"><see cref="T:System.Windows.Data.BindingGroup" /> のバインディングに失敗した検証規則があるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-179">Gets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule.</span></span></summary>
        <value><span data-ttu-id="d6219-180"><see cref="T:System.Windows.Data.BindingGroup" /> に失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-180"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-181"><see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案された値を含んでいるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6219-181">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source.</span></span></summary>
        <value><span data-ttu-id="d6219-182"><see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案される値を含む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-182"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-183"><see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-183">Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="d6219-184"><see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソース。</span><span class="sxs-lookup"><span data-stu-id="d6219-184">The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-185">ソースとして使用される各オブジェクトは、オブジェクトが複数のバインドのソースとして使用されている場合でも、<xref:System.Windows.Data.BindingGroup.Items%2A> プロパティに1回追加されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-185">Each object that is used as a source is added into the <xref:System.Windows.Data.BindingGroup.Items%2A> property once, even if the object is used as the source for multiple bindings.</span></span> <span data-ttu-id="d6219-186">多くの場合、<xref:System.Windows.Data.BindingGroup.Items%2A>の項目は1つだけです。これは、<xref:System.Windows.Data.BindingGroup>を使用する要素の <xref:System.Windows.FrameworkElement.DataContext%2A> であるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d6219-186">Often, there is just one item in <xref:System.Windows.Data.BindingGroup.Items%2A>, which is the object that is the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that uses the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="d6219-187">ただし、<xref:System.Windows.Data.BindingGroup> は複数のソースを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="d6219-187">It is possible for a <xref:System.Windows.Data.BindingGroup> to have multiple sources, however.</span></span> <span data-ttu-id="d6219-188">たとえば、バインドオブジェクトが同じ <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> を共有し、異なるソースオブジェクトを使用する場合、ソースとして使用される各オブジェクトは <xref:System.Windows.Data.BindingGroup.Items%2A>になります。</span><span class="sxs-lookup"><span data-stu-id="d6219-188">For example, if Binding objects share the same <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> but use different source objects, each object that is used as a source is in <xref:System.Windows.Data.BindingGroup.Items%2A>.</span></span>  
  
 <span data-ttu-id="d6219-189">バインディングのパスがソースの入れ子になったプロパティに解決される場合は、<xref:System.Windows.Data.BindingGroup.Items%2A> に複数のオブジェクトを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="d6219-189">There can also be multiple objects in <xref:System.Windows.Data.BindingGroup.Items%2A> if the path of a Binding resolves to a nested property of the source.</span></span> <span data-ttu-id="d6219-190">たとえば、<xref:System.Windows.Controls.TextBox> コントロールのバインディングが <xref:System.Windows.Data.BindingGroup> の一部であり、その <xref:System.Windows.FrameworkElement.DataContext%2A> が `Address`型のプロパティを持つ `Customer` オブジェクトであるとします。</span><span class="sxs-lookup"><span data-stu-id="d6219-190">For example, suppose a <xref:System.Windows.Controls.TextBox> control's binding is a part of a <xref:System.Windows.Data.BindingGroup> and its <xref:System.Windows.FrameworkElement.DataContext%2A> is a `Customer` object, which has a property of type `Address`.</span></span> <span data-ttu-id="d6219-191"><xref:System.Windows.Data.Binding> の <xref:System.Windows.Data.Binding.Path%2A> が `Address.ZipCode` プロパティの場合、`Address` は <xref:System.Windows.Data.BindingGroup.Items%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-191">If the <xref:System.Windows.Data.Binding.Path%2A> of the <xref:System.Windows.Data.Binding> is the `Address.ZipCode` property, the `Address` is added to the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-192">次の例は、ユーザーが2つのオブジェクトのプロパティを等しい値に設定したかどうかを確認するアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="d6219-192">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="d6219-193">最初の例では、2つの <xref:System.Windows.Controls.TextBox> コントロールを作成し、それぞれが異なるソースにデータをバインドします。</span><span class="sxs-lookup"><span data-stu-id="d6219-193">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="d6219-194">最初の <xref:System.Windows.Controls.TextBox> のバインドでは、<xref:System.Windows.Controls.TextBox> コントロールの親要素 (<xref:System.Windows.Controls.StackPanel>) の <xref:System.Windows.FrameworkElement.DataContext%2A> からソース `object1`を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-194">The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>).</span></span> <span data-ttu-id="d6219-195">2番目の <xref:System.Windows.Controls.TextBox>では、バインドのソースは `object2`に設定されています。</span><span class="sxs-lookup"><span data-stu-id="d6219-195">On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`.</span></span> <span data-ttu-id="d6219-196">また、この例では、検証エラーを表示する <xref:System.Windows.Controls.Label> も作成します。</span><span class="sxs-lookup"><span data-stu-id="d6219-196">The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="d6219-197">次の例では、前の例で使用している <xref:System.Windows.Controls.ValidationRule> を示します。</span><span class="sxs-lookup"><span data-stu-id="d6219-197">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="d6219-198"><xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドでは、この例では <xref:System.Windows.Data.BindingGroup> から各ソースオブジェクトを取得し、オブジェクトのプロパティが等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6219-198">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-199"><see cref="T:System.Windows.Data.BindingGroup" /> を示す名前を取得または設定します。<see cref="T:System.Windows.Data.BindingGroup" /> ではこの名前を使用して、バインディング オブジェクトを含めたり除外したりできます。</span><span class="sxs-lookup"><span data-stu-id="d6219-199">Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="d6219-200"><see cref="T:System.Windows.Data.BindingGroup" /> を示す名前。</span><span class="sxs-lookup"><span data-stu-id="d6219-200">The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-201"><xref:System.Windows.Data.BindingGroup.Name%2A> が `null`の場合、<xref:System.Windows.Data.BindingGroup> が <xref:System.Windows.Data.BindingGroup>に含まれる要素の <xref:System.Windows.FrameworkElement.DataContext%2A> と同じオブジェクトであるソースを持つバインディング。</span><span class="sxs-lookup"><span data-stu-id="d6219-201">If <xref:System.Windows.Data.BindingGroup.Name%2A> is `null`, bindings that have a source that is the same object as the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> participate in the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="d6219-202"><xref:System.Windows.Data.BindingGroup> を持つ親要素の <xref:System.Windows.FrameworkElement.DataContext%2A> とは異なるソースを持つバインディングを含めることができます。そのためには、<xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> を設定し、バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティを同じ値に設定します。</span><span class="sxs-lookup"><span data-stu-id="d6219-202">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span> <span data-ttu-id="d6219-203"><xref:System.Windows.Data.BindingGroup> を持つ親要素の <xref:System.Windows.FrameworkElement.DataContext%2A> と同じソースを持つバインディングを除外するには、<xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> を設定し、バインディングの <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティを別の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="d6219-203">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-204">次の例は、ユーザーが2つのオブジェクトのプロパティを等しい値に設定したかどうかを確認するアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="d6219-204">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="d6219-205">最初の例では、2つの <xref:System.Windows.Controls.TextBox> コントロールを作成し、それぞれが異なるソースにデータをバインドします。</span><span class="sxs-lookup"><span data-stu-id="d6219-205">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="d6219-206">最初の <xref:System.Windows.Controls.TextBox> のバインドは、<xref:System.Windows.Controls.TextBox> が親 <xref:System.Windows.Data.BindingGroup> から <xref:System.Windows.FrameworkElement.DataContext%2A> および <xref:System.Windows.Controls.StackPanel>を継承するため、<xref:System.Windows.Data.BindingGroup> に含まれています。</span><span class="sxs-lookup"><span data-stu-id="d6219-206">The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="d6219-207">2番目の <xref:System.Windows.Controls.TextBox> のバインドは、<xref:System.Windows.Data.BindingGroup> の <xref:System.Windows.Data.BindingGroup.Name%2A> と <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> の <xref:System.Windows.Data.Binding> の両方が `bindingGroup`に設定されているため、<xref:System.Windows.Data.BindingGroup> に含まれています。</span><span class="sxs-lookup"><span data-stu-id="d6219-207">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="d6219-208">次の例では、前の例で使用している <xref:System.Windows.Controls.ValidationRule> を示します。</span><span class="sxs-lookup"><span data-stu-id="d6219-208">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="d6219-209"><xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドでは、この例では <xref:System.Windows.Data.BindingGroup> から各ソースオブジェクトを取得し、オブジェクトのプロパティが等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6219-209">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-210"><see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化したときに <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生するかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6219-210">Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</span></span></summary>
        <value><span data-ttu-id="d6219-211"><see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化すると <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-211"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d6219-212">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6219-212">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-213"><xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 添付イベントは、<xref:System.Windows.Data.BindingGroup>を持つ要素で発生します。</span><span class="sxs-lookup"><span data-stu-id="d6219-213">The <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event occurs on the element that has the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-214">次の例では、<xref:System.Windows.Data.BindingGroup> を作成し、<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> を `true` に設定して、<xref:System.Windows.Controls.ValidationRule> が失敗したときにアプリケーションが <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> イベントを処理できるようにします。</span><span class="sxs-lookup"><span data-stu-id="d6219-214">The following example creates a <xref:System.Windows.Data.BindingGroup> and sets <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event when a <xref:System.Windows.Controls.ValidationRule> fails.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="d6219-215">次の例では、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="d6219-215">The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-216">この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-216">Gets the object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></summary>
        <value><span data-ttu-id="d6219-217">この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d6219-217">The object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-218"><see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6219-218">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</span></span></summary>
        <value><span data-ttu-id="d6219-219"><see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-219"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d6219-220">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6219-220">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-221">提案された値は、バインディングのターゲットで変更されたがソースにコミットされていない値です。</span><span class="sxs-lookup"><span data-stu-id="d6219-221">A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</span></span> <span data-ttu-id="d6219-222">たとえば、<xref:System.Windows.Controls.TextBox> に双方向のバインドがあり、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> プロパティが <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>に設定されているとします。</span><span class="sxs-lookup"><span data-stu-id="d6219-222">For example, suppose that there is a two-way binding on a <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>.</span></span> <span data-ttu-id="d6219-223">ユーザーが <xref:System.Windows.Controls.TextBox>の値を変更した場合、提案された値は、ソースにコミットされる前の <xref:System.Windows.Controls.TextBox> 内の値になります。</span><span class="sxs-lookup"><span data-stu-id="d6219-223">If the user changes the value of the <xref:System.Windows.Controls.TextBox>, the proposed value is the value that is in the <xref:System.Windows.Controls.TextBox> before it is committed to source.</span></span>  
  
 <span data-ttu-id="d6219-224"><xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> が `true`場合、<xref:System.Windows.Data.BindingGroup> は、1つのバインドが BindingGroup から出たときに提示された値を使用し、同じソースを持つ別のバインドが BindingGroup に参加します。</span><span class="sxs-lookup"><span data-stu-id="d6219-224">When <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> is `true`, the <xref:System.Windows.Data.BindingGroup> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</span></span>  <span data-ttu-id="d6219-225">たとえば、アプリケーションが複数のフィールドを編集し、ボタンをクリックしてソースオブジェクトを更新できるようにするとします。</span><span class="sxs-lookup"><span data-stu-id="d6219-225">For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</span></span> <span data-ttu-id="d6219-226">フィールドが編集されていない場合は、アプリケーションによって <xref:System.Windows.Controls.TextBlock>に表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-226">When a field is not being edited, the application displays it in a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="d6219-227">ユーザーがフィールドの編集を開始すると、アプリケーションによって <xref:System.Windows.Controls.TextBlock> が <xref:System.Windows.Controls.TextBox>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d6219-227">When the user begins to edit a field, the application replaces the <xref:System.Windows.Controls.TextBlock> with a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="d6219-228">ユーザーがそのフィールドの編集を完了すると、アプリケーションによって <xref:System.Windows.Controls.TextBox> が <xref:System.Windows.Controls.TextBlock>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d6219-228">When the user finishes editing that field, the application replaces the <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="d6219-229">ソースは、ユーザーがボタンをクリックするまで更新されないため、<xref:System.Windows.Controls.TextBlock> が提案された値を表示する方法が必要です。</span><span class="sxs-lookup"><span data-stu-id="d6219-229">Because the source is not updated until the user clicks the button, there must be a way for the <xref:System.Windows.Controls.TextBlock> to display the proposed value.</span></span> <span data-ttu-id="d6219-230"><xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> を `true`に設定すると、ソースが更新されていない場合でも、アプリケーションによってフィールドに対するユーザーの変更が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-230">By setting <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> to `true`, the application will display the user's changes to a field even when the source has not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string * obj -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d6219-231">指定されているプロパティを含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d6219-231">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="d6219-232">提示されている値を取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="d6219-232">The property whose proposed value to get.</span></span></param>
        <param name="value"><span data-ttu-id="d6219-233">このメソッドが返るときには、提示されているプロパティ値を表すオブジェクトを格納しています。</span><span class="sxs-lookup"><span data-stu-id="d6219-233">When this method returns, contains an object that represents the proposed property value.</span></span> <span data-ttu-id="d6219-234">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-234">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="d6219-235">指定されているプロパティと項目に対して提示されている値の取得を試みます。</span><span class="sxs-lookup"><span data-stu-id="d6219-235">Attempts to get the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="d6219-236">値が指定されたプロパティの提示されている値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-236"><see langword="true" /> if value is the proposed value for the specified property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-237">指定された項目およびプロパティのバインディングが存在しない場合、または変換エラーまたは以前の検証規則が失敗したために、指定されたプロパティの値が使用できない場合、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="d6219-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> returns `false` if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span>  
  
 <span data-ttu-id="d6219-238"><xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> メソッドでこのメソッドを使用して、ソースにコミットする値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-238">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="d6219-239">`value` 型は、<xref:System.Windows.Controls.ValidationRule> が発生する段階に依存します。</span><span class="sxs-lookup"><span data-stu-id="d6219-239">The type `value` depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="d6219-240">たとえば、<xref:System.Windows.Controls.TextBox> が integer 型のプロパティにデータバインドされている場合、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A> を呼び出す <xref:System.Windows.Controls.ValidationRule> の <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> が <xref:System.Windows.Controls.ValidationStep.RawProposedValue>に設定されている場合、`value` は文字列になります。</span><span class="sxs-lookup"><span data-stu-id="d6219-240">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer, `value` is a string if the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>.</span></span> <span data-ttu-id="d6219-241"><xref:System.Windows.Controls.ValidationRule> の <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> が <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>に設定されている場合、`value` の種類は、バインディングのコンバーターによって返される任意の型になります。</span><span class="sxs-lookup"><span data-stu-id="d6219-241">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the type of `value` is whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="d6219-242">この例では、通常、`value` は整数です。</span><span class="sxs-lookup"><span data-stu-id="d6219-242">In this example, `value` is usually an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-243">次の例では、`ValidateDateAndPrice`という名前のカスタム <xref:System.Windows.Controls.ValidationRule> を作成します。</span><span class="sxs-lookup"><span data-stu-id="d6219-243">The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`.</span></span> <span data-ttu-id="d6219-244"><xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドでは、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A> メソッドと <xref:System.Windows.Data.BindingGroup.Items%2A> プロパティを使用して、ユーザーがフォームに入力した値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-244">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form.</span></span> <span data-ttu-id="d6219-245">この例では、項目が100ドルを超えている場合、少なくとも7日間は使用できることを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6219-245">Then the example checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span> <span data-ttu-id="d6219-246">この例は、<xref:System.Windows.Data.BindingGroup> クラスの大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="d6219-246">This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6219-247">バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />、または <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> オブジェクトに対してコンバーターを実行し、すべての検証ルールが成功した場合は、ターゲットの値をソース オブジェクトに保存します。</span><span class="sxs-lookup"><span data-stu-id="d6219-247">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="d6219-248">すべての検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-248"><see langword="true" /> if all validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-249">このメソッドは、すべての <xref:System.Windows.Controls.ValidationRule> が成功した場合にソースを更新しますが、ソースが保留中の変更をコミットして編集トランザクションを終了することはありません。</span><span class="sxs-lookup"><span data-stu-id="d6219-249">This method updates the source if every <xref:System.Windows.Controls.ValidationRule> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</span></span> <span data-ttu-id="d6219-250">つまり、ソースオブジェクトが <xref:System.ComponentModel.IEditableObject>を実装している場合はです。</span><span class="sxs-lookup"><span data-stu-id="d6219-250">That is, if the source object implements <xref:System.ComponentModel.IEditableObject>.</span></span> <span data-ttu-id="d6219-251">このメソッドを呼び出すと <xref:System.ComponentModel.IEditableObject.EndEdit%2A> は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="d6219-251">Calling this method does not cause <xref:System.ComponentModel.IEditableObject.EndEdit%2A> to be called.</span></span> <span data-ttu-id="d6219-252"><xref:System.Windows.Data.BindingGroup.CommitEdit%2A> メソッドを使用して、ソースが保留中の変更をコミットするようにします。</span><span class="sxs-lookup"><span data-stu-id="d6219-252">Use the <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> method to have the sources commit the pending changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-253">次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるようにユーザーに求めるアプリケーションの一部です。</span><span class="sxs-lookup"><span data-stu-id="d6219-253">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="d6219-254">アプリケーションは、営業担当者と顧客が同じリージョンに属していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6219-254">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="d6219-255">この例では、<xref:System.Windows.Data.BindingGroup.UpdateSources%2A> を呼び出してバインドを検証し、すべての検証規則が成功した場合は、ソースに値を保存します。</span><span class="sxs-lookup"><span data-stu-id="d6219-255">The example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> to validate the bindings and save the values to the source if all the validation rules succeed.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-256"><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d6219-256">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="d6219-257"><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-257"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d6219-258">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6219-258">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-259"><xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> が `true`場合、バインドは <xref:System.ComponentModel.INotifyDataErrorInfo>を実装するデータソースによって発生したエラーを確認して報告します。</span><span class="sxs-lookup"><span data-stu-id="d6219-259">When <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6219-260">バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> または <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> オブジェクトに対し、コンバーターを実行します。</span><span class="sxs-lookup"><span data-stu-id="d6219-260">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</span></span></summary>
        <returns><span data-ttu-id="d6219-261">検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6219-261"><see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-262">このメソッドを呼び出すと、ソースは更新されません。</span><span class="sxs-lookup"><span data-stu-id="d6219-262">The sources are not updated when you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-263"><see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-263">Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused the <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span></summary>
        <value><span data-ttu-id="d6219-264"><see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="d6219-264">A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span>  <span data-ttu-id="d6219-265">エラーがない場合、値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d6219-265">The value is <see langword="null" /> if there are no errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6219-266"><see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="d6219-266">Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="d6219-267"><see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="d6219-267">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6219-268"><xref:System.Windows.Controls.ValidationRule> が <xref:System.Windows.Data.BindingGroup>に追加されると、<xref:System.Windows.Data.BindingGroup> は <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの最初のパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="d6219-268">When a <xref:System.Windows.Controls.ValidationRule> is added to a <xref:System.Windows.Data.BindingGroup>, the <xref:System.Windows.Data.BindingGroup> is passed in as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="d6219-269">オブジェクトの提案された値を取得するには、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A> または <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d6219-269">You can get the proposed values of the object by using the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method.</span></span> <span data-ttu-id="d6219-270">バインディングのソースであるオブジェクトは、<xref:System.Windows.Data.BindingGroup.Items%2A> プロパティから取得できます。</span><span class="sxs-lookup"><span data-stu-id="d6219-270">You can get the objects that are the sources of the bindings from the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6219-271">次の例では、カスタム <xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`を <xref:System.Windows.Data.BindingGroup>に追加します。</span><span class="sxs-lookup"><span data-stu-id="d6219-271">The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="d6219-272">`ValidateDateAndPrice` クラスの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d6219-272">The following example shows the `ValidateDateAndPrice` class.</span></span> <span data-ttu-id="d6219-273"><xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドは、<xref:System.Windows.Data.BindingGroup> を使用して、ユーザーがフォームに入力した値を取得します。また、100ドル以上の項目がある場合は、少なくとも7日間使用できることを確認します。</span><span class="sxs-lookup"><span data-stu-id="d6219-273">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
