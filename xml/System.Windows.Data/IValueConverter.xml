<Type Name="IValueConverter" FullName="System.Windows.Data.IValueConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9f95eadd0116e7b24fe89d4c596b3d704cdd1e64" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82491679" /></Metadata><TypeSignature Language="C#" Value="public interface IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueConverter" />
  <TypeSignature Language="F#" Value="type IValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>カスタム ロジックをバインディングに適用する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値コンバーターをバインディングに関連付ける場合は、<xref:System.Windows.Data.IValueConverter> インターフェイスを実装するクラスを作成し、<xref:System.Windows.Data.IValueConverter.Convert%2A> メソッドと <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> メソッドを実装します。 コンバーターは、ある種類のデータを別の型に変更したり、カルチャ情報に基づいてデータを変換したり、プレゼンテーションのその他の側面を変更したりできます。 一般的なコンバーターのシナリオの例については、「[データバインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)」の「データ変換」を参照してください。  
  
 値コンバーターはカルチャに対応しています。 <xref:System.Windows.Data.IValueConverter.Convert%2A> と <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> の両方のメソッドには、カルチャ情報を示す `culture` パラメーターがあります。 カルチャ情報が変換に関係しない場合は、カスタムコンバーターでそのパラメーターを無視できます。  
  
 <xref:System.Windows.Data.IValueConverter.Convert%2A> メソッドと <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> メソッドにも `parameter` という名前のパラメーターがあります。これにより、異なるパラメーターでコンバーターの同じインスタンスを使用できるようになります。 たとえば、使用する入力パラメーターに基づいて、さまざまな形式のデータを生成する書式コンバーターを作成できます。 <xref:System.Windows.Data.Binding> クラスの <xref:System.Windows.Data.Binding.ConverterParameter%2A> を使用すると、パラメーターを引数として <xref:System.Windows.Data.IValueConverter.Convert%2A> および <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> メソッドに渡すことができます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
    <altmember cref="T:System.Windows.Data.ValueConversionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.Convert (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">バインディング ソースによって生成された値。</param>
        <param name="targetType">バインディング ターゲット プロパティの型。</param>
        <param name="parameter">使用するコンバーター パラメーター。</param>
        <param name="culture">コンバーターで使用するカルチャ。</param>
        <summary>値を変換します。</summary>
        <returns>変換された値。 メソッドが <see langword="null" /> を返す場合は、正しい null 値が使用されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データバインディングエンジンは、バインディングソースからバインディングターゲットに値を伝達するときに、このメソッドを呼び出します。  
  
 データバインディングエンジンは、ユーザーが指定したコンバーターによってスローされた例外をキャッチしません。 <xref:System.Windows.Data.IValueConverter.Convert%2A> メソッドによってスローされる例外や、<xref:System.Windows.Data.IValueConverter.Convert%2A> メソッドが呼び出すメソッドによってスローされるキャッチされない例外は、実行時エラーとして扱われます。 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>を返すことによって、予想される問題を処理します。  
  
 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> の戻り値は、コンバーターが値を生成しておらず、使用可能な場合はバインディングが <xref:System.Windows.Data.BindingBase.FallbackValue%2A>を使用することを示します。または、代わりに既定値を使用します。  
  
 <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> の戻り値は、バインディングが値を転送したり、<xref:System.Windows.Data.BindingBase.FallbackValue%2A> または既定値を使用したりしないことを示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertBack(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.ConvertBack (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">バインディング ターゲットによって生成された値。</param>
        <param name="targetType">変換後の型。</param>
        <param name="parameter">使用するコンバーター パラメーター。</param>
        <param name="culture">コンバーターで使用するカルチャ。</param>
        <summary>値を変換します。</summary>
        <returns>変換された値。 メソッドが <see langword="null" /> を返す場合は、正しい null 値が使用されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データバインディングエンジンは、バインディングターゲットからバインディングソースに値を伝達するときに、このメソッドを呼び出します。  
  
 このメソッドの実装は、<xref:System.Windows.Data.IValueConverter.Convert%2A> メソッドの逆である必要があります。  
  
 データバインディングエンジンは、ユーザーが指定したコンバーターによってスローされた例外をキャッチしません。 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> メソッドによってスローされる例外や、<xref:System.Windows.Data.IValueConverter.ConvertBack%2A> メソッドが呼び出すメソッドによってスローされるキャッチされない例外は、実行時エラーとして扱われます。 <xref:System.Windows.DependencyProperty>を返すことによって、予想される問題を処理します。<xref:System.Windows.DependencyProperty.UnsetValue>。  
  
 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> の戻り値は、コンバーターが値を生成しておらず、使用可能な場合はバインディングが <xref:System.Windows.Data.BindingBase.FallbackValue%2A>を使用することを示します。または、代わりに既定値を使用します。  
  
 <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> の戻り値は、バインディングが値を転送したり、<xref:System.Windows.Data.BindingBase.FallbackValue%2A> または既定値を使用したりしないことを示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
