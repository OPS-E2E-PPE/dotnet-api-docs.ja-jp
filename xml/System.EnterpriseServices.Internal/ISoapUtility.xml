<Type Name="ISoapUtility" FullName="System.EnterpriseServices.Internal.ISoapUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ab074d7bfafc85859ca19900dbc5ccb9f07b4ea" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73388836" /></Metadata><TypeSignature Language="C#" Value="public interface ISoapUtility" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapUtility" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapUtility" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapUtility" />
  <TypeSignature Language="F#" Value="type ISoapUtility = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5AC4CB7E-F89F-429b-926B-C7F940936BF4")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="508b4-101">COM+ SOAP 対応アプリケーション プロキシの、サーバーによるエクスポートとクライアントによるインポートをサポートするユーティリティを提供します。</span><span class="sxs-lookup"><span data-stu-id="508b4-101">Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508b4-102"><xref:System.EnterpriseServices.Internal.ISoapUtility> 提供するユーティリティ関数は、COM + 内のさまざまな場所から呼び出されます。ただし、クライアントプロキシのエクスポートとインポートをサポートすることが主な目的です。</span><span class="sxs-lookup"><span data-stu-id="508b4-102">The utility functions that <xref:System.EnterpriseServices.Internal.ISoapUtility> provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.</span></span>  
  
 <span data-ttu-id="508b4-103">既定の実装については、「<xref:System.EnterpriseServices.Internal.SoapUtility>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="508b4-103">See <xref:System.EnterpriseServices.Internal.SoapUtility> for the default implementation.</span></span>  
  
 <span data-ttu-id="508b4-104"><xref:System.EnterpriseServices.Internal.ISoapUtility> は、.NET Framework によって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="508b4-104"><xref:System.EnterpriseServices.Internal.ISoapUtility> is used internally by the .NET Framework.</span></span> <span data-ttu-id="508b4-105">コード内で直接使用する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="508b4-105">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetServerBinPath">
      <MemberSignature Language="C#" Value="public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerBinPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; binPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerBinPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef binPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetServerBinPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % binPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerBinPath : string * string * string * string -&gt; unit" Usage="iSoapUtility.GetServerBinPath (rootWebServer, inBaseUrl, inVirtualRoot, binPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="binPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="508b4-106">ルート Web サーバー。</span><span class="sxs-lookup"><span data-stu-id="508b4-106">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="508b4-107">ベース URL アドレス。</span><span class="sxs-lookup"><span data-stu-id="508b4-107">The base URL address.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="508b4-108">仮想ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="508b4-108">The name of the virtual root.</span></span></param>
        <param name="binPath"><span data-ttu-id="508b4-109">このメソッドが返されるときに、このパラメーターに SOAP 仮想ルートの bin ディレクトリのファイル パスを格納します。</span><span class="sxs-lookup"><span data-stu-id="508b4-109">When this method returns, this parameter contains the file path for the SOAP virtual root bin directory.</span></span></param>
        <summary><span data-ttu-id="508b4-110">SOAP 仮想ルートの bin ディレクトリのパスを返します。</span><span class="sxs-lookup"><span data-stu-id="508b4-110">Returns the path for the SOAP virtual root bin directory.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="508b4-111">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="508b4-111">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="508b4-112">SOAP ユーティリティが使用できません。</span><span class="sxs-lookup"><span data-stu-id="508b4-112">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="508b4-113">システム ディレクトリを取得する呼び出しが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="508b4-113">The call to get the system directory failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerPhysicalPath">
      <MemberSignature Language="C#" Value="public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerPhysicalPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerPhysicalPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetServerPhysicalPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerPhysicalPath : string * string * string * string -&gt; unit" Usage="iSoapUtility.GetServerPhysicalPath (rootWebServer, inBaseUrl, inVirtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="508b4-114">ルート Web サーバー。</span><span class="sxs-lookup"><span data-stu-id="508b4-114">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="508b4-115">ベース URL アドレス。</span><span class="sxs-lookup"><span data-stu-id="508b4-115">The base URL address.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="508b4-116">仮想ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="508b4-116">The name of the virtual root.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="508b4-117">このメソッドが返されるときに、このパラメーターに SOAP 仮想ルートのファイル パスを格納します。</span><span class="sxs-lookup"><span data-stu-id="508b4-117">When this method returns, this parameter contains the file path for the SOAP virtual root.</span></span></param>
        <summary><span data-ttu-id="508b4-118">SOAP 仮想ルートのパスを返します。</span><span class="sxs-lookup"><span data-stu-id="508b4-118">Returns the path for the SOAP virtual root.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="508b4-119">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="508b4-119">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="508b4-120">SOAP ユーティリティが使用できません。</span><span class="sxs-lookup"><span data-stu-id="508b4-120">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="508b4-121">システム ディレクトリを取得する呼び出しが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="508b4-121">The call to get the system directory failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Present() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.Present" />
      <MemberSignature Language="VB.NET" Value="Public Sub Present ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Present();" />
      <MemberSignature Language="F#" Value="abstract member Present : unit -&gt; unit" Usage="iSoapUtility.Present " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="508b4-122">認証済みの暗号化された SOAP インターフェイスが存在するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="508b4-122">Determines whether authenticated, encrypted SOAP interfaces are present.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="508b4-123">呼び出しチェイン内の呼び出し元に、アンマネージ コードへのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="508b4-123">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="508b4-124">SOAP ユーティリティが使用できません。</span><span class="sxs-lookup"><span data-stu-id="508b4-124">The SOAP utility is not available.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
