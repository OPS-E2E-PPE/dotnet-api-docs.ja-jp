<Type Name="QueryContinueDragEventArgs" FullName="System.Windows.Forms.QueryContinueDragEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="61316050427ea66c693b89135ae6c25338b55565" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83522118" /></Metadata><TypeSignature Language="C#" Value="public class QueryContinueDragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryContinueDragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.QueryContinueDragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryContinueDragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryContinueDragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type QueryContinueDragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="24fb4-101"><see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-101">Provides data for the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fb4-102"><xref:System.Windows.Forms.Control.QueryContinueDrag> イベントはドラッグアンドドロップ操作中に発生し、ドラッグ元がドラッグアンドドロップ操作をキャンセルする必要があるかどうかを判断できるようにします。</span><span class="sxs-lookup"><span data-stu-id="24fb4-102">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.</span></span> <span data-ttu-id="24fb4-103"><xref:System.Windows.Forms.QueryContinueDragEventArgs> は、ドラッグアンドドロップ操作を続行するかどうか、修飾子キーが押されているかどうか、およびユーザーが ESC キーを押したかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-103">A <xref:System.Windows.Forms.QueryContinueDragEventArgs> specifies whether and how the drag-and-drop operation should proceed, whether any modifier keys are pressed, and whether the user has pressed the ESC key.</span></span>  
  
 <span data-ttu-id="24fb4-104">既定では、Esc キーが押された場合、<xref:System.Windows.Forms.Control.QueryContinueDrag> イベントは <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> を <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> に設定します。また、マウスの左右または中央のボタンが押された場合は `Action` を <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> に設定します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-104">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if the left, middle, or right mouse button is pressed.</span></span>  
  
 <span data-ttu-id="24fb4-105">イベントモデルの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24fb4-105">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fb4-106">このコード抜粋では、<xref:System.Windows.Forms.Control.QueryContinueDrag> イベントで <xref:System.Windows.Forms.QueryContinueDragEventArgs> クラスを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-106">This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="24fb4-107">完全なコード例については、<xref:System.Windows.Forms.Control.DoDragDrop%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="24fb4-107">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragAction" />
    <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keyState, bool escapePressed, valuetype System.Windows.Forms.DragAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyState As Integer, escapePressed As Boolean, action As DragAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryContinueDragEventArgs(int keyState, bool escapePressed, System::Windows::Forms::DragAction action);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.QueryContinueDragEventArgs : int * bool * System.Windows.Forms.DragAction -&gt; System.Windows.Forms.QueryContinueDragEventArgs" Usage="new System.Windows.Forms.QueryContinueDragEventArgs (keyState, escapePressed, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="escapePressed" Type="System.Boolean" />
        <Parameter Name="action" Type="System.Windows.Forms.DragAction" />
      </Parameters>
      <Docs>
        <param name="keyState"><span data-ttu-id="24fb4-108">Shift、Ctrl、Alt の各キーの現在の状態。</span><span class="sxs-lookup"><span data-stu-id="24fb4-108">The current state of the SHIFT, CTRL, and ALT keys.</span></span></param>
        <param name="escapePressed"><span data-ttu-id="24fb4-109">Esc キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="24fb4-109"><see langword="true" /> if the ESC key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="action"><span data-ttu-id="24fb4-110"><see cref="T:System.Windows.Forms.DragAction" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="24fb4-110">A <see cref="T:System.Windows.Forms.DragAction" /> value.</span></span></param>
        <summary><span data-ttu-id="24fb4-111"><see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragAction Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As DragAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragAction Action { System::Windows::Forms::DragAction get(); void set(System::Windows::Forms::DragAction value); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Windows.Forms.DragAction with get, set" Usage="System.Windows.Forms.QueryContinueDragEventArgs.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24fb4-112">ドラッグ アンド ドロップ操作のステータスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-112">Gets or sets the status of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="24fb4-113"><see cref="T:System.Windows.Forms.DragAction" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="24fb4-113">A <see cref="T:System.Windows.Forms.DragAction" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fb4-114">既定では、Esc キーが押された場合、<xref:System.Windows.Forms.Control.QueryContinueDrag> イベントは <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> を <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> に設定します。また、マウスの左右または中央のボタンが押された場合は `Action` を <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> に設定します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-114">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if the left, middle, or right mouse button is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fb4-115">このコード抜粋では、<xref:System.Windows.Forms.Control.QueryContinueDrag> イベントで <xref:System.Windows.Forms.QueryContinueDragEventArgs> クラスを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-115">This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="24fb4-116">完全なコード例については、<xref:System.Windows.Forms.Control.DoDragDrop%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="24fb4-116">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="EscapePressed">
      <MemberSignature Language="C#" Value="public bool EscapePressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EscapePressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapePressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EscapePressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapePressed : bool" Usage="System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24fb4-117">ユーザーが Esc キーを押したかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-117">Gets whether the user pressed the ESC key.</span></span></summary>
        <value><span data-ttu-id="24fb4-118">Esc キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="24fb4-118"><see langword="true" /> if the ESC key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fb4-119">既定では、<xref:System.Windows.Forms.Control.QueryContinueDrag> イベントは、<xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> が true の場合に <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> に <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> を設定します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-119">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> is true.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fb4-120">次のコード例は、<xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="24fb4-120">The following code example demonstrates the use of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> .</span></span> <span data-ttu-id="24fb4-121">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-121">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="24fb4-122">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="24fb4-122">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="24fb4-123">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="24fb4-123">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="24fb4-124">コード例を実行するには、<xref:System.Windows.Forms.Button> や <xref:System.Windows.Forms.ComboBox>などの <xref:System.Windows.Forms.Control>から継承する型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="24fb4-124">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="24fb4-125">次に、インスタンスに `Control1` という名前を付け、イベントハンドラーが <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-125">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.QueryContinueDragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24fb4-126">Shift、Ctrl、Alt の各キーの現在の状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-126">Gets the current state of the SHIFT, CTRL, and ALT keys.</span></span></summary>
        <value><span data-ttu-id="24fb4-127">Shift、Ctrl、Alt の各キーの現在の状態。</span><span class="sxs-lookup"><span data-stu-id="24fb4-127">The current state of the SHIFT, CTRL, and ALT keys.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24fb4-128"><xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> プロパティで設定されているビットは、操作中に押されたキーまたはマウスボタンを識別します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-128">The bits that are set in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="24fb4-129">たとえば、マウスの左ボタンが押されている場合は、<xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> プロパティの最初のビットが設定されます。</span><span class="sxs-lookup"><span data-stu-id="24fb4-129">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="24fb4-130">ビットごとの `AND` 演算子を使用すると、特定のキー状態をテストできます。</span><span class="sxs-lookup"><span data-stu-id="24fb4-130">You can use the bitwise `AND` operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="24fb4-131">次の表に、指定したイベントに対して設定されているビットを示します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-131">The following table lists the bits that are set for a specified event.</span></span>  
  
|<span data-ttu-id="24fb4-132">bit</span><span class="sxs-lookup"><span data-stu-id="24fb4-132">Bit</span></span>|<span data-ttu-id="24fb4-133">Key</span><span class="sxs-lookup"><span data-stu-id="24fb4-133">Key</span></span>|  
|---------|---------|  
|<span data-ttu-id="24fb4-134">1</span><span class="sxs-lookup"><span data-stu-id="24fb4-134">1</span></span>|<span data-ttu-id="24fb4-135">マウスの左ボタン</span><span class="sxs-lookup"><span data-stu-id="24fb4-135">The left mouse button.</span></span>|  
|<span data-ttu-id="24fb4-136">2</span><span class="sxs-lookup"><span data-stu-id="24fb4-136">2</span></span>|<span data-ttu-id="24fb4-137">マウスの右ボタン</span><span class="sxs-lookup"><span data-stu-id="24fb4-137">The right mouse button.</span></span>|  
|<span data-ttu-id="24fb4-138">4</span><span class="sxs-lookup"><span data-stu-id="24fb4-138">4</span></span>|<span data-ttu-id="24fb4-139">Shift キー</span><span class="sxs-lookup"><span data-stu-id="24fb4-139">The SHIFT key.</span></span>|  
|<span data-ttu-id="24fb4-140">8</span><span class="sxs-lookup"><span data-stu-id="24fb4-140">8</span></span>|<span data-ttu-id="24fb4-141">CTL キー。</span><span class="sxs-lookup"><span data-stu-id="24fb4-141">The CTL key.</span></span>|  
|<span data-ttu-id="24fb4-142">16</span><span class="sxs-lookup"><span data-stu-id="24fb4-142">16</span></span>|<span data-ttu-id="24fb4-143">マウスの中央ボタン</span><span class="sxs-lookup"><span data-stu-id="24fb4-143">The middle mouse button.</span></span>|  
|<span data-ttu-id="24fb4-144">32</span><span class="sxs-lookup"><span data-stu-id="24fb4-144">32</span></span>|<span data-ttu-id="24fb4-145">Alt キー。</span><span class="sxs-lookup"><span data-stu-id="24fb4-145">The ALT key.</span></span>|  
  
 <span data-ttu-id="24fb4-146">既定では、<xref:System.Windows.Forms.Control.QueryContinueDrag> イベントは、左、中央、または右のマウスボタンが押されたことを <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> 示す場合に <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> に <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> を設定します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-146">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> indicates that the left, middle, or right mouse button is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24fb4-147">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-147">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="24fb4-148">この例では、イベントハンドラーは、<xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-148">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="24fb4-149">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="24fb4-149">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="24fb4-150">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="24fb4-150">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="24fb4-151">コード例を実行するには、<xref:System.Windows.Forms.Button> や <xref:System.Windows.Forms.ComboBox>などの <xref:System.Windows.Forms.Control>から継承する型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="24fb4-151">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="24fb4-152">次に、インスタンスに `Control1` という名前を付け、イベントハンドラーが <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="24fb4-152">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
  </Members>
</Type>
