<Type Name="ComboBox" FullName="System.Windows.Forms.ComboBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e884316a681e209e338fc661fedb986f9a76b908" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83974514" /></Metadata><TypeSignature Language="C#" Value="public class ComboBox : System.Windows.Forms.ListControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComboBox extends System.Windows.Forms.ListControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox&#xA;Inherits ListControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBox : System::Windows::Forms::ListControl" />
  <TypeSignature Language="F#" Value="type ComboBox = class&#xA;    inherit ListControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ComboBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ComboBoxDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ComboBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="05958-101">Windows コンボ ボックス コントロールを表します。</span><span class="sxs-lookup"><span data-stu-id="05958-101">Represents a Windows combo box control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-102"><xref:System.Windows.Forms.ComboBox> には、<xref:System.Windows.Forms.ListBox>と組み合わせたテキストボックスが表示されます。これにより、ユーザーは一覧から項目を選択したり、新しい値を入力したりできます。</span><span class="sxs-lookup"><span data-stu-id="05958-102">A <xref:System.Windows.Forms.ComboBox> displays a text box combined with a <xref:System.Windows.Forms.ListBox>, which enables the user to select items from the list or enter a new value.</span></span>  
  
 <span data-ttu-id="05958-103"><xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティは、リストを常に表示するかどうか、またはリストをドロップダウンに表示するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="05958-103">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property specifies whether the list is always displayed or whether the list is displayed in a drop-down.</span></span> <span data-ttu-id="05958-104"><xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティは、テキスト部分を編集できるかどうかも指定します。</span><span class="sxs-lookup"><span data-stu-id="05958-104">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property also specifies whether the text portion can be edited.</span></span> <span data-ttu-id="05958-105">使用可能な設定とその効果については、「<xref:System.Windows.Forms.ComboBoxStyle>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-105">See <xref:System.Windows.Forms.ComboBoxStyle> for the available settings and their effects.</span></span> <span data-ttu-id="05958-106">常に一覧を表示し、新しい値の入力を禁止する設定はありません。</span><span class="sxs-lookup"><span data-stu-id="05958-106">There is no setting to always display the list and disallow entering a new value.</span></span> <span data-ttu-id="05958-107">新しい値を追加できない一覧を表示するには、<xref:System.Windows.Forms.ListBox> コントロールを使用します。</span><span class="sxs-lookup"><span data-stu-id="05958-107">To display a list to which no new values can be added, use a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 <span data-ttu-id="05958-108">実行時にリスト内のオブジェクトを追加または削除するには、<xref:System.Windows.Forms.ComboBox.ObjectCollection> クラスのメソッド (<xref:System.Windows.Forms.ComboBox>の <xref:System.Windows.Forms.ComboBox.Items%2A> プロパティを使用) を使用します。</span><span class="sxs-lookup"><span data-stu-id="05958-108">To add or remove objects in the list at run time, use methods of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ComboBox.Items%2A> property of the <xref:System.Windows.Forms.ComboBox>).</span></span> <span data-ttu-id="05958-109"><xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> メソッドを使用して、オブジェクト参照の配列を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="05958-109">You can assign an array of object references with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="05958-110">この一覧には、各オブジェクトの既定の文字列値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="05958-110">The list then displays the default string value for each object.</span></span> <span data-ttu-id="05958-111"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> メソッドを使用して、個々のオブジェクトを追加できます。</span><span class="sxs-lookup"><span data-stu-id="05958-111">You can add individual objects with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method.</span></span> <span data-ttu-id="05958-112"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> メソッドを使用して項目を削除したり、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> メソッドを使用して一覧全体をクリアしたりできます。</span><span class="sxs-lookup"><span data-stu-id="05958-112">You can delete items with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or clear the entire list with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="05958-113"><xref:System.Windows.Forms.ComboBox> には、表示と選択の機能に加えて、<xref:System.Windows.Forms.ComboBox> に項目を効率的に追加したり、リストの項目内のテキストを検索したりできる機能も用意されています。</span><span class="sxs-lookup"><span data-stu-id="05958-113">In addition to display and selection functionality, the <xref:System.Windows.Forms.ComboBox> also provides features that enable you to efficiently add items to the <xref:System.Windows.Forms.ComboBox> and to find text within the items of the list.</span></span> <span data-ttu-id="05958-114"><xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> メソッドと <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> メソッドを使用すると、項目がリストに追加されるたびにコントロールが再描画されることなく、多数の項目を <xref:System.Windows.Forms.ComboBox> に追加できます。</span><span class="sxs-lookup"><span data-stu-id="05958-114">With the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods, you can add a large number of items to the <xref:System.Windows.Forms.ComboBox> without the control being repainted each time an item is added to the list.</span></span> <span data-ttu-id="05958-115"><xref:System.Windows.Forms.ComboBox.FindString%2A> および <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> メソッドを使用すると、特定の検索文字列を含むリスト内の項目を検索できます。</span><span class="sxs-lookup"><span data-stu-id="05958-115">The <xref:System.Windows.Forms.ComboBox.FindString%2A> and <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods enable you to search for an item in the list that contains a specific search string.</span></span>  
  
 <span data-ttu-id="05958-116">これらのプロパティを使用して、一覧で現在選択されている項目を管理したり、<xref:System.Windows.Forms.ComboBox.Text%2A> プロパティを使用して編集フィールドに表示される文字列を指定したり、<xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> プロパティを使用して現在の項目を取得または設定したり、<xref:System.Windows.Forms.ComboBox.SelectedItem%2A> プロパティを使用してオブジェクトへの参照を取得または設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="05958-116">You can use these properties to manage the currently selected item in the list, the <xref:System.Windows.Forms.ComboBox.Text%2A> property to specify the string displayed in the editing field, the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property to get or set the current item, and the <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> property to get or set a reference to the object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-117">基本 Windows フォームページに <xref:System.Windows.Forms.ListBox>、<xref:System.Windows.Forms.ComboBox>、または <xref:System.Windows.Forms.CheckedListBox> があり、派生フォームでこれらのコントロールの文字列コレクションを変更する場合は、基本フォーム内のこれらのコントロールの文字列コレクションを空にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-117">If you have a <xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.ComboBox>, or <xref:System.Windows.Forms.CheckedListBox> on a base Windows Forms page and want to modify the string collections of those controls in a derived form, the string collections of those controls in the base form must be empty.</span></span> <span data-ttu-id="05958-118">文字列コレクションが空でない場合は、別のフォームを派生させると読み取り専用になります。</span><span class="sxs-lookup"><span data-stu-id="05958-118">If the string collections are not empty, they become read-only when you derive another form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-119">次のコード例は、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> メソッドを使用して <xref:System.Windows.Forms.ComboBox>に項目を追加する方法、<xref:System.Windows.Forms.ComboBox>内の項目を検索するための <xref:System.Windows.Forms.ComboBox.FindString%2A> メソッド、および <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> に大きな数の項目を効率的に追加するための <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> メソッドと <xref:System.Windows.Forms.ComboBox>メソッドを使用する方法を示す完全なアプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="05958-119">The following code example is a complete application showing how you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add items to a <xref:System.Windows.Forms.ComboBox>, the <xref:System.Windows.Forms.ComboBox.FindString%2A> method to find items in a <xref:System.Windows.Forms.ComboBox>, and the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods to efficiently add a large number items to a <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-120">表示されるテキストとは異なる値を格納する機能は、<xref:System.Windows.Forms.ListControl>から継承されます。</span><span class="sxs-lookup"><span data-stu-id="05958-120">The ability to store values that are different from displayed text is inherited from <xref:System.Windows.Forms.ListControl>.</span></span> <span data-ttu-id="05958-121">この機能を使用する方法の例については、<xref:System.Windows.Forms.ListControl> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-121">For an example of how to use this feature, see the <xref:System.Windows.Forms.ListControl> class.</span></span>  
  
 <span data-ttu-id="05958-122">この例を実行するには、`System.Drawing` と `System.Windows.Forms` 名前空間への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-122">You must add references to the `System.Drawing` and `System.Windows.Forms` namespaces to run this example.</span></span>  
  
 [!code-cpp[ComboBox#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxtype.cpp#1)]
 [!code-csharp[ComboBox#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxtype.cs#1)]
 [!code-vb[ComboBox#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxtype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05958-123"><see cref="T:System.Windows.Forms.ComboBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="05958-123">Initializes a new instance of the <see cref="T:System.Windows.Forms.ComboBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemsCore">
      <MemberSignature Language="C#" Value="protected virtual void AddItemsCore (object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddItemsCore(object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.AddItemsCore(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddItemsCore (value As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddItemsCore(cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddItemsCore : obj[] -&gt; unit&#xA;override this.AddItemsCore : obj[] -&gt; unit" Usage="comboBox.AddItemsCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  There is no replacement.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="05958-124">追加する項目。</span><span class="sxs-lookup"><span data-stu-id="05958-124">The items to add.</span></span></param>
        <summary><span data-ttu-id="05958-125">指定した項目をコンボ ボックスに追加します。</span><span class="sxs-lookup"><span data-stu-id="05958-125">Adds the specified items to the combo box.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteCustomSource As AutoCompleteStringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteStringCollection ^ AutoCompleteCustomSource { System::Windows::Forms::AutoCompleteStringCollection ^ get(); void set(System::Windows::Forms::AutoCompleteStringCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteCustomSource : System.Windows.Forms.AutoCompleteStringCollection with get, set" Usage="System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-126"><see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" /> プロパティが <see langword="CustomSource" /> に設定されている場合に使用するカスタム <see cref="T:System.Collections.Specialized.StringCollection" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-126">Gets or sets a custom <see cref="T:System.Collections.Specialized.StringCollection" /> to use when the <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" /> property is set to <see langword="CustomSource" />.</span></span></summary>
        <value><span data-ttu-id="05958-127"><see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" /> に使用する <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="05958-127">A <see cref="T:System.Collections.Specialized.StringCollection" /> to use with <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-128"><xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>、<xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>、および <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> の各プロパティを使用して、入力したプレフィックスを、保持されているソース内のすべての文字列のプレフィックスに比較することで、入力文字列を自動的に完了する <xref:System.Windows.Forms.ComboBox> を作成します。</span><span class="sxs-lookup"><span data-stu-id="05958-128">Use the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.ComboBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="05958-129">これは、Url、アドレス、ファイル名、またはコマンドを頻繁に入力する <xref:System.Windows.Forms.ComboBox> コントロールに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="05958-129">This is useful for <xref:System.Windows.Forms.ComboBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span> <span data-ttu-id="05958-130">保持されているソースに重複したエントリがある場合、自動補完は予期しない動作をします。</span><span class="sxs-lookup"><span data-stu-id="05958-130">If there are duplicate entries in the maintained source, automatic completion behaves unpredictably.</span></span>  
  
 <span data-ttu-id="05958-131"><xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> プロパティの使用は省略可能ですが、<xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>を使用するには、<xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> プロパティを `CustomSource` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-131">The use of the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="05958-132"><xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> と <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> プロパティを一緒に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-132">You must use the <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-133">オペレーティングシステムによって、一度に表示できるカスタム文字列の数が制限される場合があります。</span><span class="sxs-lookup"><span data-stu-id="05958-133">The operating system might limit the number of custom strings that it can display at once.</span></span> <span data-ttu-id="05958-134">スラッシュ (/) または円記号 (\\) を含む文字列の場合、オートコンプリートでは、スラッシュまでのすべての文字が追加されます。</span><span class="sxs-lookup"><span data-stu-id="05958-134">For strings that contain a forward slash (/) or backward slash (\\), automatic completion appends all characters only up to and including the slash.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.AutoCompleteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteMode As AutoCompleteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteMode AutoCompleteMode { System::Windows::Forms::AutoCompleteMode get(); void set(System::Windows::Forms::AutoCompleteMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteMode : System.Windows.Forms.AutoCompleteMode with get, set" Usage="System.Windows.Forms.ComboBox.AutoCompleteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-135"><see cref="T:System.Windows.Forms.ComboBox" /> のオート コンプリートの動作を制御するオプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-135">Gets or sets an option that controls how automatic completion works for the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-136"><see cref="T:System.Windows.Forms.AutoCompleteMode" /> の値の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="05958-136">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span> <span data-ttu-id="05958-137">有効値は、<see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />、<see cref="F:System.Windows.Forms.AutoCompleteMode.None" />、<see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />、および <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-137">The values are <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />, and <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />.</span></span> <span data-ttu-id="05958-138">既定では、 <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />です。</span><span class="sxs-lookup"><span data-stu-id="05958-138">The default is <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-139"><xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>、<xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>、および <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> の各プロパティを使用して、入力したプレフィックスを、保持されているソース内のすべての文字列のプレフィックスに比較することで、入力文字列を自動的に完了する <xref:System.Windows.Forms.ComboBox> を作成します。</span><span class="sxs-lookup"><span data-stu-id="05958-139">Use the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.ComboBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="05958-140">これは、Url、アドレス、ファイル名、またはコマンドを頻繁に入力する <xref:System.Windows.Forms.ComboBox> コントロールに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="05958-140">This is useful for <xref:System.Windows.Forms.ComboBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span> <span data-ttu-id="05958-141">保持されているソースに重複したエントリがある場合、自動補完は予期しない動作をします。</span><span class="sxs-lookup"><span data-stu-id="05958-141">If there are duplicate entries in the maintained source, automatic completion behaves unpredictably.</span></span>  
  
 <span data-ttu-id="05958-142"><xref:System.Windows.Forms.ComboBoxStyle> を <xref:System.Windows.Forms.ComboBoxStyle.DropDownList>に設定すると、<xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> が <xref:System.Windows.Forms.AutoCompleteMode.Suggest> または <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend>の場合にのみ一覧が表示されます。</span><span class="sxs-lookup"><span data-stu-id="05958-142">If you set <xref:System.Windows.Forms.ComboBoxStyle> to <xref:System.Windows.Forms.ComboBoxStyle.DropDownList>, the list displays only if <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> is <xref:System.Windows.Forms.AutoCompleteMode.Suggest> or <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend>.</span></span>  
  
 <span data-ttu-id="05958-143"><xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> プロパティの使用は省略可能ですが、<xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>を使用するには、<xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> プロパティを <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-143">The use of the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> property to <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> in order to use <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="05958-144"><xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> と <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> プロパティを一緒に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-144">You must use the <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties together.</span></span>  
  
 <span data-ttu-id="05958-145"><xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> を <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> に設定し、<xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> <xref:System.Windows.Forms.AutoCompleteSource.ListItems>に設定した場合、動作は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="05958-145">With <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> set to <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> set to <xref:System.Windows.Forms.AutoCompleteSource.ListItems>, the behavior is as follows:</span></span>  
  
-   <span data-ttu-id="05958-146">文字列のリストが空の場合、BACKSPACE キーまたは DEL キーを押しても何も実行されません。</span><span class="sxs-lookup"><span data-stu-id="05958-146">If the list of strings is empty, pressing the BACKSPACE or DELETE key does nothing.</span></span>  
  
-   <span data-ttu-id="05958-147">BACKSPACE キーが1秒未満で押されている場合、前の項目が選択されているか、文字列のリストが空の場合は何も選択されていません。</span><span class="sxs-lookup"><span data-stu-id="05958-147">If the BACKSPACE key is pressed in less than one second, the previous item is selected, or nothing is selected if the list of string is empty.</span></span>  
  
-   <span data-ttu-id="05958-148">BACKSPACE キーが1秒以上押されている場合は、最初の項目が選択されます。</span><span class="sxs-lookup"><span data-stu-id="05958-148">If the BACKSPACE key is pressed in more than one second, the first item is selected.</span></span>  
  
-   <span data-ttu-id="05958-149">DEL キーが押されている場合は、最初の項目が選択されます。</span><span class="sxs-lookup"><span data-stu-id="05958-149">If the DELETE key is pressed, the first item is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-150">オペレーティングシステムによって、一度に表示できるカスタム文字列の数が制限される場合があります。</span><span class="sxs-lookup"><span data-stu-id="05958-150">The operating system might limit the number of custom strings that it can display at once.</span></span> <span data-ttu-id="05958-151">スラッシュ (/) または円記号 (\\) を含む文字列の場合、オートコンプリートでは、スラッシュまでのすべての文字が追加されます。</span><span class="sxs-lookup"><span data-stu-id="05958-151">For strings that contain a forward slash (/) or backward slash (\\), automatic completion appends all characters only up to and including the slash.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="05958-152">指定された値が <see cref="T:System.Windows.Forms.AutoCompleteMode" /> の値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="05958-152">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteSource As AutoCompleteSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteSource AutoCompleteSource { System::Windows::Forms::AutoCompleteSource get(); void set(System::Windows::Forms::AutoCompleteSource value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteSource : System.Windows.Forms.AutoCompleteSource with get, set" Usage="System.Windows.Forms.ComboBox.AutoCompleteSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-153">オート コンプリートで使用する完全な文字列のソースを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-153">Gets or sets a value specifying the source of complete strings used for automatic completion.</span></span></summary>
        <value><span data-ttu-id="05958-154"><see cref="T:System.Windows.Forms.AutoCompleteSource" /> の値の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="05958-154">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span> <span data-ttu-id="05958-155">オプションは、<see langword="AllSystemSources" />、<see langword="AllUrl" />、<see langword="FileSystem" />、<see langword="HistoryList" />、<see langword="RecentlyUsedList" />、<see langword="CustomSource" />、および <see langword="None" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-155">The options are <see langword="AllSystemSources" />, <see langword="AllUrl" />, <see langword="FileSystem" />, <see langword="HistoryList" />, <see langword="RecentlyUsedList" />, <see langword="CustomSource" />, and <see langword="None" />.</span></span> <span data-ttu-id="05958-156">既定では、 <see langword="None" />です。</span><span class="sxs-lookup"><span data-stu-id="05958-156">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-157"><xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>、<xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>、および <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> の各プロパティを使用して、入力したプレフィックスを、保持されているソース内のすべての文字列のプレフィックスに比較することで、入力文字列を自動的に完了する <xref:System.Windows.Forms.ComboBox> を作成します。</span><span class="sxs-lookup"><span data-stu-id="05958-157">Use the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.ComboBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="05958-158">これは、Url、アドレス、ファイル名、またはコマンドを頻繁に入力する <xref:System.Windows.Forms.ComboBox> コントロールに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="05958-158">This is useful for <xref:System.Windows.Forms.ComboBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="05958-159"><xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> プロパティの使用は省略可能ですが、<xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>を使用するには、<xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> プロパティを <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-159">The use of the <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> property to <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> in order to use <xref:System.Windows.Forms.ComboBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="05958-160"><xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> と <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> プロパティを一緒に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-160">You must use the <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> properties together.</span></span>  
  
 <span data-ttu-id="05958-161"><xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> を <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> に設定し、<xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> <xref:System.Windows.Forms.AutoCompleteSource.ListItems>に設定した場合、動作は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="05958-161">With <xref:System.Windows.Forms.ComboBox.AutoCompleteMode%2A> set to <xref:System.Windows.Forms.AutoCompleteMode.SuggestAppend> and <xref:System.Windows.Forms.ComboBox.AutoCompleteSource%2A> set to <xref:System.Windows.Forms.AutoCompleteSource.ListItems>, the behavior is as follows:</span></span>  
  
-   <span data-ttu-id="05958-162">文字列のリストが空の場合、BACKSPACE キーまたは DEL キーを押しても何も実行されません。</span><span class="sxs-lookup"><span data-stu-id="05958-162">If the list of strings is empty, pressing the BACKSPACE or DELETE key does nothing.</span></span>  
  
-   <span data-ttu-id="05958-163">BACKSPACE キーが1秒未満で押されている場合、前の項目が選択されているか、文字列のリストが空の場合は何も選択されていません。</span><span class="sxs-lookup"><span data-stu-id="05958-163">If the BACKSPACE key is pressed in less than one second, the previous item is selected, or nothing is selected if the list of string is empty.</span></span>  
  
-   <span data-ttu-id="05958-164">BACKSPACE キーが1秒以上押されている場合は、最初の項目が選択されます。</span><span class="sxs-lookup"><span data-stu-id="05958-164">If the BACKSPACE key is pressed in more than one second, the first item is selected.</span></span>  
  
-   <span data-ttu-id="05958-165">DEL キーが押されている場合は、最初の項目が選択されます。</span><span class="sxs-lookup"><span data-stu-id="05958-165">If the DELETE key is pressed, the first item is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-166">オペレーティングシステムによって、一度に表示できるカスタム文字列の数が制限される場合があります。</span><span class="sxs-lookup"><span data-stu-id="05958-166">The operating system might limit the number of custom strings that it can display at once.</span></span> <span data-ttu-id="05958-167">スラッシュ (/) または円記号 (\\) を含む文字列の場合、オートコンプリートでは、スラッシュまでのすべての文字が追加されます。</span><span class="sxs-lookup"><span data-stu-id="05958-167">For strings that contain a forward slash (/) or backward slash (\\), automatic completion appends all characters only up to and including the slash.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="05958-168">指定された値が <see cref="T:System.Windows.Forms.AutoCompleteSource" /> の値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="05958-168">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ComboBox.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-169">コントロールの背景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-169">Gets or sets the background color for the control.</span></span></summary>
        <value><span data-ttu-id="05958-170">コントロールの背景色を表す色のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="05958-170">A color object that represents the background color of the control.</span></span> <span data-ttu-id="05958-171">既定値は <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> プロパティの値です。</span><span class="sxs-lookup"><span data-stu-id="05958-171">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ComboBox.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-172">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-172">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="05958-173">コントロールに表示される背景イメージ。</span><span class="sxs-lookup"><span data-stu-id="05958-173">The background image displayed in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-174">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-174">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-175"><see cref="P:System.Windows.Forms.ComboBox.BackgroundImage" /> プロパティの値が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-175">Occurs when the value of the <see cref="P:System.Windows.Forms.ComboBox.BackgroundImage" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-176">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-176">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ComboBox.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-177"><see cref="T:System.Windows.Forms.ImageLayout" /> 列挙型で定義される背景画像のレイアウトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-177">Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="05958-178"><see cref="T:System.Windows.Forms.ImageLayout" /> の値の 1 つ (<see langword="Center" />、<see langword="None" />、<see langword="Stretch" />、<see langword="Tile" />、または <see langword="Zoom" />)。</span><span class="sxs-lookup"><span data-stu-id="05958-178">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (<see langword="Center" />, <see langword="None" />, <see langword="Stretch" />, <see langword="Tile" />, or <see langword="Zoom" />).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-179">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-179">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="05958-180">指定された値が <see cref="T:System.Windows.Forms.ImageLayout" /> の値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="05958-180">The specified value is not one of the values of <see cref="T:System.Windows.Forms.ImageLayout" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-181"><see cref="P:System.Windows.Forms.ComboBox.BackgroundImageLayout" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-181">Occurs when the <see cref="P:System.Windows.Forms.ComboBox.BackgroundImageLayout" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-182">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-182">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="comboBox.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05958-183">アイテムを一度に <see cref="T:System.Windows.Forms.ComboBox" /> に追加するときにパフォーマンスを維持します。</span><span class="sxs-lookup"><span data-stu-id="05958-183">Maintains performance when items are added to the <see cref="T:System.Windows.Forms.ComboBox" /> one at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-184">このメソッドは、<xref:System.Windows.Forms.ComboBox.EndUpdate%2A> メソッドが呼び出されるまで、コントロールが描画されないようにします。</span><span class="sxs-lookup"><span data-stu-id="05958-184">This method prevents the control from painting until the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method is called.</span></span>  
  
 <span data-ttu-id="05958-185"><xref:System.Windows.Forms.ComboBox> に項目を追加するには、<xref:System.Windows.Forms.ComboBox>の <xref:System.Windows.Forms.ComboBox.Items%2A> プロパティを使用して <xref:System.Windows.Forms.ComboBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-185">The preferred way to add items to the <xref:System.Windows.Forms.ComboBox> is to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ComboBox.Items%2A> property of the <xref:System.Windows.Forms.ComboBox>).</span></span> <span data-ttu-id="05958-186">これにより、リストに項目の配列を一度に追加できます。</span><span class="sxs-lookup"><span data-stu-id="05958-186">This enables you to add an array of items to the list at one time.</span></span> <span data-ttu-id="05958-187">ただし、<xref:System.Windows.Forms.ComboBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> メソッドを使用して一度に1つずつ項目を追加する場合は、<xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> メソッドを使用して、リストに項目が追加されるたびに、コントロールが <xref:System.Windows.Forms.ComboBox> を再描画しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="05958-187">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class, you can use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ComboBox> each time an item is added to the list.</span></span> <span data-ttu-id="05958-188">リストに項目を追加するタスクを完了したら、<xref:System.Windows.Forms.ComboBox.EndUpdate%2A> メソッドを呼び出して、<xref:System.Windows.Forms.ComboBox> を再描画できるようにします。</span><span class="sxs-lookup"><span data-stu-id="05958-188">Once you have completed the task of adding items to the list, call the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ComboBox> to repaint.</span></span> <span data-ttu-id="05958-189">このように項目を追加すると、多数の項目がリストに追加されているときに <xref:System.Windows.Forms.ComboBox> の描画中にちらつきを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="05958-189">This way of adding items can prevent flicker during the drawing of the <xref:System.Windows.Forms.ComboBox> when a large number of items are being added to the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-190">次のコード例は、<xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> メソッドと <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> メソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-190">The following code example shows the usage of the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods.</span></span> <span data-ttu-id="05958-191">この例は、<xref:System.Windows.Forms.ComboBox> クラスの概要の完全なコード例の一部です。</span><span class="sxs-lookup"><span data-stu-id="05958-191">The example is part of a complete code example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#3)]
 [!code-csharp[ComboBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#3)]
 [!code-vb[ComboBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="comboBox.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05958-192">コントロールの新しいユーザー補助オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="05958-192">Creates a new accessibility object for the control.</span></span></summary>
        <returns><span data-ttu-id="05958-193">コントロールの新しいユーザー補助オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="05958-193">A new accessibility object for the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="comboBox.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05958-194">コントロールのハンドルを作成します。</span><span class="sxs-lookup"><span data-stu-id="05958-194">Creates a handle for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-195">このメソッドは <xref:System.Windows.Forms.ComboBox> でオーバーライドされ、<xref:System.Windows.Forms.ComboBox> サイズの変更によるハンドルの作成時に複数のレイアウトを回避します。</span><span class="sxs-lookup"><span data-stu-id="05958-195">This method is overridden in <xref:System.Windows.Forms.ComboBox> to avoid multiple layouts during handle creation due to <xref:System.Windows.Forms.ComboBox> size change.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ComboBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-196">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="05958-196">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="05958-197">コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <see cref="T:System.Windows.Forms.CreateParams" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-197">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.ComboBox.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-198">この <see cref="T:System.Windows.Forms.ComboBox" /> のデータ ソースを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-198">Gets or sets the data source for this <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-199"><see cref="T:System.Collections.IList" /> インターフェイスを実装するオブジェクトか、または <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="05958-199">An object that implements the <see cref="T:System.Collections.IList" /> interface or an <see cref="T:System.Array" />.</span></span> <span data-ttu-id="05958-200">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="05958-200">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-201">データソースには、データベース、Web サービス、または後でデータバインドコントロールを生成するために使用できるオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="05958-201">A data source can be a database, a Web service, or an object that can later be used to generate data-bound controls.</span></span> <span data-ttu-id="05958-202"><xref:System.Windows.Forms.ComboBox.DataSource%2A> プロパティが設定されている場合、項目コレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="05958-202">When the <xref:System.Windows.Forms.ComboBox.DataSource%2A> property is set, the items collection cannot be modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-203">次の例では、<xref:System.Windows.Forms.ComboBox.DataSource%2A> プロパティを使用して、<xref:System.Windows.Forms.ComboBox>に平日の配列を表示します。</span><span class="sxs-lookup"><span data-stu-id="05958-203">The following example uses the <xref:System.Windows.Forms.ComboBox.DataSource%2A> property to display an array of weekdays in a <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ComboBox.DataSource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.combobox.datasource/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBox.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.combobox.datasource/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ComboBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-204">コントロールの既定のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="05958-204">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="05958-205">コントロールの既定のサイズ。</span><span class="sxs-lookup"><span data-stu-id="05958-205">The default size of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="comboBox.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="05958-206">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="05958-206"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="05958-207"><see cref="T:System.Windows.Forms.ComboBox" /> で使用されたアンマネージド リソースを解放し、必要に応じてマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="05958-207">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ComboBox" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-208">このメソッドは、パブリックな `Dispose` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-208">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="05958-209">`Dispose` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-209">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="05958-210"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-210"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="05958-211">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Windows.Forms.ComboBox> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="05958-211">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ComboBox> references.</span></span> <span data-ttu-id="05958-212">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-212">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-213">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="05958-213">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="05958-214">をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="05958-214">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="05958-215"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-215">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="05958-216"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-216">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-217">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-217">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-218">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-218">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-219">オーナー描画 <see cref="T:System.Windows.Forms.ComboBox" /> のビジュアルな部分を変更すると発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-219">Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-220">このイベントは、オーナー描画 <xref:System.Windows.Forms.ComboBox>によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="05958-220">This event is used by an owner-drawn <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-221">このイベントを使用して、<xref:System.Windows.Forms.ComboBox>に項目を描画するために必要なタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="05958-221">You can use this event to perform the tasks needed to draw items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-222">可変サイズの項目がある場合 (<xref:System.Windows.Forms.ComboBox.DrawMode%2A?displayProperty=nameWithType> プロパティが <xref:System.Windows.Forms.DrawMode?displayProperty=nameWithType>の `OwnerDrawVariable` 値に設定されている場合)、項目を描画する前に、<xref:System.Windows.Forms.ComboBox.MeasureItem> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-222">If you have a variable sized item (when the <xref:System.Windows.Forms.ComboBox.DrawMode%2A?displayProperty=nameWithType> property is set to the `OwnerDrawVariable` value of <xref:System.Windows.Forms.DrawMode?displayProperty=nameWithType>), before drawing an item, the <xref:System.Windows.Forms.ComboBox.MeasureItem> event is raised.</span></span> <span data-ttu-id="05958-223"><xref:System.Windows.Forms.ComboBox.MeasureItem> イベントのイベントハンドラーを作成して、<xref:System.Windows.Forms.ComboBox.DrawItem> イベントのイベントハンドラーに描画する項目のサイズを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="05958-223">You can create an event handler for the <xref:System.Windows.Forms.ComboBox.MeasureItem> event to specify the size for the item that you are going to draw in your event handler for the <xref:System.Windows.Forms.ComboBox.DrawItem> event.</span></span>  
  
 <span data-ttu-id="05958-224">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-224">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-225">次のコード例では、<xref:System.Windows.Forms.ComboBox.DrawMode%2A> プロパティを `OwnerDrawnVariable` に設定し、<xref:System.Windows.Forms.ComboBox.DrawItem> および <xref:System.Windows.Forms.ComboBox.MeasureItem> イベントを処理することによって、オーナー描画コンボボックスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="05958-225">The following code example demonstrates how to create an owner-drawn combo box by setting the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property to `OwnerDrawnVariable` and handling the <xref:System.Windows.Forms.ComboBox.DrawItem> and <xref:System.Windows.Forms.ComboBox.MeasureItem> events.</span></span> <span data-ttu-id="05958-226">また、<xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> と <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティの設定についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-226">It also demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties.</span></span> <span data-ttu-id="05958-227">この例を実行するには、フォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="05958-227">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="05958-228">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントで `InitializeComboBox` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-228">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawMode As DrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawMode DrawMode { System::Windows::Forms::DrawMode get(); void set(System::Windows::Forms::DrawMode value); };" />
      <MemberSignature Language="F#" Value="member this.DrawMode : System.Windows.Forms.DrawMode with get, set" Usage="System.Windows.Forms.ComboBox.DrawMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-229">リストの要素の描画を処理するのは、コードとオペレーティング システムのどちらであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-229">Gets or sets a value indicating whether your code or the operating system will handle drawing of elements in the list.</span></span></summary>
        <value><span data-ttu-id="05958-230"><see cref="T:System.Windows.Forms.DrawMode" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="05958-230">One of the <see cref="T:System.Windows.Forms.DrawMode" /> enumeration values.</span></span> <span data-ttu-id="05958-231">既定では、 <see cref="F:System.Windows.Forms.DrawMode.Normal" />です。</span><span class="sxs-lookup"><span data-stu-id="05958-231">The default is <see cref="F:System.Windows.Forms.DrawMode.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05958-232">次のコード例では、<xref:System.Windows.Forms.ComboBox.DrawMode%2A> プロパティを `OwnerDrawnVariable` に設定し、<xref:System.Windows.Forms.ComboBox.DrawItem> および <xref:System.Windows.Forms.ComboBox.MeasureItem> イベントを処理することによって、オーナー描画コンボボックスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="05958-232">The following code example demonstrates how to create an owner-drawn combo box by setting the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property to `OwnerDrawnVariable` and handling the <xref:System.Windows.Forms.ComboBox.DrawItem> and <xref:System.Windows.Forms.ComboBox.MeasureItem> events.</span></span> <span data-ttu-id="05958-233">また、<xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> と <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティの設定についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-233">It also demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties.</span></span> <span data-ttu-id="05958-234">この例を実行するには、フォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="05958-234">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="05958-235">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントで `InitializeComboBox` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-235">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="05958-236">値が、有効な <see cref="T:System.Windows.Forms.DrawMode" /> 列挙値ではありません。</span><span class="sxs-lookup"><span data-stu-id="05958-236">The value is not a valid <see cref="T:System.Windows.Forms.DrawMode" /> enumeration value.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DrawMode" />
        <altmember cref="E:System.Windows.Forms.ComboBox.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ComboBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="DropDown">
      <MemberSignature Language="C#" Value="public event EventHandler DropDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DropDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDown;" />
      <MemberSignature Language="F#" Value="member this.DropDown : EventHandler " Usage="member this.DropDown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-237"><see cref="T:System.Windows.Forms.ComboBox" /> のドロップダウン部分が表示されると発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-237">Occurs when the drop-down portion of a <see cref="T:System.Windows.Forms.ComboBox" /> is shown.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-238">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-238">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-239">次のコード例では、text プロパティを設定し、<xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> メソッドを使用して <xref:System.Windows.Forms.ComboBox>を設定することによって、<xref:System.Windows.Forms.ComboBox> コントロールを初期化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="05958-239">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the text property and using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method to populate the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-240">また、<xref:System.Windows.Forms.ComboBox.DropDown> イベントの処理についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-240">It also demonstrates handling the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span> <span data-ttu-id="05958-241">この例を実行するには、フォームに次のコードを貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントで `InitializeComboBox` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-241">To run the example, paste the following code in a form and call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ComboBox.DropDownClosed" />
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DropDownClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownClosed;" />
      <MemberSignature Language="F#" Value="member this.DropDownClosed : EventHandler " Usage="member this.DropDownClosed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-242"><see cref="T:System.Windows.Forms.ComboBox" /> のドロップダウン部分が見えなくなると発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-242">Occurs when the drop-down portion of the <see cref="T:System.Windows.Forms.ComboBox" /> is no longer visible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-243"><xref:System.Windows.Forms.ComboBox.DropDownClosed> イベントを使用して、<xref:System.Windows.Forms.ComboBox.DropDown> イベントへの応答として行った変更から <xref:System.Windows.Forms.ComboBox> の状態を復元します。</span><span class="sxs-lookup"><span data-stu-id="05958-243">Use the <xref:System.Windows.Forms.ComboBox.DropDownClosed> event to restore the state of the <xref:System.Windows.Forms.ComboBox> from changes you made in response to the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span>  
  
 <span data-ttu-id="05958-244">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-244">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-245">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="05958-245">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="05958-246">この例では、イベントハンドラーは、<xref:System.Windows.Forms.ComboBox.DropDownClosed> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="05958-246">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ComboBox.DropDownClosed> event.</span></span> <span data-ttu-id="05958-247">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="05958-247">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="05958-248">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="05958-248">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="05958-249">コード例を実行するには、`ComboBox1`という <xref:System.Windows.Forms.ComboBox> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="05958-249">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ComboBox> named `ComboBox1`.</span></span> <span data-ttu-id="05958-250">次に、イベントハンドラーが <xref:System.Windows.Forms.ComboBox.DropDownClosed> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="05958-250">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ComboBox.DropDownClosed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#168](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#168)]
 [!code-vb[System.Windows.Forms.EventExamples#168](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#168)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ComboBox.DropDown" />
      </Docs>
    </Member>
    <Member MemberName="DropDownHeight">
      <MemberSignature Language="C#" Value="public int DropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DropDownHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DropDownHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownHeight : int with get, set" Usage="System.Windows.Forms.ComboBox.DropDownHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(106)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-251"><see cref="T:System.Windows.Forms.ComboBox" /> のドロップダウン部分の高さをピクセル単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-251">Gets or sets the height in pixels of the drop-down portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-252">ドロップダウン ボックスの高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="05958-252">The height, in pixels, of the drop-down box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-253"><xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> プロパティを設定すると、<xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> プロパティが `false`にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="05958-253">Setting the <xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> property resets the <xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05958-254">指定された値が 1 未満です。</span><span class="sxs-lookup"><span data-stu-id="05958-254">The specified value is less than one.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DropDownStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBoxStyle DropDownStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ComboBoxStyle DropDownStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DropDownStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownStyle As ComboBoxStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBoxStyle DropDownStyle { System::Windows::Forms::ComboBoxStyle get(); void set(System::Windows::Forms::ComboBoxStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownStyle : System.Windows.Forms.ComboBoxStyle with get, set" Usage="System.Windows.Forms.ComboBox.DropDownStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBoxStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-255">コンボ ボックスのスタイルを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-255">Gets or sets a value specifying the style of the combo box.</span></span></summary>
        <value><span data-ttu-id="05958-256"><see cref="T:System.Windows.Forms.ComboBoxStyle" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="05958-256">One of the <see cref="T:System.Windows.Forms.ComboBoxStyle" /> values.</span></span> <span data-ttu-id="05958-257">既定では、 <see langword="DropDown" />です。</span><span class="sxs-lookup"><span data-stu-id="05958-257">The default is <see langword="DropDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-258"><xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティは、リストを常に表示するかどうか、またはリストをドロップダウンに表示するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="05958-258">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property specifies whether the list is always displayed or whether the list is displayed in a drop-down.</span></span> <span data-ttu-id="05958-259"><xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティは、テキスト部分を編集できるかどうかも指定します。</span><span class="sxs-lookup"><span data-stu-id="05958-259">The <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property also specifies whether the text portion can be edited.</span></span> <span data-ttu-id="05958-260">使用可能な設定とその効果については、「<xref:System.Windows.Forms.ComboBoxStyle>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-260">See <xref:System.Windows.Forms.ComboBoxStyle> for the available settings and their effects.</span></span> <span data-ttu-id="05958-261">常に一覧を表示し、新しい値の入力を禁止する設定はありません。</span><span class="sxs-lookup"><span data-stu-id="05958-261">There is no setting to always display the list and disallow entering a new value.</span></span> <span data-ttu-id="05958-262">新しい値を追加できない一覧を表示するには、<xref:System.Windows.Forms.ListBox> コントロールを使用します。</span><span class="sxs-lookup"><span data-stu-id="05958-262">To display a list to which no new values can be added, use a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-263">次のコード例は、<xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-263">The following code example demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> property.</span></span> <span data-ttu-id="05958-264">この例を実行するには、フォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="05958-264">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="05958-265">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントで `InitializeComboBox` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-265">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="05958-266">代入された値が、<see cref="T:System.Windows.Forms.ComboBoxStyle" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="05958-266">The assigned value is not one of the <see cref="T:System.Windows.Forms.ComboBoxStyle" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ComboBoxStyle" />
      </Docs>
    </Member>
    <Member MemberName="DropDownStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.DropDownStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.DropDownStyleChanged : EventHandler " Usage="member this.DropDownStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-267"><see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> プロパティが変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-267">Occurs when the <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-268">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-268">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-269">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="05958-269">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="05958-270">この例では、イベントハンドラーは、<xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="05958-270">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> event.</span></span> <span data-ttu-id="05958-271">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="05958-271">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="05958-272">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="05958-272">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="05958-273">コード例を実行するには、`ComboBox1`という <xref:System.Windows.Forms.ComboBox> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="05958-273">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ComboBox> named `ComboBox1`.</span></span> <span data-ttu-id="05958-274">次に、イベントハンドラーが <xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="05958-274">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ComboBox.DropDownStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#166](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#166)]
 [!code-vb[System.Windows.Forms.EventExamples#166](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#166)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownWidth">
      <MemberSignature Language="C#" Value="public int DropDownWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DropDownWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DropDownWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownWidth : int with get, set" Usage="System.Windows.Forms.ComboBox.DropDownWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-275">コンボ ボックスのドロップダウン部分の幅を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-275">Gets or sets the width of the of the drop-down portion of a combo box.</span></span></summary>
        <value><span data-ttu-id="05958-276">ドロップダウン ボックスの幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="05958-276">The width, in pixels, of the drop-down box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-277"><xref:System.Windows.Forms.ComboBox.DropDownWidth%2A>に値が設定されていない場合、このプロパティはコンボボックスの <xref:System.Windows.Forms.Control.Width%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-277">If a value has not been set for the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A>, this property returns the <xref:System.Windows.Forms.Control.Width%2A> of the combo box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-278">ドロップダウンの幅を <xref:System.Windows.Forms.ComboBox> の幅よりも小さくすることはできません。</span><span class="sxs-lookup"><span data-stu-id="05958-278">The width of the drop-down cannot be smaller than the <xref:System.Windows.Forms.ComboBox> width.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-279">次のコード例では、<xref:System.Windows.Forms.ComboBox.DrawMode%2A> プロパティを `OwnerDrawnVariable` に設定し、<xref:System.Windows.Forms.ComboBox.DrawItem> および <xref:System.Windows.Forms.ComboBox.MeasureItem> イベントを処理することによって、オーナー描画コンボボックスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="05958-279">The following code example demonstrates how to create an owner-drawn combo box by setting the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property to `OwnerDrawnVariable` and handling the <xref:System.Windows.Forms.ComboBox.DrawItem> and <xref:System.Windows.Forms.ComboBox.MeasureItem> events.</span></span> <span data-ttu-id="05958-280">また、<xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> と <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティの設定についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-280">It also demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties.</span></span> <span data-ttu-id="05958-281">この例を実行するには、フォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="05958-281">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="05958-282">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントで `InitializeComboBox` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-282">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05958-283">指定された値が 1 未満です。</span><span class="sxs-lookup"><span data-stu-id="05958-283">The specified value is less than one.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DroppedDown">
      <MemberSignature Language="C#" Value="public bool DroppedDown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DroppedDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.DroppedDown" />
      <MemberSignature Language="VB.NET" Value="Public Property DroppedDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DroppedDown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DroppedDown : bool with get, set" Usage="System.Windows.Forms.ComboBox.DroppedDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-284">コンボ ボックスでドロップダウン部分が表示されているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-284">Gets or sets a value indicating whether the combo box is displaying its drop-down portion.</span></span></summary>
        <value><span data-ttu-id="05958-285">ドロップダウン部分が表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="05958-285"><see langword="true" /> if the drop-down portion is displayed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="05958-286">既定値は false です。</span><span class="sxs-lookup"><span data-stu-id="05958-286">The default is false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="comboBox.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05958-287"><see cref="T:System.Windows.Forms.ComboBox" /> メソッドによって描画が中断された後、<see cref="M:System.Windows.Forms.ComboBox.BeginUpdate" /> コントロールの描画を再開します。</span><span class="sxs-lookup"><span data-stu-id="05958-287">Resumes painting the <see cref="T:System.Windows.Forms.ComboBox" /> control after painting is suspended by the <see cref="M:System.Windows.Forms.ComboBox.BeginUpdate" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-288"><xref:System.Windows.Forms.ComboBox> に項目を追加するには、<xref:System.Windows.Forms.ComboBox>の <xref:System.Windows.Forms.ComboBox.Items%2A> プロパティを使用して <xref:System.Windows.Forms.ComboBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> メソッドを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-288">The preferred way to add items to the <xref:System.Windows.Forms.ComboBox> is to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ComboBox.Items%2A> property of the <xref:System.Windows.Forms.ComboBox>).</span></span> <span data-ttu-id="05958-289">これにより、リストに項目の配列を一度に追加できます。</span><span class="sxs-lookup"><span data-stu-id="05958-289">This enables you to add an array of items to the list at one time.</span></span> <span data-ttu-id="05958-290">ただし、<xref:System.Windows.Forms.ComboBox.ObjectCollection> クラスの <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> メソッドを使用して一度に1つずつ項目を追加する場合は、<xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> メソッドを使用して、リストに項目が追加されるたびに、コントロールが <xref:System.Windows.Forms.ComboBox> を再描画しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="05958-290">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class, you can use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ComboBox> each time an item is added to the list.</span></span> <span data-ttu-id="05958-291">リストに項目を追加するタスクを完了したら、<xref:System.Windows.Forms.ComboBox.EndUpdate%2A> メソッドを呼び出して、<xref:System.Windows.Forms.ComboBox> を再描画できるようにします。</span><span class="sxs-lookup"><span data-stu-id="05958-291">Once you have completed the task of adding items to the list, call the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ComboBox> to repaint.</span></span> <span data-ttu-id="05958-292">このように項目を追加すると、多数の項目がリストに追加されている場合に、<xref:System.Windows.Forms.ComboBox> の flickered 描画を防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="05958-292">This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ComboBox> when a large number of items are being added to the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-293">次のコード例は、<xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> メソッドと <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> メソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-293">The following code example shows the usage of the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods.</span></span> <span data-ttu-id="05958-294">この例は、<xref:System.Windows.Forms.ComboBox> クラスの概要のコード例の一部です。</span><span class="sxs-lookup"><span data-stu-id="05958-294">The example is part of a code example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#3)]
 [!code-csharp[ComboBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#3)]
 [!code-vb[ComboBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindString">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05958-295"><see cref="T:System.Windows.Forms.ComboBox" /> のうち、指定した文字列で始まる最初の項目のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="05958-295">Returns the index of the first item in the <see cref="T:System.Windows.Forms.ComboBox" /> that starts with the specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.FindString : string -&gt; int" Usage="comboBox.FindString s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="05958-296">検索対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="05958-296">The <see cref="T:System.String" /> to search for.</span></span></param>
        <summary><span data-ttu-id="05958-297"><see cref="T:System.Windows.Forms.ComboBox" /> のうち、指定した文字列で始まる最初の項目のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="05958-297">Returns the index of the first item in the <see cref="T:System.Windows.Forms.ComboBox" /> that starts with the specified string.</span></span></summary>
        <returns><span data-ttu-id="05958-298">最初に見つかった項目の 0 から始まるインデックス番号。一致する項目が見つからない場合は、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-298">The zero-based index of the first item found; returns -1 if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-299">このメソッドで実行される検索では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="05958-299">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="05958-300">`s` パラメーターは、コンボボックスリスト内の項目に関連付けられたテキストと比較する部分文字列です。</span><span class="sxs-lookup"><span data-stu-id="05958-300">The `s` parameter is a substring to compare against the text associated with the items in the combo box list.</span></span> <span data-ttu-id="05958-301">検索では、テキストの先頭から部分一致を実行し、指定した部分文字列と一致するリスト内の最初の項目を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-301">The search performs a partial match starting from the beginning of the text, and returning the first item in the list that matches the specified substring.</span></span> <span data-ttu-id="05958-302">その後、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> メソッドを使用して、または項目のテキストを変更するなど、タスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="05958-302">You can then perform tasks, such as removing the item that contains the search text using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="05958-303">指定したテキストが見つかったら、<xref:System.Windows.Forms.ComboBox>内のテキストの他のインスタンスを検索する場合は、<xref:System.Windows.Forms.ComboBox>内の開始インデックスを指定するためのパラメーターを提供するバージョンの <xref:System.Windows.Forms.ComboBox.FindString%2A> メソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-303">Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ComboBox>, you must use the version of the <xref:System.Windows.Forms.ComboBox.FindString%2A> method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-304">部分一致ではなく完全一致する単語の検索を実行する場合は、<xref:System.Windows.Forms.ComboBox.FindStringExact%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="05958-304">If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-305">次のコード例は、<xref:System.Windows.Forms.ComboBox.FindString%2A> メソッドと <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-305">The following code example shows the usage of the <xref:System.Windows.Forms.ComboBox.FindString%2A> method and <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="05958-306">この例は、<xref:System.Windows.Forms.ComboBox> クラスの概要の完全なコード例の一部です。</span><span class="sxs-lookup"><span data-stu-id="05958-306">The example is part of a complete code example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#4)]
 [!code-csharp[ComboBox#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#4)]
 [!code-vb[ComboBox#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindString(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindString : string * int -&gt; int" Usage="comboBox.FindString (s, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="05958-307">検索対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="05958-307">The <see cref="T:System.String" /> to search for.</span></span></param>
        <param name="startIndex"><span data-ttu-id="05958-308">最初の検索対象項目の前にある項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="05958-308">The zero-based index of the item before the first item to be searched.</span></span> <span data-ttu-id="05958-309">コントロールの先頭から検索する場合は -1 を設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-309">Set to -1 to search from the beginning of the control.</span></span></param>
        <summary><span data-ttu-id="05958-310"><see cref="T:System.Windows.Forms.ComboBox" /> 内の指定されたインデックスより後ろの、指定された文字列を含む最初の項目のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="05958-310">Returns the index of the first item in the <see cref="T:System.Windows.Forms.ComboBox" /> beyond the specified index that contains the specified string.</span></span> <span data-ttu-id="05958-311">検索では、大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="05958-311">The search is not case sensitive.</span></span></summary>
        <returns><span data-ttu-id="05958-312">最初に見つかった項目のインデックス (0 から始まる)。一致する項目が見つからない場合は -1。<paramref name="s" /> パラメーターに <see cref="F:System.String.Empty" /> が指定されている場合は 0。</span><span class="sxs-lookup"><span data-stu-id="05958-312">The zero-based index of the first item found; returns -1 if no match is found, or 0 if the <paramref name="s" /> parameter specifies <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-313">このメソッドで実行される検索では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="05958-313">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="05958-314">`s` パラメーターは、コンボボックスリスト内の項目に関連付けられたテキストと比較する部分文字列です。</span><span class="sxs-lookup"><span data-stu-id="05958-314">The `s` parameter is a substring to compare against the text associated with the items in the combo box list.</span></span> <span data-ttu-id="05958-315">検索では、テキストの先頭から部分一致を実行し、指定した部分文字列と一致するリスト内の最初の項目を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-315">The search performs a partial match starting from the beginning of the text, returning the first item in the list that matches the specified substring.</span></span> <span data-ttu-id="05958-316">その後、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> メソッドを使用して、または項目のテキストを変更するなど、タスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="05958-316">You can then perform tasks, such as removing the item that contains the search text using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="05958-317">このメソッドは、通常、開始インデックスを指定しないバージョンのこのメソッドを使用して呼び出しが行われた後に使用されます。</span><span class="sxs-lookup"><span data-stu-id="05958-317">This method is typically used after a call has been made using the version of this method that does not specify a starting index.</span></span> <span data-ttu-id="05958-318">リストに最初の項目が見つかったら、通常、このメソッドを使用して、検索テキストの最初に見つかったインスタンスの後にある項目の `startIndex` パラメーターでインデックス位置を指定することで、検索テキストのインスタンスをさらに検索します。</span><span class="sxs-lookup"><span data-stu-id="05958-318">Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text.</span></span> <span data-ttu-id="05958-319">部分一致ではなく完全一致する単語の検索を実行する場合は、<xref:System.Windows.Forms.ComboBox.FindStringExact%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="05958-319">If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="05958-320"><paramref name="startIndex" /> が -1 より小さい。</span><span class="sxs-lookup"><span data-stu-id="05958-320">The <paramref name="startIndex" /> is less than -1.</span></span>  
  
<span data-ttu-id="05958-321">または</span><span class="sxs-lookup"><span data-stu-id="05958-321">-or-</span></span> 
<span data-ttu-id="05958-322"><paramref name="startIndex" /> がコレクション内の最後のインデックスを超える値です。</span><span class="sxs-lookup"><span data-stu-id="05958-322">The <paramref name="startIndex" /> is greater than the last index in the collection.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindStringExact">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05958-323">指定した文字列と厳密に一致する項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="05958-323">Finds the item that exactly matches the specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindStringExact(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.FindStringExact : string -&gt; int" Usage="comboBox.FindStringExact s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="05958-324">検索対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="05958-324">The <see cref="T:System.String" /> to search for.</span></span></param>
        <summary><span data-ttu-id="05958-325">コンボ ボックス内で、指定した文字列と一致する最初の項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="05958-325">Finds the first item in the combo box that matches the specified string.</span></span></summary>
        <returns><span data-ttu-id="05958-326">最初に見つかった項目のインデックス (0 から始まる)。一致する項目が見つからない場合は -1。<paramref name="s" /> パラメーターに <see cref="F:System.String.Empty" /> が指定されている場合は 0。</span><span class="sxs-lookup"><span data-stu-id="05958-326">The zero-based index of the first item found; returns -1 if no match is found, or 0 if the <paramref name="s" /> parameter specifies <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-327">このメソッドで実行される検索では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="05958-327">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="05958-328">`s` パラメーターは、コンボボックスリスト内の項目に関連付けられたテキストと比較する文字列です。</span><span class="sxs-lookup"><span data-stu-id="05958-328">The `s` parameter is a string to compare against the text associated with the items in the combo box list.</span></span> <span data-ttu-id="05958-329">検索では、テキストの先頭から一致するものを検索し、指定した部分文字列と一致するリスト内の最初の項目を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-329">The search looks for a match starting from the beginning of the text, returning the first item in the list that matches the specified substring.</span></span> <span data-ttu-id="05958-330">その後、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> メソッドを使用して、または項目のテキストを変更するなど、タスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="05958-330">You can then perform tasks, such as removing the item that contains the search text using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="05958-331">指定したテキストが見つかったら、<xref:System.Windows.Forms.ComboBox>内のテキストの他のインスタンスを検索する場合は、<xref:System.Windows.Forms.ComboBox>内の開始インデックスを指定するためのパラメーターを提供するバージョンの <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> メソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-331">Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ComboBox>, you must use the version of the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-332">単語の完全一致ではなく部分的な検索を実行する場合は、<xref:System.Windows.Forms.ComboBox.FindString%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="05958-332">If you want to perform partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ComboBox.FindString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-333">次のコード例は、<xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> と <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティを設定し、<xref:System.Windows.Forms.ComboBox.FindStringExact%2A> メソッドを使用して <xref:System.Windows.Forms.ComboBox>を検索することによって、<xref:System.Windows.Forms.ComboBox> コントロールを初期化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-333">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties and using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-334">また、<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> イベントの処理についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-334">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.FindStringExact(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindStringExact : string * int -&gt; int" Usage="comboBox.FindStringExact (s, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="05958-335">検索対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="05958-335">The <see cref="T:System.String" /> to search for.</span></span></param>
        <param name="startIndex"><span data-ttu-id="05958-336">最初の検索対象項目の前にある項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="05958-336">The zero-based index of the item before the first item to be searched.</span></span> <span data-ttu-id="05958-337">コントロールの先頭から検索する場合は -1 を設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-337">Set to -1 to search from the beginning of the control.</span></span></param>
        <summary><span data-ttu-id="05958-338">指定したインデックスの後に出現する、指定した文字列と一致する最初の項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="05958-338">Finds the first item after the specified index that matches the specified string.</span></span></summary>
        <returns><span data-ttu-id="05958-339">最初に見つかった項目のインデックス (0 から始まる)。一致する項目が見つからない場合は -1。<paramref name="s" /> パラメーターに <see cref="F:System.String.Empty" /> が指定されている場合は 0。</span><span class="sxs-lookup"><span data-stu-id="05958-339">The zero-based index of the first item found; returns -1 if no match is found, or 0 if the <paramref name="s" /> parameter specifies <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-340">このメソッドで実行される検索では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="05958-340">The search performed by this method is not case-sensitive.</span></span> <span data-ttu-id="05958-341">`s` パラメーターは、コンボボックスリスト内の項目に関連付けられたテキストと比較する文字列です。</span><span class="sxs-lookup"><span data-stu-id="05958-341">The `s` parameter is a string to compare against the text associated with the items in the combo box list.</span></span> <span data-ttu-id="05958-342">検索では、テキストの先頭から一致するものを検索し、指定した部分文字列と一致するリスト内の最初の項目を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-342">The search looks for a match starting from the beginning of the text, returning the first item in the list that matches the specified substring.</span></span> <span data-ttu-id="05958-343">その後、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> メソッドを使用して、または項目のテキストを変更するなど、タスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="05958-343">You can then perform tasks, such as removing the item that contains the search text using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or changing the item's text.</span></span> <span data-ttu-id="05958-344">このメソッドは、通常、開始インデックスを指定しないバージョンのこのメソッドを使用して呼び出しが行われた後に使用されます。</span><span class="sxs-lookup"><span data-stu-id="05958-344">This method is typically used after a call has been made using the version of this method that does not specify a starting index.</span></span> <span data-ttu-id="05958-345">リストに最初の項目が見つかったら、通常、このメソッドを使用して、検索テキストの最初に見つかったインスタンスの後にある項目の `startIndex` パラメーターでインデックス位置を指定することで、検索テキストのインスタンスをさらに検索します。</span><span class="sxs-lookup"><span data-stu-id="05958-345">Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text.</span></span> <span data-ttu-id="05958-346">単語の完全一致ではなく部分的な検索を実行する場合は、<xref:System.Windows.Forms.ComboBox.FindString%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="05958-346">If you want to perform partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ComboBox.FindString%2A> method.</span></span>  
  
 <span data-ttu-id="05958-347">このメソッドで実行される検索は循環しています。</span><span class="sxs-lookup"><span data-stu-id="05958-347">The search performed by this method is circular.</span></span> <span data-ttu-id="05958-348">検索は `startIndex` パラメーターの後の次のインデックスから開始されますが、コレクションの末尾に到達すると、検索は0で再開されます。</span><span class="sxs-lookup"><span data-stu-id="05958-348">Although the search starts at the next index after the `startIndex` parameter, the search restarts at 0 when the end of the collection is reached.</span></span> <span data-ttu-id="05958-349">ただし、`startIndex` パラメーター自体がコレクション内の最後のインデックスと等しい場合は、例外がスローされることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="05958-349">However, note that if the `startIndex` parameter itself is equal to the last index in the collection, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-350">次のコード例は、<xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> と <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティを設定し、<xref:System.Windows.Forms.ComboBox.FindStringExact%2A> メソッドを使用して <xref:System.Windows.Forms.ComboBox>を検索することによって、<xref:System.Windows.Forms.ComboBox> コントロールを初期化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-350">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties and using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-351">また、<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> イベントの処理についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-351">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="05958-352"><paramref name="startIndex" /> が -1 より小さい。</span><span class="sxs-lookup"><span data-stu-id="05958-352">The <paramref name="startIndex" /> is less than -1.</span></span>  
  
<span data-ttu-id="05958-353">または</span><span class="sxs-lookup"><span data-stu-id="05958-353">-or-</span></span> 
<span data-ttu-id="05958-354"><paramref name="startIndex" /> がコレクション内の最後のインデックスと等しい値です。</span><span class="sxs-lookup"><span data-stu-id="05958-354">The <paramref name="startIndex" /> is equal to the last index in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FlatStyle : System.Windows.Forms.FlatStyle with get, set" Usage="System.Windows.Forms.ComboBox.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-355"><see cref="T:System.Windows.Forms.ComboBox" /> の外観を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-355">Gets or sets the appearance of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-356">コントロールの外観を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="05958-356">One of the enumeration values that specifies the appearance of the control.</span></span> <span data-ttu-id="05958-357">オプションは、<see langword="Flat" />、<see langword="Popup" />、<see langword="Standard" />、および <see langword="System" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-357">The options are <see langword="Flat" />, <see langword="Popup" />, <see langword="Standard" />, and <see langword="System" />.</span></span> <span data-ttu-id="05958-358">既定では、 <see langword="Standard" />です。</span><span class="sxs-lookup"><span data-stu-id="05958-358">The default is <see langword="Standard" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-359">.NET Framework 4.5.2 以降では、<xref:System.Windows.Forms.ComboBox.FlatStyle%2A> プロパティが <xref:System.Windows.Forms.FlatStyle.Flat> または <xref:System.Windows.Forms.FlatStyle.Popup>に設定されている場合、ドロップダウン矢印のサイズが変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="05958-359">Starting with the .NET Framework 4.5.2, if the <xref:System.Windows.Forms.ComboBox.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.Flat> or <xref:System.Windows.Forms.FlatStyle.Popup>, the drop-down arrow may be resized.</span></span> <span data-ttu-id="05958-360">サイズ変更は、app.config ファイルに次のエントリが含まれている場合に、システムの DPI 設定によって決まります。</span><span class="sxs-lookup"><span data-stu-id="05958-360">Resizing is determined by the system DPI setting when the app.config file contains the following entry:</span></span>  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="05958-361">指定された値が <see cref="T:System.Windows.Forms.FlatStyle" /> の値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="05958-361">The specified value is not one of the values of <see cref="T:System.Windows.Forms.FlatStyle" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public override bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.ComboBox.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-362"><see cref="T:System.Windows.Forms.ComboBox" /> にフォーカスが設定されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="05958-362">Gets a value indicating whether the <see cref="T:System.Windows.Forms.ComboBox" /> has focus.</span></span></summary>
        <value><span data-ttu-id="05958-363">このコントロールにフォーカスが設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="05958-363"><see langword="true" /> if this control has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ComboBox.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-364">コントロールの前景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-364">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="05958-365">コントロールの前景色を指定します。</span><span class="sxs-lookup"><span data-stu-id="05958-365">The foreground color of the control.</span></span> <span data-ttu-id="05958-366">既定値は <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> プロパティの値です。</span><span class="sxs-lookup"><span data-stu-id="05958-366">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemHeight">
      <MemberSignature Language="C#" Value="public int GetItemHeight (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetItemHeight(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.GetItemHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemHeight (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetItemHeight(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemHeight : int -&gt; int" Usage="comboBox.GetItemHeight index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="05958-367">高さが返される項目のインデックス。</span><span class="sxs-lookup"><span data-stu-id="05958-367">The index of the item to return the height of.</span></span></param>
        <summary><span data-ttu-id="05958-368"><see cref="T:System.Windows.Forms.ComboBox" /> 内の項目の高さを返します。</span><span class="sxs-lookup"><span data-stu-id="05958-368">Returns the height of an item in the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <returns><span data-ttu-id="05958-369">指定したインデックスにある項目の高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="05958-369">The height, in pixels, of the item at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-370"><xref:System.Windows.Forms.ComboBox.DrawMode%2A> が `OwnerDrawVariable`に設定されていない場合、標準 <xref:System.Windows.Forms.ComboBox> 内のすべての項目のサイズが同じであるため、`index` パラメーターの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="05958-370">If <xref:System.Windows.Forms.ComboBox.DrawMode%2A> is not set to `OwnerDrawVariable`, the value of the `index` parameter is ignored because all items in a standard <xref:System.Windows.Forms.ComboBox> are the same size.</span></span> <span data-ttu-id="05958-371">オーナー描画 <xref:System.Windows.Forms.ComboBox> を使用して <xref:System.Windows.Forms.ComboBox>内の項目のサイズを決定するときに、このプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="05958-371">You can use this property when you are using an owner-drawn <xref:System.Windows.Forms.ComboBox> to determine the size of any item within the <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
 <span data-ttu-id="05958-372">オーナー描画リストの項目の高さを指定する方法の詳細については、「<xref:System.Windows.Forms.ComboBox.MeasureItem> イベント」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-372">For more information about specifying the height for items in an owner-drawn list, see <xref:System.Windows.Forms.ComboBox.MeasureItem> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="05958-373"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="05958-373">The <paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="05958-374">または</span><span class="sxs-lookup"><span data-stu-id="05958-374">-or-</span></span> 
<span data-ttu-id="05958-375"><paramref name="index" /> がリスト内の項目数を超える値になっています。</span><span class="sxs-lookup"><span data-stu-id="05958-375">The <paramref name="index" /> is greater than count of items in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IntegralHeight">
      <MemberSignature Language="C#" Value="public bool IntegralHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IntegralHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.IntegralHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property IntegralHeight As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IntegralHeight { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IntegralHeight : bool with get, set" Usage="System.Windows.Forms.ComboBox.IntegralHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-376">一部の項目しか表示されない状況を避けるために、コントロールのサイズを変更するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-376">Gets or sets a value indicating whether the control should resize to avoid showing partial items.</span></span></summary>
        <value><span data-ttu-id="05958-377">リストにすべての項目を必ず含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="05958-377"><see langword="true" /> if the list portion can contain only complete items; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="05958-378">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="05958-378">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-379">このプロパティが `true`に設定されている場合、項目が部分的に表示されないように、コントロールのサイズが自動的に変更されます。</span><span class="sxs-lookup"><span data-stu-id="05958-379">When this property is set to `true`, the control automatically resizes to ensure that an item is not partially displayed.</span></span> <span data-ttu-id="05958-380">フォームの領域要件に基づいて <xref:System.Windows.Forms.ComboBox> の元のサイズを維持する場合は、このプロパティを `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-380">If you want to maintain the original size of the <xref:System.Windows.Forms.ComboBox> based on the space requirements of your form, set this property to `false`.</span></span> <span data-ttu-id="05958-381"><xref:System.Windows.Forms.ComboBox> に項目が含まれていない場合、このプロパティは無効です。</span><span class="sxs-lookup"><span data-stu-id="05958-381">If the <xref:System.Windows.Forms.ComboBox> does not contain any items, this property has no effect.</span></span>  
  
 <span data-ttu-id="05958-382"><xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> プロパティを設定すると、<xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> プロパティが `false`にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="05958-382">Setting the <xref:System.Windows.Forms.ComboBox.DropDownHeight%2A> property resets the <xref:System.Windows.Forms.ComboBox.IntegralHeight%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-383"><xref:System.Windows.Forms.ComboBox.DrawMode%2A> プロパティが `OwnerDrawVariable`に設定されている場合、このプロパティは無効になります。</span><span class="sxs-lookup"><span data-stu-id="05958-383">If the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property is set to `OwnerDrawVariable`, this property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="comboBox.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="05958-384"><see cref="T:System.Windows.Forms.Keys" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="05958-384">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span></param>
        <summary><span data-ttu-id="05958-385">指定されたキーが、標準の入力キーと前処理が必要な特殊キーのどちらであるかを判別します。</span><span class="sxs-lookup"><span data-stu-id="05958-385">Determines whether the specified key is a regular input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="05958-386">指定されているキーが通常の入力キーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="05958-386"><see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-387"><xref:System.Windows.Forms.ComboBox.IsInputKey%2A> メソッドは、`keyData` パラメーターに <xref:System.Windows.Forms.Keys.Return> または <xref:System.Windows.Forms.Keys.Escape> の値が含まれており、<xref:System.Windows.Forms.ComboBox.DroppedDown%2A> プロパティが `true`の場合に `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-387">The <xref:System.Windows.Forms.ComboBox.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Return> or <xref:System.Windows.Forms.Keys.Escape> value and the <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ItemHeight : int with get, set" Usage="System.Windows.Forms.ComboBox.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-388">コンボ ボックス内の項目の高さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-388">Gets or sets the height of an item in the combo box.</span></span></summary>
        <value><span data-ttu-id="05958-389">コンボ ボックス内の項目の高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="05958-389">The height, in pixels, of an item in the combo box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-390"><xref:System.Windows.Forms.ComboBox.DrawMode%2A> プロパティが `OwnerDrawFixed`に設定されている場合、すべての項目の高さは同じになります。</span><span class="sxs-lookup"><span data-stu-id="05958-390">When the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property is set to `OwnerDrawFixed`, all items have the same height.</span></span> <span data-ttu-id="05958-391"><xref:System.Windows.Forms.DrawMode> プロパティが `OwnerDrawVariable`に設定されている場合、<xref:System.Windows.Forms.ComboBox.ItemHeight%2A> プロパティは <xref:System.Windows.Forms.ComboBox>に追加される各項目の高さを指定します。</span><span class="sxs-lookup"><span data-stu-id="05958-391">When the <xref:System.Windows.Forms.DrawMode> property is set to `OwnerDrawVariable`, the <xref:System.Windows.Forms.ComboBox.ItemHeight%2A> property specifies the height of each item added to the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-392">オーナー描画リスト内の各項目は異なる高さを持つことができるので、<xref:System.Windows.Forms.ComboBox.GetItemHeight%2A> メソッドを使用して、<xref:System.Windows.Forms.ComboBox>内の特定の項目の高さを取得できます。</span><span class="sxs-lookup"><span data-stu-id="05958-392">Because each item in an owner-drawn list can have a different height, you can use the <xref:System.Windows.Forms.ComboBox.GetItemHeight%2A> method to get the height of a specific item in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-393">高さが可変の項目を持つ <xref:System.Windows.Forms.ComboBox> の <xref:System.Windows.Forms.ComboBox.ItemHeight%2A> プロパティを使用する場合、このプロパティはコントロール内の最初の項目の高さを返します。</span><span class="sxs-lookup"><span data-stu-id="05958-393">If you use the <xref:System.Windows.Forms.ComboBox.ItemHeight%2A> property on a <xref:System.Windows.Forms.ComboBox> with items of variable height, this property returns the height of the first item in the control.</span></span>  
  
 <span data-ttu-id="05958-394">オーナー描画リストの項目の高さを指定する方法の詳細については、「<xref:System.Windows.Forms.ComboBox.MeasureItem> イベント」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-394">For more information about specifying the height for items in an owner-drawn list, see <xref:System.Windows.Forms.ComboBox.MeasureItem> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05958-395">項目の高さの値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="05958-395">The item height value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ComboBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ComboBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBox::ObjectCollection ^ Items { System::Windows::Forms::ComboBox::ObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ComboBox.ObjectCollection" Usage="System.Windows.Forms.ComboBox.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-396">この <see cref="T:System.Windows.Forms.ComboBox" /> に含まれている項目のコレクションを表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="05958-396">Gets an object representing the collection of the items contained in this <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-397"><see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> 内の項目を表す <see cref="T:System.Windows.Forms.ComboBox" />。</span><span class="sxs-lookup"><span data-stu-id="05958-397">A <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> representing the items in the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-398">このプロパティを使用すると、<xref:System.Windows.Forms.ComboBox>に現在格納されている項目のリストへの参照を取得できます。</span><span class="sxs-lookup"><span data-stu-id="05958-398">This property enables you to obtain a reference to the list of items that are currently stored in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-399">この参照を使用すると、項目を追加したり、項目を削除したり、コレクション内の項目の数を取得したりできます。</span><span class="sxs-lookup"><span data-stu-id="05958-399">With this reference, you can add items, remove items, and obtain a count of the items in the collection.</span></span>  
  
 <span data-ttu-id="05958-400">通常、<xref:System.Windows.Forms.ComboBox> はテキスト項目を表示するために使用されますが、<xref:System.Windows.Forms.ComboBox>に任意のオブジェクトを追加できます。</span><span class="sxs-lookup"><span data-stu-id="05958-400">Although the <xref:System.Windows.Forms.ComboBox> is typically used to display text items, you can add any object to the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-401">通常、<xref:System.Windows.Forms.ComboBox> 内のオブジェクトの表現は、そのオブジェクトの <xref:System.Object.ToString%2A> メソッドによって返される文字列です。</span><span class="sxs-lookup"><span data-stu-id="05958-401">Typically, the representation of an object in the <xref:System.Windows.Forms.ComboBox> is the string returned by that object's <xref:System.Object.ToString%2A> method.</span></span> <span data-ttu-id="05958-402">オブジェクトのメンバーを代わりに表示する場合は、[<xref:System.Windows.Forms.ListControl.DisplayMember%2A>] プロパティを適切なメンバーの名前に設定して、表示されるメンバーを選択します。</span><span class="sxs-lookup"><span data-stu-id="05958-402">If you want to have a member of the object displayed instead, choose the member that will be displayed by setting the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property to the name of the appropriate member.</span></span> <span data-ttu-id="05958-403">オブジェクトによって返される値を表すオブジェクトのメンバーを選択することもできます。これを行うには、<xref:System.Windows.Forms.ListControl.ValueMember%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-403">You can also choose a member of the object that will represent the value returned by the object by setting the <xref:System.Windows.Forms.ListControl.ValueMember%2A> property.</span></span> <span data-ttu-id="05958-404">詳細については、<xref:System.Windows.Forms.ListControl> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-404">For more information, see <xref:System.Windows.Forms.ListControl>.</span></span>  
  
 <span data-ttu-id="05958-405">項目コレクションで実行できるタスクの詳細については、「<xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> クラスの参照トピック」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-405">For more information about the tasks that can be performed with the item collection, see the <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> class reference topics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-406">次のコード例は、少数の <xref:System.Windows.Forms.ComboBox> 項目を追加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-406">The following code example demonstrates how to add a small number of <xref:System.Windows.Forms.ComboBox> items.</span></span> <span data-ttu-id="05958-407">多数の項目を追加する必要がある場合は、<xref:System.Windows.Forms.ComboBox.BeginUpdate%2A>の例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-407">If you need to add a large number of items, see the example at <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A>.</span></span> <span data-ttu-id="05958-408">どちらの例も、<xref:System.Windows.Forms.ComboBox> クラスの概要で使用できる大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="05958-408">Both examples are part of a larger example available in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#2)]
 [!code-csharp[ComboBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#2)]
 [!code-vb[ComboBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownItems">
      <MemberSignature Language="C#" Value="public int MaxDropDownItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDropDownItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MaxDropDownItems" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDropDownItems As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDropDownItems { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDropDownItems : int with get, set" Usage="System.Windows.Forms.ComboBox.MaxDropDownItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-409"><see cref="T:System.Windows.Forms.ComboBox" /> のドロップダウン部分に表示される項目の最大数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-409">Gets or sets the maximum number of items to be shown in the drop-down portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-410">ドロップダウン部分に表示される項目の最大数。</span><span class="sxs-lookup"><span data-stu-id="05958-410">The maximum number of items of in the drop-down portion.</span></span> <span data-ttu-id="05958-411">このプロパティの最小値は 1 で、最大値は 100 です。</span><span class="sxs-lookup"><span data-stu-id="05958-411">The minimum for this property is 1 and the maximum is 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05958-412">次のコード例は、<xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> と <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティを設定し、<xref:System.Windows.Forms.ComboBox.FindStringExact%2A> メソッドを使用して <xref:System.Windows.Forms.ComboBox>を検索することによって、<xref:System.Windows.Forms.ComboBox> コントロールを初期化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-412">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties and using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-413">また、<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> イベントの処理についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-413">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05958-414">最大数が 1 未満または 100 を超える数値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="05958-414">The maximum number is set less than one or greater than 100.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ComboBox.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-415"><see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> メソッドで指定できる上限のサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-415">Gets or sets the size that is the upper limit that the <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> method can specify.</span></span></summary>
        <value><span data-ttu-id="05958-416">四角形の幅と高さを表す、順序を付与した <see cref="T:System.Drawing.Size" /> 型のペア。</span><span class="sxs-lookup"><span data-stu-id="05958-416">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.ComboBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-417">ユーザーが <see cref="T:System.Windows.Forms.ComboBox" /> に入力できる文字数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-417">Gets or sets the number of characters a user can type into the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-418">ユーザーが入力できる最大文字数。</span><span class="sxs-lookup"><span data-stu-id="05958-418">The maximum number of characters a user can enter.</span></span> <span data-ttu-id="05958-419">0 未満の値は、既定値の 0 にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="05958-419">Values of less than zero are reset to zero, which is the default value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberSignature Language="F#" Value="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " Usage="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-420">オーナー描画 <see cref="T:System.Windows.Forms.ComboBox" /> の項目を描画する必要があるたびに発生し、また、リスト項目のサイズが判別された時点でも発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-420">Occurs each time an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> item needs to be drawn and when the sizes of the list items are determined.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-421">このイベントのイベントハンドラーを作成して、<xref:System.Windows.Forms.ComboBox.DrawItem> イベントに描画される前に項目が作成されるサイズを指定できます。</span><span class="sxs-lookup"><span data-stu-id="05958-421">You can create an event handler for this event to specify the size an item is made before it is drawn in the <xref:System.Windows.Forms.ComboBox.DrawItem> event.</span></span>  
  
 <span data-ttu-id="05958-422">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-422">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-423">次のコード例では、<xref:System.Windows.Forms.ComboBox.DrawMode%2A> プロパティを `OwnerDrawnVariable` に設定し、<xref:System.Windows.Forms.ComboBox.DrawItem> および <xref:System.Windows.Forms.ComboBox.MeasureItem> イベントを処理することによって、オーナー描画コンボボックスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="05958-423">The following code example demonstrates how to create an owner-drawn combo box by setting the <xref:System.Windows.Forms.ComboBox.DrawMode%2A> property to `OwnerDrawnVariable` and handling the <xref:System.Windows.Forms.ComboBox.DrawItem> and <xref:System.Windows.Forms.ComboBox.MeasureItem> events.</span></span> <span data-ttu-id="05958-424">また、<xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> と <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティの設定についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-424">It also demonstrates setting the <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties.</span></span> <span data-ttu-id="05958-425">この例を実行するには、フォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="05958-425">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="05958-426">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントで `InitializeComboBox` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-426">Call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxOwnerDrawn#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxOwnerDrawn/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ComboBox.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-427"><see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> メソッドで指定できる下限のサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-427">Gets or sets the size that is the lower limit that the <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> method can specify.</span></span></summary>
        <value><span data-ttu-id="05958-428">四角形の幅と高さを表す、順序を付与した <see cref="T:System.Drawing.Size" /> 型のペア。</span><span class="sxs-lookup"><span data-stu-id="05958-428">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="comboBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-429">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="05958-429">The event data.</span></span></param>
        <summary><span data-ttu-id="05958-430"><see cref="E:System.Windows.Forms.Control.BackColorChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-430">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="comboBox.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-431">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="05958-431">The event data.</span></span></param>
        <summary><span data-ttu-id="05958-432"><see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-432">Raises the <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDisplayMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayMemberChanged : EventArgs -&gt; unit" Usage="comboBox.OnDisplayMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-433">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="05958-433">The event data.</span></span></param>
        <summary><span data-ttu-id="05958-434"><see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-434">Raises the <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit" Usage="comboBox.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-435">イベント データを含んでいる <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-435">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-436"><see cref="E:System.Windows.Forms.ComboBox.DrawItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-436">Raises the <see cref="E:System.Windows.Forms.ComboBox.DrawItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-437">このメソッドは、<xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> が呼び出された後に、オーナー描画の <xref:System.Windows.Forms.ComboBox> 項目を描画する必要があるたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-437">This method is called each time an owner-drawn <xref:System.Windows.Forms.ComboBox> item needs to be drawn and after <xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> is called.</span></span> <span data-ttu-id="05958-438">詳細については、<xref:System.Windows.Forms.ComboBox.DrawItem> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-438">For more information, see <xref:System.Windows.Forms.ComboBox.DrawItem>.</span></span>  
  
 <span data-ttu-id="05958-439">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-439">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-440">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-440">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-441"><xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-441">The <xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-442">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-442">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-443">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-443">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ComboBox.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="OnDropDown">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDown(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDown : EventArgs -&gt; unit&#xA;override this.OnDropDown : EventArgs -&gt; unit" Usage="comboBox.OnDropDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-444">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-444">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-445"><see cref="E:System.Windows.Forms.ComboBox.DropDown" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-445">Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-446">このイベントは、ドロップダウンが表示されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-446">This event is raised each time the drop-down is displayed.</span></span>  
  
 <span data-ttu-id="05958-447">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-447">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-448">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-448">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-449"><xref:System.Windows.Forms.ComboBox.OnDropDown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-449">The <xref:System.Windows.Forms.ComboBox.OnDropDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-450">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-450">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-451">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-451">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownClosed : EventArgs -&gt; unit&#xA;override this.OnDropDownClosed : EventArgs -&gt; unit" Usage="comboBox.OnDropDownClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-452">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-452">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-453"><see cref="E:System.Windows.Forms.ComboBox.DropDownClosed" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-453">Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDownClosed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-454">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-454">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-455">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-455">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-456"><xref:System.Windows.Forms.ComboBox.OnDropDownClosed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-456">The <xref:System.Windows.Forms.ComboBox.OnDropDownClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-457">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-457">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-458">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-458">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ComboBox.DropDownClosed" />
      </Docs>
    </Member>
    <Member MemberName="OnDropDownStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownStyleChanged : EventArgs -&gt; unit&#xA;override this.OnDropDownStyleChanged : EventArgs -&gt; unit" Usage="comboBox.OnDropDownStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-459">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-459">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-460"><see cref="E:System.Windows.Forms.ComboBox.DropDownStyleChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-460">Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDownStyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-461">このイベントは、<xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> を新しい値に設定したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-461">This event is raised when you set <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> to a new value.</span></span>  
  
 <span data-ttu-id="05958-462">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-462">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-463">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-463">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-464"><xref:System.Windows.Forms.ComboBox.OnDropDownStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-464">The <xref:System.Windows.Forms.ComboBox.OnDropDownStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-465">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-465">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-466">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-466">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="comboBox.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-467">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="05958-467">The event data.</span></span></param>
        <summary><span data-ttu-id="05958-468"><see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-468">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="comboBox.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-469">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="05958-469">The event data.</span></span></param>
        <summary><span data-ttu-id="05958-470"><see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-470">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="comboBox.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-471">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-471">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-472"><see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-472">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-473">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-473">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-474">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-474">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-475"><xref:System.Windows.Forms.ComboBox.OnGotFocus%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-475">The <xref:System.Windows.Forms.ComboBox.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-476">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-476">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-477">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-477">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="comboBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-478">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-478">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-479"><see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-479">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-480">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-480">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-481">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-481">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-482"><xref:System.Windows.Forms.ComboBox.OnHandleCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-482">The <xref:System.Windows.Forms.ComboBox.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-483">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-483">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-484">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-484">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="comboBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-485">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-485">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-486"><see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-486">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-487">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-487">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-488">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-488">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-489"><xref:System.Windows.Forms.ComboBox.OnHandleDestroyed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-489">The <xref:System.Windows.Forms.ComboBox.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-490">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-490">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-491">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-491">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="comboBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-492">イベント データを含んでいる <see cref="T:System.Windows.Forms.KeyEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-492">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-493"><see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-493">Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-494">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-494">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-495">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-495">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-496"><xref:System.Windows.Forms.ComboBox.OnKeyDown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-496">The <xref:System.Windows.Forms.ComboBox.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-497">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-497">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-498">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-498">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="comboBox.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-499">イベント データを含んでいる <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-499">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-500"><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-500">Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-501">`e` の <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティの値が <xref:System.Windows.Forms.Keys.Return> または <xref:System.Windows.Forms.Keys.Escape> で、<xref:System.Windows.Forms.ComboBox.DroppedDown%2A> プロパティが `true`の場合、<xref:System.Windows.Forms.ComboBox.OnKeyPress%2A> メソッドは <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> を `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-501">If the value of the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property of `e` is <xref:System.Windows.Forms.Keys.Return> or <xref:System.Windows.Forms.Keys.Escape> and the <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> property is `true`, the <xref:System.Windows.Forms.ComboBox.OnKeyPress%2A> method sets <xref:System.Windows.Forms.ComboBox.DroppedDown%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="comboBox.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-502">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-502">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-503"><see cref="E:System.Windows.Forms.Control.LostFocus" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-503">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-504">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-504">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-505">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-505">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-506"><xref:System.Windows.Forms.ComboBox.OnLostFocus%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-506">The <xref:System.Windows.Forms.ComboBox.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-507">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-507">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-508">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-508">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit&#xA;override this.OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit" Usage="comboBox.OnMeasureItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-509">発生した <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="05958-509">The <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that was raised.</span></span></param>
        <summary><span data-ttu-id="05958-510"><see cref="E:System.Windows.Forms.ComboBox.MeasureItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-510">Raises the <see cref="E:System.Windows.Forms.ComboBox.MeasureItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-511">このメソッドは、<xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> が呼び出される前に、オーナー描画の <xref:System.Windows.Forms.ComboBox> 項目を描画する必要があるたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-511">This method is called each time an owner-drawn <xref:System.Windows.Forms.ComboBox> item needs to be drawn and before <xref:System.Windows.Forms.ComboBox.OnDrawItem%2A> is called.</span></span> <span data-ttu-id="05958-512">詳細については、<xref:System.Windows.Forms.ComboBox.MeasureItem> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-512">For more information, see <xref:System.Windows.Forms.ComboBox.MeasureItem>.</span></span>  
  
 <span data-ttu-id="05958-513">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-513">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-514">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-514">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-515"><xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-515">The <xref:System.Windows.Forms.ComboBox.OnMeasureItem%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-516">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-516">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-517">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-517">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.MeasureItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ComboBox.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="comboBox.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-518">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-518">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-519"><see cref="E:System.Windows.Forms.Control.MouseEnter" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-519">Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-520">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-520">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-521">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-521">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-522"><xref:System.Windows.Forms.ComboBox.OnMouseEnter%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-522">The <xref:System.Windows.Forms.ComboBox.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-523">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-523">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-524">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-524">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="comboBox.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-525">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-525">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-526"><see cref="E:System.Windows.Forms.Control.MouseLeave" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-526">Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-527">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-527">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-528">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-528">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-529"><xref:System.Windows.Forms.ComboBox.OnMouseLeave%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-529">The <xref:System.Windows.Forms.ComboBox.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-530">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-530">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-531">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-531">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentBackColorChanged : EventArgs -&gt; unit" Usage="comboBox.OnParentBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-532">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-532">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-533"><see cref="E:System.Windows.Forms.Control.BackColorChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-533">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-534">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-534">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-535">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-535">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-536"><xref:System.Windows.Forms.ComboBox.OnParentBackColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-536">The <xref:System.Windows.Forms.ComboBox.OnParentBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-537">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-537">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-538">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-538">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="comboBox.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-539">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-539">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-540"><see cref="E:System.Windows.Forms.Control.Resize" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-540">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-541">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-541">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-542">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-542">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-543"><xref:System.Windows.Forms.ComboBox.OnResize%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-543">The <xref:System.Windows.Forms.ComboBox.OnResize%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-544">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-544">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-545">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-545">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="comboBox.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-546">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-546">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-547"><see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-547">Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-548">このイベントは、一覧から新しい項目を選択した場合、または <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> プロパティを設定した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-548">This event is raised when you select a new item from the list or when you set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property.</span></span>  
  
 <span data-ttu-id="05958-549">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-549">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-550">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-550">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-551"><xref:System.Windows.Forms.ComboBox.OnSelectedIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-551">The <xref:System.Windows.Forms.ComboBox.OnSelectedIndexChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-552">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-552">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-553">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-553">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedItemChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedItemChanged : EventArgs -&gt; unit" Usage="comboBox.OnSelectedItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-554">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-554">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-555"><see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-555">Raises the <see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-556">このイベントは、一覧から新しい項目を選択した場合、または <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> プロパティを設定した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-556">This event is raised when you select a new item from the list or when you set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property.</span></span>  
  
 <span data-ttu-id="05958-557">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-557">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-558">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-558">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-559"><xref:System.Windows.Forms.ComboBox.OnSelectedItemChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-559">The <xref:System.Windows.Forms.ComboBox.OnSelectedItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-560">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-560">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-561">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-561">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedValueChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedValueChanged : EventArgs -&gt; unit" Usage="comboBox.OnSelectedValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-562">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-562">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-563"><see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-563">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-564">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-564">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-565">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-565">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-566"><xref:System.Windows.Forms.ComboBox.OnSelectedValueChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-566">The <xref:System.Windows.Forms.ComboBox.OnSelectedValueChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-567">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-567">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-568">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-568">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChangeCommitted">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChangeCommitted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChangeCommitted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChangeCommitted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChangeCommitted(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChangeCommitted : EventArgs -&gt; unit&#xA;override this.OnSelectionChangeCommitted : EventArgs -&gt; unit" Usage="comboBox.OnSelectionChangeCommitted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-569">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-569">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-570"><see cref="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-570">Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-571"><xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> は、ユーザーがコンボボックスの選択を変更した場合、または <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>を設定した場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-571">The <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> is raised only when the user changes the combo box selection, or when you set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>.</span></span> <span data-ttu-id="05958-572">ただし、<xref:System.Windows.Forms.ComboBox> の構成方法、およびユーザーが選択した項目を変更する方法によっては、<xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> イベントが発生しないことがあります。</span><span class="sxs-lookup"><span data-stu-id="05958-572">However, depending on how the <xref:System.Windows.Forms.ComboBox> is configured, and how the user changes the selected item, the <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event may not be raised.</span></span> <span data-ttu-id="05958-573">または、<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>を処理することもできますが、このイベントは、インデックスがプログラムによって変更されたか、ユーザーが変更したかによって発生することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="05958-573">Alternatively, you can handle the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>, but note that this event occurs whether the index is changed programmatically or by the user.</span></span>  
  
 <span data-ttu-id="05958-574">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-574">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-575">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-575">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-576"><xref:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-576">The <xref:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-577">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-577">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-578">次のコード例では、<xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> イベントと <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> プロパティを使用して、ユーザーが選択してコミットした内容に応じてテキストボックスの長さを変更します。</span><span class="sxs-lookup"><span data-stu-id="05958-578">The following code example uses the <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event and the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property to change the length of the text box depending on what the user has selected and committed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-579">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-579">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="comboBox.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-580">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-580">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-581"><see cref="E:System.Windows.Forms.Control.TextChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-581">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-582">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-582">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-583">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-583">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-584"><xref:System.Windows.Forms.ComboBox.OnTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-584">The <xref:System.Windows.Forms.ComboBox.OnTextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-585">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-585">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-586">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-586">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnTextUpdate">
      <MemberSignature Language="C#" Value="protected virtual void OnTextUpdate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextUpdate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextUpdate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextUpdate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextUpdate : EventArgs -&gt; unit&#xA;override this.OnTextUpdate : EventArgs -&gt; unit" Usage="comboBox.OnTextUpdate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-587">イベント データを格納している <see cref="T:System.EventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="05958-587">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-588"><see cref="E:System.Windows.Forms.ComboBox.TextUpdate" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-588">Raises the <see cref="E:System.Windows.Forms.ComboBox.TextUpdate" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-589">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-589">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-590">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-590">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-591"><xref:System.Windows.Forms.ComboBox.OnTextUpdate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-591">The <xref:System.Windows.Forms.ComboBox.OnTextUpdate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-592">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-592">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-593">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-593">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ComboBox.TextUpdate" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="comboBox.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05958-594">イベント データを含んでいる <see cref="T:System.ComponentModel.CancelEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-594">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05958-595"><see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="05958-595">Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-596">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-596">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05958-597">詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="05958-597">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="05958-598"><xref:System.Windows.Forms.ComboBox.OnValidating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="05958-598">The <xref:System.Windows.Forms.ComboBox.OnValidating%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="05958-599">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="05958-599">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-600">派生クラスで <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="05958-600">When overriding <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ComboBox.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-601">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-601">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="05958-602"><see cref="T:System.Windows.Forms.Padding" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="05958-602">A <see cref="T:System.Windows.Forms.Padding" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-603">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-603">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-604">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-604">This event is not relevant to this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-605">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-605">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-606"><see cref="T:System.Windows.Forms.ComboBox" /> コントロールが再描画されると発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-606">Occurs when the <see cref="T:System.Windows.Forms.ComboBox" /> control is redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-607">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="05958-607">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.ComboBox.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-608"><see cref="T:System.Windows.Forms.ComboBox" /> の適切な高さを取得します。</span><span class="sxs-lookup"><span data-stu-id="05958-608">Gets the preferred height of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-609">コンボ ボックスの項目領域の適切な高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="05958-609">The preferred height, in pixels, of the item area of the combo box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-610">推奨される高さは、フォントの高さと境界の調整に基づく値です。</span><span class="sxs-lookup"><span data-stu-id="05958-610">The preferred height is a value based on the font height and an adjustment for the border.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="comboBox.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="05958-611">処理するウィンドウ メッセージ。参照渡しで渡されます。</span><span class="sxs-lookup"><span data-stu-id="05958-611">The window message to process, passed by reference.</span></span></param>
        <param name="keyData"><span data-ttu-id="05958-612">処理するキーを表す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="05958-612">One of the enumeration values that represent the key to process.</span></span></param>
        <summary><span data-ttu-id="05958-613">コマンド キーを処理します。</span><span class="sxs-lookup"><span data-stu-id="05958-613">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="05958-614">文字がコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="05958-614"><see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-615">このメソッドは、コマンドキーを処理するために、メッセージの前処理中に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-615">This method is called during message preprocessing to handle command keys.</span></span> <span data-ttu-id="05958-616">コマンドキーは、通常の入力キーより常に優先されるキーです。</span><span class="sxs-lookup"><span data-stu-id="05958-616">Command keys are keys that always take precedence over regular input keys.</span></span> <span data-ttu-id="05958-617">コマンドキーの例としては、アクセラレータやメニューのショートカットがあります。</span><span class="sxs-lookup"><span data-stu-id="05958-617">Examples of command keys include accelerators and menu shortcuts.</span></span> <span data-ttu-id="05958-618">メソッドは、コマンドキーを処理したことを示すために `true` を返すか、キーがコマンドキーでないことを示すために `false` する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-618">The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key.</span></span> <span data-ttu-id="05958-619">このメソッドは、コントロールが Windows フォームアプリケーションまたは ActiveX コントロールとしてホストされている場合にのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="05958-619">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 <span data-ttu-id="05958-620"><xref:System.Windows.Forms.Control.ProcessCmdKey%2A> メソッドは、まずコントロールに <xref:System.Windows.Forms.ContextMenu>があるかどうかを判断し、その場合は <xref:System.Windows.Forms.ContextMenu> がコマンドキーを処理できるようにします。</span><span class="sxs-lookup"><span data-stu-id="05958-620">The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key.</span></span> <span data-ttu-id="05958-621">コマンドキーがメニューショートカットではなく、コントロールに親がある場合、キーは親の <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="05958-621">If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method.</span></span> <span data-ttu-id="05958-622">実質的な効果として、コマンドキーは制御階層に "バブル" されます。</span><span class="sxs-lookup"><span data-stu-id="05958-622">The net effect is that command keys are "bubbled" up the control hierarchy.</span></span> <span data-ttu-id="05958-623">キーデータは、ユーザーが押したキーに加えて、キーと同時に押された修飾子キーがあるかどうかも示します。</span><span class="sxs-lookup"><span data-stu-id="05958-623">In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.</span></span> <span data-ttu-id="05958-624">修飾キーには、SHIFT、CTRL、ALT の各キーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="05958-624">Modifier keys include the SHIFT, CTRL, and ALT keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyEventArgs : Message -&gt; bool" Usage="comboBox.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="05958-625">処理するウィンドウ メッセージを表す、参照渡しされたメッセージ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="05958-625">A message object, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="05958-626">キー メッセージを処理し、適切なコントロール イベントを生成します。</span><span class="sxs-lookup"><span data-stu-id="05958-626">Processes a key message and generates the appropriate control events.</span></span></summary>
        <returns><span data-ttu-id="05958-627">メッセージがコントロールによって処理された場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-627"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItem">
      <MemberSignature Language="C#" Value="protected override void RefreshItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.RefreshItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RefreshItem : int -&gt; unit" Usage="comboBox.RefreshItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="05958-628">更新する項目の位置。</span><span class="sxs-lookup"><span data-stu-id="05958-628">The location of the item to refresh.</span></span></param>
        <summary><span data-ttu-id="05958-629">指定した位置にある項目を更新します。</span><span class="sxs-lookup"><span data-stu-id="05958-629">Refreshes the item contained at the specified location.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected override void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItems();" />
      <MemberSignature Language="F#" Value="override this.RefreshItems : unit -&gt; unit" Usage="comboBox.RefreshItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05958-630"><see cref="T:System.Windows.Forms.ComboBox" /> のすべての項目を更新します。</span><span class="sxs-lookup"><span data-stu-id="05958-630">Refreshes all <see cref="T:System.Windows.Forms.ComboBox" /> items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public override void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetText();" />
      <MemberSignature Language="F#" Value="override this.ResetText : unit -&gt; unit" Usage="comboBox.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05958-631"><see cref="P:System.Windows.Forms.Control.Text" /> プロパティを既定値 (<see cref="F:System.String.Empty" />) にリセットします。</span><span class="sxs-lookup"><span data-stu-id="05958-631">Resets the <see cref="P:System.Windows.Forms.Control.Text" /> property to its default value (<see cref="F:System.String.Empty" />).</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="comboBox.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="05958-632">コントロールの高さと幅のスケールを設定するときのファクター。</span><span class="sxs-lookup"><span data-stu-id="05958-632">The factor by which the height and width of the control will be scaled.</span></span></param>
        <param name="specified"><span data-ttu-id="05958-633">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する値。</span><span class="sxs-lookup"><span data-stu-id="05958-633">A  value that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="05958-634">コントロールの位置、サイズ、埋め込み、およびマージンのスケールを設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-634">Scales a control's location, size, padding and margin.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="override this.Select : int * int -&gt; unit" Usage="comboBox.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="05958-635">テキスト ボックス内で現在選択されているテキストの最初の文字の位置。</span><span class="sxs-lookup"><span data-stu-id="05958-635">The position of the first character in the current text selection within the text box.</span></span></param>
        <param name="length"><span data-ttu-id="05958-636">選択する文字数。</span><span class="sxs-lookup"><span data-stu-id="05958-636">The number of characters to select.</span></span></param>
        <summary><span data-ttu-id="05958-637"><see cref="T:System.Windows.Forms.ComboBox" /> の編集できる部分のテキストの範囲を選択します。</span><span class="sxs-lookup"><span data-stu-id="05958-637">Selects a range of text in the editable portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-638">コントロールのテキストの最初の文字に開始位置を設定する場合は、`start` パラメーターを0に設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-638">If you want to set the start position to the first character in the control's text, set the `start` parameter to zero.</span></span> <span data-ttu-id="05958-639">このメソッドを使用すると、コントロールのテキストの検索や情報の置換など、テキストの部分文字列を選択できます。</span><span class="sxs-lookup"><span data-stu-id="05958-639">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-640"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> は、現在の選択範囲の下限値を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-640"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> returns the lower value of the current selection.</span></span> <span data-ttu-id="05958-641">たとえば、`Select(10, -4)` は、文字位置6から文字位置10までのテキストを選択します。</span><span class="sxs-lookup"><span data-stu-id="05958-641">For example, `Select(10, -4)` selects the text from character position 6 through character position 10.</span></span> <span data-ttu-id="05958-642"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> 値を取得した場合は、10ではなく6になります。</span><span class="sxs-lookup"><span data-stu-id="05958-642">If you now get the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> value, it will be 6 rather than 10.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05958-643"><paramref name="start" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="05958-643">The <paramref name="start" /> is less than zero.</span></span>  
  
<span data-ttu-id="05958-644">または</span><span class="sxs-lookup"><span data-stu-id="05958-644">-or-</span></span> 
 <span data-ttu-id="05958-645"><paramref name="start" /> に <paramref name="length" /> を加算した値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="05958-645"><paramref name="start" /> plus <paramref name="length" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ComboBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="comboBox.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05958-646"><see cref="T:System.Windows.Forms.ComboBox" /> の編集できる部分のテキストをすべて選択します。</span><span class="sxs-lookup"><span data-stu-id="05958-646">Selects all the text in the editable portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public override int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Windows.Forms.ComboBox.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-647">現在選択されている項目を指定しているインデックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-647">Gets or sets the index specifying the currently selected item.</span></span></summary>
        <value><span data-ttu-id="05958-648">現在選択されている項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="05958-648">A zero-based index of the currently selected item.</span></span> <span data-ttu-id="05958-649">項目が選択されていない場合は、値 -1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="05958-649">A value of negative one (-1) is returned if no item is selected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-650">このプロパティは、コンボボックスリストで現在選択されている項目の0から始まるインデックスを示します。</span><span class="sxs-lookup"><span data-stu-id="05958-650">This property indicates the zero-based index of the currently selected item in the combo box list.</span></span> <span data-ttu-id="05958-651">新しいインデックスを設定すると、<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-651">Setting a new index raises the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 <span data-ttu-id="05958-652"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>、<xref:System.Windows.Forms.ListControl.SelectedValue%2A>、および <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> は、次のように関連しています。</span><span class="sxs-lookup"><span data-stu-id="05958-652"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, and <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> are related as follows:</span></span>  
  
-   <span data-ttu-id="05958-653"><xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> が `false`場合、<xref:System.Windows.Forms.ListControl.SelectedValue%2A> が空白の場合、<xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> は-1 に設定されません。</span><span class="sxs-lookup"><span data-stu-id="05958-653">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will not be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
-   <span data-ttu-id="05958-654"><xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> が `true`場合、<xref:System.Windows.Forms.ListControl.SelectedValue%2A> が空白の場合は <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> が-1 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="05958-654">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `true`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-655">現在選択されている項目の選択を解除するには、<xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> を-1 に設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-655">To deselect the currently selected item, set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> to -1.</span></span> <span data-ttu-id="05958-656">項目がデータバインドされた項目の場合、<xref:System.Windows.Forms.ComboBox> 項目の <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> を-1 に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="05958-656">You cannot set the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> of a <xref:System.Windows.Forms.ComboBox> item to -1 if the item is a data-bound item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-657">次のコード例は、<xref:System.Windows.Forms.ComboBox.FindString%2A> メソッドと <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-657">The following code example show how to use the <xref:System.Windows.Forms.ComboBox.FindString%2A> method and <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property.</span></span> <span data-ttu-id="05958-658">この例は、<xref:System.Windows.Forms.ComboBox> クラスの概要の完全な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="05958-658">The example is part of a complete example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#4)]
 [!code-csharp[ComboBox#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#4)]
 [!code-vb[ComboBox#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="05958-659">指定されたインデックスが -2 以下です。</span><span class="sxs-lookup"><span data-stu-id="05958-659">The specified index is less than or equal to -2.</span></span>  
  
 <span data-ttu-id="05958-660">または</span><span class="sxs-lookup"><span data-stu-id="05958-660">-or-</span></span>  
  
 <span data-ttu-id="05958-661">指定されたインデックスが、コンボ ボックスの項目数以上の値です。</span><span class="sxs-lookup"><span data-stu-id="05958-661">The specified index is greater than or equal to the number of items in the combo box.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.ListControl.FormattingEnabled" />
        <altmember cref="P:System.Windows.Forms.ListControl.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-662"><see cref="P:System.Windows.Forms.ComboBox.SelectedIndex" /> プロパティが変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-662">Occurs when the <see cref="P:System.Windows.Forms.ComboBox.SelectedIndex" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-663">このイベントのイベントハンドラーを作成して、<xref:System.Windows.Forms.ComboBox> 内で選択されているインデックスがいつ変更されたかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="05958-663">You can create an event handler for this event to determine when the selected index in the <xref:System.Windows.Forms.ComboBox> has been changed.</span></span> <span data-ttu-id="05958-664">これは、<xref:System.Windows.Forms.ComboBox>で現在選択されている内容に基づいて、他のコントロールに情報を表示する必要がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="05958-664">This can be useful when you need to display information in other controls based on the current selection in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-665">このイベントのイベントハンドラーを使用して、他のコントロールに情報を読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="05958-665">You can use the event handler for this event to load the information in the other controls.</span></span>  
  
 <span data-ttu-id="05958-666">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-666">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-667">次のコード例は、<xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> と <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> プロパティを設定し、<xref:System.Windows.Forms.ComboBox.FindStringExact%2A> メソッドを使用して <xref:System.Windows.Forms.ComboBox>を検索することによって、<xref:System.Windows.Forms.ComboBox> コントロールを初期化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-667">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties and using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-668">また、<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> イベントの処理についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-668">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : obj with get, set" Usage="System.Windows.Forms.ComboBox.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-669"><see cref="T:System.Windows.Forms.ComboBox" /> で現在選択されている項目を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-669">Gets or sets currently selected item in the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-670">現在選択されている項目であるオブジェクト。または、現在選択されている項目が存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="05958-670">The object that is the currently selected item or <see langword="null" /> if there is no currently selected item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-671"><xref:System.Windows.Forms.ComboBox.SelectedItem%2A> プロパティをオブジェクトに設定すると、<xref:System.Windows.Forms.ComboBox> は、リスト内で現在選択されているオブジェクトの作成を試みます。</span><span class="sxs-lookup"><span data-stu-id="05958-671">When you set the <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> property to an object, the <xref:System.Windows.Forms.ComboBox> attempts to make that object the currently selected one in the list.</span></span> <span data-ttu-id="05958-672">一覧にオブジェクトが見つかった場合は、<xref:System.Windows.Forms.ComboBox> の編集部分に表示され、<xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> プロパティは対応するインデックスに設定されます。</span><span class="sxs-lookup"><span data-stu-id="05958-672">If the object is found in the list, it is displayed in the edit portion of the <xref:System.Windows.Forms.ComboBox> and the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property is set to the corresponding index.</span></span> <span data-ttu-id="05958-673">オブジェクトが一覧に存在しない場合、<xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> プロパティは現在の値のままになります。</span><span class="sxs-lookup"><span data-stu-id="05958-673">If the object does not exist in the list, the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> property is left at its current value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-674"><xref:System.Windows.Forms.ComboBox> クラスは、<xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> メソッドを使用して、指定されたオブジェクトを検索します。</span><span class="sxs-lookup"><span data-stu-id="05958-674">The <xref:System.Windows.Forms.ComboBox> class searches for the specified object by using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method.</span></span> <span data-ttu-id="05958-675">このメソッドは、<xref:System.Object.Equals%2A> メソッドを使用して等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="05958-675">This method uses the <xref:System.Object.Equals%2A> method to determine equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-676">次のコード例は、<xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> と <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-676">The following code example shows the usage of the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> and the <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> properties.</span></span> <span data-ttu-id="05958-677">この例は、<xref:System.Windows.Forms.ComboBox> クラスの概要の完全なコード例の一部です。</span><span class="sxs-lookup"><span data-stu-id="05958-677">The example is part of a complete code example in the <xref:System.Windows.Forms.ComboBox> class overview.</span></span>  
  
 [!code-cpp[ComboBox#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ComboBox/CPP/comboboxmembers.cpp#5)]
 [!code-csharp[ComboBox#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ComboBox/CS/comboboxmembers.cs#5)]
 [!code-vb[ComboBox#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComboBox/VB/comboboxmembers.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.ComboBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-678"><see cref="T:System.Windows.Forms.ComboBox" /> のうち編集できる部分の中で選択されているテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-678">Gets or sets the text that is selected in the editable portion of a <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="05958-679">コンボ ボックスで現在選択されているテキストを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="05958-679">A string that represents the currently selected text in the combo box.</span></span> <span data-ttu-id="05958-680"><see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> が <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" /> に設定されている場合、戻り値は空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="05958-680">If <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> is set to <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />, the return value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-681"><xref:System.Windows.Forms.ComboBox> コントロールで現在選択されているテキストを取得または変更するには、<xref:System.Windows.Forms.ComboBox.SelectedText%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="05958-681">You can use the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> property to retrieve or change the currently selected text in a <xref:System.Windows.Forms.ComboBox> control.</span></span> <span data-ttu-id="05958-682">ただし、ユーザーの操作によって選択が自動的に変更される可能性があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="05958-682">However, you should be aware that the selection can change automatically because of user interaction.</span></span> <span data-ttu-id="05958-683">たとえば、ボタン <xref:System.Windows.Forms.Control.Click> イベントハンドラーの <xref:System.Windows.Forms.ComboBox.SelectedText%2A> 値を取得した場合、値は空の文字列になります。</span><span class="sxs-lookup"><span data-stu-id="05958-683">For example, if you retrieve the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> value in a button <xref:System.Windows.Forms.Control.Click> event handler, the value will be an empty string.</span></span> <span data-ttu-id="05958-684">これは、入力フォーカスがコンボボックスからボタンに移動したときに、選択が自動的にクリアされるためです。</span><span class="sxs-lookup"><span data-stu-id="05958-684">This is because the selection is automatically cleared when the input focus moves from the combo box to the button.</span></span>  
  
 <span data-ttu-id="05958-685">コンボボックスがフォーカスを失うと、選択ポイントはテキストの先頭に移動し、選択したテキストは選択解除されます。</span><span class="sxs-lookup"><span data-stu-id="05958-685">When the combo box loses focus, the selection point moves to the beginning of the text and any selected text becomes unselected.</span></span> <span data-ttu-id="05958-686">この場合、<xref:System.Windows.Forms.ComboBox.SelectedText%2A> プロパティを取得すると空の文字列が取得され、<xref:System.Windows.Forms.ComboBox.SelectedText%2A> プロパティを設定すると、指定した値がテキストの先頭に追加されます。</span><span class="sxs-lookup"><span data-stu-id="05958-686">In this case, getting the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> property retrieves an empty string, and setting the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> property adds the specified value to the beginning of the text.</span></span>  
  
 <span data-ttu-id="05958-687">コンボボックスがフォーカスを取得すると、コントロールのフルテキストが自動的に選択されます。</span><span class="sxs-lookup"><span data-stu-id="05958-687">When the combo box gains focus, the full text in the control is automatically selected.</span></span> <span data-ttu-id="05958-688">コントロールの <xref:System.Windows.Forms.Control.Focus%2A> メソッドを呼び出して入力フォーカスを設定すると、コントロールにフォーカスがあるかどうかに関係なくフルテキストが選択されます。</span><span class="sxs-lookup"><span data-stu-id="05958-688">If you call the control's <xref:System.Windows.Forms.Control.Focus%2A> method to set the input focus, the full text is selected regardless of whether the control already had focus.</span></span>  
  
 <span data-ttu-id="05958-689">ユーザーがドロップダウンリストから項目を選択するか、上方向キーと下方向キーを使用すると、新しい項目のテキストが自動的に選択されます。</span><span class="sxs-lookup"><span data-stu-id="05958-689">When the user selects an item from the drop-down list or by using the UP ARROW and DOWN ARROW keys, the text for the new item is automatically selected.</span></span> <span data-ttu-id="05958-690">ただし、<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> または <xref:System.Windows.Forms.ListControl.SelectedValueChanged> イベントハンドラーで <xref:System.Windows.Forms.ComboBox.SelectedText%2A> 値を取得しようとすると、プロパティは空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-690">However, if you try to get the <xref:System.Windows.Forms.ComboBox.SelectedText%2A> value in a <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> or <xref:System.Windows.Forms.ListControl.SelectedValueChanged> event handler, the property returns an empty string.</span></span> <span data-ttu-id="05958-691">これは、これらのイベントの時点で、前の <xref:System.Windows.Forms.ComboBox.SelectedText%2A> の値がクリアされ、新しい値がまだ設定されていないためです。</span><span class="sxs-lookup"><span data-stu-id="05958-691">This is because, at the time of these events, the previous <xref:System.Windows.Forms.ComboBox.SelectedText%2A> value has been cleared and the new value has not yet been set.</span></span> <span data-ttu-id="05958-692"><xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> または <xref:System.Windows.Forms.ListControl.SelectedValueChanged> イベントハンドラーで現在の値を取得するには、代わりに <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="05958-692">To retrieve the current value in a <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> or <xref:System.Windows.Forms.ListControl.SelectedValueChanged> event handler, use the <xref:System.Windows.Forms.ComboBox.SelectedItem%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangeCommitted">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChangeCommitted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChangeCommitted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChangeCommitted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChangeCommitted;" />
      <MemberSignature Language="F#" Value="member this.SelectionChangeCommitted : EventHandler " Usage="member this.SelectionChangeCommitted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-693">選択されている項目がユーザーによって変更され、その変更が <see cref="T:System.Windows.Forms.ComboBox" /> に表示された時点で発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-693">Occurs when the user changes the selected item and that change is displayed in the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-694"><xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> イベントは、ユーザーがコンボボックスの選択を変更した場合にのみ発生します。また、このイベントのハンドラーを作成して、ユーザーがリスト内の選択した項目を変更したときに <xref:System.Windows.Forms.ComboBox> に対して特別な処理を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="05958-694">The <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event is raised only when the user changes the combo box selection, and you can create a handler for this event to provide special handling for the <xref:System.Windows.Forms.ComboBox> when the user changes the selected item in the list.</span></span> <span data-ttu-id="05958-695">ただし、<xref:System.Windows.Forms.ComboBox> の構成方法、およびユーザーが選択した項目を変更する方法によっては、<xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> イベントが発生しないことがあります。</span><span class="sxs-lookup"><span data-stu-id="05958-695">However, depending on how the <xref:System.Windows.Forms.ComboBox> is configured, and how the user changes the selected item, the <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event may not be raised.</span></span> <span data-ttu-id="05958-696">または、<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>を処理することもできますが、このイベントは、インデックスがプログラムによって変更されたか、ユーザーが変更したかによって発生することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="05958-696">Alternatively, you can handle the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>, but note that this event occurs whether the index is changed programmatically or by the user.</span></span>  
  
 <span data-ttu-id="05958-697">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-697">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-698">次のコード例では、<xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> イベントと <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> プロパティを使用して、ユーザーが選択してコミットした内容に応じてテキストボックスの長さを変更します。</span><span class="sxs-lookup"><span data-stu-id="05958-698">The following code example uses the <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> event and the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property to change the length of the text box depending on what the user has selected and committed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ComboBoxSelectedText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxSelectedText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.ComboBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-699">コンボ ボックスの編集できる部分で選択されている文字数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-699">Gets or sets the number of characters selected in the editable portion of the combo box.</span></span></summary>
        <value><span data-ttu-id="05958-700">コンボ ボックス内で選択されている文字数。</span><span class="sxs-lookup"><span data-stu-id="05958-700">The number of characters selected in the combo box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-701">このプロパティを使用すると、選択したテキストに対して操作を実行する前に、コンボボックスコントロールで現在選択されている文字があるかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="05958-701">You can use this property to determine whether any characters are currently selected in the combo box control before performing operations on the selected text.</span></span> <span data-ttu-id="05958-702"><xref:System.Windows.Forms.ComboBox.SelectionLength%2A> プロパティの値が、コントロールのテキスト内の文字数よりも大きい値に設定されている場合、<xref:System.Windows.Forms.ComboBox.SelectionLength%2A> プロパティの値は、コントロール内のテキストの長さから、<xref:System.Windows.Forms.ComboBox.SelectionStart%2A> プロパティの値を差し引いた値 (<xref:System.Windows.Forms.ComboBox.SelectionStart%2A> プロパティに値が指定されている場合) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="05958-702">When the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05958-703">値が 0 未満でした。</span><span class="sxs-lookup"><span data-stu-id="05958-703">The value was less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Forms.ComboBox.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-704">コンボ ボックスで選択されているテキストの開始インデックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-704">Gets or sets the starting index of text selected in the combo box.</span></span></summary>
        <value><span data-ttu-id="05958-705">現在選択されているテキストの文字列の最初の文字の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="05958-705">The zero-based index of the first character in the string of the current text selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-706">コントロールでテキストが選択されていない場合、このプロパティは新しいテキストの挿入ポイントを示します。</span><span class="sxs-lookup"><span data-stu-id="05958-706">If no text is selected in the control, this property indicates the insertion point for new text.</span></span> <span data-ttu-id="05958-707">このプロパティを、コントロール内のテキストの長さを超える位置に設定すると、選択した開始位置が最後の文字の後に配置されます。</span><span class="sxs-lookup"><span data-stu-id="05958-707">If you set this property to a location beyond the length of the text in the control, the selection start position is placed after the last character.</span></span> <span data-ttu-id="05958-708">テキストボックスコントロールでテキストが選択されている場合、このプロパティを変更すると、<xref:System.Windows.Forms.ComboBox.SelectionLength%2A> プロパティの値が解放される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="05958-708">When text is selected in the text box control, changing this property can release the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property.</span></span> <span data-ttu-id="05958-709"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> プロパティによって示された位置の後にあるコントロール内の残りのテキストが <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> プロパティの値よりも小さい場合、<xref:System.Windows.Forms.ComboBox.SelectionLength%2A> プロパティの値は自動的に縮小されます。</span><span class="sxs-lookup"><span data-stu-id="05958-709">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="05958-710"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> プロパティの値によって、<xref:System.Windows.Forms.ComboBox.SelectionLength%2A> プロパティが増加することはありません。</span><span class="sxs-lookup"><span data-stu-id="05958-710">The value of the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.ComboBox.SelectionLength%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05958-711"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> は、現在の選択範囲の下限値を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-711"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> returns the lower value of the current selection.</span></span> <span data-ttu-id="05958-712">たとえば、`Select(10, -4)` は、文字位置6から文字位置10までのテキストを選択します。</span><span class="sxs-lookup"><span data-stu-id="05958-712">For example, `Select(10, -4)` selects the text from character position 6 through character position 10.</span></span> <span data-ttu-id="05958-713"><xref:System.Windows.Forms.ComboBox.SelectionStart%2A> 値を取得した場合は、10ではなく6になります。</span><span class="sxs-lookup"><span data-stu-id="05958-713">If you now get the <xref:System.Windows.Forms.ComboBox.SelectionStart%2A> value, it will be 6 rather than 10.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05958-714">値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="05958-714">The value is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.ComboBox.Select(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="comboBox.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="05958-715">コントロールの水平方向の位置 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="05958-715">The horizontal location in pixels of the control.</span></span></param>
        <param name="y"><span data-ttu-id="05958-716">コントロールの垂直方向の位置 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="05958-716">The vertical location in pixels of the control.</span></span></param>
        <param name="width"><span data-ttu-id="05958-717">コントロールの幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="05958-717">The width in pixels of the control.</span></span></param>
        <param name="height"><span data-ttu-id="05958-718">コントロールの高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="05958-718">The height in pixels of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="05958-719"><see cref="T:System.Windows.Forms.BoundsSpecified" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="05958-719">One of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="05958-720"><see cref="T:System.Windows.Forms.ComboBox" /> のサイズと位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-720">Sets the size and location of the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemCore">
      <MemberSignature Language="C#" Value="protected override void SetItemCore (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemCore(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SetItemCore(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemCore (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemCore(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetItemCore : int * obj -&gt; unit" Usage="comboBox.SetItemCore (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="05958-721">オブジェクトの配列インデックス。</span><span class="sxs-lookup"><span data-stu-id="05958-721">The array index of the object.</span></span></param>
        <param name="value"><span data-ttu-id="05958-722">オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="05958-722">The object.</span></span></param>
        <summary><span data-ttu-id="05958-723">派生クラスでオーバーライドされると、指定したインデックスのオブジェクトを派生クラスで設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-723">When overridden in a derived class, sets the object with the specified index in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemsCore">
      <MemberSignature Language="C#" Value="protected override void SetItemsCore (System.Collections.IList value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItemsCore(class System.Collections.IList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.SetItemsCore(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItemsCore (value As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItemsCore(System::Collections::IList ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetItemsCore : System.Collections.IList -&gt; unit" Usage="comboBox.SetItemsCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="05958-724">項目の配列。</span><span class="sxs-lookup"><span data-stu-id="05958-724">An array of items.</span></span></param>
        <summary><span data-ttu-id="05958-725">派生クラスでオーバーライドされると、コレクション内の指定したオブジェクトの配列を派生クラスで設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-725">When overridden in a derived class, sets the specified array of objects in a collection in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Sorted : bool with get, set" Usage="System.Windows.Forms.ComboBox.Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-726">コンボ ボックス内の項目が並べ替えられたかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-726">Gets or sets a value indicating whether the items in the combo box are sorted.</span></span></summary>
        <value><span data-ttu-id="05958-727">コンボ ボックスが並べ替えられた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="05958-727"><see langword="true" /> if the combo box is sorted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="05958-728">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="05958-728">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-729">このプロパティは、<xref:System.Windows.Forms.ComboBox> が既存のエントリを並べ替えるかどうかを指定し、リスト内の適切な並べ替えられた位置に新しいエントリを追加します。</span><span class="sxs-lookup"><span data-stu-id="05958-729">This property specifies whether the <xref:System.Windows.Forms.ComboBox> sorts existing entries and add new entries to the appropriate sorted position in the list.</span></span> <span data-ttu-id="05958-730">このプロパティを使用して、<xref:System.Windows.Forms.ComboBox>内の項目を自動的に並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="05958-730">You can use this property to automatically sort items in a <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-731">並べ替えられた <xref:System.Windows.Forms.ComboBox>に項目が追加されると、その項目は並べ替えられたリスト内の適切な場所に移動されます。</span><span class="sxs-lookup"><span data-stu-id="05958-731">As items are added to a sorted <xref:System.Windows.Forms.ComboBox>, the items are moved to the appropriate location in the sorted list.</span></span> <span data-ttu-id="05958-732">プロパティを `false`に設定すると、既存のリストの末尾に新しい項目が追加されます。</span><span class="sxs-lookup"><span data-stu-id="05958-732">When you set the property to `false`, new items are added to the end of the existing list.</span></span> <span data-ttu-id="05958-733">大文字と小文字は区別されず、アルファベット順に並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="05958-733">The sort is case-insensitive and in alphabetically ascending order.</span></span>  
  
 <span data-ttu-id="05958-734">データバインドコントロールの <xref:System.Windows.Forms.ComboBox.Sorted%2A> プロパティを設定しようとすると、<xref:System.ArgumentException>が発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-734">Attempting to set the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property on a data-bound control raises an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="05958-735">基になるデータモデルを使用してデータを並べ替える必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-735">You must sort the data using the underlying data model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05958-736">データ ソースに割り当てられた <see cref="T:System.Windows.Forms.ComboBox" /> を並べ替えようとしました。</span><span class="sxs-lookup"><span data-stu-id="05958-736">An attempt was made to sort a <see cref="T:System.Windows.Forms.ComboBox" /> that is attached to a data source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ComboBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-737">このコントロールに関連付けられているテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="05958-737">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="05958-738">このコントロールに関連付けられているテキスト。</span><span class="sxs-lookup"><span data-stu-id="05958-738">The text associated with this control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-739"><xref:System.Windows.Forms.ComboBox.Text%2A> プロパティを `null` または空の文字列 ("") に設定すると、<xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> が-1 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="05958-739">Setting the <xref:System.Windows.Forms.ComboBox.Text%2A> property to `null` or an empty string ("") sets the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> to -1.</span></span> <span data-ttu-id="05958-740"><xref:System.Windows.Forms.ComboBox.Text%2A> プロパティを <xref:System.Windows.Forms.ComboBox.Items%2A> コレクション内の値に設定すると、<xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> がその項目のインデックスに設定されます。</span><span class="sxs-lookup"><span data-stu-id="05958-740">Setting the <xref:System.Windows.Forms.ComboBox.Text%2A> property to a value that is in the <xref:System.Windows.Forms.ComboBox.Items%2A> collection sets the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> to the index of that item.</span></span> <span data-ttu-id="05958-741"><xref:System.Windows.Forms.ComboBox.Text%2A> プロパティをコレクションに含まれていない値に設定すると、<xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> は変更されません。</span><span class="sxs-lookup"><span data-stu-id="05958-741">Setting the <xref:System.Windows.Forms.ComboBox.Text%2A> property to a value that is not in the collection leaves the <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-742">次のコード例は、<xref:System.Windows.Forms.ComboBox.Text%2A> プロパティを設定し、<xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> メソッドを使用して <xref:System.Windows.Forms.ComboBox>を設定することによって、<xref:System.Windows.Forms.ComboBox> コントロールを初期化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-742">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.Text%2A> property and using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method to populate the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="05958-743">また、<xref:System.Windows.Forms.ComboBox.DropDown> イベントの処理についても説明します。</span><span class="sxs-lookup"><span data-stu-id="05958-743">It also demonstrates handling the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span> <span data-ttu-id="05958-744">この例を実行するには、フォームに次のコードを貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントで `InitializeComboBox` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="05958-744">To run the example, paste the following code in a form and call the `InitializeComboBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler TextUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextUpdate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ComboBox.TextUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextUpdate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextUpdate;" />
      <MemberSignature Language="F#" Value="member this.TextUpdate : EventHandler " Usage="member this.TextUpdate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05958-745">コントロールがテキストを書式設定した後、テキストが表示される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="05958-745">Occurs when the control has formatted the text, but before the text is displayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-746"><xref:System.Windows.Forms.ComboBox.TextUpdate> イベントを使用して、実際に表示される前にテキストを検証します。</span><span class="sxs-lookup"><span data-stu-id="05958-746">Use the <xref:System.Windows.Forms.ComboBox.TextUpdate> event to validate the text before it is actually shown.</span></span> <span data-ttu-id="05958-747"><xref:System.Windows.Forms.ComboBox.Text%2A> プロパティがプログラムによって変更された場合、<xref:System.Windows.Forms.ComboBox.TextUpdate> は発生しません。</span><span class="sxs-lookup"><span data-stu-id="05958-747"><xref:System.Windows.Forms.ComboBox.TextUpdate> is not fired if the <xref:System.Windows.Forms.ComboBox.Text%2A> property is programmatically changed.</span></span>  
  
 <span data-ttu-id="05958-748">イベントの処理の詳細については、「[処理とイベントの発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-748">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-749">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="05958-749">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="05958-750">この例では、イベントハンドラーは、<xref:System.Windows.Forms.ComboBox.TextUpdate> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="05958-750">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ComboBox.TextUpdate> event.</span></span> <span data-ttu-id="05958-751">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="05958-751">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="05958-752">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、複数行 <xref:System.Windows.Forms.TextBox>にメッセージを追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="05958-752">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="05958-753">コード例を実行するには、`ComboBox1`という <xref:System.Windows.Forms.ComboBox> 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="05958-753">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ComboBox> named `ComboBox1`.</span></span> <span data-ttu-id="05958-754">次に、イベントハンドラーが <xref:System.Windows.Forms.ComboBox.TextUpdate> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="05958-754">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ComboBox.TextUpdate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#167](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#167)]
 [!code-vb[System.Windows.Forms.EventExamples#167](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#167)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="comboBox.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05958-755"><see cref="T:System.Windows.Forms.ComboBox" /> コントロールを表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="05958-755">Returns a string that represents the <see cref="T:System.Windows.Forms.ComboBox" /> control.</span></span></summary>
        <returns><span data-ttu-id="05958-756">現在の <see cref="T:System.String" /> を表す <see cref="T:System.Windows.Forms.ComboBox" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-756">A <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Forms.ComboBox" />.</span></span> <span data-ttu-id="05958-757">この文字列には、<see cref="T:System.Windows.Forms.ComboBox" /> コントロール内の項目の型と数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="05958-757">The string includes the type and the number of items in the <see cref="T:System.Windows.Forms.ComboBox" /> control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="comboBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="05958-758">処理する Windows <see cref="T:System.Windows.Forms.Message" /> です。</span><span class="sxs-lookup"><span data-stu-id="05958-758">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="05958-759">Windows メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="05958-759">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05958-760">すべてのメッセージは、<xref:System.Windows.Forms.Control.PreProcessMessage%2A> メソッドを使用してフィルター処理を行った後、<xref:System.Windows.Forms.Control.WndProc%2A> メソッドに送信されます。</span><span class="sxs-lookup"><span data-stu-id="05958-760">All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.</span></span>  
  
 <span data-ttu-id="05958-761"><xref:System.Windows.Forms.Control.WndProc%2A> メソッドは、Windows `WindowProc` 関数に正確に対応しています。</span><span class="sxs-lookup"><span data-stu-id="05958-761">The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function.</span></span> <span data-ttu-id="05958-762">Windows メッセージの処理の詳細については、MSDN ライブラリの https://msdn.microsoft.com/libraryにある Windows プラットフォーム SDK リファレンスの `WindowProc` 関数のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-762">For more information about processing Windows messages, see the `WindowProc` function documentation in the Windows Platform SDK reference located in the MSDN library at https://msdn.microsoft.com/library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05958-763">次のコード例は、<xref:System.Windows.Forms.Control.WndProc%2A> メソッドをオーバーライドして、<xref:System.Windows.Forms.Message> 構造体で識別されたオペレーティングシステムメッセージを処理する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="05958-763">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.WndProc%2A> method to handle operating system messages identified in the <xref:System.Windows.Forms.Message> structure.</span></span> <span data-ttu-id="05958-764">この例では、オペレーティングシステムの WM_ACTIVATEAPP メッセージが処理され、別のアプリケーションがアクティブになっていることがわかります。</span><span class="sxs-lookup"><span data-stu-id="05958-764">The WM_ACTIVATEAPP operating system message is handled in this example to know when another application is becoming active.</span></span> <span data-ttu-id="05958-765">使用可能な <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>、および <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> の値については、https://msdn.microsoft.com/library の MSDN ライブラリにある Platform SDK ドキュメントリファレンスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="05958-765">Refer to the Platform SDK documentation reference located in the MSDN library at https://msdn.microsoft.com/library to understand the available <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="05958-766">実際の定数値は、Platform SDK (コア SDK セクション) ダウンロードに含まれている Windows .h ヘッダーファイルにあります。このファイルは、MSDN ライブラリの https://msdn.microsoft.com/libraryにもあります。</span><span class="sxs-lookup"><span data-stu-id="05958-766">Actual constant values can be found in the Windows.h header file included in the Platform SDK (Core SDK section) download, which is also available in the MSDN library at https://msdn.microsoft.com/library.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05958-767">継承コントロールでは、基底クラスの <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> メソッドを呼び出して、処理しないメッセージを処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="05958-767">Inheriting controls should call the base class's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> method to process any messages that they do not handle.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>
