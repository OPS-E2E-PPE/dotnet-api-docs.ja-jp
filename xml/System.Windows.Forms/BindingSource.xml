<Type Name="BindingSource" FullName="System.Windows.Forms.BindingSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ca7975b67cc40f590579e04f83bee2327b7c501" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82498387" /></Metadata><TypeSignature Language="C#" Value="public class BindingSource : System.ComponentModel.Component, System.Collections.IList, System.ComponentModel.IBindingListView, System.ComponentModel.ICancelAddNew, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList, System.Windows.Forms.ICurrencyManagerProvider" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingSource extends System.ComponentModel.Component implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.IBindingList, class System.ComponentModel.IBindingListView, class System.ComponentModel.ICancelAddNew, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.ComponentModel.ITypedList, class System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingSource&#xA;Inherits Component&#xA;Implements IBindingListView, ICancelAddNew, ICurrencyManagerProvider, IList, ISupportInitialize, ISupportInitializeNotification, ITypedList" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingSource : System::ComponentModel::Component, System::Collections::IList, System::ComponentModel::IBindingListView, System::ComponentModel::ICancelAddNew, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::ComponentModel::ITypedList, System::Windows::Forms::ICurrencyManagerProvider" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type BindingSource = class&#xA;    inherit Component&#xA;    interface IBindingListView&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface IBindingList&#xA;    interface ITypedList&#xA;    interface ICancelAddNew&#xA;    interface ISupportInitializeNotification&#xA;    interface ISupportInitialize&#xA;    interface ICurrencyManagerProvider" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C#" Value="public class BindingSource : System.ComponentModel.Component, System.Collections.IList, System.ComponentModel.IBindingListView, System.ComponentModel.ICancelAddNew, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList, System.Windows.Forms.ICurrencyManagerProvider" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingSource&#xA;Inherits Component&#xA;Implements IBindingListView, ICancelAddNew, ICurrencyManagerProvider, IList, ISupportInitializeNotification, ITypedList" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingSource : System::ComponentModel::Component, System::Collections::IList, System::ComponentModel::IBindingListView, System::ComponentModel::ICancelAddNew, System::ComponentModel::ISupportInitializeNotification, System::ComponentModel::ITypedList, System::Windows::Forms::ICurrencyManagerProvider" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type BindingSource = class&#xA;    inherit Component&#xA;    interface IBindingListView&#xA;    interface IBindingList&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList&#xA;    interface ICancelAddNew&#xA;    interface ISupportInitializeNotification&#xA;    interface ISupportInitialize&#xA;    interface ICurrencyManagerProvider" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingListView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICancelAddNew</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.ICurrencyManagerProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CurrentChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b5508-101">フォームのデータ ソースをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="b5508-101">Encapsulates the data source for a form.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-102"><xref:System.Windows.Forms.BindingSource> コンポーネントにはさまざまな目的があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-102">The <xref:System.Windows.Forms.BindingSource> component serves many purposes.</span></span> <span data-ttu-id="b5508-103">まず、Windows フォームコントロールとデータソース間で通貨管理、変更通知、およびその他のサービスを提供することにより、フォーム上のコントロールをデータにバインドしやすくします。</span><span class="sxs-lookup"><span data-stu-id="b5508-103">First, it simplifies binding controls on a form to data by providing currency management, change notification, and other services between Windows Forms controls and data sources.</span></span> <span data-ttu-id="b5508-104">これを実現するには、<xref:System.Windows.Forms.BindingSource.DataSource%2A> プロパティを使用して、データソースに <xref:System.Windows.Forms.BindingSource> コンポーネントをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="b5508-104">This is accomplished by attaching the <xref:System.Windows.Forms.BindingSource> component to your data source using the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property.</span></span> <span data-ttu-id="b5508-105">複雑なバインドのシナリオでは、必要に応じて、<xref:System.Windows.Forms.BindingSource.DataMember%2A> プロパティをデータソース内の特定の列またはリストに設定できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-105">For complex binding scenarios you can optionally set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a specific column or list in the data source.</span></span> <span data-ttu-id="b5508-106">次に、コントロールを <xref:System.Windows.Forms.BindingSource>にバインドします。</span><span class="sxs-lookup"><span data-stu-id="b5508-106">You then bind controls to the <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="b5508-107">さらに、データとのすべての対話は、<xref:System.Windows.Forms.BindingSource> コンポーネントの呼び出しを使用して行われます。</span><span class="sxs-lookup"><span data-stu-id="b5508-107">All further interaction with the data is accomplished with calls to the <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="b5508-108"><xref:System.Windows.Forms.BindingSource> でバインドプロセスを簡略化する方法の例については、「[方法: Windows フォームコントロールを DBNull データベース値にバインド](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md)する」および「[方法: データバインドで発生するエラーと例外を処理する](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-108">For examples on how the <xref:System.Windows.Forms.BindingSource> can simplify the binding process, see [How to: Bind Windows Forms Controls to DBNull Database Values](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) and [How to: Handle Errors and Exceptions that Occur with Databinding](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span></span> <span data-ttu-id="b5508-109">データソースのナビゲーションと更新は、<xref:System.Windows.Forms.BindingSource.MoveNext%2A>、<xref:System.Windows.Forms.BindingSource.MoveLast%2A>、<xref:System.Windows.Forms.BindingSource.Remove%2A>などのメソッドを使用して行われます。</span><span class="sxs-lookup"><span data-stu-id="b5508-109">Navigation and updating of the data source is accomplished through methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, and <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span></span> <span data-ttu-id="b5508-110">並べ替えやフィルター処理などの操作は、<xref:System.Windows.Forms.BindingSource.Sort%2A> プロパティと <xref:System.Windows.Forms.BindingSource.Filter%2A> プロパティを使用して処理されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-110">Operations such as sorting and filtering are handled through the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties.</span></span> <span data-ttu-id="b5508-111"><xref:System.Windows.Forms.BindingSource>での並べ替えとフィルター処理の使用方法の詳細については、「[方法: Windows フォーム BindingSource コンポーネントを使用して ADO.NET データを並べ替えてフィルター処理](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-111">For more information on using sorting and filtering with the <xref:System.Windows.Forms.BindingSource>, see [How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span></span>  
  
 <span data-ttu-id="b5508-112">また、<xref:System.Windows.Forms.BindingSource> コンポーネントは、厳密に型指定されたデータソースとして機能することができます。</span><span class="sxs-lookup"><span data-stu-id="b5508-112">In addition, the <xref:System.Windows.Forms.BindingSource> component can act as a strongly typed data source.</span></span> <span data-ttu-id="b5508-113">通常、基になるデータソースの型は、次のいずれかのメカニズムによって修正されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-113">Typically the type of the underlying data source is fixed through one of the following mechanisms:</span></span>  
  
-   <span data-ttu-id="b5508-114"><xref:System.Windows.Forms.BindingSource.Add%2A> メソッドを使用して、<xref:System.Windows.Forms.BindingSource> コンポーネントに項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5508-114">Use the <xref:System.Windows.Forms.BindingSource.Add%2A> method to add an item to the <xref:System.Windows.Forms.BindingSource> component.</span></span>  
  
-   <span data-ttu-id="b5508-115"><xref:System.Windows.Forms.BindingSource.DataSource%2A> プロパティをリスト、単一オブジェクト、または型に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-115">Set the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property to a list, single object, or type.</span></span>  
  
 <span data-ttu-id="b5508-116">これらのメカニズムはどちらも、厳密に型指定されたリストを作成します。</span><span class="sxs-lookup"><span data-stu-id="b5508-116">Both of these mechanisms create a strongly-typed list.</span></span> <span data-ttu-id="b5508-117"><xref:System.Windows.Forms.BindingSource> を使用して型にバインドする方法の詳細については、「[方法: Windows フォームコントロールを型にバインド](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-117">For more information on how to use the <xref:System.Windows.Forms.BindingSource> to bind to a type, see [How to: Bind a Windows Forms Control to a Type](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span></span> <span data-ttu-id="b5508-118">また、<xref:System.Windows.Forms.BindingSource> を使用して、コントロールをファクトリオブジェクトにバインドすることもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-118">You can also use the <xref:System.Windows.Forms.BindingSource> to bind your controls to a factory object.</span></span> <span data-ttu-id="b5508-119">これを行う方法の詳細については、「[方法: Windows フォームコントロールをファクトリオブジェクトにバインドする](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-119">For more information on how to do this, see [How to: Bind a Windows Forms Control to a Factory Object](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5508-120"><xref:System.Windows.Forms.BindingSource> では単純なデータソースと複合データソースの両方が処理されるため、用語の問題が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-120">Because a <xref:System.Windows.Forms.BindingSource> handles both simple and complex data sources, terminology is problematic.</span></span> <span data-ttu-id="b5508-121">このクラスのドキュメントでは、用語*リスト*はホストされるデータソース内のデータコレクションを指し、 *item*は1つの要素を表します。</span><span class="sxs-lookup"><span data-stu-id="b5508-121">Within this class documentation, the term *list* refers to a data collection within the hosted data source, and *item* denotes a single element.</span></span> <span data-ttu-id="b5508-122">複合データソースに関連付けられている機能について説明する場合は、同等の用語の*テーブル*と*行*が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-122">When discussing functionality associated with complex data sources, the equivalent terms *table* and *row* are used.</span></span>  
  
 <span data-ttu-id="b5508-123"><xref:System.Windows.Forms.BindingSource> には、基になるデータにアクセスするためのメンバーが用意されています。</span><span class="sxs-lookup"><span data-stu-id="b5508-123"><xref:System.Windows.Forms.BindingSource> provides members for accessing the underlying data.</span></span> <span data-ttu-id="b5508-124">現在の項目は、<xref:System.Windows.Forms.BindingSource.Current%2A> プロパティを使用して取得できます。また、リスト全体は <xref:System.Windows.Forms.BindingSource.List%2A> プロパティを使用して取得できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-124">The current item can be retrieved through the <xref:System.Windows.Forms.BindingSource.Current%2A> property, and the entire list can be retrieved through the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="b5508-125">編集操作は、<xref:System.Windows.Forms.BindingSource.Current%2A>、<xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>、<xref:System.Windows.Forms.BindingSource.EndEdit%2A>、<xref:System.Windows.Forms.BindingSource.CancelEdit%2A>、および <xref:System.Windows.Forms.BindingSource.Add%2A> の各メソッドを使用して、現在の項目でサポートされています。<xref:System.Windows.Forms.BindingSource.AddNew%2A></span><span class="sxs-lookup"><span data-stu-id="b5508-125">Editing operations are supported on the current item through <xref:System.Windows.Forms.BindingSource.Current%2A> and the <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> and <xref:System.Windows.Forms.BindingSource.Add%2A> and <xref:System.Windows.Forms.BindingSource.AddNew%2A> methods.</span></span> <span data-ttu-id="b5508-126">通貨管理は、基になるすべてのデータソースの種類に対して自動的に処理されますが、このクラスは、カスタマイズを可能にする <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> や <xref:System.Windows.Forms.BindingSource.DataSourceChanged>などのさまざまなイベントを公開します。</span><span class="sxs-lookup"><span data-stu-id="b5508-126">Although currency management is handled automatically for all underlying data source types, this class exposes a number of events, such as <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> and <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, that allow for customization.</span></span>  
  
 <span data-ttu-id="b5508-127"><xref:System.Windows.Forms.BindingSource> コンポーネントにバインドされているデータソースは、<xref:System.Windows.Forms.BindingNavigator> クラスを使用して移動および管理することもできます。このクラスには、リスト内の項目を移動するための VCR と同様のユーザーインターフェイス (UI) が用意されています。</span><span class="sxs-lookup"><span data-stu-id="b5508-127">Data sources that are bound to a <xref:System.Windows.Forms.BindingSource> component can also be navigated and managed with the <xref:System.Windows.Forms.BindingNavigator> class, which provides a VCR-like user interface (UI) for navigating items within a list.</span></span> <span data-ttu-id="b5508-128"><xref:System.Windows.Forms.BindingNavigator> は任意のデータソースにバインドできますが、<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> プロパティを使用して <xref:System.Windows.Forms.BindingSource> コンポーネントと統合するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b5508-128">Although <xref:System.Windows.Forms.BindingNavigator> can be bound to any data source, it was designed to integrate with a <xref:System.Windows.Forms.BindingSource> component through its <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b5508-129"><xref:System.Windows.Forms.BindingSource> クラスの既定のプロパティは <xref:System.Windows.Forms.BindingSource.DataSource%2A>です。</span><span class="sxs-lookup"><span data-stu-id="b5508-129">The default property for the <xref:System.Windows.Forms.BindingSource> class is <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="b5508-130">既定のイベントは <xref:System.Windows.Forms.BindingSource.CurrentChanged>です。</span><span class="sxs-lookup"><span data-stu-id="b5508-130">The default event is <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b5508-131"><xref:System.Windows.Forms.BindingSource> クラスのメンバーの多くは、<xref:System.Windows.Forms.BindingSource.List%2A> プロパティによって表される基になるリストを操作し、その操作を基になるリストに単に参照します。</span><span class="sxs-lookup"><span data-stu-id="b5508-131">Many of the members of the <xref:System.Windows.Forms.BindingSource> class operate on the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and simply refer their operation to the underlying list.</span></span> <span data-ttu-id="b5508-132">したがって、<xref:System.Windows.Forms.BindingSource> が <xref:System.Collections.IList>のカスタム実装にバインドされている場合、これらのメンバーの正確な動作は、クラスのドキュメントで説明されている動作とは異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-132">Therefore, when the <xref:System.Windows.Forms.BindingSource> is bound to a custom implementation of <xref:System.Collections.IList>, the exact behavior of these members may differ from the behavior described in the class documentation.</span></span> <span data-ttu-id="b5508-133">たとえば、<xref:System.Windows.Forms.BindingSource.RemoveAt%2A> メソッドは <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-133">For example, the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method calls <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b5508-134"><xref:System.Windows.Forms.BindingSource> のドキュメントでは、基になる <xref:System.Collections.IList> の <xref:System.Collections.IList.RemoveAt%2A> メソッドが正しく実装されていることを理解したうえで <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> メソッドについて説明します。</span><span class="sxs-lookup"><span data-stu-id="b5508-134">The <xref:System.Windows.Forms.BindingSource> documentation describes the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method with the understanding that the <xref:System.Collections.IList.RemoveAt%2A> method for the underlying <xref:System.Collections.IList> is correctly implemented.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-135">次のコード例は、<xref:System.Windows.Forms.BindingSource>にバインドされている <xref:System.Windows.Forms.ListBox> を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-135">The following code example demonstrates a <xref:System.Windows.Forms.ListBox> bound to a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="b5508-136"><xref:System.Windows.Forms.BindingSource> は、フォントの一覧を含む <xref:System.ComponentModel.BindingList%601> にバインドされます。</span><span class="sxs-lookup"><span data-stu-id="b5508-136">The <xref:System.Windows.Forms.BindingSource> is bound to a <xref:System.ComponentModel.BindingList%601> that contains a list of fonts.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#0)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingNavigator" />
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <related type="Article" href="~/docs/framework/winforms/controls/bindingsource-component.md"><span data-ttu-id="b5508-137">BindingSource コンポーネント</span><span class="sxs-lookup"><span data-stu-id="b5508-137">BindingSource Component</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5508-138"><see cref="T:System.Windows.Forms.BindingSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5508-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-139"><see cref="T:System.Windows.Forms.BindingSource" /> クラスの新しいインスタンスを既定のプロパティ値で初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5508-139">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-140">次の表は、このコンストラクターによって初期化される既定の <xref:System.Windows.Forms.BindingSource> プロパティ値を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-140">The following table shows the default <xref:System.Windows.Forms.BindingSource> property values initialized by this constructor.</span></span>  
  
|<span data-ttu-id="b5508-141">プロパティ</span><span class="sxs-lookup"><span data-stu-id="b5508-141">Property</span></span>|<span data-ttu-id="b5508-142">既定値</span><span class="sxs-lookup"><span data-stu-id="b5508-142">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.BindingSource.DataSource%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.DataMember%2A>|<xref:System.String.Empty>|  
|<xref:System.Windows.Forms.BindingSource.Sort%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.Filter%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>|`true`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : System.ComponentModel.IContainer -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="b5508-143">現在の <see cref="T:System.ComponentModel.IContainer" /> を追加する <see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-143">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span></span></param>
        <summary><span data-ttu-id="b5508-144"><see cref="T:System.Windows.Forms.BindingSource" /> クラスの新しいインスタンスを初期化し、その <see cref="T:System.Windows.Forms.BindingSource" /> を指定したコンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="b5508-144">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-145">このコンストラクターは、パラメーターなしのコンストラクターを呼び出し、現在の <xref:System.Windows.Forms.BindingSource> を指定されたコンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="b5508-145">This constructor calls the parameterless constructor, and then adds the current <xref:System.Windows.Forms.BindingSource> to the specified container.</span></span> <span data-ttu-id="b5508-146">通常、ソリューションプログラマが使用するのではなく、デザイン時環境の作成者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-146">It is not typically used by the solutions programmer, but instead by authors of design-time environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : obj * string -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource (dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="b5508-147"><see cref="T:System.Windows.Forms.BindingSource" /> のデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="b5508-147">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></param>
        <param name="dataMember"><span data-ttu-id="b5508-148">バインド先となるデータ ソース内の特定の列またはリストの名前。</span><span class="sxs-lookup"><span data-stu-id="b5508-148">The specific column or list name within the data source to bind to.</span></span></param>
        <summary><span data-ttu-id="b5508-149">データ ソースとデータ メンバーを指定して、<see cref="T:System.Windows.Forms.BindingSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5508-149">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="bindingSource.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b5508-150">内部リストに追加する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-150">An <see cref="T:System.Object" /> to be added to the internal list.</span></span></param>
        <summary><span data-ttu-id="b5508-151">既存の項目を内部リストに追加します。</span><span class="sxs-lookup"><span data-stu-id="b5508-151">Adds an existing item to the internal list.</span></span></summary>
        <returns><span data-ttu-id="b5508-152"><paramref name="value" /> プロパティで表される基底のリストに <see cref="P:System.Windows.Forms.BindingSource.List" /> を追加する場所の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5508-152">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-153"><xref:System.Windows.Forms.BindingSource.Add%2A> メソッドは、基になるリストの `Add` メソッドの呼び出しを参照します。</span><span class="sxs-lookup"><span data-stu-id="b5508-153">The <xref:System.Windows.Forms.BindingSource.Add%2A> method refers the call to the underlying list's `Add` method.</span></span>  
  
 <span data-ttu-id="b5508-154">内部リストには、同種の型が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-154">The internal list must contain homogenous types.</span></span> <span data-ttu-id="b5508-155"><xref:System.Windows.Forms.BindingSource.DataSource%2A> プロパティがまだ設定されていない場合は、リストに追加された最初のオブジェクトによってリストの型が定義されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-155">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property has not already been set, then the first object added to the list defines the type for the list.</span></span>  
  
 <span data-ttu-id="b5508-156">このメソッドは、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-156">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-157">次のコード例では、<xref:System.Windows.Forms.BindingSource.Add%2A> メソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-157">The following code example how to use the <xref:System.Windows.Forms.BindingSource.Add%2A> method.</span></span> <span data-ttu-id="b5508-158">この例を実行するには、Windows フォームにコードを貼り付け、フォームのコンストラクターから `PopulateBindingSourceWithFonts` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-158">To run this example, paste the code into a Windows Form, and call the `PopulateBindingSourceWithFonts` method from the form's constructor.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b5508-159"><paramref name="value" /> の型が、基底のリストに含まれる既存の項目と異なっています。</span><span class="sxs-lookup"><span data-stu-id="b5508-159"><paramref name="value" /> differs in type from the existing items in the underlying list.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddingNew">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AddingNewEventHandler AddingNew;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AddingNewEventHandler AddingNew" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.AddingNew" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AddingNew As AddingNewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AddingNewEventHandler ^ AddingNew;" />
      <MemberSignature Language="F#" Value="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " Usage="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AddingNewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-160">項目が基底のリストに追加される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-160">Occurs before an item is added to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-161"><xref:System.Windows.Forms.BindingSource.AddingNew> イベントは、<xref:System.Windows.Forms.BindingSource.List%2A> プロパティによって表される基になるリストに新しいオブジェクトが追加される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-161">The <xref:System.Windows.Forms.BindingSource.AddingNew> event occurs before a new object is added to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="b5508-162">このイベントは、<xref:System.Windows.Forms.BindingSource.AddNew%2A> メソッドが呼び出された後、新しい項目が作成され、基になるリストに追加される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-162">This event is fired after the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method is called, but before the new item is created and added to the underlying list.</span></span> <span data-ttu-id="b5508-163">このイベントを処理することにより、プログラマは、<xref:System.Windows.Forms.BindingSource> クラスからの派生を強制せずに、カスタム項目の作成と挿入の動作を提供できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-163">By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <xref:System.Windows.Forms.BindingSource> class.</span></span> <span data-ttu-id="b5508-164">これは、イベントハンドラーで、<xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> パラメーターの <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> プロパティを新しい項目に設定することによって実現されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-164">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="b5508-165"><xref:System.Windows.Forms.BindingSource.AddingNew> イベントで作成された新しいオブジェクトは、一覧に含まれる型と同じ型である必要があります。それ以外の場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-165">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span> <span data-ttu-id="b5508-166">リストに新しい <xref:System.Data.DataRowView> を追加できないため、<xref:System.Data.DataView> または <xref:System.Data.DataTable> にバインドされている場合、<xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> プロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="b5508-166">You cannot set the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property when bound to a <xref:System.Data.DataView> or <xref:System.Data.DataTable> because you cannot add a new <xref:System.Data.DataRowView> to the list.</span></span>  
  
 <span data-ttu-id="b5508-167">カスタムの新しい項目機能を提供する方法の詳細については、「<xref:System.Windows.Forms.BindingSource.AddNew%2A> 方法」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-167">For more information about supplying custom new item functionality, see the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method.</span></span> <span data-ttu-id="b5508-168">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-168">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-169">次のコード例では、<xref:System.Windows.Forms.BindingSource> コンポーネントを使用して、リストを <xref:System.Windows.Forms.DataGridView> コントロールにバインドします。</span><span class="sxs-lookup"><span data-stu-id="b5508-169">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="b5508-170">新しい項目は、<xref:System.Windows.Forms.BindingSource.AddingNew> イベントハンドラーによってリストに追加されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-170">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="b5508-171">このコード例は、 [「方法: Windows フォーム BindingSource を使用して項目の追加をカスタマイズする](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)」で提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="b5508-171">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b5508-172"><see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> の型と、リストに格納されている型が異なります。</span><span class="sxs-lookup"><span data-stu-id="b5508-172"><see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public virtual object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj&#xA;override this.AddNew : unit -&gt; obj" Usage="bindingSource.AddNew " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.AddNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-173">基になるリストに新しい項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5508-173">Adds a new item to the underlying list.</span></span></summary>
        <returns><span data-ttu-id="b5508-174">作成され、リストに追加された <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-174">The <see cref="T:System.Object" /> that was created and added to the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-175"><xref:System.Windows.Forms.BindingSource.AddNew%2A> メソッドは、<xref:System.Windows.Forms.BindingSource.List%2A> プロパティによって表される基になるリストに新しい項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5508-175">The <xref:System.Windows.Forms.BindingSource.AddNew%2A> method adds a new item to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="b5508-176">このメソッドは、次の一連のアクションを設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-176">This method sets up the following series of actions:</span></span>  
  
1.  <span data-ttu-id="b5508-177"><xref:System.Windows.Forms.BindingSource.EndEdit%2A> メソッドは、保留中の編集操作をコミットするために、自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-177">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is automatically called to commit any pending edit operations.</span></span>  
  
2.  <span data-ttu-id="b5508-178"><xref:System.Windows.Forms.BindingSource.AddingNew> イベントが自動的に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-178">The <xref:System.Windows.Forms.BindingSource.AddingNew> event is automatically raised.</span></span> <span data-ttu-id="b5508-179">このイベントをプログラムで処理して、新しい項目を作成できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-179">This event can be programmatically handled to construct the new item.</span></span> <span data-ttu-id="b5508-180">これは、イベントハンドラーで、<xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> パラメーターの <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> プロパティを新しい項目に設定することによって実現されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-180">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="b5508-181"><xref:System.Windows.Forms.BindingSource.AddingNew> イベントで作成された新しいオブジェクトは、一覧に含まれる型と同じ型である必要があります。それ以外の場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-181">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span>  
  
     <span data-ttu-id="b5508-182"><xref:System.Windows.Forms.BindingSource.AddingNew> イベントが処理されず、基になるリストが <xref:System.ComponentModel.IBindingList>である場合、要求はリストの <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-182">If the <xref:System.Windows.Forms.BindingSource.AddingNew> event is not handled, and the underlying list is an <xref:System.ComponentModel.IBindingList>, then the request is passed to the list's <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b5508-183">基になるリストが <xref:System.ComponentModel.IBindingList>でない場合は、パブリックのパラメーターなしのコンストラクターを使用して項目が自動的に作成されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-183">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the item is automatically created through its public parameterless constructor.</span></span> <span data-ttu-id="b5508-184">どちらの場合も、新しい項目がリストの末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-184">In either case, the new item is added to the end of the list.</span></span>  
  
3.  <span data-ttu-id="b5508-185">新しい項目は、データソースが <xref:System.ComponentModel.IEditableObject> インターフェイスを実装していない限り、内部リストにすぐに追加されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-185">The new item is added immediately to the internal list unless the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="b5508-186">この場合、新しい項目は、<xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> の明示的な呼び出しが行われるか、新しいリスト操作が開始されるまでコミットされません。</span><span class="sxs-lookup"><span data-stu-id="b5508-186">In this case, the new item is not committed until an explicit call to <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> is made or until a new list operation is initiated.</span></span> <span data-ttu-id="b5508-187">コミットされる前に、新しい項目は <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>を呼び出すことによってロールバックできます。この場合、新しい項目は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-187">Before it is committed, the new item can be rolled back by calling <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, in which case the new item is discarded.</span></span>  
  
 <span data-ttu-id="b5508-188">このメソッドは、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-188">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-189">次のコード例では、<xref:System.Windows.Forms.BindingSource> コンポーネントを使用して、リストを <xref:System.Windows.Forms.DataGridView> コントロールにバインドします。</span><span class="sxs-lookup"><span data-stu-id="b5508-189">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="b5508-190">新しい項目は、<xref:System.Windows.Forms.BindingSource.AddingNew> イベントハンドラーによってリストに追加されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-190">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="b5508-191">このコード例は、 [「方法: Windows フォーム BindingSource を使用して項目の追加をカスタマイズする](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)」で提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="b5508-191">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b5508-192"><see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> プロパティが <see langword="false" /> に設定されている。</span><span class="sxs-lookup"><span data-stu-id="b5508-192">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span></span>  
  
<span data-ttu-id="b5508-193">または</span><span class="sxs-lookup"><span data-stu-id="b5508-193">-or-</span></span> 
<span data-ttu-id="b5508-194">現在の項目の型に対応するパラメーターなしのパブリック コンストラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="b5508-194">A public parameterless constructor could not be found for the current item type.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowEdit : bool" Usage="System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.AllowEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-195">基になるリスト内の項目を編集できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-195">Gets a value indicating whether items in the underlying list can be edited.</span></span></summary>
        <value><span data-ttu-id="b5508-196">リスト項目を編集できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-196"><see langword="true" /> to indicate list items can be edited; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-197"><xref:System.Windows.Forms.BindingSource.AllowEdit%2A> プロパティは、通常、他のコンポーネントが、リスト内の項目の編集が許可されるかどうかを判断するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-197">The <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNew">
      <MemberSignature Language="C#" Value="public virtual bool AllowNew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowNew { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNew : bool with get, set" Usage="System.Windows.Forms.BindingSource.AllowNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-198"><see cref="M:System.Windows.Forms.BindingSource.AddNew" /> メソッドを使用してリストに項目を追加できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-198">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span></span></summary>
        <value><span data-ttu-id="b5508-199"><see langword="true" /> を使用してリストに項目を追加できる場合は <see cref="M:System.Windows.Forms.BindingSource.AddNew" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-199"><see langword="true" /> if <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> can be used to add items to the list; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-200"><xref:System.Windows.Forms.BindingSource.AllowNew%2A> プロパティの既定値は、基になるデータソースの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b5508-200">The default value for the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property depends on the underlying data source type.</span></span> <span data-ttu-id="b5508-201">基になるリストが <xref:System.ComponentModel.IBindingList> インターフェイスを実装している場合、このプロパティは、基になるリストにデリゲートします。</span><span class="sxs-lookup"><span data-stu-id="b5508-201">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, this property will delegate to the underlying list.</span></span> <span data-ttu-id="b5508-202">それ以外の場合、基になるリストが次のいずれかの特性を持っている場合、このプロパティは `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-202">Otherwise, this property will return `false` if the underlying list has any of the following characteristics:</span></span>  
  
-   <span data-ttu-id="b5508-203">これは、<xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> プロパティによって決定される固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="b5508-203">It has a fixed size, as determined by the <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="b5508-204">これは、<xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> プロパティによって決定される読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b5508-204">It is read-only, as determined by the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="b5508-205">項目の型にパラメーターなしのコンストラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="b5508-205">The item's type does not have a parameterless constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5508-206">このプロパティの値が設定されると、getter は基になるリストへの呼び出しを参照しなくなります。</span><span class="sxs-lookup"><span data-stu-id="b5508-206">Once the value of this property is set, the getter no longer refers the call to the underlying list.</span></span> <span data-ttu-id="b5508-207">代わりに、<xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> メソッドが呼び出されるまで、以前に設定された値を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-207">Instead, it simply returns the value that was previously set until the <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method is called.</span></span>  
  
 <span data-ttu-id="b5508-208">このプロパティを設定すると、<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> が <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>に設定された <xref:System.Windows.Forms.BindingSource.ListChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-208">Setting this property raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b5508-209"><xref:System.Windows.Forms.BindingSource.AllowNew%2A> プロパティを `true` に設定し、基になるリストの型にパラメーターなしのコンストラクターがない場合は、<xref:System.Windows.Forms.BindingSource.AddingNew> イベントを処理し、適切な型を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-209">If you set the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to `true` and the underlying list type does not have a parameterless constructor, you must handle the <xref:System.Windows.Forms.BindingSource.AddingNew> event and create the appropriate type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-210">次のコード例は、<xref:System.Windows.Forms.BindingSource> コンポーネントの <xref:System.Windows.Forms.BindingSource.AllowNew%2A> プロパティを使用して、ユーザーが <xref:System.Windows.Forms.BindingSource> コンポーネントの基になるリストに新しい項目を追加できるようにする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-210">The following code example demonstrates using the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property of the <xref:System.Windows.Forms.BindingSource> component to permit the user to add new items to the <xref:System.Windows.Forms.BindingSource> component's underlying list.</span></span> <span data-ttu-id="b5508-211">このプロパティを `true` に設定すると、バインドされた <xref:System.Windows.Forms.DataGridView> コントロールに新しいレコードの行が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-211">Setting this property to `true` causes the bound <xref:System.Windows.Forms.DataGridView> control to display its row for new records.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b5508-212"><see langword="true" /> プロパティで表される基底のリストが固定サイズまたは読み取り専用であるにもかかわらず、このプロパティが <see cref="P:System.Windows.Forms.BindingSource.List" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="b5508-212">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="b5508-213">基になるリストの型にパラメーターなしのコンストラクターがないにもかかわらず、このプロパティが <see langword="true" /> に設定され、<see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> イベントが処理されていません。</span><span class="sxs-lookup"><span data-stu-id="b5508-213">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a parameterless constructor.</span></span></exception>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowEdit" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowRemove" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AllowRemove">
      <MemberSignature Language="C#" Value="public virtual bool AllowRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowRemove : bool" Usage="System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.AllowRemove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-214">基になるリストから項目を削除できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-214">Gets a value indicating whether items can be removed from the underlying list.</span></span></summary>
        <value><span data-ttu-id="b5508-215">リストからリスト項目を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-215"><see langword="true" /> to indicate list items can be removed from the list; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-216"><xref:System.Windows.Forms.BindingSource.AllowRemove%2A> プロパティは、通常、他のコンポーネントが、リスト内の項目の編集が許可されるかどうかを判断するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-216">The <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplySort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5508-217">指定された並べ替えに関する説明に基づいて、データ ソースを並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="b5508-217">Sorts the data source with the specified sort description or descriptions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.ListSortDescriptionCollection sorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (sorts As ListSortDescriptionCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::ListSortDescriptionCollection ^ sorts);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit" Usage="bindingSource.ApplySort sorts" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sorts" Type="System.ComponentModel.ListSortDescriptionCollection" />
      </Parameters>
      <Docs>
        <param name="sorts"><span data-ttu-id="b5508-218">データ ソースに適用する並べ替えに関する説明を格納する <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-218">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span></span></param>
        <summary><span data-ttu-id="b5508-219">指定された並べ替えに関する説明に基づいて、データ ソースを並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="b5508-219">Sorts the data source with the specified sort descriptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-220"><xref:System.ComponentModel.IBindingListView> は、プロパティ記述子と方向のペアのセットとして複数列の並べ替えを実装します。</span><span class="sxs-lookup"><span data-stu-id="b5508-220"><xref:System.ComponentModel.IBindingListView> implements multi-column sorting as a set of property descriptor-direction pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-221">データ ソースが <see cref="T:System.ComponentModel.IBindingListView" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b5508-221">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.PropertyDescriptor property, valuetype System.ComponentModel.ListSortDirection sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (property As PropertyDescriptor, sort As ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::PropertyDescriptor ^ property, System::ComponentModel::ListSortDirection sort);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit" Usage="bindingSource.ApplySort (property, sort)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="sort" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="b5508-222">データ ソースの並べ替えに使用するプロパティを説明する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-222">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span></span></param>
        <param name="sort"><span data-ttu-id="b5508-223">リストをどのように並べ替えるかを指定する <see cref="T:System.ComponentModel.ListSortDirection" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-223">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span></span></param>
        <summary><span data-ttu-id="b5508-224">指定されたプロパティ記述子と並べ替え方向を使用して、データ ソースを並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="b5508-224">Sorts the data source using the specified property descriptor and sort direction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-225"><xref:System.ComponentModel.IBindingList> は、<xref:System.ComponentModel.PropertyDescriptor> を使用して並べ替えの対象となるプロパティを示し、プロパティの内容を昇順と降順のどちらで並べ替えるかを示す <xref:System.ComponentModel.ListSortDirection> を使用して、単一の列の並べ替えを実装します。</span><span class="sxs-lookup"><span data-stu-id="b5508-225">The <xref:System.ComponentModel.IBindingList> implements single column sorting using a <xref:System.ComponentModel.PropertyDescriptor> to indicate a property to sort by and a <xref:System.ComponentModel.ListSortDirection> indicating whether the property contents should be sorted in ascending or descending order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-226">データ ソースが <see cref="T:System.ComponentModel.IBindingList" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b5508-226">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-227">すべてのクライアントがこの <see cref="T:System.Windows.Forms.BindingSource" /> にバインドされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-227">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-228"><xref:System.Windows.Forms.BindingSource.BindingComplete> イベントは、すべてのクライアント (通常はコントロール) が現在の <xref:System.Windows.Forms.BindingSource>にバインドされた後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-228">The <xref:System.Windows.Forms.BindingSource.BindingComplete> event occurs after all the clients, typically controls, have been bound to the current <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="b5508-229">このイベントのハンドラーは、バインドプロセスの成功、エラー、または例外に基づいて適切なアクションを実行できます。そのためには、<xref:System.Windows.Forms.BindingCompleteEventArgs> パラメーターの <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> プロパティを調べます。</span><span class="sxs-lookup"><span data-stu-id="b5508-229">The handler of this event can take the appropriate action based on the success, error, or exceptions in the binding process, by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter.</span></span>  
  
 <span data-ttu-id="b5508-230">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-230">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-231">次のコード例は、<xref:System.Windows.Forms.BindingSource.BindingComplete> イベントの処理を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-231">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.BindingComplete> event.</span></span> <span data-ttu-id="b5508-232">このコードを実行するには、空のコードファイルに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-232">To run this code, paste it into an empty code file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingSource.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-233">現在の編集操作をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="b5508-233">Cancels the current edit operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-234">このメソッドは、次の両方の条件が満たされた場合に、最後の保存または読み込み操作以降に行われたデータの変更を破棄します。</span><span class="sxs-lookup"><span data-stu-id="b5508-234">This method discards modifications to data since the last save or load operation if both of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="b5508-235">データソースは、<xref:System.ComponentModel.IEditableObject> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="b5508-235">The data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span>  
  
-   <span data-ttu-id="b5508-236"><xref:System.Windows.Forms.BindingSource.EndEdit%2A> メソッドがまだ呼び出されていません。</span><span class="sxs-lookup"><span data-stu-id="b5508-236">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method has not been called yet.</span></span>  
  
 <span data-ttu-id="b5508-237">このメソッドは、基になる <xref:System.Windows.Forms.CurrencyManager>の <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> メソッドを呼び出し、行レベルの変更にスコープが設定されています。</span><span class="sxs-lookup"><span data-stu-id="b5508-237">This method calls the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method of the underlying <xref:System.Windows.Forms.CurrencyManager>, and is scoped to row-level changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="bindingSource.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-238">リストからすべての要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="b5508-238">Removes all elements from the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-239"><xref:System.Windows.Forms.BindingSource.Clear%2A> メソッドは、<xref:System.Windows.Forms.BindingSource.List%2A> プロパティによって表される基になるリストからすべての要素を削除し、<xref:System.Windows.Forms.BindingSource.Count%2A> プロパティを0に設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-239">The <xref:System.Windows.Forms.BindingSource.Clear%2A> method removes all elements from the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and sets the <xref:System.Windows.Forms.BindingSource.Count%2A> property to zero.</span></span>  
  
 <span data-ttu-id="b5508-240">このメソッドは、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-240">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="bindingSource.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b5508-241"><see cref="T:System.Object" /> プロパティで表される基底のリストで検索する <see cref="P:System.Windows.Forms.BindingSource.List" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-241">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span> <span data-ttu-id="b5508-242">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-242">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b5508-243">オブジェクトがリストの項目であるかどうか判断します。</span><span class="sxs-lookup"><span data-stu-id="b5508-243">Determines whether an object is an item in the list.</span></span></summary>
        <returns><span data-ttu-id="b5508-244"><see langword="true" /> パラメーターが <paramref name="value" /> に存在する場合は <see cref="P:System.Windows.Forms.BindingSource.List" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-244"><see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-245">実装は、基になるリストの `Contains` メソッドに依存しますが、通常は次の特性が適用されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-245">Although the implementation is dependent on the underlying list's `Contains` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="b5508-246">最初の要素から開始し、最後の要素で終わる <xref:System.Windows.Forms.BindingSource.List%2A> が検索されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-246"><xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="b5508-247">基になるメソッドは、線形検索を実行します。したがって、平均実行時間は、<xref:System.Windows.Forms.BindingSource.Count%2A> プロパティの値に比例します。</span><span class="sxs-lookup"><span data-stu-id="b5508-247">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="b5508-248">基になるメソッドは、<xref:System.Object.Equals%2A> メソッドを呼び出すことにより、等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b5508-248">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (arr As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="bindingSource.CopyTo (arr, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr"><span data-ttu-id="b5508-249">コピー先の配列です。</span><span class="sxs-lookup"><span data-stu-id="b5508-249">The destination array.</span></span></param>
        <param name="index"><span data-ttu-id="b5508-250">コピー操作の開始位置を示す、コピー先の配列内のインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5508-250">The index in the destination array at which to start the copy operation.</span></span></param>
        <summary><span data-ttu-id="b5508-251">指定したインデックスを開始位置として、指定した配列に <see cref="P:System.Windows.Forms.BindingSource.List" /> の内容をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b5508-251">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-252">このメソッドを使用すると、複数のソースの項目を1つの配列にまとめることができます。</span><span class="sxs-lookup"><span data-stu-id="b5508-252">You can use this method to combine items from multiple sources into a single array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-253">現在の <see cref="P:System.Windows.Forms.BindingSource.Filter" /> 値を考慮して、基になるリストの項目の合計数を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-253">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span></span></summary>
        <value><span data-ttu-id="b5508-254">基底のリストに含まれる、フィルター処理された項目の総数。</span><span class="sxs-lookup"><span data-stu-id="b5508-254">The total number of filtered items in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-255"><xref:System.Windows.Forms.BindingSource.Count%2A> プロパティは、<xref:System.Windows.Forms.BindingSource.Filter%2A> プロパティの値によって変更された <xref:System.Windows.Forms.BindingSource.List%2A> プロパティによって表される、基になるリスト内の項目の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-255">The <xref:System.Windows.Forms.BindingSource.Count%2A> property gets the number of items in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property as modified by the value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-256">次のコード例は、<xref:System.Windows.Forms.BindingSource.List%2A>、<xref:System.Windows.Forms.BindingSource.RemoveAt%2A>、および <xref:System.Windows.Forms.BindingSource.Count%2A> メンバーを示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-256">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="b5508-257">この例を実行するには、`BindingSource1`という名前の <xref:System.Windows.Forms.BindingSource>、`label1` と `label2`という名前の2つのラベル、および `button1`という名前のボタンを含むフォームにコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-257">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="b5508-258">`button1_Click` メソッドを `button1`の <xref:System.Windows.Forms.Control.Click> イベントに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-258">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="b5508-259">Visual Basic ユーザーは、System. .dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-259">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager CurrencyManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager CurrencyManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::CurrencyManager ^ CurrencyManager { System::Windows::Forms::CurrencyManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyManager : System.Windows.Forms.CurrencyManager" Usage="System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.ICurrencyManagerProvider.CurrencyManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-260">この <see cref="T:System.Windows.Forms.BindingSource" /> に関連付けられた CurrencyManager を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-260">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <value><span data-ttu-id="b5508-261">この <see cref="T:System.Windows.Forms.CurrencyManager" /> に関連付けられている <see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-261">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-262">同じデータメンバーへの別のバインドの通貨マネージャーにアクセスするには、<xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5508-262">If you want to access the currency manager for another binding to the same data member use the <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingSource.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-263">リスト内の現在の項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-263">Gets the current item in the list.</span></span></summary>
        <value><span data-ttu-id="b5508-264"><see cref="T:System.Object" /> プロパティで表される基底のリスト内の現在の項目を表す <see cref="P:System.Windows.Forms.BindingSource.List" />。リストに項目がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-264">An <see cref="T:System.Object" /> that represents the current item in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property, or <see langword="null" /> if the list has no items.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-265"><xref:System.Windows.Forms.BindingSource.Current%2A> プロパティを使用して現在の項目にアクセスしますが、<xref:System.Windows.Forms.BindingSource.List%2A> プロパティを使用してリスト全体を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-265">Use the <xref:System.Windows.Forms.BindingSource.Current%2A> property to access the current item, but use the <xref:System.Windows.Forms.BindingSource.List%2A> property to get the entire list.</span></span> <span data-ttu-id="b5508-266">現在のオブジェクトの型を確認するには、<xref:System.Object.GetType%2A>、または <xref:System.Object.ToString%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5508-266">To determine the type of the current object, use the <xref:System.Object.GetType%2A>, or <xref:System.Object.ToString%2A> methods.</span></span>  
  
 <span data-ttu-id="b5508-267">現在の項目を変更するには、<xref:System.Windows.Forms.BindingSource.Position%2A> プロパティを新しい整数値に設定するか、<xref:System.Windows.Forms.BindingSource.MoveNext%2A>などのナビゲーションメソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="b5508-267">To change the current item, set the <xref:System.Windows.Forms.BindingSource.Position%2A> property to a new integral value, or use one of the navigation methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-268">次のコード例は、<xref:System.Windows.Forms.BindingSource.Current%2A> プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-268">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.Current%2A> property.</span></span> <span data-ttu-id="b5508-269">この例を実行するには、コードをフォームに貼り付け、フォームの <xref:System.Windows.Forms.Form.Load> イベント処理メソッドから `PopulateBindingSourceWithFonts` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-269">To run this example, paste the code into a form and call the `PopulateBindingSourceWithFonts` method from the form's <xref:System.Windows.Forms.Form.Load> event handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-270">現在バインドされている項目が変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-270">Occurs when the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-271"><xref:System.Windows.Forms.BindingSource.CurrentChanged> イベントは、次のいずれかの理由で <xref:System.Windows.Forms.BindingSource.Current%2A> プロパティが変更されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-271">The <xref:System.Windows.Forms.BindingSource.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingSource.Current%2A> property changes for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="b5508-272"><xref:System.Windows.Forms.BindingSource.List%2A> の現在の位置が変更されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-272">The current position of the <xref:System.Windows.Forms.BindingSource.List%2A> changes.</span></span>  
  
-   <span data-ttu-id="b5508-273"><xref:System.Windows.Forms.BindingSource.DataSource%2A> または <xref:System.Windows.Forms.BindingSource.DataMember%2A> のプロパティが変更されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-273">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span>  
  
-   <span data-ttu-id="b5508-274">基になる <xref:System.Windows.Forms.BindingSource.List%2A> のメンバーシップが変更され、<xref:System.Windows.Forms.BindingSource.Position%2A> は別の項目を参照します。</span><span class="sxs-lookup"><span data-stu-id="b5508-274">The membership of the underlying <xref:System.Windows.Forms.BindingSource.List%2A> changes, which causes <xref:System.Windows.Forms.BindingSource.Position%2A> to refer to a different item.</span></span> <span data-ttu-id="b5508-275">たとえば、現在の項目の前に項目を追加または削除したり、現在の項目を削除または移動したり、項目を現在の位置に移動したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="b5508-275">Examples include adding or deleting an item before the current item, deleting or moving the current item itself, or moving an item to the current position.</span></span>  
  
-   <span data-ttu-id="b5508-276">基になる一覧は、新しい並べ替えまたはフィルター処理操作によって更新されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-276">The underlying list is refreshed by a new sorting or filtering operation.</span></span>  
  
 <span data-ttu-id="b5508-277">このイベントがトリガーされると、<xref:System.Windows.Forms.BindingSource.Current%2A> プロパティには、その新しい値が既に含まれています。</span><span class="sxs-lookup"><span data-stu-id="b5508-277">When this event is triggered, the <xref:System.Windows.Forms.BindingSource.Current%2A> property will already contain its new value.</span></span>  
  
 <span data-ttu-id="b5508-278"><xref:System.Windows.Forms.BindingSource.CurrentChanged> は、<xref:System.Windows.Forms.BindingSource> クラスの既定のイベントです。</span><span class="sxs-lookup"><span data-stu-id="b5508-278"><xref:System.Windows.Forms.BindingSource.CurrentChanged> is the default event for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
 <span data-ttu-id="b5508-279">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-279">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-280"><see cref="P:System.Windows.Forms.BindingSource.Current" /> プロパティのプロパティ値が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-280">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-281"><xref:System.Windows.Forms.BindingSource.CurrentChanged> イベントを発生させるすべての状況に応じて、<xref:System.Windows.Forms.BindingSource.CurrentItemChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-281">The <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> event is raised in response to all of the circumstances that raise the <xref:System.Windows.Forms.BindingSource.CurrentChanged> event.</span></span> <span data-ttu-id="b5508-282">また、<xref:System.Windows.Forms.BindingSource.Current%2A> のいずれかのプロパティの値が変更されるたびに <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> も発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-282">Additionally, <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> is also fired whenever the value of one of the properties of <xref:System.Windows.Forms.BindingSource.Current%2A> is changed.</span></span>  
  
 <span data-ttu-id="b5508-283">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-283">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-284">同時実行に関する例外が <see cref="T:System.Windows.Forms.BindingSource" /> によって表示されずに処理された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-284">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-285">このイベントは情報であり、CLS 準拠の例外のみを報告します。</span><span class="sxs-lookup"><span data-stu-id="b5508-285">This event is informational and reports CLS-compliant exceptions only.</span></span> <span data-ttu-id="b5508-286">発生した例外の種類を特定するには、このイベントを処理し、<xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>の <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> プロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="b5508-286">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="b5508-287">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-287">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.BindingSource.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-288">コネクタの現在のバインド先であるデータ ソースの特定のリストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-288">Gets or sets the specific list in the data source to which the connector currently binds to.</span></span></summary>
        <value><span data-ttu-id="b5508-289"><see cref="P:System.Windows.Forms.BindingSource.DataSource" /> のリスト (または行) の名前。</span><span class="sxs-lookup"><span data-stu-id="b5508-289">The name of a list (or row) in the <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span></span> <span data-ttu-id="b5508-290">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b5508-290">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-291"><xref:System.Windows.Forms.BindingSource.DataSource%2A> にデータの複数のリスト (またはテーブル) が含まれている場合は、<xref:System.Windows.Forms.BindingSource.DataMember%2A> プロパティをいずれかのソースの名前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-291">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> contains multiple lists (or tables) of data, you should set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to the name of one of the sources.</span></span>  
  
 <span data-ttu-id="b5508-292">このプロパティを設定すると、<xref:System.Windows.Forms.BindingSource.DataMemberChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-292">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DataMemberChanged : EventHandler " Usage="member this.DataMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-293"><see cref="P:System.Windows.Forms.BindingSource.DataMember" /> プロパティ値が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-293">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-294"><xref:System.Windows.Forms.BindingSource.DataMemberChanged> イベントは、<xref:System.Windows.Forms.BindingSource.DataMember%2A> プロパティが変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-294">The <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property changes.</span></span>  
  
 <span data-ttu-id="b5508-295">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-295">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.BindingSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-296">コネクタのバインド先であるデータ ソースを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-296">Gets or sets the data source that the connector binds to.</span></span></summary>
        <value><span data-ttu-id="b5508-297">データ ソースとして機能する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-297">An <see cref="T:System.Object" /> that acts as a data source.</span></span> <span data-ttu-id="b5508-298">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b5508-298">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-299"><xref:System.Windows.Forms.BindingSource.DataSource%2A> プロパティは、型、オブジェクト、型のリストなど、いくつかのデータソースに設定できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-299">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property can be set to a number of data sources, including types, objects, and lists of types.</span></span> <span data-ttu-id="b5508-300">結果として得られるデータソースはリストとして公開されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-300">The resulting data source will be exposed as a list.</span></span> <span data-ttu-id="b5508-301">次の表は、いくつかの一般的なデータソースと結果の一覧の評価を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-301">The following table shows some of the common data sources and the resulting list evaluation.</span></span>  
  
|<span data-ttu-id="b5508-302">DataSource プロパティ</span><span class="sxs-lookup"><span data-stu-id="b5508-302">DataSource property</span></span>|<span data-ttu-id="b5508-303">結果の一覧表示</span><span class="sxs-lookup"><span data-stu-id="b5508-303">List results</span></span>|  
|-------------------------|------------------|  
|`null`|<span data-ttu-id="b5508-304">オブジェクトの空の <xref:System.ComponentModel.IBindingList>。</span><span class="sxs-lookup"><span data-stu-id="b5508-304">An empty <xref:System.ComponentModel.IBindingList> of objects.</span></span> <span data-ttu-id="b5508-305">項目を追加すると、追加した項目の種類にリストが設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-305">Adding an item sets the list to the type of the added item.</span></span>|  
|<span data-ttu-id="b5508-306"><xref:System.Windows.Forms.BindingSource.DataMember%2A> セットでの `null`</span><span class="sxs-lookup"><span data-stu-id="b5508-306">`null` with <xref:System.Windows.Forms.BindingSource.DataMember%2A> set</span></span>|<span data-ttu-id="b5508-307">サポートされていません <xref:System.ArgumentException>を発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-307">Not supported, raises <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="b5508-308">非リスト型または型 "T" のオブジェクト</span><span class="sxs-lookup"><span data-stu-id="b5508-308">Non-list type or object of type "T"</span></span>|<span data-ttu-id="b5508-309">型 "T" の空の <xref:System.ComponentModel.IBindingList>。</span><span class="sxs-lookup"><span data-stu-id="b5508-309">Empty <xref:System.ComponentModel.IBindingList> of type "T".</span></span>|  
|<span data-ttu-id="b5508-310">配列インスタンス</span><span class="sxs-lookup"><span data-stu-id="b5508-310">Array instance</span></span>|<span data-ttu-id="b5508-311">配列要素を格納している <xref:System.ComponentModel.IBindingList>。</span><span class="sxs-lookup"><span data-stu-id="b5508-311"><xref:System.ComponentModel.IBindingList> containing the array elements.</span></span>|  
|<span data-ttu-id="b5508-312"><xref:System.Collections.IEnumerable> インスタンス</span><span class="sxs-lookup"><span data-stu-id="b5508-312"><xref:System.Collections.IEnumerable> instance</span></span>|<span data-ttu-id="b5508-313"><xref:System.Collections.IEnumerable> 項目を格納している <xref:System.ComponentModel.IBindingList>。</span><span class="sxs-lookup"><span data-stu-id="b5508-313">An <xref:System.ComponentModel.IBindingList> containing the <xref:System.Collections.IEnumerable> items.</span></span>|  
|<span data-ttu-id="b5508-314">型 "T" を含むリストインスタンス</span><span class="sxs-lookup"><span data-stu-id="b5508-314">List instance containing type "T"</span></span>|<span data-ttu-id="b5508-315">型 "T" を含む <xref:System.ComponentModel.IBindingList> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b5508-315"><xref:System.ComponentModel.IBindingList> instance containing type "T".</span></span>|  
  
 <span data-ttu-id="b5508-316">さらに、<xref:System.Windows.Forms.BindingSource.DataSource%2A> を <xref:System.ComponentModel.IListSource> や <xref:System.ComponentModel.ITypedList> などの他の種類のリストに設定し、<xref:System.Windows.Forms.BindingSource> で適切に処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-316">In addition, <xref:System.Windows.Forms.BindingSource.DataSource%2A> can be set to other list types such as <xref:System.ComponentModel.IListSource> and <xref:System.ComponentModel.ITypedList> and the <xref:System.Windows.Forms.BindingSource> will handle them appropriately.</span></span> <span data-ttu-id="b5508-317">この場合、リストに含まれる型には、パラメーターなしのコンストラクターが必要です。</span><span class="sxs-lookup"><span data-stu-id="b5508-317">In this case, the type contained in the list should have a parameterless constructor.</span></span>  
  
 <span data-ttu-id="b5508-318">データソースを設定するときに、指定した参照に複数のリストまたはテーブルが含まれている場合は、<xref:System.Windows.Forms.BindingSource.DataMember%2A> プロパティを、バインド先のリストを指定する文字列に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-318">When setting a data source, if the supplied reference contains more than one list or table, you must set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a string that specifies the list to bind to.</span></span> <span data-ttu-id="b5508-319">このプロパティを設定すると、<xref:System.Windows.Forms.BindingSource.DataSourceChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-319">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5508-320"><xref:System.Windows.Forms.BindingSource.DataSource%2A> プロパティ値に変更を加える場合は、UI に変更が反映されるように、ユーザーインターフェイス (UI) スレッドで実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-320">If you make any changes to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property value, you should do so on the user interface (UI) thread to ensure that the UI reflects the changes.</span></span>  
  
 <span data-ttu-id="b5508-321"><xref:System.Windows.Forms.BindingSource.DataSource%2A> プロパティは、<xref:System.Windows.Forms.BindingSource> クラスの既定のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b5508-321">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property is the default property for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-322">次のコード例では、<xref:System.Windows.Forms.BindingSource> コンポーネントの <xref:System.Windows.Forms.BindingSource.DataSource%2A> に顧客のリストを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="b5508-322">The following code example assigns a list of customers to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> of a <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="b5508-323">このコード例は、 [「方法: BindingSource のリセットメソッドを使用して変更通知を発生させる](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)」で提供されている、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="b5508-323">This code example is part of a larger example provided at [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-324"><see cref="P:System.Windows.Forms.BindingSource.DataSource" /> プロパティ値が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-324">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-325"><xref:System.Windows.Forms.BindingSource.DataSourceChanged> イベントは、<xref:System.Windows.Forms.BindingSource.DataSource%2A> プロパティが変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-325">The <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property changes.</span></span>  
  
 <span data-ttu-id="b5508-326">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-326">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="bindingSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b5508-327">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-327"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b5508-328"><see cref="T:System.Windows.Forms.BindingSource" /> で使用されたアンマネージド リソースを解放し、必要に応じてマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="b5508-328">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-329">このメソッドは、パブリックな `Dispose` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-329">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b5508-330">`Dispose` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-330">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b5508-331"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-331"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b5508-332">`disposing` パラメーターが true の場合、このメソッドは、この <xref:System.Windows.Forms.BindingSource> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b5508-332">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.BindingSource> references.</span></span> <span data-ttu-id="b5508-333">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-333">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-334">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b5508-334">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="b5508-335">をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-335">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="b5508-336"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-336">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="b5508-337"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-337">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="bindingSource.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-338">基になるデータ ソースに保留中の変更を適用します。</span><span class="sxs-lookup"><span data-stu-id="b5508-338">Applies pending changes to the underlying data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-339"><xref:System.Windows.Forms.BindingSource.EndEdit%2A> メソッドが呼び出されると、すべての保留中の変更が基になるデータソースに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-339">When the <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is called, all pending changes are applied to the underlying data source.</span></span>  
  
 <span data-ttu-id="b5508-340">このメソッドは、データソースに含まれるオブジェクトが <xref:System.ComponentModel.IEditableObject> インターフェイスを実装している場合を除き、効果がありません。</span><span class="sxs-lookup"><span data-stu-id="b5508-340">This method has no effect unless the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="b5508-341">オブジェクトが <xref:System.ComponentModel.IEditableObject> インターフェイスを実装していない場合は、変更が行われるたびに、データへの変更が基になるデータソースにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b5508-341">If the objects do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes to the data are copied to the underlying data source immediately after each change.</span></span>  
  
 <span data-ttu-id="b5508-342">このメソッドは、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-342">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.Windows.Forms.BindingSource.Filter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.Filter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-343">表示する行のフィルター処理に使用する式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-343">Gets or sets the expression used to filter which rows are viewed.</span></span></summary>
        <value><span data-ttu-id="b5508-344">行のフィルター処理方法を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="b5508-344">A string that specifies how rows are to be filtered.</span></span> <span data-ttu-id="b5508-345">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b5508-345">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-346">通常、複雑なデータバインディングのシナリオで使用されますが、<xref:System.Windows.Forms.BindingSource.Filter%2A> プロパティを使用すると、<xref:System.Windows.Forms.BindingSource.DataSource%2A>のサブセットを表示できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-346">Typically used in complex data-binding scenarios, the <xref:System.Windows.Forms.BindingSource.Filter%2A> property allows you to view a subset of the <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="b5508-347"><xref:System.ComponentModel.IBindingListView> インターフェイスを実装する基になるリストだけがフィルター処理をサポートします。</span><span class="sxs-lookup"><span data-stu-id="b5508-347">Only underlying lists that implement the <xref:System.ComponentModel.IBindingListView> interface support filtering.</span></span>  
  
 <span data-ttu-id="b5508-348"><xref:System.Windows.Forms.BindingSource.Filter%2A> が `null`されていない場合、<xref:System.Windows.Forms.BindingSource> は、基になるリストにこのプロパティを渡します。</span><span class="sxs-lookup"><span data-stu-id="b5508-348">When <xref:System.Windows.Forms.BindingSource.Filter%2A> is not `null`, the <xref:System.Windows.Forms.BindingSource> passes this property to the underlying list.</span></span> <span data-ttu-id="b5508-349">オブジェクトの初期化中にこのプロパティを設定した場合、呼び出しは初期化が完了するまで遅延されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-349">If you set this property during object initialization, the call will be deferred until after initialization is complete.</span></span>  
  
 <span data-ttu-id="b5508-350">フィルター値を作成するには、列の名前、演算子、およびフィルター処理する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-350">To form a filter value, specify the name of a column followed by an operator and a value to filter on.</span></span> <span data-ttu-id="b5508-351">許容されるフィルター構文は、基になるデータソースによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b5508-351">The accepted filter syntax depends on the underlying data source.</span></span> <span data-ttu-id="b5508-352">基になるデータソースが <xref:System.Data.DataSet>、<xref:System.Data.DataTable>、または <xref:System.Data.DataView>の場合は、<xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> プロパティについて説明されている構文を使用してブール式を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-352">If the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, you can specify Boolean expressions using the syntax documented for the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b5508-353"><xref:System.Windows.Forms.BindingSource.Filter%2A> プロパティの値は、<xref:System.Windows.Forms.BindingSource.Count%2A> プロパティの値に影響します。</span><span class="sxs-lookup"><span data-stu-id="b5508-353">The value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property affects the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span> <span data-ttu-id="b5508-354">また、<xref:System.Windows.Forms.BindingSource.Filter%2A> 値は、データソースが変更されたときも保持されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-354">Additionally, the <xref:System.Windows.Forms.BindingSource.Filter%2A> value will persist when the data source changes.</span></span> <span data-ttu-id="b5508-355"><xref:System.Windows.Forms.BindingSource.DataSource%2A>のフィルター処理を停止するには、<xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-355">To stop filtering the <xref:System.Windows.Forms.BindingSource.DataSource%2A>, call the <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-356">次の例では、<xref:System.Windows.Forms.BindingSource.Filter%2A> プロパティを <xref:System.Data.DataView>と共に使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-356">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Filter%2A> property with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="b5508-357">この例を実行するには、Windows フォームにコードを貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベント処理メソッドから `PopulateDataViewAndFilter` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-357">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFilter` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="b5508-358">フォームでは、<xref:System.Xml> と <xref:System.IO> 名前空間をインポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-358">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveFilter" />
        <altmember cref="P:System.ComponentModel.IBindingList.IsSorted" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5508-359">データ ソースから指定された項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="b5508-359">Find the specified item in the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public virtual int Find (System.ComponentModel.PropertyDescriptor prop, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Find(class System.ComponentModel.PropertyDescriptor prop, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find (prop As PropertyDescriptor, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Find(System::ComponentModel::PropertyDescriptor ^ prop, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int&#xA;override this.Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int" Usage="bindingSource.Find (prop, key)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="b5508-360">検索対象の <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-360">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span></span></param>
        <param name="key"><span data-ttu-id="b5508-361">検索条件として使用する <paramref name="prop" /> の値。</span><span class="sxs-lookup"><span data-stu-id="b5508-361">The value of <paramref name="prop" /> to match.</span></span></param>
        <summary><span data-ttu-id="b5508-362">指定したプロパティ記述子を持つ項目のインデックスを検索します。</span><span class="sxs-lookup"><span data-stu-id="b5508-362">Searches for the index of the item that has the given property descriptor.</span></span></summary>
        <returns><span data-ttu-id="b5508-363"><see cref="T:System.ComponentModel.PropertyDescriptor" /> の指定した値を持つ項目の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5508-363">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-364">このメソッドは、通常、`prop` パラメーターで指定されたフィールドの値が `key` パラメーターの値と等しい最初の行を検索するために、複雑なデータバインディングケースで使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-364">This method is typically used in complex data-binding cases to locate the first row where the value of the field specified by the `prop` parameter equals the value of the `key` parameter</span></span>  
  
 <span data-ttu-id="b5508-365">このメソッドは、要求を基になるリストの <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> メソッドに単に参照します。</span><span class="sxs-lookup"><span data-stu-id="b5508-365">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b5508-366">たとえば、基になるデータソースが <xref:System.Data.DataSet>、<xref:System.Data.DataTable>、または <xref:System.Data.DataView>の場合、このメソッドは <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-366">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b5508-367">一致する項目が見つからない場合に返される値などの <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>の動作は、基になるリストのメソッドの実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b5508-367">The behavior of <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-368">次のコード例は、<xref:System.Windows.Forms.BindingSource.Find%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-368">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method.</span></span> <span data-ttu-id="b5508-369">完全な例については、クラスの概要に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-369">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-370">基底のリストが <see cref="T:System.ComponentModel.IBindingList" /> 型ではありません。</span><span class="sxs-lookup"><span data-stu-id="b5508-370">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string propertyName, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string propertyName, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (propertyName As String, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ propertyName, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.Find : string * obj -&gt; int" Usage="bindingSource.Find (propertyName, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="b5508-371">検索するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="b5508-371">The name of the property to search for.</span></span></param>
        <param name="key"><span data-ttu-id="b5508-372">検索の対象となる指定した <paramref name="propertyName" /> を持つ項目の値。</span><span class="sxs-lookup"><span data-stu-id="b5508-372">The value of the item with the specified <paramref name="propertyName" /> to find.</span></span></param>
        <summary><span data-ttu-id="b5508-373">指定した名前のプロパティと値を持つリスト内の項目のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-373">Returns the index of the item in the list with the specified property name and value.</span></span></summary>
        <returns><span data-ttu-id="b5508-374">指定した名前のプロパティと値を持つ項目の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5508-374">The zero-based index of the item with the specified property name and value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-375"><xref:System.Windows.Forms.BindingSource.Find%2A> メソッドは、基になるリストが検索が実装された <xref:System.ComponentModel.IBindingList> の場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-375">The <xref:System.Windows.Forms.BindingSource.Find%2A> method can only be used when the underlying list is an <xref:System.ComponentModel.IBindingList> with searching implemented.</span></span> <span data-ttu-id="b5508-376">このメソッドは、要求を基になるリストの <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> メソッドに単に参照します。</span><span class="sxs-lookup"><span data-stu-id="b5508-376">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b5508-377">たとえば、基になるデータソースが <xref:System.Data.DataSet>、<xref:System.Data.DataTable>、または <xref:System.Data.DataView>の場合、このメソッドは `propertyName` を <xref:System.ComponentModel.PropertyDescriptor> に変換し、<xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-377">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method converts `propertyName` to a <xref:System.ComponentModel.PropertyDescriptor> and calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> method.</span></span> <span data-ttu-id="b5508-378">一致する項目が見つからない場合に返される値などの <xref:System.Windows.Forms.BindingSource.Find%2A>の動作は、基になるリストのメソッドの実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b5508-378">The behavior of <xref:System.Windows.Forms.BindingSource.Find%2A>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
 <span data-ttu-id="b5508-379">プロパティ名の比較では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="b5508-379">The property name comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-380">次の例は、<xref:System.Data.DataView>で <xref:System.Windows.Forms.BindingSource.Find%2A> メソッドを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-380">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="b5508-381">この例を実行するには、Windows フォームにコードを貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベント処理メソッドから `PopulateDataViewAndFind` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-381">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFind` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="b5508-382">フォームでは、<xref:System.Xml> と <xref:System.IO> 名前空間をインポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-382">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b5508-383">基底のリストが、検索機能を実装した <see cref="T:System.ComponentModel.IBindingList" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b5508-383">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b5508-384"><paramref name="propertyName" /> がリスト内のプロパティと一致しません。</span><span class="sxs-lookup"><span data-stu-id="b5508-384"><paramref name="propertyName" /> does not match a property in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="bindingSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-385"><see cref="P:System.Windows.Forms.BindingSource.List" /> の列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-385">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span></span></summary>
        <returns><span data-ttu-id="b5508-386"><see cref="T:System.Collections.IEnumerator" /> の <see cref="P:System.Windows.Forms.BindingSource.List" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-386">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="b5508-387">リストから検索するバインド可能な <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b5508-387">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span></span></param>
        <summary><span data-ttu-id="b5508-388">データ ソースのリスト型について、バインド可能なプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-388">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span></span></summary>
        <returns><span data-ttu-id="b5508-389">データのバインドに使用するこのリスト型のプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b5508-389">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public virtual string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="bindingSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="b5508-390">リストから検索するバインド可能な <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b5508-390">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span></span></param>
        <summary><span data-ttu-id="b5508-391">バインディングのためのデータを提供するリストの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-391">Gets the name of the list supplying data for the binding.</span></span></summary>
        <returns><span data-ttu-id="b5508-392">バインディングのためのデータを提供するリストの名前。</span><span class="sxs-lookup"><span data-stu-id="b5508-392">The name of the list supplying the data for binding.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager (string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager(string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedCurrencyManager (dataMember As String) As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::CurrencyManager ^ GetRelatedCurrencyManager(System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="abstract member GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager&#xA;override this.GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager" Usage="bindingSource.GetRelatedCurrencyManager dataMember" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.ICurrencyManagerProvider.GetRelatedCurrencyManager(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataMember"><span data-ttu-id="b5508-393">CurrencyManager を取得するデータ ソース内の列またはリストの名前。</span><span class="sxs-lookup"><span data-stu-id="b5508-393">The name of column or list, within the data source to retrieve the currency manager for.</span></span></param>
        <summary><span data-ttu-id="b5508-394">指定されたデータ メンバーに関連付けられた CurrencyManager を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-394">Gets the related currency manager for the specified data member.</span></span></summary>
        <returns><span data-ttu-id="b5508-395">指定されたデータ メンバーに関連付けられた <see cref="T:System.Windows.Forms.CurrencyManager" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-395">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-396">`dataMember` が `null` または空の文字列 ("") の場合、<xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> はメインの通貨マネージャーを返します。それ以外の場合は、指定されたデータメンバーにバインドされた別の <xref:System.Windows.Forms.BindingSource> を確認し、その通貨マネージャーを返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-396">If `dataMember` is `null` or an empty string (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> returns the main currency manager; otherwise, it checks for another <xref:System.Windows.Forms.BindingSource> bound to the specified data member and returns its currency manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="bindingSource.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b5508-397"><see cref="T:System.Object" /> プロパティで表される基底のリストで検索する <see cref="P:System.Windows.Forms.BindingSource.List" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-397">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span> <span data-ttu-id="b5508-398">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-398">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b5508-399">指定したオブジェクトを検索し、リスト全体でそのオブジェクトが最初に見つかった位置のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-399">Searches for the specified object and returns the index of the first occurrence within the entire list.</span></span></summary>
        <returns><span data-ttu-id="b5508-400">最初に見つかった <paramref name="value" /> パラメーターの 0 から始まるインデックス。<paramref name="value" /> がリストにない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b5508-400">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-401">実装は、基になるリストの `IndexOf` メソッドに依存しますが、通常は次の特性が適用されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-401">Although the implementation is dependent on the underlying list's `IndexOf` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="b5508-402"><xref:System.Windows.Forms.BindingSource.List%2A> は、最初の要素から最後の要素までの範囲で検索されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-402">The <xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="b5508-403">基になるメソッドは、線形検索を実行します。したがって、平均実行時間は、<xref:System.Windows.Forms.BindingSource.Count%2A> プロパティの値に比例します。</span><span class="sxs-lookup"><span data-stu-id="b5508-403">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="b5508-404">基になるメソッドは、<xref:System.Object.Equals%2A> メソッドを呼び出すことにより、等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b5508-404">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="bindingSource.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b5508-405"><paramref name="value" /> の挿入先である、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b5508-405">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="b5508-406">挿入する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-406">The <see cref="T:System.Object" /> to insert.</span></span> <span data-ttu-id="b5508-407">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-407">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b5508-408">リスト内の指定したインデックスに項目を挿入します。</span><span class="sxs-lookup"><span data-stu-id="b5508-408">Inserts an item into the list at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-409">このメソッドは、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-409">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b5508-410"><paramref name="index" /> が 0 未満であるか、<see cref="P:System.Windows.Forms.BindingSource.Count" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b5508-410"><paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-411">リストが読み取り専用か、または固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="b5508-411">The list is read-only or has a fixed size.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-412">リストのバインディングが中断されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-412">Gets a value indicating whether the list binding is suspended.</span></span></summary>
        <value><span data-ttu-id="b5508-413">バインディングが中断されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-413"><see langword="true" /> to indicate the binding is suspended; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-414">基になるリストが固定サイズかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-414">Gets a value indicating whether the underlying list has a fixed size.</span></span></summary>
        <value><span data-ttu-id="b5508-415">基になるリストが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-415"><see langword="true" /> if the underlying list has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-416">リストが固定サイズの場合は、リストの作成後に要素を追加または削除することはできませんが、既存の要素を変更することはできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-416">If the list has a fixed size, it does not allow the addition or removal of elements after the list has been created, but you can modify existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-417">基になるリストが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-417">Gets a value indicating whether the underlying list is read-only.</span></span></summary>
        <value><span data-ttu-id="b5508-418">リストが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-418"><see langword="true" /> if the list is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-419">読み取り専用のリストでは、リストの作成後にリスト項目を追加、削除、または変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b5508-419">A list that is read-only does not allow the addition, removal, or modification of any list items after the list is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSorted">
      <MemberSignature Language="C#" Value="public virtual bool IsSorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSorted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSorted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSorted : bool" Usage="System.Windows.Forms.BindingSource.IsSorted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.IsSorted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-420">基底のリストの項目が並べ替え済みかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-420">Gets a value indicating whether the items in the underlying list are sorted.</span></span></summary>
        <value><span data-ttu-id="b5508-421">リストが <see langword="true" /> で、並べ替えが済んでいる場合は <see cref="T:System.ComponentModel.IBindingList" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-421"><see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingList" /> and is sorted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-422">リストが <xref:System.ComponentModel.IBindingList>でない場合、<xref:System.Windows.Forms.BindingSource.IsSorted%2A> は常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-422"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> always returns `false` if the list is not an <xref:System.ComponentModel.IBindingList>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-423">コレクションへのアクセスが同期されるかどうか (スレッドセーフかどうか) を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-423">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="b5508-424">リストが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-424"><see langword="true" /> to indicate the list is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.BindingSource.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b5508-425">取得する要素の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5508-425">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="b5508-426">指定したインデックスにあるリスト要素を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-426">Gets or sets the list element at the specified index.</span></span></summary>
        <value><span data-ttu-id="b5508-427">指定されたインデックス位置の要素です。</span><span class="sxs-lookup"><span data-stu-id="b5508-427">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-428"><xref:System.Windows.Forms.BindingSource.Item%2A> プロパティは、このクラスのインデクサーを表します。</span><span class="sxs-lookup"><span data-stu-id="b5508-428">The <xref:System.Windows.Forms.BindingSource.Item%2A> property represents the indexer for this class.</span></span> <span data-ttu-id="b5508-429">有効な値として `null` を受け取り、リスト内で重複する項目を許可します。</span><span class="sxs-lookup"><span data-stu-id="b5508-429">It accepts `null` as a valid value and allows duplicate items within the list.</span></span>  
  
 <span data-ttu-id="b5508-430">値を設定すると、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-430">Setting a value will raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b5508-431"><paramref name="index" /> が 0 未満か <see cref="P:System.Windows.Forms.BindingSource.Count" /> 以上です。</span><span class="sxs-lookup"><span data-stu-id="b5508-431"><paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Windows.Forms.BindingSource.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-432">コネクタのバインド先であるリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-432">Gets the list that the connector is bound to.</span></span></summary>
        <value><span data-ttu-id="b5508-433">リストを表す <see cref="T:System.Collections.IList" />。この <see langword="null" /> に関連付けられている基底のリストがない場合は <see cref="T:System.Windows.Forms.BindingSource" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-433">An <see cref="T:System.Collections.IList" /> that represents the list, or <see langword="null" /> if there is no underlying list associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-434"><xref:System.Windows.Forms.BindingSource> クラスは、異なるデータソースを一様に処理します。</span><span class="sxs-lookup"><span data-stu-id="b5508-434">The <xref:System.Windows.Forms.BindingSource> class uniformly handles different data sources.</span></span> <span data-ttu-id="b5508-435"><xref:System.Windows.Forms.BindingSource.List%2A> プロパティを一般 <xref:System.Collections.IList>に設定するのが理想的です。</span><span class="sxs-lookup"><span data-stu-id="b5508-435">Ideally the <xref:System.Windows.Forms.BindingSource.List%2A> property should be set to a general <xref:System.Collections.IList>.</span></span> <span data-ttu-id="b5508-436">ただし、このプロパティをより具体的な型にキャストすることが必要になる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="b5508-436">However, sometimes it may be necessary to cast this property to a more specific type.</span></span> <span data-ttu-id="b5508-437">次の表は、基になるリストの種類を示しています。これは、データソースの種類または値によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b5508-437">The following table shows the underlying list type, which depends on the type or value of the data source.</span></span>  
  
|<span data-ttu-id="b5508-438">[データ ソースの種類]</span><span class="sxs-lookup"><span data-stu-id="b5508-438">Data source type</span></span>|<span data-ttu-id="b5508-439">基になるリストの説明</span><span class="sxs-lookup"><span data-stu-id="b5508-439">Underlying list description</span></span>|  
|----------------------|---------------------------------|  
|<span data-ttu-id="b5508-440"><xref:System.Windows.Forms.BindingSource.DataSource%2A> と <xref:System.Windows.Forms.BindingSource.DataMember%2A> は `null`</span><span class="sxs-lookup"><span data-stu-id="b5508-440"><xref:System.Windows.Forms.BindingSource.DataSource%2A> and <xref:System.Windows.Forms.BindingSource.DataMember%2A> are `null`</span></span>|<span data-ttu-id="b5508-441">空の <xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="b5508-441">An empty <xref:System.Collections.ArrayList>.</span></span>|  
|<span data-ttu-id="b5508-442"><xref:System.Windows.Forms.BindingSource.DataSource%2A> は `null`ですが、<xref:System.Windows.Forms.BindingSource.DataMember%2A> は `null`</span><span class="sxs-lookup"><span data-stu-id="b5508-442"><xref:System.Windows.Forms.BindingSource.DataSource%2A> is `null`, but <xref:System.Windows.Forms.BindingSource.DataMember%2A> is not `null`</span></span>|<span data-ttu-id="b5508-443">存在<xref:System.Windows.Forms.BindingSource.List%2A> を取得しようとすると、<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5508-443">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="b5508-444"><xref:System.Array> インスタンス</span><span class="sxs-lookup"><span data-stu-id="b5508-444">An <xref:System.Array> instance</span></span>|<span data-ttu-id="b5508-445"><xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="b5508-445">An <xref:System.Array>.</span></span>|  
|<span data-ttu-id="b5508-446"><xref:System.ComponentModel.IListSource> インスタンス</span><span class="sxs-lookup"><span data-stu-id="b5508-446">An <xref:System.ComponentModel.IListSource> instance</span></span>|<span data-ttu-id="b5508-447">この <xref:System.ComponentModel.IListSource> インスタンスの <xref:System.ComponentModel.IListSource.GetList%2A> メソッドの呼び出しからの戻り値。</span><span class="sxs-lookup"><span data-stu-id="b5508-447">The return value from a call to the <xref:System.ComponentModel.IListSource.GetList%2A> method of this <xref:System.ComponentModel.IListSource> instance.</span></span>|  
|<span data-ttu-id="b5508-448"><xref:System.ComponentModel.IBindingList> インスタンス</span><span class="sxs-lookup"><span data-stu-id="b5508-448">An <xref:System.ComponentModel.IBindingList> instance</span></span>|<span data-ttu-id="b5508-449"><xref:System.ComponentModel.IBindingList>。</span><span class="sxs-lookup"><span data-stu-id="b5508-449">An <xref:System.ComponentModel.IBindingList>.</span></span>|  
|<span data-ttu-id="b5508-450"><xref:System.Collections.IList> インスタンス</span><span class="sxs-lookup"><span data-stu-id="b5508-450">An <xref:System.Collections.IList> instance</span></span>|<span data-ttu-id="b5508-451"><xref:System.Collections.IList>。</span><span class="sxs-lookup"><span data-stu-id="b5508-451">An <xref:System.Collections.IList>.</span></span>|  
|<span data-ttu-id="b5508-452">型 "T" の非<xref:System.Collections.IList> インスタンス</span><span class="sxs-lookup"><span data-stu-id="b5508-452">A non-<xref:System.Collections.IList> instance of type "T"</span></span>|<span data-ttu-id="b5508-453">1つの要素を持つ <xref:System.ComponentModel.BindingList%601>。</span><span class="sxs-lookup"><span data-stu-id="b5508-453">A <xref:System.ComponentModel.BindingList%601> with one element.</span></span>|  
|<span data-ttu-id="b5508-454"><xref:System.ComponentModel.ICustomTypeDescriptor> インスタンス</span><span class="sxs-lookup"><span data-stu-id="b5508-454">An <xref:System.ComponentModel.ICustomTypeDescriptor> instance</span></span>|<span data-ttu-id="b5508-455">1つの要素を持つ <xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="b5508-455">An <xref:System.Collections.ArrayList> with one element.</span></span>|  
|<span data-ttu-id="b5508-456"><xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="b5508-456">An <xref:System.Collections.IEnumerable></span></span>|<span data-ttu-id="b5508-457">要素がコピーされた <xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="b5508-457">An <xref:System.Collections.ArrayList> with the elements copied over.</span></span>|  
|<span data-ttu-id="b5508-458">項目の種類が "T" の <xref:System.Windows.Forms.BindingSource.DataMember%2A> を含む <xref:System.Array> 型</span><span class="sxs-lookup"><span data-stu-id="b5508-458">The <xref:System.Array> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span>|<span data-ttu-id="b5508-459"><xref:System.ComponentModel.BindingList%601> です。</span><span class="sxs-lookup"><span data-stu-id="b5508-459">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="b5508-460"><xref:System.ComponentModel.IListSource> を表す <xref:System.Type> <xref:System.ComponentModel.ITypedList></span><span class="sxs-lookup"><span data-stu-id="b5508-460">A <xref:System.Type> that represents an <xref:System.ComponentModel.IListSource> or <xref:System.ComponentModel.ITypedList></span></span>|<span data-ttu-id="b5508-461"><xref:System.Activator> クラスの <xref:System.Activator.CreateInstance%28System.Type%29> メソッドの呼び出しによって作成されたインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b5508-461">An instance created by a call to the <xref:System.Activator.CreateInstance%28System.Type%29> method of the <xref:System.Activator> class.</span></span> <span data-ttu-id="b5508-462"><xref:System.NotSupportedException> がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-462">A <xref:System.NotSupportedException> may be thrown.</span></span>|  
|<span data-ttu-id="b5508-463">項目の種類が "T" の <xref:System.Windows.Forms.BindingSource.DataMember%2A> を含む <xref:System.Collections.IList> 型</span><span class="sxs-lookup"><span data-stu-id="b5508-463">The <xref:System.Collections.IList> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span><br /><br /> <span data-ttu-id="b5508-464">または</span><span class="sxs-lookup"><span data-stu-id="b5508-464">-or-</span></span><br /><br /> <span data-ttu-id="b5508-465">非<xref:System.Collections.IList> 型</span><span class="sxs-lookup"><span data-stu-id="b5508-465">A non-<xref:System.Collections.IList> type</span></span>|<span data-ttu-id="b5508-466"><xref:System.ComponentModel.BindingList%601> です。</span><span class="sxs-lookup"><span data-stu-id="b5508-466">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="b5508-467"><xref:System.ComponentModel.ICustomTypeDescriptor> の種類</span><span class="sxs-lookup"><span data-stu-id="b5508-467">The <xref:System.ComponentModel.ICustomTypeDescriptor> type</span></span>|<span data-ttu-id="b5508-468">存在<xref:System.Windows.Forms.BindingSource.List%2A> を取得しようとすると、<xref:System.NotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5508-468">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.NotSupportedException>.</span></span>|  
  
 <span data-ttu-id="b5508-469">取得された型が <xref:System.Collections.IList> インターフェイスである場合、<xref:System.Collections.ArrayList> や <xref:System.Data.DataView> クラスなど、基になるコレクションがより複雑になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-469">If the type retrieved is the <xref:System.Collections.IList> interface, the underlying collection may be more complex, such as an <xref:System.Collections.ArrayList> or <xref:System.Data.DataView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-470">次のコード例は、<xref:System.Windows.Forms.BindingSource.List%2A>、<xref:System.Windows.Forms.BindingSource.RemoveAt%2A>、および <xref:System.Windows.Forms.BindingSource.Count%2A> メンバーを示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-470">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="b5508-471">この例を実行するには、`BindingSource1`という名前の <xref:System.Windows.Forms.BindingSource>、`label1` と `label2`という名前の2つのラベル、および `button1`という名前のボタンを含むフォームにコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-471">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="b5508-472">`button1_Click` メソッドを `button1`の <xref:System.Windows.Forms.Control.Click> イベントに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-472">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="b5508-473">Visual Basic ユーザーは、System. .dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-473">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.IBindingList.ListChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-474">基底のリストまたはリスト内の項目が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-474">Occurs when the underlying list changes or an item in the list changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-475"><xref:System.Windows.Forms.BindingSource.ListChanged> イベントは、<xref:System.Windows.Forms.BindingSource.List%2A> プロパティによって表される基になるリストのメンバーシップまたはメタデータが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-475">The <xref:System.Windows.Forms.BindingSource.ListChanged> event occurs when there is a change to the membership or metadata of the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="b5508-476">たとえば、このイベントは、項目が追加、削除、または移動された場合、または <xref:System.Windows.Forms.BindingSource.DataSource%2A> または <xref:System.Windows.Forms.BindingSource.DataMember%2A> のプロパティが変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-476">For example, this event is raised when items are added, removed, or moved, or the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span> <span data-ttu-id="b5508-477">このイベントが発生すると、<xref:System.Windows.Forms.BindingSource.Sort%2A> プロパティと <xref:System.Windows.Forms.BindingSource.Filter%2A> プロパティの値が保持されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-477">The values of the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties will persist when this event occurs.</span></span>  
  
 <span data-ttu-id="b5508-478">このイベントは、<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> プロパティを `false`に設定することによって完全に抑制できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-478">This event can be completely suppressed by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span> <span data-ttu-id="b5508-479">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-479">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-480">次のコード例は、<xref:System.Windows.Forms.BindingSource> コンポーネントの基になるリストが変更されたことを検出するために、<xref:System.Windows.Forms.BindingSource> コンポーネントの <xref:System.Windows.Forms.BindingSource.ListChanged> イベントを処理する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-480">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.ListChanged> event of the <xref:System.Windows.Forms.BindingSource> component to detect when the <xref:System.Windows.Forms.BindingSource> component's underlying list is changed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirst">
      <MemberSignature Language="C#" Value="public void MoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFirst();" />
      <MemberSignature Language="F#" Value="member this.MoveFirst : unit -&gt; unit" Usage="bindingSource.MoveFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-481">リストの最初の項目に移動します。</span><span class="sxs-lookup"><span data-stu-id="b5508-481">Moves to the first item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-482"><xref:System.Windows.Forms.BindingSource.Position%2A> プロパティの現在の値を、基になるデータソースの最初の項目である0に変更します。</span><span class="sxs-lookup"><span data-stu-id="b5508-482">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to 0, the first item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-483">次のコード例は、<xref:System.Windows.Forms.BindingSource.MoveNext%2A>、<xref:System.Windows.Forms.BindingSource.MoveFirst%2A>、<xref:System.Windows.Forms.BindingSource.Current%2A>、および <xref:System.Windows.Forms.BindingSource.Position%2A> の各メンバーを示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-483">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="b5508-484">この例を実行するには、<xref:System.Drawing.Drawing2D> 名前空間をインポートするフォームにコードを貼り付け、`BindingSource1` という名前の <xref:System.Windows.Forms.BindingSource> と `button1`という名前のボタンを格納します。</span><span class="sxs-lookup"><span data-stu-id="b5508-484">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="b5508-485">`Form1_Load` メソッドと `Form1_Paint` メソッドをフォームの <xref:System.Windows.Forms.Form.Load> および <xref:System.Windows.Forms.Control.Paint> イベントに関連付け、`button1_click` メソッドを <xref:System.Windows.Forms.Control.Click> の `button1`イベントに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-485">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="b5508-486">Visual Basic ユーザーは、System. .dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-486">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
      </Docs>
    </Member>
    <Member MemberName="MoveLast">
      <MemberSignature Language="C#" Value="public void MoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveLast();" />
      <MemberSignature Language="F#" Value="member this.MoveLast : unit -&gt; unit" Usage="bindingSource.MoveLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-487">リストの最後の項目に移動します。</span><span class="sxs-lookup"><span data-stu-id="b5508-487">Moves to the last item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-488"><xref:System.Windows.Forms.BindingSource.Position%2A> プロパティの現在の値を、基になるデータソースの最後の項目のインデックスに変更します。これは、<xref:System.Windows.Forms.BindingSource.Count%2A> プロパティから1を引いた値と同じです。</span><span class="sxs-lookup"><span data-stu-id="b5508-488">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the index of the last item in the underlying data source, which is equal to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property minus 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public void MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; unit" Usage="bindingSource.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-489">リストの次の項目に移動します。</span><span class="sxs-lookup"><span data-stu-id="b5508-489">Moves to the next item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-490"><xref:System.Windows.Forms.BindingSource.Position%2A> プロパティの現在の値を、基になるデータソースの次の項目に変更します。</span><span class="sxs-lookup"><span data-stu-id="b5508-490">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the next item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-491">次のコード例は、<xref:System.Windows.Forms.BindingSource.MoveNext%2A>、<xref:System.Windows.Forms.BindingSource.MoveFirst%2A>、<xref:System.Windows.Forms.BindingSource.Current%2A>、および <xref:System.Windows.Forms.BindingSource.Position%2A> の各メンバーを示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-491">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="b5508-492">この例を実行するには、<xref:System.Drawing.Drawing2D> 名前空間をインポートするフォームにコードを貼り付け、`BindingSource1` という名前の <xref:System.Windows.Forms.BindingSource> と `button1`という名前のボタンを格納します。</span><span class="sxs-lookup"><span data-stu-id="b5508-492">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="b5508-493">`Form1_Load` メソッドと `Form1_Paint` メソッドをフォームの <xref:System.Windows.Forms.Form.Load> および <xref:System.Windows.Forms.Control.Paint> イベントに関連付け、`button1_click` メソッドを <xref:System.Windows.Forms.Control.Click> の `button1`イベントに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-493">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="b5508-494">Visual Basic ユーザーは、System. .dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-494">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public void MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Sub MovePrevious ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MovePrevious();" />
      <MemberSignature Language="F#" Value="member this.MovePrevious : unit -&gt; unit" Usage="bindingSource.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-495">リストの前の項目に移動します。</span><span class="sxs-lookup"><span data-stu-id="b5508-495">Moves to the previous item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-496">このメソッドは、<xref:System.Windows.Forms.BindingSource.Position%2A> プロパティの現在の値を、基になるデータソースの前の項目に変更します。</span><span class="sxs-lookup"><span data-stu-id="b5508-496">This method changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the previous item in the underlying data source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="OnAddingNew">
      <MemberSignature Language="C#" Value="protected virtual void OnAddingNew (System.ComponentModel.AddingNewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAddingNew(class System.ComponentModel.AddingNewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAddingNew (e As AddingNewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAddingNew(System::ComponentModel::AddingNewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit&#xA;override this.OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit" Usage="bindingSource.OnAddingNew e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5508-497">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-497">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5508-498"><see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-498">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-499">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-499">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5508-500">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-500">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-501"><xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-501">The <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-502">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-502">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-503">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-503">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingSource.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5508-504">イベント データを含んでいる <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5508-504">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5508-505"><see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-505">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-506">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-506">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5508-507">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-507">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-508"><xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-508">The <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-509">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-509">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-510">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-510">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5508-511">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-511">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5508-512"><see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-512">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-513">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-513">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-514">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-514">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5508-515">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-515">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-516"><xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-516">The <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-517">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-517">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-518">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-518">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5508-519">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-519">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5508-520"><see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-520">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-521">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-521">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5508-522">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-522">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-523"><xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-523">The <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-524">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-524">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-525">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-525">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (System.Windows.Forms.BindingManagerDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(class System.Windows.Forms.BindingManagerDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (e As BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(System::Windows::Forms::BindingManagerDataErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit&#xA;override this.OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit" Usage="bindingSource.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingManagerDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5508-526">イベント データを含んでいる <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5508-526">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5508-527"><see cref="E:System.Windows.Forms.BindingSource.DataError" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-527">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-528">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-528">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5508-529">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-529">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-530"><xref:System.Windows.Forms.BindingSource.OnDataError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-530">The <xref:System.Windows.Forms.BindingSource.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-531">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-531">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-532">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-532">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDataMemberChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5508-533">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-533">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5508-534"><see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-534">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-535">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-535">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5508-536">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-536">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-537"><xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-537">The <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-538">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-538">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-539">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-539">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span>  
  
<span data-ttu-id="b5508-540"><see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-540">The <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-541">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-541">This is the preferred technique for handling the event in a derived class.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5508-542">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-542">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5508-543"><see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-543">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-544">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-544">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5508-545">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-545">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-546"><xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-546">The <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-547">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-547">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-548">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-548">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.ComponentModel.ListChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ListChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::ComponentModel::ListChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit&#xA;override this.OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit" Usage="bindingSource.OnListChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5508-549">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-549">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5508-550"><see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-550">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-551">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-551">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5508-552">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-552">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-553"><xref:System.Windows.Forms.BindingSource.OnListChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-553">The <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-554">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-554">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-555">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-555">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPositionChanged : EventArgs -&gt; unit&#xA;override this.OnPositionChanged : EventArgs -&gt; unit" Usage="bindingSource.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b5508-556">イベント データを含んでいる <see cref="T:System.ComponentModel.ListChangedEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5508-556">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b5508-557"><see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-557">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-558">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-558">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b5508-559">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-559">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b5508-560"><xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-560">The <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b5508-561">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b5508-561">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b5508-562">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-562">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingSource.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-563">基底のリストにおける現在の項目のインデックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-563">Gets or sets the index of the current item in the underlying list.</span></span></summary>
        <value><span data-ttu-id="b5508-564">基底のリストにおける現在の項目の位置を指定する 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5508-564">A zero-based index that specifies the position of the current item in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-565"><xref:System.Windows.Forms.BindingSource.Position%2A> プロパティを設定すると、範囲外の値は次のように処理されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-565">When setting the <xref:System.Windows.Forms.BindingSource.Position%2A> property, out-of-range values are treated in the following manner:</span></span>  
  
-   <span data-ttu-id="b5508-566">負の値は 0 として扱われます。</span><span class="sxs-lookup"><span data-stu-id="b5508-566">Negative values are treated as 0.</span></span>  
  
-   <span data-ttu-id="b5508-567"><xref:System.Windows.Forms.BindingSource.Count%2A> 以上の値は、<xref:System.Windows.Forms.BindingSource.Count%2A> から1を引いた値として扱われます。</span><span class="sxs-lookup"><span data-stu-id="b5508-567">Values greater than or equal to <xref:System.Windows.Forms.BindingSource.Count%2A> are treated as <xref:System.Windows.Forms.BindingSource.Count%2A> minus 1.</span></span>  
  
 <span data-ttu-id="b5508-568"><xref:System.Windows.Forms.BindingSource.Position%2A> プロパティを変更すると、<xref:System.Windows.Forms.BindingSource.Current%2A> プロパティも同様に調整されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-568">Changing the <xref:System.Windows.Forms.BindingSource.Position%2A> property will adjust the <xref:System.Windows.Forms.BindingSource.Current%2A> property likewise.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-569">次のコード例は、<xref:System.Windows.Forms.BindingSource.MoveNext%2A>、<xref:System.Windows.Forms.BindingSource.MoveFirst%2A>、<xref:System.Windows.Forms.BindingSource.Current%2A>、および <xref:System.Windows.Forms.BindingSource.Position%2A> の各メンバーを示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-569">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="b5508-570">この例を実行するには、<xref:System.Drawing.Drawing2D> 名前空間をインポートするフォームにコードを貼り付け、`BindingSource1` という名前の <xref:System.Windows.Forms.BindingSource> と `button1`という名前のボタンを格納します。</span><span class="sxs-lookup"><span data-stu-id="b5508-570">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="b5508-571">`Form1_Load` メソッドと `Form1_Paint` メソッドをフォームの <xref:System.Windows.Forms.Form.Load> および <xref:System.Windows.Forms.Control.Paint> イベントに関連付け、`button1_click` メソッドを <xref:System.Windows.Forms.Control.Click> の `button1`イベントに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-571">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="b5508-572">Visual Basic ユーザーは、System. .dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-572">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-573"><see cref="P:System.Windows.Forms.BindingSource.Position" /> プロパティの値が変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-573">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-574"><xref:System.Windows.Forms.BindingSource.PositionChanged> イベントは、<xref:System.Windows.Forms.BindingSource.Position%2A> プロパティが変更された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-574">The <xref:System.Windows.Forms.BindingSource.PositionChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.Position%2A> property has changed.</span></span>  
  
 <span data-ttu-id="b5508-575">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-575">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseListChangedEvents">
      <MemberSignature Language="C#" Value="public bool RaiseListChangedEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RaiseListChangedEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property RaiseListChangedEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RaiseListChangedEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RaiseListChangedEvents : bool with get, set" Usage="System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-576"><see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> イベントを発生させるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-576">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span></span></summary>
        <value><span data-ttu-id="b5508-577"><see langword="true" /> イベントを発生させる場合は <see cref="E:System.Windows.Forms.BindingSource.ListChanged" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-577"><see langword="true" /> if <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b5508-578">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="b5508-578">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-579"><xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> プロパティが `false`場合、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントの発生を中断します。</span><span class="sxs-lookup"><span data-stu-id="b5508-579">When the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property is `false`, it suspends the raising of <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span> <span data-ttu-id="b5508-580">このイベントは、バインドされたリストが、アイテムの追加、削除、挿入、変更など、何らかの方法で変更されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-580">This event indicates that the bound list has been modified in some way, including adding, deleting, inserting, or modifying items.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="bindingSource.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b5508-581"><see cref="P:System.Windows.Forms.BindingSource.List" /> プロパティで表される基底のリストから削除する項目。</span><span class="sxs-lookup"><span data-stu-id="b5508-581">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span></param>
        <summary><span data-ttu-id="b5508-582">指定した項目をリストから削除します。</span><span class="sxs-lookup"><span data-stu-id="b5508-582">Removes the specified item from the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-583"><xref:System.Windows.Forms.BindingSource.Remove%2A> メソッドを使用すると、`value` パラメーターのリストが検索されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-583">The <xref:System.Windows.Forms.BindingSource.Remove%2A> method causes the list to be searched for the `value` parameter.</span></span> <span data-ttu-id="b5508-584">見つかった場合、このメソッドは <xref:System.Windows.Forms.BindingSource.List%2A>から項目を削除しようとします。</span><span class="sxs-lookup"><span data-stu-id="b5508-584">If found, this method will attempt to remove the item from the <xref:System.Windows.Forms.BindingSource.List%2A>.</span></span> <span data-ttu-id="b5508-585">リストが固定サイズの場合、または読み取り専用の場合、この試行は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b5508-585">This attempt will fail if the list has a fixed size or is read-only.</span></span> <span data-ttu-id="b5508-586">これらの2つの条件は、それぞれ <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> と <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> のプロパティを使用してテストできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-586">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="b5508-587">このメソッドは、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-587">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-588">基底のリストが固定サイズか、または読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b5508-588">The underlying list has a fixed size or is read-only.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="bindingSource.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b5508-589">削除する項目の、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b5508-589">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="b5508-590">リスト内の指定したインデックスにある項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="b5508-590">Removes the item at the specified index in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-591">これらの2つの条件は、それぞれ <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> と <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> のプロパティを使用してテストできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-591">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="b5508-592">このメソッドは、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b5508-592">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-593">次のコード例は、<xref:System.Windows.Forms.BindingSource.List%2A>、<xref:System.Windows.Forms.BindingSource.RemoveAt%2A>、および <xref:System.Windows.Forms.BindingSource.Count%2A> メンバーを示しています。</span><span class="sxs-lookup"><span data-stu-id="b5508-593">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="b5508-594">この例を実行するには、`BindingSource1`という名前の <xref:System.Windows.Forms.BindingSource>、`label1` と `label2`という名前の2つのラベル、および `button1`という名前のボタンを含むフォームにコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-594">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="b5508-595">`button1_Click` メソッドを `button1`の <xref:System.Windows.Forms.Control.Click> イベントに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b5508-595">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="b5508-596">Visual Basic ユーザーは、System. .dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-596">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b5508-597"><paramref name="index" /> が 0 未満か、または <see cref="P:System.Windows.Forms.BindingSource.Count" /> プロパティの値を上回っています。</span><span class="sxs-lookup"><span data-stu-id="b5508-597"><paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-598"><see cref="P:System.Windows.Forms.BindingSource.List" /> プロパティで表される基底のリストが、読み取り専用、または固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="b5508-598">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public void RemoveCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCurrent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCurrent();" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : unit -&gt; unit" Usage="bindingSource.RemoveCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-599">リストから現在の項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="b5508-599">Removes the current item from the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-600"><xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> メソッドは、<xref:System.Windows.Forms.BindingSource.RemoveAt%2A> メソッドに相当します。</span><span class="sxs-lookup"><span data-stu-id="b5508-600">The <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> method is equivalent to the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b5508-601"><see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5508-601">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span></span>  
  
<span data-ttu-id="b5508-602">または</span><span class="sxs-lookup"><span data-stu-id="b5508-602">-or-</span></span> 
 <span data-ttu-id="b5508-603"><see cref="P:System.Windows.Forms.BindingSource.Position" /> が 0 未満であるか、<see cref="P:System.Windows.Forms.BindingSource.Count" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b5508-603"><see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-604"><see cref="P:System.Windows.Forms.BindingSource.List" /> プロパティで表される基底のリストが、読み取り専用、または固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="b5508-604">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFilter">
      <MemberSignature Language="C#" Value="public virtual void RemoveFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveFilter();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFilter : unit -&gt; unit&#xA;override this.RemoveFilter : unit -&gt; unit" Usage="bindingSource.RemoveFilter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingListView.RemoveFilter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-605"><see cref="T:System.Windows.Forms.BindingSource" /> に関連付けられているフィルターを削除します。</span><span class="sxs-lookup"><span data-stu-id="b5508-605">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-606"><xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> メソッドは、基になるリストの <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> メソッドに対する要求を参照します。</span><span class="sxs-lookup"><span data-stu-id="b5508-606">The <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b5508-607">フィルター処理をサポート <xref:System.ComponentModel.IBindingListView> を実装するリストのみです。</span><span class="sxs-lookup"><span data-stu-id="b5508-607">Only lists that implement <xref:System.ComponentModel.IBindingListView> support filtering.</span></span>  
  
 <span data-ttu-id="b5508-608">既定では、このメソッドを呼び出すことは、<xref:System.Windows.Forms.BindingSource.Filter%2A> プロパティを `null`に設定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="b5508-608">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Filter%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-609">基底のリストがフィルター処理をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="b5508-609">The underlying list does not support filtering.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSort">
      <MemberSignature Language="C#" Value="public virtual void RemoveSort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveSort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSort();" />
      <MemberSignature Language="F#" Value="abstract member RemoveSort : unit -&gt; unit&#xA;override this.RemoveSort : unit -&gt; unit" Usage="bindingSource.RemoveSort " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.RemoveSort</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-610"><see cref="T:System.Windows.Forms.BindingSource" /> に関連付けられている並べ替えを削除します。</span><span class="sxs-lookup"><span data-stu-id="b5508-610">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-611"><xref:System.Windows.Forms.BindingSource.RemoveSort%2A> メソッドは、基になるリストの <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> メソッドに対する要求を参照します。</span><span class="sxs-lookup"><span data-stu-id="b5508-611">The <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b5508-612"><xref:System.ComponentModel.IBindingList> を実装するリストのみが並べ替えをサポートします。</span><span class="sxs-lookup"><span data-stu-id="b5508-612">Only lists that implement <xref:System.ComponentModel.IBindingList> support sorting.</span></span>  
  
 <span data-ttu-id="b5508-613">既定では、このメソッドを呼び出すことは、<xref:System.Windows.Forms.BindingSource.Sort%2A> プロパティを `null`に設定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="b5508-613">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-614">基底のリストが並べ替えをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="b5508-614">The underlying list does not support sorting.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
      </Docs>
    </Member>
    <Member MemberName="ResetAllowNew">
      <MemberSignature Language="C#" Value="public virtual void ResetAllowNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllowNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetAllowNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetAllowNew();" />
      <MemberSignature Language="F#" Value="abstract member ResetAllowNew : unit -&gt; unit&#xA;override this.ResetAllowNew : unit -&gt; unit" Usage="bindingSource.ResetAllowNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-615"><see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> プロパティを再初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5508-615">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-616"><xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> メソッドは、基になるリストの対応する <xref:System.Windows.Forms.BindingSource.AllowNew%2A> プロパティの値を反映するように <xref:System.Windows.Forms.BindingSource.AllowNew%2A> プロパティを再初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5508-616">The <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method reinitializes the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to reflect the value of the corresponding <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property in the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings (bool metadataChanged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings(bool metadataChanged) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings (metadataChanged As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings(bool metadataChanged);" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : bool -&gt; unit" Usage="bindingSource.ResetBindings metadataChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataChanged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataChanged"><span data-ttu-id="b5508-617">データ スキーマが変更された場合は <see langword="true" />。値のみが変更された場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-617"><see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span></span></param>
        <summary><span data-ttu-id="b5508-618"><see cref="T:System.Windows.Forms.BindingSource" /> にバインドされたコントロールに対し、リスト内のすべての項目を再度読み込んで表示値を更新するよう通知します。</span><span class="sxs-lookup"><span data-stu-id="b5508-618">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-619"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> メソッドは、<xref:System.Windows.Forms.BindingSource> にバインドされているすべてのコントロールに対して、値を更新するように通知します。</span><span class="sxs-lookup"><span data-stu-id="b5508-619">The <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method informs all controls bound to the <xref:System.Windows.Forms.BindingSource> to refresh their values.</span></span> <span data-ttu-id="b5508-620">このメソッドは、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントを少なくとも1回発生させてこれを実行します。`metaDataChanged` パラメーターは、基になる変更の性質を示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-620">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event at least once; the `metaDataChanged` parameter indicates the nature of the underlying change.</span></span>  
  
-   <span data-ttu-id="b5508-621">`true` の `metaDataChanged` 値は、<xref:System.Windows.Forms.BindingSource> のデータスキーマが変更されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-621">A `metaDataChanged` value of `true` indicates that the data schema of <xref:System.Windows.Forms.BindingSource> has changed.</span></span> <span data-ttu-id="b5508-622"><xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> が <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>に設定された状態で <xref:System.Windows.Forms.BindingSource.ListChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-622">A <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="b5508-623">`false` の `metaDataChanged` 値は、1つ以上の項目の値のみが変更されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-623">A `metaDataChanged` value of `false` indicates that only the values of one or more items have changed.</span></span>  
  
 <span data-ttu-id="b5508-624">`metaDataChanged`の値に関係なく、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントが発生し、<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> が <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-624">Regardless of the value of `metaDataChanged`, a <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b5508-625">その結果、`true` のパラメーターを指定して <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> を呼び出すと、2つの <xref:System.Windows.Forms.BindingSource.ListChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-625">As a consequence, calling <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> with a parameter of `true` will raise two <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span>  
  
 <span data-ttu-id="b5508-626"><xref:System.Windows.Forms.BindingSource.DataSource%2A> や <xref:System.Windows.Forms.BindingSource.DataMember%2A> プロパティの設定など、別のメンバーがデータバインディングに大きな変更を加えるたびに、<xref:System.Windows.Forms.BindingSource.ResetBindings%2A> が自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-626"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> is automatically called whenever another member makes major changes to the data-binding, such as setting the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties.</span></span> <span data-ttu-id="b5508-627">ただし、プログラマはこのメソッドを明示的に呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-627">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-628">次のコード例では、<xref:System.Windows.Forms.BindingSource> コンポーネントを使用して、変更通知を提供しない配列リストをバインドします。</span><span class="sxs-lookup"><span data-stu-id="b5508-628">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind an array list, which does not provide change notification.</span></span> <span data-ttu-id="b5508-629">項目がリストから削除され、バインドされたコントロールに <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> メソッドを呼び出すことによって変更が通知されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-629">An item is removed from the list, and the bound controls are notified of the change by calling the <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method.</span></span> <span data-ttu-id="b5508-630">このコード例は、 [「方法: BindingSource を使用して Windows フォームコントロールのデータソースの更新を反映する](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md)」で提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="b5508-630">This code example is part of a larger example provided in [How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResetCurrentItem">
      <MemberSignature Language="C#" Value="public void ResetCurrentItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCurrentItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetCurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCurrentItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCurrentItem();" />
      <MemberSignature Language="F#" Value="member this.ResetCurrentItem : unit -&gt; unit" Usage="bindingSource.ResetCurrentItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-631"><see cref="T:System.Windows.Forms.BindingSource" /> にバインドされたコントロールに対し、現在選択されている項目を再度読み込んで表示値を更新するよう通知します。</span><span class="sxs-lookup"><span data-stu-id="b5508-631">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-632">このメソッドを呼び出すと、<xref:System.Windows.Forms.BindingSource.ListChanged> イベントが発生し、現在の位置で変更された項目が指定されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-632">Calling this method will cause the <xref:System.Windows.Forms.BindingSource.ListChanged> event to occur, specifying the item changed at the current position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItem">
      <MemberSignature Language="C#" Value="public void ResetItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetItem (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetItem(int itemIndex);" />
      <MemberSignature Language="F#" Value="member this.ResetItem : int -&gt; unit" Usage="bindingSource.ResetItem itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="b5508-633">変更された項目の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5508-633">The zero-based index of the item that has changed.</span></span></param>
        <summary><span data-ttu-id="b5508-634"><see cref="T:System.Windows.Forms.BindingSource" /> にバインドされたコントロールに対し、指定したインデックスにある項目を再度読み込んで表示値を更新するよう通知します。</span><span class="sxs-lookup"><span data-stu-id="b5508-634">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-635"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> メソッドは、指定した <xref:System.Windows.Forms.BindingSource.Position%2A> の項目にバインドされているすべてのコントロールに対して、値を更新するように通知します。</span><span class="sxs-lookup"><span data-stu-id="b5508-635">The <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method notifies all controls bound to the item at the specified <xref:System.Windows.Forms.BindingSource.Position%2A> to refresh their values.</span></span> <span data-ttu-id="b5508-636">このメソッドは、<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> が <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>に設定された <xref:System.Windows.Forms.BindingSource.ListChanged> イベントを発生させてこれを行います。</span><span class="sxs-lookup"><span data-stu-id="b5508-636">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b5508-637">個々の項目の値に変更が加えられるたびに、<xref:System.Windows.Forms.BindingSource.ResetItem%2A> が自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-637"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> is automatically called whenever changes are made to the value of an individual item.</span></span> <span data-ttu-id="b5508-638">ただし、プログラマはこのメソッドを明示的に呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-638">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-639">次のコード例では、<xref:System.Windows.Forms.BindingSource> コンポーネントを使用して、リストを <xref:System.Windows.Forms.DataGridView> コントロールにバインドします。</span><span class="sxs-lookup"><span data-stu-id="b5508-639">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="b5508-640">リストは変更通知を発生させないため、<xref:System.Windows.Forms.BindingSource> の <xref:System.Windows.Forms.BindingSource.ResetItem%2A> メソッドを使用して <xref:System.Windows.Forms.BindingSource.ListChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-640">The list does not raise change notifications, so the <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method on the <xref:System.Windows.Forms.BindingSource> is used to raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span> <span data-ttu-id="b5508-641">このコード例は、 [「方法: BindingSource のリセットメソッドを使用して変更通知を発生させる](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)」で提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="b5508-641">This code example is part of a larger example provided in [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeBinding();" />
      <MemberSignature Language="F#" Value="member this.ResumeBinding : unit -&gt; unit" Usage="bindingSource.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-642">データ バインディングを再開します。</span><span class="sxs-lookup"><span data-stu-id="b5508-642">Resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-643"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> と <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> は、単純なバインドシナリオでのデータバインディングの一時的な中断と再開を可能にする2つの方法です。</span><span class="sxs-lookup"><span data-stu-id="b5508-643"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="b5508-644">通常、検証が行われる前に、ユーザーがデータフィールドに対して複数の編集を行うことができるようにする必要がある場合は、データバインディングを中断します。</span><span class="sxs-lookup"><span data-stu-id="b5508-644">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="b5508-645">たとえば、1つのフィールドを2番目のフィールドに従って変更する必要がある場合に、最初のフィールドを検証すると、2番目のフィールドのエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-645">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5508-646"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> を使用すると、<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> が呼び出されるまで、変更はデータソースにプッシュされませんが、実際にはイベントの発生を防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="b5508-646">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="b5508-647"><xref:System.Windows.Forms.DataGridView> コントロールなどの複合データバインディングを使用するコントロールは、<xref:System.Windows.Forms.CurrencyManager.ListChanged> イベントなどの変更イベントに基づいて値を更新するので、<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> を呼び出すと、データソースへの変更を受け取ることができなくなります。</span><span class="sxs-lookup"><span data-stu-id="b5508-647">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="b5508-648">このため、この <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> と <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> は、<xref:System.Windows.Forms.TextBox> コントロールなどの単純なバインドコントロールで使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b5508-648">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="b5508-649">または、<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> プロパティを `false`に設定して <xref:System.Windows.Forms.BindingSource.ListChanged> イベントを抑制する場合は、これらのメソッドを複雑なバインディングシナリオで使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-649">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public string Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Sort { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sort : string with get, set" Usage="System.Windows.Forms.BindingSource.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-650">並べ替えに使用する列名と、データ ソースで行を表示するときの並べ替え順序を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5508-650">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span></span></summary>
        <value><span data-ttu-id="b5508-651">列名の後に "ASC" (昇順) または "DESC" (降順) を付けた、大文字と小文字が区別される文字列。</span><span class="sxs-lookup"><span data-stu-id="b5508-651">A case-sensitive string containing the column name followed by "ASC" (for ascending) or "DESC" (for descending).</span></span> <span data-ttu-id="b5508-652">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b5508-652">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-653"><xref:System.Windows.Forms.BindingSource.Sort%2A> プロパティは、並べ替えの方向と共に、行の並べ替えに使用する列名を指定する、大文字と小文字を区別する文字列です。</span><span class="sxs-lookup"><span data-stu-id="b5508-653">The <xref:System.Windows.Forms.BindingSource.Sort%2A> property is a case-sensitive string that specifies the column names used to sort the rows, along with the sort direction.</span></span> <span data-ttu-id="b5508-654">既定では列は昇順で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="b5508-654">Columns are sorted ascending by default.</span></span> <span data-ttu-id="b5508-655">複数の列は、`"State, ZipCode DESC"`のように、コンマで区切ることができます。</span><span class="sxs-lookup"><span data-stu-id="b5508-655">Multiple columns can be separated by commas, such as `"State, ZipCode DESC"`.</span></span>  
  
 <span data-ttu-id="b5508-656">並べ替えをサポートするには、基になるリストが <xref:System.ComponentModel.IBindingList> インターフェイスまたは <xref:System.ComponentModel.IBindingListView> インターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-656">To support sorting, the underlying list must implement the <xref:System.ComponentModel.IBindingList> or <xref:System.ComponentModel.IBindingListView> interfaces.</span></span> <span data-ttu-id="b5508-657">この機能は、<xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> プロパティを使用して照会できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-657">This capability can be queried through the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property.</span></span> <span data-ttu-id="b5508-658">複数列の並べ替えは、<xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> プロパティが `true`場合に使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-658">Multicolumn sorting is available when the <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="b5508-659"><xref:System.Windows.Forms.BindingSource.Sort%2A> プロパティを設定すると、その型に応じて内部リストが変更されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-659">Setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will change the internal list depending on its type:</span></span>  
  
-   <span data-ttu-id="b5508-660">リストが <xref:System.ComponentModel.IBindingList>型の場合、<xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> プロパティと <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> プロパティが内部リストに設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-660">If the list is of type <xref:System.ComponentModel.IBindingList>, the <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> properties are set in the internal list.</span></span>  
  
-   <span data-ttu-id="b5508-661">リストが <xref:System.ComponentModel.IBindingListView>型の場合、<xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> プロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-661">If the list is of type <xref:System.ComponentModel.IBindingListView>, the <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> property is set.</span></span>  
  
 <span data-ttu-id="b5508-662">内部リストの並べ替えプロパティは、並べ替え文字列が `null`されていない場合にのみ変更されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-662">The internal list's sort properties are only changed when the sort string is not `null`.</span></span> <span data-ttu-id="b5508-663">このプロパティの `get` アクセサーは、内部リストの並べ替え値を取得しません。代わりに、`set` アクセサー値が返されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-663">The `get` accessor for this property will not retrieve the sort value of the internal list; instead, it will return the `set` accessor value.</span></span> <span data-ttu-id="b5508-664"><xref:System.Windows.Forms.BindingSource.Sort%2A> プロパティの値は、データソースの変更時に保持されます。</span><span class="sxs-lookup"><span data-stu-id="b5508-664">The value of the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will persist when the data source changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-665">次の例では、<xref:System.Windows.Forms.BindingSource.Sort%2A> プロパティを使用して、<xref:System.Data.DataView>で基本的な並べ替えを実行する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-665">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform basic sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="b5508-666">この例を実行するには、Windows フォームにコードを貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベント処理メソッドから `PopulateDataViewAndSort` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-666">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="b5508-667">フォームでは、<xref:System.Xml> と <xref:System.IO> 名前空間をインポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-667">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#2)]  
  
 <span data-ttu-id="b5508-668">次の例では、<xref:System.Windows.Forms.BindingSource.Sort%2A> プロパティを使用して、<xref:System.Data.DataView>を使用した高度な並べ替えを実行する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-668">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform advanced sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="b5508-669">この例を実行するには、Windows フォームにコードを貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベント処理メソッドから `PopulateDataViewAndAdvancedSort` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5508-669">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndAdvancedSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="b5508-670">フォームでは、<xref:System.Xml> と <xref:System.IO> 名前空間をインポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5508-670">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveSort" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ListSortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescriptions As ListSortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDescriptionCollection ^ SortDescriptions { System::ComponentModel::ListSortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.ListSortDescriptionCollection" Usage="System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.SortDescriptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-671">データ ソースに適用される並べ替えに関する説明のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-671">Gets the collection of sort descriptions applied to the data source.</span></span></summary>
        <value><span data-ttu-id="b5508-672">データ ソースが <see cref="T:System.ComponentModel.IBindingListView" /> の場合は、リストに適用される並べ替えに関する説明を格納している <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-672">If the data source is an <see cref="T:System.ComponentModel.IBindingListView" />, a <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> that contains the sort descriptions applied to the list; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-673">リストが <xref:System.ComponentModel.IBindingListView>でない場合、<xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> は常に `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-673">If the list is not an <xref:System.ComponentModel.IBindingListView>, the <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> always returns `null`.</span></span>  
  
 <span data-ttu-id="b5508-674"><xref:System.ComponentModel.ListSortDescriptionCollection> は読み取り専用のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="b5508-674">The <xref:System.ComponentModel.ListSortDescriptionCollection> is a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As ListSortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDirection SortDirection { System::ComponentModel::ListSortDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDirection : System.ComponentModel.ListSortDirection" Usage="System.Windows.Forms.BindingSource.SortDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SortDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-675">リスト項目の並べ替え方向を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-675">Gets the direction the items in the list are sorted.</span></span></summary>
        <value><span data-ttu-id="b5508-676">リストの並べ替え方向を指定する <see cref="T:System.ComponentModel.ListSortDirection" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="b5508-676">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values indicating the direction the list is sorted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-677">基になるリストが <xref:System.ComponentModel.IBindingList>でない場合、<xref:System.Windows.Forms.BindingSource.SortDirection%2A> プロパティは常に <xref:System.ComponentModel.ListSortDirection.Ascending>を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-677">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SortDirection%2A> property will always return <xref:System.ComponentModel.ListSortDirection.Ascending>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortProperty">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor SortProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor SortProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortProperty As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ SortProperty { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortProperty : System.ComponentModel.PropertyDescriptor" Usage="System.Windows.Forms.BindingSource.SortProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SortProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-678">リストの並べ替えに使用されている <see cref="T:System.ComponentModel.PropertyDescriptor" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-678">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span></span></summary>
        <value><span data-ttu-id="b5508-679">リストが <see cref="T:System.ComponentModel.IBindingList" /> の場合は、並べ替えに使用されている <see cref="T:System.ComponentModel.PropertyDescriptor" />。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-679">If the list is an <see cref="T:System.ComponentModel.IBindingList" />, the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-680">リストが <xref:System.ComponentModel.IBindingList>でない場合、<xref:System.Windows.Forms.BindingSource.SortProperty%2A> は常に `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-680">If the list is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAdvancedSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAdvancedSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAdvancedSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAdvancedSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAdvancedSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAdvancedSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-681">データ ソースが複数列の並べ替えをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-681">Gets a value indicating whether the data source supports multi-column sorting.</span></span></summary>
        <value><span data-ttu-id="b5508-682">リストが <see langword="true" /> で、複数列の並べ替えをサポートしている場合は <see cref="T:System.ComponentModel.IBindingListView" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-682"><see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports multi-column sorting; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-683">リストが <xref:System.ComponentModel.IBindingListView>でない場合、<xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> は常に `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-683">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotification">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeNotification { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeNotification : bool" Usage="System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsChangeNotification</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-684">データ ソースが変更通知をサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-684">Gets a value indicating whether the data source supports change notification.</span></span></summary>
        <value><span data-ttu-id="b5508-685">すべてのケースで <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-685"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFiltering">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFiltering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFiltering : bool" Usage="System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.SupportsFiltering</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-686">データ ソースがフィルター処理をサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-686">Gets a value indicating whether the data source supports filtering.</span></span></summary>
        <value><span data-ttu-id="b5508-687">リストが <see langword="true" /> で、フィルター処理をサポートしている場合は <see cref="T:System.ComponentModel.IBindingListView" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-687"><see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports filtering; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-688">リストが <xref:System.ComponentModel.IBindingListView>でない場合、<xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> は常に `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-688">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSearching">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSearching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSearching" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSearching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSearching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSearching : bool" Usage="System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsSearching</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-689">データ ソースが、<see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> メソッドを使用した検索をサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-689">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span></span></summary>
        <value><span data-ttu-id="b5508-690">リストが <see langword="true" /> で、<see cref="T:System.ComponentModel.IBindingList" /> メソッドを使用した検索をサポートしている場合は <see cref="Overload:System.Windows.Forms.BindingSource.Find" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-690"><see langword="true" /> if the list is a <see cref="T:System.ComponentModel.IBindingList" /> and supports the searching with the <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-691">データソースが <xref:System.ComponentModel.IBindingList>でない場合、<xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> は常に `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-691">If the data source is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> always returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5508-692"><xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> メンバーを使用する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="b5508-692">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> member.</span></span> <span data-ttu-id="b5508-693">完全な例については、クラスの概要に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b5508-693">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-694">データ ソースが並べ替えをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-694">Gets a value indicating whether the data source supports sorting.</span></span></summary>
        <value><span data-ttu-id="b5508-695">データ ソースが <see langword="true" /> で、並べ替えをサポートしている場合は <see cref="T:System.ComponentModel.IBindingList" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-695"><see langword="true" /> if the data source is an <see cref="T:System.ComponentModel.IBindingList" /> and supports sorting; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-696">データソースが <xref:System.ComponentModel.IBindingList>でない場合、<xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> プロパティは常に `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="b5508-696">If the data source is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendBinding();" />
      <MemberSignature Language="F#" Value="member this.SuspendBinding : unit -&gt; unit" Usage="bindingSource.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-697">データ バインディングに伴う変更によるバインド データ ソースの更新を中断します。</span><span class="sxs-lookup"><span data-stu-id="b5508-697">Suspends data binding to prevent changes from updating the bound data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-698"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> と <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> は、単純なバインドシナリオでのデータバインディングの一時的な中断と再開を可能にする2つの方法です。</span><span class="sxs-lookup"><span data-stu-id="b5508-698"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="b5508-699">通常、検証が行われる前に、ユーザーがデータフィールドに対して複数の編集を行うことができるようにする必要がある場合は、データバインディングを中断します。</span><span class="sxs-lookup"><span data-stu-id="b5508-699">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="b5508-700">たとえば、1つのフィールドを2番目のフィールドに従って変更する必要がある場合に、最初のフィールドを検証すると、2番目のフィールドのエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-700">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b5508-701"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> を使用すると、<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> が呼び出されるまで、変更はデータソースにプッシュされませんが、実際にはイベントの発生を防ぐことはできません。</span><span class="sxs-lookup"><span data-stu-id="b5508-701">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="b5508-702"><xref:System.Windows.Forms.DataGridView> コントロールなどの複合データバインディングを使用するコントロールは、<xref:System.Windows.Forms.CurrencyManager.ListChanged> イベントなどの変更イベントに基づいて値を更新するので、<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> を呼び出すと、データソースへの変更を受け取ることができなくなります。</span><span class="sxs-lookup"><span data-stu-id="b5508-702">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="b5508-703">このため、この <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> と <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> は、<xref:System.Windows.Forms.TextBox> コントロールなどの単純なバインドコントロールで使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b5508-703">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="b5508-704">または、<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> プロパティを `false`に設定して <xref:System.Windows.Forms.BindingSource.ListChanged> イベントを抑制する場合は、これらのメソッドを複雑なバインディングシナリオで使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5508-704">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-705">基になるリストへのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-705">Gets an object that can be used to synchronize access to the underlying list.</span></span></summary>
        <value><span data-ttu-id="b5508-706">基になるリストへのアクセスを同期するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5508-706">An object that can be used to synchronize access to the underlying list.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AddIndex">
      <MemberSignature Language="C#" Value="void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.AddIndex(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub AddIndex (property As PropertyDescriptor) Implements IBindingList.AddIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.AddIndex(System::ComponentModel::PropertyDescriptor ^ property) = System::ComponentModel::IBindingList::AddIndex;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.IBindingList.AddIndex : System.ComponentModel.PropertyDescriptor -&gt; unit&#xA;override this.System.ComponentModel.IBindingList.AddIndex : System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="bindingSource.System.ComponentModel.IBindingList.AddIndex property" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="b5508-707">検索に使用されるインデックスに追加する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-707">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span></span></param>
        <summary><span data-ttu-id="b5508-708">検索に使用されるインデックスに <see cref="T:System.ComponentModel.PropertyDescriptor" /> を追加します。</span><span class="sxs-lookup"><span data-stu-id="b5508-708">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-709">基になるリストが <xref:System.ComponentModel.IBindingList> 型の場合、このメソッドはインデックスに <xref:System.ComponentModel.PropertyDescriptor> を追加します。それ以外の場合、このメソッドを呼び出すと <xref:System.NotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5508-709">If the underlying list is an <xref:System.ComponentModel.IBindingList> type, this method will add the <xref:System.ComponentModel.PropertyDescriptor> to the indexes; otherwise, calling this method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b5508-710">基底のリストが <see cref="T:System.ComponentModel.IBindingList" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b5508-710">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.RemoveIndex">
      <MemberSignature Language="C#" Value="void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.RemoveIndex(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveIndex (prop As PropertyDescriptor) Implements IBindingList.RemoveIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.RemoveIndex(System::ComponentModel::PropertyDescriptor ^ prop) = System::ComponentModel::IBindingList::RemoveIndex;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.IBindingList.RemoveIndex : System.ComponentModel.PropertyDescriptor -&gt; unit&#xA;override this.System.ComponentModel.IBindingList.RemoveIndex : System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="bindingSource.System.ComponentModel.IBindingList.RemoveIndex prop" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="b5508-711">検索に使用されるインデックスから削除する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-711">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span></span></param>
        <summary><span data-ttu-id="b5508-712">検索に使用されるインデックスから <see cref="T:System.ComponentModel.PropertyDescriptor" /> を削除します。</span><span class="sxs-lookup"><span data-stu-id="b5508-712">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-713">基になるリストが <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>でない場合、このメソッドは常に <xref:System.NotSupportedException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="b5508-713">If the underlying list is not a <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, this method will always throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.CancelNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.CancelNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.CancelNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CancelNew (position As Integer) Implements ICancelAddNew.CancelNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.CancelNew(int position) = System::ComponentModel::ICancelAddNew::CancelNew;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICancelAddNew.CancelNew : int -&gt; unit&#xA;override this.System.ComponentModel.ICancelAddNew.CancelNew : int -&gt; unit" Usage="bindingSource.System.ComponentModel.ICancelAddNew.CancelNew position" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="b5508-714">コレクションに追加された項目のインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5508-714">The index of the item that was added to the collection.</span></span></param>
        <summary><span data-ttu-id="b5508-715">保留中の新しい項目をコレクションから破棄します。</span><span class="sxs-lookup"><span data-stu-id="b5508-715">Discards a pending new item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-716"><xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> メソッドは、`position`によって指定されたインデックスのコレクションに以前に追加された項目を、保留中の追加をロールバックします。</span><span class="sxs-lookup"><span data-stu-id="b5508-716">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> method rolls back a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="b5508-717">複数の新しい項目を同時に保留することができるため、`position` パラメーターが必要です。</span><span class="sxs-lookup"><span data-stu-id="b5508-717">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.EndNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.EndNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.EndNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub EndNew (position As Integer) Implements ICancelAddNew.EndNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.EndNew(int position) = System::ComponentModel::ICancelAddNew::EndNew;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICancelAddNew.EndNew : int -&gt; unit&#xA;override this.System.ComponentModel.ICancelAddNew.EndNew : int -&gt; unit" Usage="bindingSource.System.ComponentModel.ICancelAddNew.EndNew position" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="b5508-718">コレクションに追加された項目のインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5508-718">The index of the item that was added to the collection.</span></span></param>
        <summary><span data-ttu-id="b5508-719">保留中の新しい項目をコレクションにコミットします。</span><span class="sxs-lookup"><span data-stu-id="b5508-719">Commits a pending new item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-720"><xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> メソッドは、`position`によって指定されたインデックスのコレクションに以前に追加された項目の保留中の追加をコミットします。</span><span class="sxs-lookup"><span data-stu-id="b5508-720">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> method commits a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="b5508-721">複数の新しい項目を同時に保留することができるため、`position` パラメーターが必要です。</span><span class="sxs-lookup"><span data-stu-id="b5508-721">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ISupportInitialize.BeginInit : unit -&gt; unit&#xA;override this.System.ComponentModel.ISupportInitialize.BeginInit : unit -&gt; unit" Usage="bindingSource.System.ComponentModel.ISupportInitialize.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-722">初期化の開始を通知するシグナルを <see cref="T:System.Windows.Forms.BindingSource" /> に送信します。</span><span class="sxs-lookup"><span data-stu-id="b5508-722">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ISupportInitialize.EndInit : unit -&gt; unit&#xA;override this.System.ComponentModel.ISupportInitialize.EndInit : unit -&gt; unit" Usage="bindingSource.System.ComponentModel.ISupportInitialize.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5508-723">初期化の完了を通知するシグナルを <see cref="T:System.Windows.Forms.BindingSource" /> に送信します。</span><span class="sxs-lookup"><span data-stu-id="b5508-723">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.Initialized">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.ISupportInitializeNotification.Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.ISupportInitializeNotification.Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#Initialized" />
      <MemberSignature Language="VB.NET" Value="Custom Event Initialized As EventHandler Implements System.ComponentModel.ISupportInitializeNotification" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.ISupportInitializeNotification.Initialized : EventHandler " Usage="member this.System.ComponentModel.ISupportInitializeNotification.Initialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.ISupportInitializeNotification.Initialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-724"><see cref="T:System.Windows.Forms.BindingSource" /> が初期化されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b5508-724">Occurs when the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b5508-725">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b5508-725">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b5508-726">これは、<xref:System.Windows.Forms.BindingSource> のインスタンスが <xref:System.ComponentModel.ISupportInitializeNotification> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-726">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsInitialized As Boolean Implements ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::ISupportInitializeNotification::IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.ISupportInitializeNotification.IsInitialized : bool" Usage="System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ISupportInitializeNotification.IsInitialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5508-727"><see cref="T:System.Windows.Forms.BindingSource" /> が初期化されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5508-727">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span></span></summary>
        <value><span data-ttu-id="b5508-728"><see langword="true" /> が初期化されている場合は <see cref="T:System.Windows.Forms.BindingSource" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5508-728"><see langword="true" /> to indicate the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5508-729">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b5508-729">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b5508-730">これは、<xref:System.Windows.Forms.BindingSource> のインスタンスが <xref:System.ComponentModel.ISupportInitializeNotification> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5508-730">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
