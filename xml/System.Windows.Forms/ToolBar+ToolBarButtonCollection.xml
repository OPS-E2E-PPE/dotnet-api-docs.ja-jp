<Type Name="ToolBar+ToolBarButtonCollection" FullName="System.Windows.Forms.ToolBar+ToolBarButtonCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acb17dcd9a2354f2c1c47f3eb4a06919bd6232bd" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75177706" /></Metadata><TypeSignature Language="C#" Value="public class ToolBar.ToolBarButtonCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ToolBar/ToolBarButtonCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBar.ToolBarButtonCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ToolBar::ToolBarButtonCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ToolBar.ToolBarButtonCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.ToolBarButton" /> クラスで使用する <see cref="T:System.Windows.Forms.ToolBar" /> コントロールのコレクションをカプセル化します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> は、ツールバーに割り当てられたすべての <xref:System.Windows.Forms.ToolBarButton> コントロールを保持するために <xref:System.Windows.Forms.ToolBar> クラスによって使用される、0から始まるインデックス付きコレクションです。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> メソッドを使用して個々のボタンを追加し、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> メソッドを使用してそれらを削除します。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドを呼び出して、すべてのボタンをコレクションから削除します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar> と3つの <xref:System.Windows.Forms.ToolBarButton> コントロールを作成して初期化します。 ツールバーのボタンがツールバーに割り当てられ、ツールバーがフォームに追加されます。 このコードでは、<xref:System.Windows.Forms.Form> が既に作成されている必要があります。  
  
 [!code-cpp[Classic ToolBar.Buttons Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.Buttons Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.Buttons Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.ToolBarButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButtonCollection (System.Windows.Forms.ToolBar owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ToolBar owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.#ctor(System.Windows.Forms.ToolBar)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ToolBar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButtonCollection(System::Windows::Forms::ToolBar ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolBar.ToolBarButtonCollection : System.Windows.Forms.ToolBar -&gt; System.Windows.Forms.ToolBar.ToolBarButtonCollection" Usage="new System.Windows.Forms.ToolBar.ToolBarButtonCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ToolBar" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.ToolBar" /> コントロールのコレクションの親である <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary><see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" /> クラスの新しいインスタンスを初期化し、指定されたツール バーに割り当てます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> を作成し、そのコンストラクターを明示的に呼び出すことはありません。 <xref:System.Windows.Forms.ToolBar> コントロールの <xref:System.Windows.Forms.ToolBar.Buttons%2A> プロパティを参照することにより、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が作成されます。 その後、そのプロパティとメソッドにアクセスして、<xref:System.Windows.Forms.ToolBarButton> コントロールをコレクションに割り当てることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しいツール バー ボタンをツール バー ボタン コレクションの末尾に追加します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (text As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; int" Usage="toolBarButtonCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">新しい <see cref="T:System.Windows.Forms.ToolBarButton" /> に表示されるテキスト。</param>
        <summary>新しいツール バー ボタンを指定された <see cref="P:System.Windows.Forms.ToolBarButton.Text" /> プロパティの値を持つツール バー ボタン コレクションの末尾に追加します。</summary>
        <returns>コレクションに追加された <see cref="T:System.Windows.Forms.ToolBarButton" /> の 0 から始まるインデックス値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 また、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> メソッド、またはその他のバージョンの <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> メソッドを使用して、新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトをコレクションに追加することもできます。  
  
 以前に追加した <xref:System.Windows.Forms.ToolBarButton> を削除するには、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>、または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar> コントロールが存在する場合に既存の <xref:System.Windows.Forms.ToolBarButton> を削除し、4つの新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトを追加して <xref:System.Windows.Forms.ToolBar>に挿入します。 この例では、<xref:System.Windows.Forms.ToolBar> コントロールを持つ <xref:System.Windows.Forms.Form> が必要です。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (button As ToolBarButton) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ToolBarButton -&gt; int" Usage="toolBarButtonCollection.Add button" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">すべての既存のボタンの後に追加される <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>指定されたツール バー ボタンをツール バー ボタン コレクションの末尾に追加します。</summary>
        <returns>コレクションに追加された <see cref="T:System.Windows.Forms.ToolBarButton" /> の 0 から始まるインデックス値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 また、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> メソッド、またはその他のバージョンの <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> メソッドを使用して、新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトをコレクションに追加することもできます。  
  
 以前に追加した <xref:System.Windows.Forms.ToolBarButton> を削除するには、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>、または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、既存の <xref:System.Windows.Forms.ToolBar> に既存のボタンを使用して、新しい <xref:System.Windows.Forms.ToolBarButton> コントロールを追加します。 <xref:System.Windows.Forms.ToolBar.Buttons%2A?displayProperty=nameWithType> コレクションの末尾にツールバーボタンが追加されます。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ToolBarButton[] buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ToolBarButton[] buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange(System.Windows.Forms.ToolBarButton[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (buttons As ToolBarButton())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ToolBarButton ^&gt; ^ buttons);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ToolBarButton[] -&gt; unit" Usage="toolBarButtonCollection.AddRange buttons" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttons" Type="System.Windows.Forms.ToolBarButton[]" />
      </Parameters>
      <Docs>
        <param name="buttons">配列に格納されているこの <see cref="T:System.Windows.Forms.ToolBarButton" /> を追加する <see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" /> コントロールのコレクション。</param>
        <summary>ツール バー ボタンのコレクションをこのツール バー ボタン コレクションに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `nodes` 配列に格納されている <xref:System.Windows.Forms.ToolBarButton> オブジェクトは、コレクションの末尾に追加されます。  
  
 メソッドを使用すると、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> メソッドを使用してコレクションに各 <xref:System.Windows.Forms.ToolBarButton> を手動で追加するのではなく、以前に作成した <xref:System.Windows.Forms.ToolBarButton> オブジェクトのグループをコレクションにすばやく追加できます。  
  
 以前に追加した <xref:System.Windows.Forms.ToolBarButton> を削除するには、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>、または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar> コントロールが存在する場合に既存の <xref:System.Windows.Forms.ToolBarButton> を削除し、4つの新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトを追加して <xref:System.Windows.Forms.ToolBar>に挿入します。 この例では、<xref:System.Windows.Forms.ToolBar> コントロールを持つ <xref:System.Windows.Forms.Form> が必要です。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="toolBarButtonCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツール バー ボタン コレクションからすべてのボタンを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドは、コレクションを反復処理し、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>に割り当てられているすべてのツールバーボタンを削除します。  
  
 コレクションから個々のツールバーボタンを削除するには、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> メソッドを使用します。  
  
 新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトをコレクションに追加するには、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>、または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドが呼び出される前と後の <xref:System.Windows.Forms.ToolBar.Buttons%2A> の <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> を表示します。 このコードでは、少なくとも1つの <xref:System.Windows.Forms.ToolBarButton> の <xref:System.Windows.Forms.ToolBar> が作成されている必要があります。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Contains(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (button As ToolBarButton) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ToolBarButton -&gt; bool" Usage="toolBarButtonCollection.Contains button" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">コレクション内で検索する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>指定したツール バー ボタンがコレクションのメンバーかどうかを確認します。</summary>
        <returns><see langword="true" /> がコレクションのメンバーの場合は <see cref="T:System.Windows.Forms.ToolBarButton" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、<xref:System.Windows.Forms.ToolBarButton>に対して操作を実行する前に、<xref:System.Windows.Forms.ToolBarButton> がコレクションのメンバーであるかどうかを判断できます。 このメソッドを使用すると、<xref:System.Windows.Forms.ToolBarButton> がに追加されているか、まだコレクションのメンバーであることを確認できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar> コントロールが存在する場合に既存の <xref:System.Windows.Forms.ToolBarButton> を削除し、4つの新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトを追加して <xref:System.Windows.Forms.ToolBar>に挿入します。 この例では、<xref:System.Windows.Forms.ToolBar> コントロールを持つ <xref:System.Windows.Forms.Form> が必要です。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="toolBarButtonCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">検索の対象となる <see cref="T:System.Windows.Forms.ToolBarButton" /> の名前。</param>
        <summary>指定したキーの <see cref="T:System.Windows.Forms.ToolBarButton" /> がコレクション内にあるかどうかを判断します。</summary>
        <returns>指定したキーの <see langword="true" /> が見つかったことを示す場合は <see cref="T:System.Windows.Forms.ToolBarButton" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A> プロパティは、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>内の <xref:System.Windows.Forms.ToolBarButton> のキーに対応します。  
  
 キーの比較では、大文字と小文字は区別されません。 `key` パラメーターが `null` または空の文字列の場合、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> はを返し `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタン コレクション内のボタンの数を取得します。</summary>
        <value>ツール バーに割り当てられた <see cref="T:System.Windows.Forms.ToolBarButton" /> コントロールの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> プロパティは、コレクションに割り当てられた <xref:System.Windows.Forms.ToolBarButton> コントロールの実際の数を保持します。 コレクションを反復処理するループの上限として <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> プロパティ値を使用するのが一般的です。 コレクションのインデックス値は0から始まるインデックスであるため、ループ変数から1つを減算する必要があります。そうしないと、コレクションの上限を超え、例外がスローされます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドが呼び出される前と後の <xref:System.Windows.Forms.ToolBar.Buttons%2A> の <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> を表示します。 このコードでは、少なくとも1つの <xref:System.Windows.Forms.ToolBarButton> の <xref:System.Windows.Forms.ToolBar> が作成されている必要があります。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="toolBarButtonCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツール バー ボタン コレクションを反復処理するために使用できる列挙子を返します。</summary>
        <returns>ツリー ノードのコレクションを表す <see cref="T:System.Collections.IEnumerator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar> コントロールが存在する場合に既存の <xref:System.Windows.Forms.ToolBarButton> を削除し、4つの新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトを追加して <xref:System.Windows.Forms.ToolBar>に挿入します。 この例では、<xref:System.Windows.Forms.ToolBar> コントロールを持つ <xref:System.Windows.Forms.Form> が必要です。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOf(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (button As ToolBarButton) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ToolBarButton -&gt; int" Usage="toolBarButtonCollection.IndexOf button" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">コレクション内で検索する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>コレクション内の指定したツール バー ボタンのインデックスを取得します。</summary>
        <returns>項目がコレクションに存在する場合は、その項目の 0 から始まるインデックス。それ以外の場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、コレクション内の <xref:System.Windows.Forms.ToolBarButton> のインデックス値に簡単にアクセスできます。 インデックス値を使用すると、<xref:System.Windows.Forms.ToolBar>上でクリックされた <xref:System.Windows.Forms.ToolBarButton> を簡単に確認できます。 クリック <xref:System.Windows.Forms.ToolBarButton> は、<xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A?displayProperty=nameWithType> プロパティの <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOf%2A> 値を評価することによって決定できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar> と3つの <xref:System.Windows.Forms.ToolBarButton> コントロールを作成します。 ツールバーのボタンはボタンコレクションに割り当てられ、コレクションはツールバーに割り当てられ、ツールバーはフォームに追加されます。 ツールバーの [<xref:System.Windows.Forms.ToolBar.ButtonClick>] イベントで、<xref:System.Windows.Forms.ToolBarButtonClickEventArgs> の <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> プロパティが評価され、適切なダイアログボックスが開きます。 このコードでは、<xref:System.Windows.Forms.Form>、<xref:System.Windows.Forms.OpenFileDialog>、<xref:System.Windows.Forms.SaveFileDialog>、および <xref:System.Windows.Forms.PrintDialog> がすべて作成されている必要があります。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="toolBarButtonCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">検索の対象となる <see cref="T:System.Windows.Forms.ToolBarButton" /> の名前。</param>
        <summary>指定したキーを持つ <see cref="T:System.Windows.Forms.ToolBarButton" /> が最初に出現するインデックスを取得します。</summary>
        <returns>見つかった場合は、指定したキーを持つ <see cref="T:System.Windows.Forms.ToolBarButton" /> が最初に出現するインデックス。それ以外の場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOfKey%2A> が連続して呼び出された場合、最初に返されたインデックスのキーが一致しているかどうかが最初にチェックされます。一致するものがない場合は、コレクションの先頭から検索が開始されます。  
  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A> プロパティは、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>内の <xref:System.Windows.Forms.ToolBarButton> のキーに対応します。  
  
 キーの比較では、大文字と小文字は区別されません。 `key` パラメーターが `null` または空の文字列の場合、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> は-1 を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert(System.Int32,System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, button As ToolBarButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ToolBarButton -&gt; unit" Usage="toolBarButtonCollection.Insert (index, button)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="index">ツール バー ボタンを挿入するコレクション内の位置を示すインデックス。</param>
        <param name="button">挿入する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>ツール バー ボタン コレクション内の指定した位置に既存のツール バー ボタンを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 また、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> メソッドを使用して、新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトをコレクションに追加することもできます。  
  
 以前に追加した <xref:System.Windows.Forms.ToolBarButton> を削除するには、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>、または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar> コントロールが存在する場合に既存の <xref:System.Windows.Forms.ToolBarButton> を削除し、4つの新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトを追加して <xref:System.Windows.Forms.ToolBar>に挿入します。 この例では、<xref:System.Windows.Forms.ToolBar> コントロールを持つ <xref:System.Windows.Forms.Form> が必要です。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange(System.Windows.Forms.ToolBarButton[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ToolBar.ToolBarButtonCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションが読み取り専用かどうかを示す値を取得します。</summary>
        <value>コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar> コントロールが存在する場合に既存の <xref:System.Windows.Forms.ToolBarButton> を削除し、4つの新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトを追加して <xref:System.Windows.Forms.ToolBar>に挿入します。 この例では、<xref:System.Windows.Forms.ToolBar> コントロールを持つ <xref:System.Windows.Forms.Form> が必要です。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コレクション内の <see cref="T:System.Windows.Forms.ToolBarButton" /> を取得または設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolBarButton this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBarButton Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As ToolBarButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolBarButton ^ default[int] { System::Windows::Forms::ToolBarButton ^ get(int index); void set(int index, System::Windows::Forms::ToolBarButton ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ToolBarButton with get, set" Usage="System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">コレクション内の <see cref="T:System.Windows.Forms.ToolBarButton" /> のインデックス位置。</param>
        <summary>ツール バー ボタン コレクション内の指定したインデックス位置にあるツール バー ボタンを取得または設定します。</summary>
        <value>指定したインデックス位置にあるツール バー ボタンを表す <see cref="T:System.Windows.Forms.ToolBarButton" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton> コントロールを特定の場所に割り当てたり、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>から取得したりするには、特定のインデックス値を使用してコレクションオブジェクトを参照します。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> のインデックス値は、0から始まるインデックスです。  
  
   
  
## Examples  
 次のコード例では、ツールバーの最後のツールバーボタンを置き換えます。 このコードでは、<xref:System.Windows.Forms.ToolBar> と少なくとも1つの <xref:System.Windows.Forms.ToolBarButton> が作成されている必要があります。 この例では、ツールバーのボタンの数を取得し、最後のボタンを新しく作成したボタンに置き換えます。 <xref:System.Windows.Forms.ToolBarButton> コレクションが0から始まるインデックスであるため、置換されるツールバーボタンの `index` 値は、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> プロパティから1を引いた値に設定されます。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="index" /> 値は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 値が 0 未満です。  
  
または 
<paramref name="index" /> 値がコレクション内のボタン数を超える値であり、ボタンのコレクションが <see langword="null" /> ではありません。</exception>
        <altmember cref="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolBarButton this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBarButton Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ToolBarButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolBarButton ^ default[System::String ^] { System::Windows::Forms::ToolBarButton ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ToolBarButton" Usage="System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">取得する <see cref="T:System.Windows.Forms.ToolBarButton" /> の名前。</param>
        <summary>指定したキーの <see cref="T:System.Windows.Forms.ToolBarButton" /> をコレクションから取得します。</summary>
        <value>指定されたキーと一致する <see cref="T:System.Windows.Forms.ToolBarButton" /> プロパティを持つ <see cref="P:System.Windows.Forms.ToolBarButton.Name" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A> プロパティは、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>内の <xref:System.Windows.Forms.ToolBarButton> のキーに対応します。  
  
 キーの比較では、大文字と小文字は区別されません。 `key` パラメーターが `null` または空の文字列の場合、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> は `null`を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (button As ToolBarButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ToolBarButton -&gt; unit" Usage="toolBarButtonCollection.Remove button" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">コレクションから削除する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>ツール バー ボタン コレクションから指定したボタンを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ツールバーのボタンをコレクションから削除するには、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>、または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドを使用します。  
  
 新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトをコレクションに追加するには、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>、または <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar> コントロールが存在する場合に既存の <xref:System.Windows.Forms.ToolBarButton> を削除し、4つの新しい <xref:System.Windows.Forms.ToolBarButton> オブジェクトを追加して <xref:System.Windows.Forms.ToolBar>に挿入します。 この例では、<xref:System.Windows.Forms.ToolBar> コントロールを持つ <xref:System.Windows.Forms.Form> が必要です。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="toolBarButtonCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">コレクション内の <see cref="T:System.Windows.Forms.ToolBarButton" /> のインデックス位置。</param>
        <summary>ツール バー ボタン コレクションから指定したボタンを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> メソッドは、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>内の指定した位置にある <xref:System.Windows.Forms.ToolBarButton> を削除します。 コレクションからすべての <xref:System.Windows.Forms.ToolBarButton> コントロールを削除する場合は、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.ToolBar>の最後の <xref:System.Windows.Forms.ToolBarButton> を削除します。 削除されるツールバーボタンのインデックス値は、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> プロパティと同じに設定されます。これは、<xref:System.Windows.Forms.ToolBarButton> コレクションが0から始まるインデックスであるためです。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> の値が 0 未満か、コレクション内のボタン数を超えています。</exception>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="toolBarButtonCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">コレクションから削除する <see cref="T:System.Windows.Forms.ToolBarButton" /> の名前。</param>
        <summary>指定したキーを持つ <see cref="T:System.Windows.Forms.ToolBarButton" /> をコレクションから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A> プロパティは、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>内の <xref:System.Windows.Forms.ToolBarButton> のキーに対応します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ICollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
        <param name="index">コピーを開始する <paramref name="dest" /> の 0 から始まるインデックス。</param>
        <summary><see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.ICollection> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスが同期されるかどうか (スレッドセーフかどうか) を示す値を取得します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.ICollection> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンのコレクションへのアクセスを同期するために使用するオブジェクトを取得します。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.ICollection> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (button As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ button) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button">すべての既存のボタンの後に追加される <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>指定されたツール バー ボタンをツール バー ボタン コレクションの末尾に追加します。</summary>
        <returns>コレクションに追加された <see cref="T:System.Windows.Forms.ToolBarButton" /> の 0 から始まるインデックス値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="button" /> が <see cref="T:System.Windows.Forms.ToolBarButton" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (button As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ button) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button">コレクション内で検索する項目。</param>
        <summary>特定の値がコレクション内に存在するかどうかを示します。</summary>
        <returns>項目がコレクションで見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (button As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ button) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button">コレクション内で検索する項目。</param>
        <summary>コレクション内の特定のアイテムのインデックスを示します。</summary>
        <returns>リストに存在する場合は <paramref name="button" /> のインデックス。それ以外の場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, button As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ button) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">ツール バー ボタンを挿入するコレクション内の位置を示すインデックス。</param>
        <param name="button">挿入する <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>ツール バー ボタン コレクション内の指定した位置に既存のツール バー ボタンを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="button" /> が <see cref="T:System.Windows.Forms.ToolBarButton" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションが固定サイズかどうかを示す値を取得します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
        <summary>指定したインデックスにある項目を取得または設定します。</summary>
        <value>指定したインデックス位置にある要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (button As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ button) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button"><see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.IList" />。</param>
        <summary>最初に出現する項目をコレクションから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> が <xref:System.Collections.IList> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
