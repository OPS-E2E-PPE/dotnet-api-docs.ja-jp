<Type Name="Control+ControlCollection" FullName="System.Windows.Forms.Control+ControlCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e762546ee39f694f37942b0d404e582d7736c46" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82363499" /></Metadata><TypeSignature Language="C#" Value="public class Control.ControlCollection : System.Windows.Forms.Layout.ArrangedElementCollection, ICloneable, System.Collections.IList" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Control/ControlCollection extends System.Windows.Forms.Layout.ArrangedElementCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Control.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class Control.ControlCollection&#xA;Inherits ArrangedElementCollection&#xA;Implements ICloneable, IList" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Control::ControlCollection : System::Windows::Forms::Layout::ArrangedElementCollection, ICloneable, System::Collections::IList" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Control.ControlCollection = class&#xA;    inherit ArrangedElementCollection&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICloneable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public class Control.ControlCollection : ICloneable, System.Collections.IList" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Control/ControlCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Class Control.ControlCollection&#xA;Implements ICloneable, IList" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Control::ControlCollection : ICloneable, System::Collections::IList" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type Control.ControlCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Layout.ArrangedElementCollection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCollectionCodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.Control" /> オブジェクトのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A>、<xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>、および <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> メソッドを使用すると、コレクションの個々のコントロールを追加および削除できます。 また、<xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> または <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> メソッドを使用して、コレクションのすべてのコントロールを追加または削除することもできます。  
  
 <xref:System.Windows.Forms.Control.ControlCollection.Contains%2A> メソッドにコントロールを渡すことによって、<xref:System.Windows.Forms.Control> がコレクションのメンバーであるかどうかを確認できます。 コレクション内の <xref:System.Windows.Forms.Control> の位置のインデックス値を取得するには、コントロールを <xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> メソッドに渡します。 <xref:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo%2A> メソッドを呼び出すことによって、コレクションを配列にコピーできます。  
  
   
  
## Examples  
 次のコード例では、コレクションのメンバーである場合 <xref:System.Windows.Forms.Panel> 派生クラスの <xref:System.Windows.Forms.Control.ControlCollection> から <xref:System.Windows.Forms.Control> を削除します。 この例では、<xref:System.Windows.Forms.Panel>、<xref:System.Windows.Forms.Button>、および少なくとも1つの <xref:System.Windows.Forms.RadioButton> コントロールを <xref:System.Windows.Forms.Form>に作成しておく必要があります。 <xref:System.Windows.Forms.RadioButton> コントロールが <xref:System.Windows.Forms.Panel> コントロールに追加され、<xref:System.Windows.Forms.Panel> コントロールが <xref:System.Windows.Forms.Form>に追加されます。 このボタンがクリックされると、`radioButton2` という名前のラジオボタンが <xref:System.Windows.Forms.Control.ControlCollection>から削除されます。  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Collections.IList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Windows.Forms.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Windows::Forms::Control ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control.ControlCollection : System.Windows.Forms.Control -&gt; System.Windows.Forms.Control.ControlCollection" Usage="new System.Windows.Forms.Control.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="owner">コントロール コレクションを所有しているコントロールを表す <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary><see cref="T:System.Windows.Forms.Control.ControlCollection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.Control -&gt; unit&#xA;override this.Add : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">コントロール コレクションに追加する <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>指定したコントロールをコントロール コレクションに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> メソッドを使用すると、<xref:System.Windows.Forms.Control> オブジェクトをコントロールコレクションの末尾に追加できます。  
  
 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> メソッドを使用して、新しい <xref:System.Windows.Forms.Control> オブジェクトをコレクションに追加することもできます。  
  
 以前に追加した <xref:System.Windows.Forms.Control> を削除するには、<xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>、<xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>、または <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> メソッドを使用します。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Control> は、一度に1つの <xref:System.Windows.Forms.Control.ControlCollection> にのみ割り当てることができます。 <xref:System.Windows.Forms.Control> が別のコントロールの子になっている場合は、別のコントロールに追加される前に、そのコントロールから削除されます。  
  
   
  
## Examples  
 次のコード例では、派生クラス <xref:System.Windows.Forms.Panel>の <xref:System.Windows.Forms.Control.ControlCollection> に <xref:System.Windows.Forms.Control> を追加します。 この例では、<xref:System.Windows.Forms.Form>に対して <xref:System.Windows.Forms.Panel> コントロールと <xref:System.Windows.Forms.Button> コントロールを作成しておく必要があります。 ボタンがクリックされると、<xref:System.Windows.Forms.TextBox> コントロールがパネルの <xref:System.Windows.Forms.Control.ControlCollection>に追加されます。  
  
 [!code-cpp[ControlCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#2)]
 [!code-csharp[ControlCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#2)]
 [!code-vb[ControlCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">指定したコントロールがトップレベル コントロールであるか、または、このコントロールがコントロール コレクションに追加された場合は循環コントロール参照になります。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> パラメーターに割り当てられたオブジェクトが <see cref="T:System.Windows.Forms.Control" /> ではありません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /> をオーバーライドする場合は、必ず基本クラスの <see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /> メソッドを呼び出して、コントロールが確実にコレクションに追加されるようにしてください。</para></block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.Control[] controls);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.Control[] controls) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (controls As Control())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::Control ^&gt; ^ controls);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.Control[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.Control[] -&gt; unit" Usage="controlCollection.AddRange controls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="System.Windows.Forms.Control[]" />
      </Parameters>
      <Docs>
        <param name="controls">コレクションに追加する <see cref="T:System.Windows.Forms.Control" /> オブジェクトの配列。</param>
        <summary>コレクションにコントロール オブジェクトの配列を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `controls` 配列に格納されている <xref:System.Windows.Forms.Control> オブジェクトは、コレクションの末尾に追加されます。  
  
 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> メソッドを使用すると、<xref:System.Windows.Forms.Control.ControlCollection.Add%2A> メソッドを使用して各 <xref:System.Windows.Forms.Control> をコレクションに手動で追加するのではなく、<xref:System.Windows.Forms.Control> オブジェクトのグループをコレクションにすばやく追加できます。  
  
 以前に追加した <xref:System.Windows.Forms.Control> を削除するには、<xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>、<xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>、または <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、派生クラス <xref:System.Windows.Forms.Panel>の <xref:System.Windows.Forms.Control.ControlCollection> に2つの <xref:System.Windows.Forms.Control> オブジェクトを追加します。 この例では、<xref:System.Windows.Forms.Form>に対して <xref:System.Windows.Forms.Panel> コントロールと <xref:System.Windows.Forms.Button> コントロールを作成しておく必要があります。 このボタンをクリックすると、2つの <xref:System.Windows.Forms.RadioButton> コントロールがパネルの <xref:System.Windows.Forms.Control.ControlCollection>に追加されます。  
  
 [!code-cpp[ControlCollection#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#3)]
 [!code-csharp[ControlCollection#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#3)]
 [!code-vb[ControlCollection#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /> をオーバーライドする場合は、必ず基本クラスの <see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /> メソッドを呼び出して、コントロールが確実にコレクションに追加されるようにしてください。</para></block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="controlCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションからすべてのコントロールを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> メソッドを使用して、親コントロールからコントロールのコレクション全体を削除できます。  
  
 コレクションから個々のコントロールを削除するには、<xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> または <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> メソッドを使用します。  
  
> [!IMPORTANT]
>  <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> メソッドを呼び出すと、メモリからコントロールハンドルが削除されません。 メモリリークを回避するには、<xref:System.Windows.Forms.Control.Dispose%2A> メソッドを明示的に呼び出す必要があります。  
  
 新しい <xref:System.Windows.Forms.Control> オブジェクトをコレクションに追加するには、<xref:System.Windows.Forms.Control.ControlCollection.Add%2A> または <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、派生クラス <xref:System.Windows.Forms.Panel>の <xref:System.Windows.Forms.Control.ControlCollection> に含まれるすべての <xref:System.Windows.Forms.Control> オブジェクトを削除します。 この例では、<xref:System.Windows.Forms.Panel>、<xref:System.Windows.Forms.Button>、および <xref:System.Windows.Forms.Form>に少なくとも1つのコントロールを作成しておく必要があります。 その他のコントロールが <xref:System.Windows.Forms.Panel> コントロールに追加され、<xref:System.Windows.Forms.Panel> が <xref:System.Windows.Forms.Form>に追加されます。 このボタンがクリックされると、パネルに含まれているすべてのコントロールが <xref:System.Windows.Forms.Control.ControlCollection>から削除されます。  
  
 [!code-cpp[ControlCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#1)]
 [!code-csharp[ControlCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#1)]
 [!code-vb[ControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /> をオーバーライドする場合は、必ず、基本クラスの <see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /> メソッドを呼び出して、すべてのコントロールがコレクションから確実に削除されるようにしてください。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.Control -&gt; bool" Usage="controlCollection.Contains control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">コレクション内で検索する <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>指定したコントロールがコレクションのメンバーかどうかを確認します。</summary>
        <returns><see cref="T:System.Windows.Forms.Control" /> がコレクションのメンバーの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、<xref:System.Windows.Forms.Control>に対して操作を実行する前に、<xref:System.Windows.Forms.Control> がコレクションのメンバーであるかどうかを判断できます。 このメソッドを使用すると、<xref:System.Windows.Forms.Control> がに追加されているか、まだコレクションのメンバーであることを確認できます。  
  
   
  
## Examples  
 次のコード例では、コレクションのメンバーである場合 <xref:System.Windows.Forms.Panel> 派生クラスの <xref:System.Windows.Forms.Control.ControlCollection> から <xref:System.Windows.Forms.Control> を削除します。 この例では、<xref:System.Windows.Forms.Panel>、<xref:System.Windows.Forms.Button>、および少なくとも1つの <xref:System.Windows.Forms.RadioButton> コントロールを <xref:System.Windows.Forms.Form>に作成しておく必要があります。 <xref:System.Windows.Forms.RadioButton> コントロールが <xref:System.Windows.Forms.Panel> コントロールに追加され、<xref:System.Windows.Forms.Panel> コントロールが <xref:System.Windows.Forms.Form>に追加されます。 このボタンがクリックされると、`removeButton` という名前のラジオボタンが <xref:System.Windows.Forms.Control.ControlCollection>から削除されます。  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="controlCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Windows.Forms.Control.ControlCollection" /> 内で検索されるキー。</param>
        <summary>指定したキーを持つ項目が <see cref="T:System.Windows.Forms.Control.ControlCollection" /> に含まれているかどうかを確認します。</summary>
        <returns>指定したキーを持つ項目が <see cref="T:System.Windows.Forms.Control.ControlCollection" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control> の <xref:System.Windows.Forms.Control.Name%2A> プロパティは、<xref:System.Windows.Forms.Control.ControlCollection>内の <xref:System.Windows.Forms.Control> のキーに対応します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="controlCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dest">コレクションから要素がコピーされる 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
        <param name="index">コピーの開始位置となる、<paramref name="dest" /> の 0 から始まるインデックス。</param>
        <summary>特定の配列インデックスを開始位置として、配列にコレクションの要素をコピーします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.Control.ControlCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションに格納されている要素の数を取得します。</summary>
        <value>コレクションに格納されている要素の数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="controlCollection.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="other">現在のオブジェクトと比較するオブジェクト。</param>
        <summary>現在のコレクション オブジェクトと指定したオブジェクトが等しいかどうかを示します。</summary>
        <returns>このインスタンスと <paramref name="other" /> が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllChildren As Boolean) As Control()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::Control ^&gt; ^ Find(System::String ^ key, bool searchAllChildren);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.Control[]" Usage="controlCollection.Find (key, searchAllChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Windows.Forms.Control.ControlCollection" /> 内で検索されるキー。</param>
        <param name="searchAllChildren">すべての子コントロールを検索する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>コントロールの <see cref="P:System.Windows.Forms.Control.Name" /> プロパティに基づいてコントロールを検索し、一致するすべてのコントロールの配列を構築します。</summary>
        <returns>一致するコントロールを格納する <see cref="T:System.Windows.Forms.Control" /> 型の配列。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="key" /> が <see langword="null" /> または空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildIndex">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コントロール コレクション内のコントロールのインデックスを取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public int GetChildIndex (System.Windows.Forms.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetChildIndex(class System.Windows.Forms.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildIndex (child As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetChildIndex(System::Windows::Forms::Control ^ child);" />
      <MemberSignature Language="F#" Value="member this.GetChildIndex : System.Windows.Forms.Control -&gt; int" Usage="controlCollection.GetChildIndex child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="child">コントロール コレクション内で検索される <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>コントロール コレクション内の指定した子コントロールのインデックスを取得します。</summary>
        <returns>コントロール コレクション内の指定した子コントロールの位置を表す 0 から始まるインデックス値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 0のインデックス値を持つコントロールは、z オーダーの最上部にあり、より大きい数値が一番下になります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> が <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 内にありません。</exception>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
      </Docs>
    </Member>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public virtual int GetChildIndex (System.Windows.Forms.Control child, bool throwException);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildIndex(class System.Windows.Forms.Control child, bool throwException) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildIndex (child As Control, throwException As Boolean) As Integer" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildIndex(System::Windows::Forms::Control ^ child, bool throwException);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetChildIndex : System.Windows.Forms.Control * bool -&gt; int&#xA;override this.GetChildIndex : System.Windows.Forms.Control * bool -&gt; int" Usage="controlCollection.GetChildIndex (child, throwException)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public int GetChildIndex (System.Windows.Forms.Control child, bool throwException);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetChildIndex(class System.Windows.Forms.Control child, bool throwException) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildIndex (child As Control, throwException As Boolean) As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetChildIndex(System::Windows::Forms::Control ^ child, bool throwException);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.GetChildIndex : System.Windows.Forms.Control * bool -&gt; int" Usage="controlCollection.GetChildIndex (child, throwException)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="throwException" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="child">コントロール コレクション内で検索される <see cref="T:System.Windows.Forms.Control" />。</param>
        <param name="throwException"><paramref name="child" /> パラメーターで指定した <see cref="T:System.Windows.Forms.Control" /> が <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 内のコントロールでないときに例外をスローする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>コントロール コレクション内の指定した子コントロールのインデックスを取得し、オプションとして、指定したコントロールがコントロール コレクション内に存在しない場合に例外を発生させます。</summary>
        <returns>コントロール コレクション内の指定した子コントロールの位置を表す 0 から始まるインデックス値。指定した <see cref="T:System.Windows.Forms.Control" /> が <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 内で見つからない場合は、-1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 0のインデックス値を持つコントロールは、z オーダーの最上部にあり、より大きい数値が一番下になります。 戻り値-1 は、`throwException` パラメーターが `false`場合にのみ返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> が <see cref="T:System.Windows.Forms.Control.ControlCollection" /> になく、<paramref name="throwException" /> パラメーター値が <see langword="true" /> です。</exception>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="controlCollection.GetEnumerator " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="controlCollection.GetEnumerator " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.Control.ControlCollection" /> の反復処理に使用する列挙体オブジェクトへの参照を取得します。</summary>
        <returns><see cref="T:System.Collections.IEnumerator" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="controlCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスのハッシュ コードを返します。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (control As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.Control -&gt; int" Usage="controlCollection.IndexOf control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">コレクション内で検索する <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>コントロール コレクション内の指定したコントロールのインデックスを取得します。</summary>
        <returns><see cref="T:System.Windows.Forms.Control" /> 内の指定した <see cref="T:System.Windows.Forms.Control.ControlCollection" /> の位置を表す 0 から始まるインデックス値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールがコレクション内で見つからない場合、<xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> メソッドの戻り値は-1 です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="controlCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">検索するコントロールの名前。</param>
        <summary>指定した項目がこのコレクション内で最初に見つかった位置のインデックスを取得します。</summary>
        <returns>指定した名前のコントロールがコレクション内で最初に見つかった位置の 0 から始まるインデックス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> が連続して呼び出された場合、最初に返されたインデックスのキーが一致しているかどうかが最初にチェックされます。一致するものがない場合は、コレクションの先頭から検索が開始されます。  
  
 キーの比較では、大文字と小文字は区別されません。 `key` パラメーターが `null` または空の文字列の場合、または指定されたキーを持つ項目が見つからない場合、<xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> は-1 を返します。  
  
 <xref:System.Windows.Forms.Control> の <xref:System.Windows.Forms.Control.Name%2A> プロパティは、<xref:System.Windows.Forms.Control.ControlCollection>内の <xref:System.Windows.Forms.Control> のキーに対応します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.Control.ControlCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコレクション オブジェクトが読み取り専用かどうかを示す値を取得します。</summary>
        <value>現在のインスタンスが読み取り専用の場合は <see langref="true" /> します。それ以外の場合は、<see langref="false" />ます。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コレクション内の <see cref="T:System.Windows.Forms.Control" /> を示します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ default[int] { System::Windows::Forms::Control ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">コントロール コレクションから取得するコントロールのインデックス。</param>
        <summary>コレクション内の指定したインデックス位置にある <see cref="T:System.Windows.Forms.Control" /> を示します。</summary>
        <value>コントロール コレクション内の指定したインデックス位置にある <see cref="T:System.Windows.Forms.Control" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ControlCollection>から <xref:System.Windows.Forms.Control> を取得するには、特定のインデックス値を使用してコレクションオブジェクトを参照します。 <xref:System.Windows.Forms.Control.ControlCollection> のインデックス値は、0から始まるインデックスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 値が、0 未満か、コレクション内のコントロールの数以上です。</exception>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ default[System::String ^] { System::Windows::Forms::Control ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">コントロール コレクションから取得するコントロールの名前。</param>
        <summary>コレクション内の指定したキーを持つ <see cref="T:System.Windows.Forms.Control" /> を示します。</summary>
        <value><see cref="T:System.Windows.Forms.Control" /> 内の指定したキーを持つ <see cref="T:System.Windows.Forms.Control.ControlCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control> の <xref:System.Windows.Forms.Control.Name%2A> プロパティは、<xref:System.Windows.Forms.Control.ControlCollection>内の <xref:System.Windows.Forms.Control> のキーに対応します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Owner { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.ControlCollection.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Forms.Control.ControlCollection" /> を所有しているコントロールを取得します。</summary>
        <value>この <see cref="T:System.Windows.Forms.Control" /> を所有している <see cref="T:System.Windows.Forms.Control.ControlCollection" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.Control -&gt; unit&#xA;override this.Remove : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.Control" /> から削除する <see cref="T:System.Windows.Forms.Control.ControlCollection" />。</param>
        <summary>指定したコントロールをコントロール コレクションから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control> がコントロールコレクションから削除されると、後続のすべてのコントロールがコレクション内の1つ上の位置に移動します。  
  
 また、<xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> メソッドを使用して <xref:System.Windows.Forms.Control> を削除したり、<xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> メソッドを使用してすべてのコントロールを削除したりすることもできます。  
  
 新しい <xref:System.Windows.Forms.Control> オブジェクトをコレクションに追加するには、<xref:System.Windows.Forms.Control.ControlCollection.Add%2A> または <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、コレクションのメンバーである場合 <xref:System.Windows.Forms.Panel> 派生クラスの <xref:System.Windows.Forms.Control.ControlCollection> から <xref:System.Windows.Forms.Control> を削除します。 この例では、<xref:System.Windows.Forms.Panel>、<xref:System.Windows.Forms.Button>、および1つ以上の <xref:System.Windows.Forms.RadioButton> コントロールを <xref:System.Windows.Forms.Form>に作成しておく必要があります。 <xref:System.Windows.Forms.RadioButton> コントロールが <xref:System.Windows.Forms.Panel> コントロールに追加され、<xref:System.Windows.Forms.Panel> コントロールが <xref:System.Windows.Forms.Form>に追加されます。 このボタンがクリックされると、`radioButton2` という名前のラジオボタンが <xref:System.Windows.Forms.Control.ControlCollection>から削除されます。  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /> をオーバーライドする場合は、必ず基本クラスの <see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /> メソッドを呼び出して、コントロールがコレクションから確実に削除されるようにしてください。</para></block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="controlCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">削除する <see cref="T:System.Windows.Forms.Control" /> のインデックス値。</param>
        <summary>指定したインデックス位置にあるコントロール コレクションからコントロールを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control> がコントロールコレクションから削除されると、後続のすべてのコントロールがコレクション内の1つ上の位置に移動します。  
  
 また、<xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> または <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> メソッドを使用して、以前に追加した <xref:System.Windows.Forms.Control> を削除することもできます。  
  
 新しい <xref:System.Windows.Forms.Control> オブジェクトをコレクションに追加するには、<xref:System.Windows.Forms.Control.ControlCollection.Add%2A> または <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、コレクションの数が0より大きい場合に <xref:System.Windows.Forms.Panel> 派生クラスの <xref:System.Windows.Forms.Control.ControlCollection> の最初の <xref:System.Windows.Forms.Control> を削除します。 この例では、<xref:System.Windows.Forms.Panel>、<xref:System.Windows.Forms.Button>、および <xref:System.Windows.Forms.Form>に少なくとも1つのコントロールを作成しておく必要があります。 その他のコントロールは <xref:System.Windows.Forms.Panel> コントロールに追加され、<xref:System.Windows.Forms.Panel> コントロールは <xref:System.Windows.Forms.Form>に追加されます。 ボタンがクリックされると、パネルに含まれている最初のコントロールが <xref:System.Windows.Forms.Control.ControlCollection>から削除されます。  
  
 [!code-cpp[ControlCollection#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#5)]
 [!code-csharp[ControlCollection#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#5)]
 [!code-vb[ControlCollection#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="controlCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">削除する子コントロールの名前。</param>
        <summary>指定したキーを持つ子コントロールを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control> の <xref:System.Windows.Forms.Control.Name%2A> プロパティは、<xref:System.Windows.Forms.Control.ControlCollection>内の <xref:System.Windows.Forms.Control> のキーに対応します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildIndex">
      <MemberSignature Language="C#" Value="public virtual void SetChildIndex (System.Windows.Forms.Control child, int newIndex);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildIndex(class System.Windows.Forms.Control child, int32 newIndex) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.SetChildIndex(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetChildIndex (child As Control, newIndex As Integer)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetChildIndex(System::Windows::Forms::Control ^ child, int newIndex);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member SetChildIndex : System.Windows.Forms.Control * int -&gt; unit&#xA;override this.SetChildIndex : System.Windows.Forms.Control * int -&gt; unit" Usage="controlCollection.SetChildIndex (child, newIndex)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void SetChildIndex (System.Windows.Forms.Control child, int newIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetChildIndex(class System.Windows.Forms.Control child, int32 newIndex) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetChildIndex (child As Control, newIndex As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetChildIndex(System::Windows::Forms::Control ^ child, int newIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.SetChildIndex : System.Windows.Forms.Control * int -&gt; unit" Usage="controlCollection.SetChildIndex (child, newIndex)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="newIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">検索する <paramref name="child" /><see cref="T:System.Windows.Forms.Control" />。</param>
        <param name="newIndex">コントロールの新しいインデックス値。</param>
        <summary>コレクション内の指定した子コントロールのインデックスを指定したインデックス値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ControlCollection.SetChildIndex%2A> が呼び出されると、`child` パラメーターによって参照される <xref:System.Windows.Forms.Control> は `newIndex` によって指定された位置に移動され、<xref:System.Windows.Forms.Control> 内の他の <xref:System.Windows.Forms.Control.ControlCollection> 参照は移動に合わせて並べ替えられます。 0のインデックス値を持つコントロールは、z オーダーの最上部にあり、より大きい数値が一番下になります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="child" /> コントロールが <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 内にありません。</exception>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (control As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ control) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="override this.System.Collections.IList.Add : obj -&gt; int" Usage="controlCollection.System.Collections.IList.Add control" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="controlCollection.System.Collections.IList.Add control" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">このコレクションに追加するオブジェクト。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</summary>
        <returns>新しい要素が挿入された位置、または項目がコレクションに挿入されなかったことを示す -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Forms.Control.ControlCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (control As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ control) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="controlCollection.System.Collections.IList.Contains control" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Windows.Forms.Control.ControlCollection" /> 内で検索するオブジェクト。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</summary>
        <returns>指定したキーを持つ要素が <see cref="T:System.Windows.Forms.Control.ControlCollection" /> に格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

 ## Remarks  
このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Forms.Control.ControlCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (control As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ control) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="controlCollection.System.Collections.IList.IndexOf control" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Windows.Forms.Control.ControlCollection" /> 内で検索するオブジェクト。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.IndexOf(System.Object)" />」をご覧ください。</summary>
        <returns><see cref="T:System.Windows.Forms.Control.ControlCollection" /> で見つかった場合は <paramref name="control" /> のインデックス。それ以外の場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks  
このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Forms.Control.ControlCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="controlCollection.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="index"><paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
        <param name="value">挿入するオブジェクト。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />」をご覧ください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks  
このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Forms.Control.ControlCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (control As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ control) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="controlCollection.System.Collections.IList.Remove control" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="controlCollection.System.Collections.IList.Remove control" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">削除する <see cref="T:System.Windows.Forms.Control" />。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Remove(System.Object)" />」をご覧ください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Forms.Control.ControlCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="controlCollection.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」をご覧ください。</summary>
        <returns>このインスタンスのコピーである新しいオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Forms.Control.ControlCollection> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
